{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/toolbar/ToolbarView.tsx\",\n    _s = $RefreshSig$();\n\nimport { Dispose, DropBounce, EaseOut, JumpBy, Motions, NitroToolbarAnimateIconEvent, PerkAllowancesMessageEvent, PerkEnum, Queue, Wait } from '@nitrots/nitro-renderer';\nimport { useCallback, useState } from 'react';\nimport { CreateLinkEvent, GetSessionDataManager, MessengerIconState, OpenMessengerChat, VisitDesktop } from '../../api';\nimport { Base, Flex, LayoutAvatarImageView, LayoutItemCountView, TransitionAnimation, TransitionAnimationTypes } from '../../common';\nimport { ModToolsEvent } from '../../events';\nimport { DispatchUiEvent, useAchievements, useFriends, useInventoryUnseenTracker, UseMessageEventHook, useMessenger, UseRoomEngineEvent, useSessionInfo } from '../../hooks';\nimport { ToolbarMeView } from './ToolbarMeView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ToolbarView = props => {\n  _s();\n\n  const {\n    isInRoom\n  } = props;\n  const [isMeExpanded, setMeExpanded] = useState(false);\n  const [leftSideCollapsed, setLeftSideCollapsed] = useState(true);\n  const [rightSideCollapsed, setRightSideCollapsed] = useState(true);\n  const [useGuideTool, setUseGuideTool] = useState(false);\n  const {\n    userFigure = null\n  } = useSessionInfo();\n  const {\n    getFullCount = 0\n  } = useInventoryUnseenTracker();\n  const {\n    getTotalUnseen = 0\n  } = useAchievements();\n  const {\n    requests = []\n  } = useFriends();\n  const {\n    iconState = MessengerIconState.HIDDEN\n  } = useMessenger();\n  const isMod = GetSessionDataManager().isModerator;\n  const onPerkAllowancesMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n    setUseGuideTool(parser.isAllowed(PerkEnum.USE_GUIDE_TOOL));\n  }, [setUseGuideTool]);\n  UseMessageEventHook(PerkAllowancesMessageEvent, onPerkAllowancesMessageEvent);\n  const animationIconToToolbar = useCallback((iconName, image, x, y) => {\n    const target = document.body.getElementsByClassName(iconName)[0];\n    if (!target) return;\n    image.className = 'toolbar-icon-animation';\n    image.style.visibility = 'visible';\n    image.style.left = x + 'px';\n    image.style.top = y + 'px';\n    document.body.append(image);\n    const targetBounds = target.getBoundingClientRect();\n    const imageBounds = image.getBoundingClientRect();\n    const left = imageBounds.x - targetBounds.x;\n    const top = imageBounds.y - targetBounds.y;\n    const squared = Math.sqrt(left * left + top * top);\n    const wait = 500 - Math.abs(1 / squared * 100 * 500 * 0.5);\n    const height = 20;\n    const motionName = `ToolbarBouncing[${iconName}]`;\n\n    if (!Motions.getMotionByTag(motionName)) {\n      Motions.runMotion(new Queue(new Wait(wait + 8), new DropBounce(target, 400, 12))).tag = motionName;\n    }\n\n    const motion = new Queue(new EaseOut(new JumpBy(image, wait, targetBounds.x - imageBounds.x + height, targetBounds.y - imageBounds.y, 100, 1), 1), new Dispose(image));\n    Motions.runMotion(motion);\n  }, []);\n  const onNitroToolbarAnimateIconEvent = useCallback(event => {\n    animationIconToToolbar('icon-inventory', event.image, event.x, event.y);\n  }, [animationIconToToolbar]);\n  UseRoomEngineEvent(NitroToolbarAnimateIconEvent.ANIMATE_ICON, onNitroToolbarAnimateIconEvent);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TransitionAnimation, {\n      type: TransitionAnimationTypes.FADE_IN,\n      inProp: isMeExpanded,\n      timeout: 300,\n      children: /*#__PURE__*/_jsxDEV(ToolbarMeView, {\n        useGuideTool: useGuideTool,\n        unseenAchievementCount: getTotalUnseen,\n        setMeExpanded: setMeExpanded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      id: \"toolbar-chat-input-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"between\",\n      gap: 2,\n      className: \"nitro-toolbar py-1 px-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: leftSideCollapsed ? 'toolbar-left-collapse' : 'toolbar-left-collapse-active',\n        onClick: () => setLeftSideCollapsed(collapsed => !collapsed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        gap: 2,\n        alignItems: \"center\",\n        className: \"toolbar-left-side\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 2,\n          children: [leftSideCollapsed && /*#__PURE__*/_jsxDEV(Flex, {\n            gap: 2,\n            children: [isInRoom && /*#__PURE__*/_jsxDEV(Base, {\n              pointer: true,\n              className: \"navigation-item icon icon-habbo\",\n              onClick: event => VisitDesktop()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), !isInRoom && /*#__PURE__*/_jsxDEV(Base, {\n              pointer: true,\n              className: \"navigation-item icon icon-house\",\n              onClick: event => CreateLinkEvent('navigator/goto/home')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Base, {\n              pointer: true,\n              className: \"navigation-item icon icon-rooms\",\n              onClick: event => CreateLinkEvent('navigator/toggle')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Base, {\n            pointer: true,\n            className: \"navigation-item icon icon-catalog\",\n            onClick: event => CreateLinkEvent('catalog/toggle')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Base, {\n            pointer: true,\n            className: \"navigation-item icon icon-inventory\",\n            onClick: event => CreateLinkEvent('inventory/toggle'),\n            children: getFullCount > 0 && /*#__PURE__*/_jsxDEV(LayoutItemCountView, {\n              count: getFullCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            center: true,\n            pointer: true,\n            className: 'navigation-item item-avatar ' + (isMeExpanded ? 'active ' : ''),\n            onClick: event => setMeExpanded(!isMeExpanded),\n            children: [/*#__PURE__*/_jsxDEV(LayoutAvatarImageView, {\n              figure: userFigure,\n              direction: 2,\n              position: \"absolute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), getTotalUnseen > 0 && /*#__PURE__*/_jsxDEV(LayoutItemCountView, {\n              count: getTotalUnseen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), isInRoom && /*#__PURE__*/_jsxDEV(Base, {\n            pointer: true,\n            className: \"navigation-item icon icon-camera\",\n            onClick: event => CreateLinkEvent('camera/toggle')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), isMod && /*#__PURE__*/_jsxDEV(Base, {\n            pointer: true,\n            className: \"navigation-item icon icon-modtools\",\n            onClick: event => DispatchUiEvent(new ModToolsEvent(ModToolsEvent.TOGGLE_MOD_TOOLS))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Base, {\n            pointer: true,\n            className: \"navigation-item icon icon-friendall\",\n            onClick: event => CreateLinkEvent('friends/toggle'),\n            children: requests.length > 0 && /*#__PURE__*/_jsxDEV(LayoutItemCountView, {\n              count: requests.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), (iconState === MessengerIconState.SHOW || iconState === MessengerIconState.UNREAD) && /*#__PURE__*/_jsxDEV(Base, {\n            pointer: true,\n            className: `navigation-item icon icon-message ${iconState === MessengerIconState.UNREAD && 'is-unseen'}`,\n            onClick: event => OpenMessengerChat()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Base, {\n          id: \"toolbar-friend-bar-container\",\n          className: rightSideCollapsed ? 'd-none d-lg-block' : 'd-none'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: rightSideCollapsed ? 'toolbar-right-collapse' : 'toolbar-right-collapse-active',\n        onClick: () => setRightSideCollapsed(collapsed => !collapsed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToolbarView, \"CIKuH5VQIEBZdj0VF1kSoIpb/Nc=\", false, function () {\n  return [useSessionInfo, useInventoryUnseenTracker, useAchievements, useFriends, useMessenger];\n});\n\n_c = ToolbarView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToolbarView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/toolbar/ToolbarView.tsx"],"names":["Dispose","DropBounce","EaseOut","JumpBy","Motions","NitroToolbarAnimateIconEvent","PerkAllowancesMessageEvent","PerkEnum","Queue","Wait","useCallback","useState","CreateLinkEvent","GetSessionDataManager","MessengerIconState","OpenMessengerChat","VisitDesktop","Base","Flex","LayoutAvatarImageView","LayoutItemCountView","TransitionAnimation","TransitionAnimationTypes","ModToolsEvent","DispatchUiEvent","useAchievements","useFriends","useInventoryUnseenTracker","UseMessageEventHook","useMessenger","UseRoomEngineEvent","useSessionInfo","ToolbarMeView","ToolbarView","props","isInRoom","isMeExpanded","setMeExpanded","leftSideCollapsed","setLeftSideCollapsed","rightSideCollapsed","setRightSideCollapsed","useGuideTool","setUseGuideTool","userFigure","getFullCount","getTotalUnseen","requests","iconState","HIDDEN","isMod","isModerator","onPerkAllowancesMessageEvent","event","parser","getParser","isAllowed","USE_GUIDE_TOOL","animationIconToToolbar","iconName","image","x","y","target","document","body","getElementsByClassName","className","style","visibility","left","top","append","targetBounds","getBoundingClientRect","imageBounds","squared","Math","sqrt","wait","abs","height","motionName","getMotionByTag","runMotion","tag","motion","onNitroToolbarAnimateIconEvent","ANIMATE_ICON","FADE_IN","collapsed","TOGGLE_MOD_TOOLS","length","SHOW","UNREAD"],"mappings":"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","sourcesContent":["import { Dispose, DropBounce, EaseOut, JumpBy, Motions, NitroToolbarAnimateIconEvent, PerkAllowancesMessageEvent, PerkEnum, Queue, Wait } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useState } from 'react';\nimport { CreateLinkEvent, GetSessionDataManager, MessengerIconState, OpenMessengerChat, VisitDesktop } from '../../api';\nimport { Base, Flex, LayoutAvatarImageView, LayoutItemCountView, TransitionAnimation, TransitionAnimationTypes } from '../../common';\nimport { ModToolsEvent } from '../../events';\nimport { DispatchUiEvent, useAchievements, useFriends, useInventoryUnseenTracker, UseMessageEventHook, useMessenger, UseRoomEngineEvent, useSessionInfo } from '../../hooks';\nimport { ToolbarMeView } from './ToolbarMeView';\n\nexport const ToolbarView: FC<{ isInRoom: boolean }> = props =>\n{\n    const { isInRoom } = props;\n\n    const [ isMeExpanded, setMeExpanded ] = useState(false);\n    const [ leftSideCollapsed, setLeftSideCollapsed ] = useState(true);\n    const [ rightSideCollapsed, setRightSideCollapsed ] = useState(true);\n    const [ useGuideTool, setUseGuideTool ] = useState(false);\n    const { userFigure = null } = useSessionInfo();\n    const { getFullCount = 0 } = useInventoryUnseenTracker();\n    const { getTotalUnseen = 0 } = useAchievements();\n    const { requests = [] } = useFriends();\n    const { iconState = MessengerIconState.HIDDEN } = useMessenger();\n    const isMod = GetSessionDataManager().isModerator;\n\n    const onPerkAllowancesMessageEvent = useCallback((event: PerkAllowancesMessageEvent) =>\n    {\n        const parser = event.getParser();\n\n        setUseGuideTool(parser.isAllowed(PerkEnum.USE_GUIDE_TOOL));\n    }, [ setUseGuideTool ]);\n    \n    UseMessageEventHook(PerkAllowancesMessageEvent, onPerkAllowancesMessageEvent);\n\n    const animationIconToToolbar = useCallback((iconName: string, image: HTMLImageElement, x: number, y: number) =>\n    {\n        const target = (document.body.getElementsByClassName(iconName)[0] as HTMLElement);\n\n        if(!target) return;\n        \n        image.className = 'toolbar-icon-animation';\n        image.style.visibility = 'visible';\n        image.style.left = (x + 'px');\n        image.style.top = (y + 'px');\n\n        document.body.append(image);\n\n        const targetBounds = target.getBoundingClientRect();\n        const imageBounds = image.getBoundingClientRect();\n\n        const left = (imageBounds.x - targetBounds.x);\n        const top = (imageBounds.y - targetBounds.y);\n        const squared = Math.sqrt(((left * left) + (top * top)));\n        const wait = (500 - Math.abs(((((1 / squared) * 100) * 500) * 0.5)));\n        const height = 20;\n\n        const motionName = (`ToolbarBouncing[${ iconName }]`);\n\n        if(!Motions.getMotionByTag(motionName))\n        {\n            Motions.runMotion(new Queue(new Wait((wait + 8)), new DropBounce(target, 400, 12))).tag = motionName;\n        }\n\n        const motion = new Queue(new EaseOut(new JumpBy(image, wait, ((targetBounds.x - imageBounds.x) + height), (targetBounds.y - imageBounds.y), 100, 1), 1), new Dispose(image));\n\n        Motions.runMotion(motion);\n    }, []);\n\n    const onNitroToolbarAnimateIconEvent = useCallback((event: NitroToolbarAnimateIconEvent) =>\n    {\n        animationIconToToolbar('icon-inventory', event.image, event.x, event.y);\n    }, [ animationIconToToolbar ]);\n\n    UseRoomEngineEvent(NitroToolbarAnimateIconEvent.ANIMATE_ICON, onNitroToolbarAnimateIconEvent);\n\n    return (\n        <>\n            <TransitionAnimation type={ TransitionAnimationTypes.FADE_IN } inProp={ isMeExpanded } timeout={ 300 }>\n                <ToolbarMeView useGuideTool={ useGuideTool } unseenAchievementCount={ getTotalUnseen } setMeExpanded={ setMeExpanded } />\n            </TransitionAnimation>\n            <Flex alignItems=\"center\" id=\"toolbar-chat-input-container\" />\n            <Flex alignItems=\"center\" justifyContent=\"between\" gap={ 2 } className=\"nitro-toolbar py-1 px-3\">\n                <button className={ leftSideCollapsed ? 'toolbar-left-collapse' : 'toolbar-left-collapse-active' } onClick={ () => setLeftSideCollapsed((collapsed) => !collapsed) }/>\n                <Flex gap={ 2 } alignItems=\"center\" className=\"toolbar-left-side\">\n                    <Flex alignItems=\"center\" gap={ 2 }>\n                        { leftSideCollapsed &&\n                        <Flex gap={ 2 }>\n                            { isInRoom &&\n                            <Base pointer className=\"navigation-item icon icon-habbo\" onClick={ event => VisitDesktop() } /> }\n                            { !isInRoom &&\n                            <Base pointer className=\"navigation-item icon icon-house\" onClick={ event => CreateLinkEvent('navigator/goto/home') } /> }\n                            <Base pointer className=\"navigation-item icon icon-rooms\" onClick={ event => CreateLinkEvent('navigator/toggle') } />\n                        </Flex> }\n                        <Base pointer className=\"navigation-item icon icon-catalog\" onClick={ event => CreateLinkEvent('catalog/toggle') } />\n                        <Base pointer className=\"navigation-item icon icon-inventory\" onClick={ event => CreateLinkEvent('inventory/toggle') }>\n                            { (getFullCount > 0) &&\n                                <LayoutItemCountView count={ getFullCount } /> }\n                        </Base>\n                        <Flex center pointer className={ 'navigation-item item-avatar ' + (isMeExpanded ? 'active ' : '') } onClick={ event => setMeExpanded(!isMeExpanded) }>\n                            <LayoutAvatarImageView figure={ userFigure } direction={ 2 } position=\"absolute\" />\n                            { (getTotalUnseen > 0) &&\n                                <LayoutItemCountView count={ getTotalUnseen } /> }\n                        </Flex>\n                        { isInRoom &&\n                            <Base pointer className=\"navigation-item icon icon-camera\" onClick={ event => CreateLinkEvent('camera/toggle') } /> }\n                        { isMod &&\n                            <Base pointer className=\"navigation-item icon icon-modtools\" onClick={ event => DispatchUiEvent(new ModToolsEvent(ModToolsEvent.TOGGLE_MOD_TOOLS)) } /> }\n                    </Flex>\n                </Flex>\n                <Flex alignItems=\"center\" gap={ 2 }>\n                    <Flex gap={ 2 }>\n                        <Base pointer className=\"navigation-item icon icon-friendall\" onClick={ event => CreateLinkEvent('friends/toggle') }>\n                            { (requests.length > 0) &&\n                                <LayoutItemCountView count={ requests.length } /> }\n                        </Base>\n                        { ((iconState === MessengerIconState.SHOW) || (iconState === MessengerIconState.UNREAD)) &&\n                            <Base pointer className={ `navigation-item icon icon-message ${ (iconState === MessengerIconState.UNREAD) && 'is-unseen' }` } onClick={ event => OpenMessengerChat() } /> }\n                    </Flex>\n                    <Base id=\"toolbar-friend-bar-container\" className={ rightSideCollapsed ? 'd-none d-lg-block' : 'd-none' } />\n                </Flex>\n                <button className={ rightSideCollapsed ? 'toolbar-right-collapse' : 'toolbar-right-collapse-active' } onClick={ () => setRightSideCollapsed((collapsed) => !collapsed) }/>\n            </Flex>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}