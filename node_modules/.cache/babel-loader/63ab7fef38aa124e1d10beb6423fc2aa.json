{"ast":null,"code":"export class FigureDataContainer {\n  constructor() {\n    this._data = void 0;\n    this._colors = void 0;\n    this._gender = 'M';\n    this._isDisposed = void 0;\n    this._avatarEffectType = -1;\n  }\n\n  loadAvatarData(k, _arg_2) {\n    this._data = new Map();\n    this._colors = new Map();\n    this._gender = _arg_2;\n    this.parseFigureString(k);\n  }\n\n  dispose() {\n    this._data = null;\n    this._colors = null;\n    this._isDisposed = true;\n  }\n\n  get disposed() {\n    return this._isDisposed;\n  }\n\n  parseFigureString(k) {\n    if (!k) return;\n\n    for (const set of k.split('.')) {\n      const _local_3 = set.split('-');\n\n      if (_local_3.length > 0) {\n        const part = _local_3[0];\n        const setId = parseInt(_local_3[1]);\n        const colors = [];\n        let i = 2;\n\n        while (i < _local_3.length) {\n          colors.push(parseInt(_local_3[i]));\n          i++;\n        }\n\n        if (!colors.length) colors.push(0);\n        this.savePartSetId(part, setId, false);\n        this.savePartSetColourId(part, colors, false);\n      }\n    }\n  }\n\n  hasSetType(k) {\n    return !!this._data.get(k);\n  }\n\n  getPartSetId(k) {\n    if (this.hasSetType(k)) return this._data.get(k);\n    return -1;\n  }\n\n  getColourIds(k) {\n    if (this._colors.get(k)) return this._colors.get(k);\n    return [];\n  }\n\n  getFigureString() {\n    let figure = '';\n    const sets = [];\n\n    for (const [key, value] of this._data.entries()) {\n      let set = key + '-' + value;\n\n      const colors = this._colors.get(key);\n\n      if (colors) for (const color of colors) set = set + ('-' + color);\n      sets.push(set);\n    }\n\n    let i = 0;\n\n    while (i < sets.length) {\n      figure = figure + sets[i];\n      if (i < sets.length - 1) figure = figure + '.';\n      i++;\n    }\n\n    return figure;\n  }\n\n  savePartData(k, _arg_2, _arg_3) {\n    let _arg_4 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    this.savePartSetId(k, _arg_2, _arg_4);\n    this.savePartSetColourId(k, _arg_3, _arg_4);\n  }\n\n  savePartSetId(k, _arg_2) {\n    let _arg_3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    switch (k) {\n      case FigureDataContainer.HD:\n      case FigureDataContainer.HAIR:\n      case FigureDataContainer.HAT:\n      case FigureDataContainer.HEAD_ACCESSORIES:\n      case FigureDataContainer.EYE_ACCESSORIES:\n      case FigureDataContainer.FACE_ACCESSORIES:\n      case FigureDataContainer.SHIRT:\n      case FigureDataContainer.JACKET:\n      case FigureDataContainer.CHEST_ACCESSORIES:\n      case FigureDataContainer.CHEST_PRINTS:\n      case FigureDataContainer.TROUSERS:\n      case FigureDataContainer.SHOES:\n      case FigureDataContainer.TROUSER_ACCESSORIES:\n        if (_arg_2 >= 0) {\n          this._data.set(k, _arg_2);\n        } else {\n          this._data.delete(k);\n        }\n\n    }\n  }\n\n  savePartSetColourId(k, _arg_2) {\n    let _arg_3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    switch (k) {\n      case FigureDataContainer.HD:\n      case FigureDataContainer.HAIR:\n      case FigureDataContainer.HAT:\n      case FigureDataContainer.HEAD_ACCESSORIES:\n      case FigureDataContainer.EYE_ACCESSORIES:\n      case FigureDataContainer.FACE_ACCESSORIES:\n      case FigureDataContainer.SHIRT:\n      case FigureDataContainer.JACKET:\n      case FigureDataContainer.CHEST_ACCESSORIES:\n      case FigureDataContainer.CHEST_PRINTS:\n      case FigureDataContainer.TROUSERS:\n      case FigureDataContainer.SHOES:\n      case FigureDataContainer.TROUSER_ACCESSORIES:\n        this._colors.set(k, _arg_2);\n\n        return;\n    }\n  }\n\n  getFigureStringWithFace(k) {\n    const partSets = [FigureDataContainer.HD];\n    let figure = '';\n    const sets = [];\n\n    for (const part of partSets) {\n      const colors = this._colors.get(part);\n\n      if (colors) {\n        let setId = this._data.get(part);\n\n        if (part === FigureDataContainer.HD) setId = k;\n        let set = part + '-' + setId;\n\n        if (setId >= 0) {\n          let i = 0;\n\n          while (i < colors.length) {\n            set = set + ('-' + colors[i]);\n            i++;\n          }\n        }\n\n        sets.push(set);\n      }\n    }\n\n    let i = 0;\n\n    while (i < sets.length) {\n      figure = figure + sets[i];\n      if (i < sets.length - 1) figure = figure + '.';\n      i++;\n    }\n\n    return figure;\n  }\n\n  get gender() {\n    return this._gender;\n  }\n\n}\nFigureDataContainer.MALE = 'M';\nFigureDataContainer.FEMALE = 'F';\nFigureDataContainer.UNISEX = 'U';\nFigureDataContainer.SCALE = 'h';\nFigureDataContainer.STD = 'std';\nFigureDataContainer.DEFAULT_FRAME = '0';\nFigureDataContainer.HD = 'hd';\nFigureDataContainer.HAIR = 'hr';\nFigureDataContainer.HAT = 'ha';\nFigureDataContainer.HEAD_ACCESSORIES = 'he';\nFigureDataContainer.EYE_ACCESSORIES = 'ea';\nFigureDataContainer.FACE_ACCESSORIES = 'fa';\nFigureDataContainer.JACKET = 'cc';\nFigureDataContainer.SHIRT = 'ch';\nFigureDataContainer.CHEST_ACCESSORIES = 'ca';\nFigureDataContainer.CHEST_PRINTS = 'cp';\nFigureDataContainer.TROUSERS = 'lg';\nFigureDataContainer.SHOES = 'sh';\nFigureDataContainer.TROUSER_ACCESSORIES = 'wa';\nFigureDataContainer.BLOCKED_FX_TYPES = [28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68];","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/utils/FigureDataContainer.ts"],"names":["FigureDataContainer","_data","_colors","_gender","_isDisposed","_avatarEffectType","loadAvatarData","k","_arg_2","Map","parseFigureString","dispose","disposed","set","split","_local_3","length","part","setId","parseInt","colors","i","push","savePartSetId","savePartSetColourId","hasSetType","get","getPartSetId","getColourIds","getFigureString","figure","sets","key","value","entries","color","savePartData","_arg_3","_arg_4","HD","HAIR","HAT","HEAD_ACCESSORIES","EYE_ACCESSORIES","FACE_ACCESSORIES","SHIRT","JACKET","CHEST_ACCESSORIES","CHEST_PRINTS","TROUSERS","SHOES","TROUSER_ACCESSORIES","delete","getFigureStringWithFace","partSets","gender","MALE","FEMALE","UNISEX","SCALE","STD","DEFAULT_FRAME","BLOCKED_FX_TYPES"],"mappings":"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","sourcesContent":["export class FigureDataContainer\r\n{\r\n    private static MALE: string = 'M';\r\n    private static FEMALE: string = 'F';\r\n    private static UNISEX: string = 'U';\r\n    private static SCALE: string = 'h';\r\n    private static STD: string = 'std';\r\n    private static DEFAULT_FRAME: string = '0';\r\n    private static HD: string = 'hd';\r\n    private static HAIR: string = 'hr';\r\n    private static HAT: string = 'ha';\r\n    private static HEAD_ACCESSORIES: string = 'he';\r\n    private static EYE_ACCESSORIES: string = 'ea';\r\n    private static FACE_ACCESSORIES: string = 'fa';\r\n    private static JACKET: string = 'cc';\r\n    private static SHIRT: string = 'ch';\r\n    private static CHEST_ACCESSORIES: string = 'ca';\r\n    private static CHEST_PRINTS: string = 'cp';\r\n    private static TROUSERS: string = 'lg';\r\n    private static SHOES: string = 'sh';\r\n    private static TROUSER_ACCESSORIES: string = 'wa';\r\n    private static BLOCKED_FX_TYPES: number[] = [28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68];\r\n\r\n    private _data: Map<string, number>;\r\n    private _colors: Map<string, number[]>;\r\n    private _gender: string = 'M';\r\n    private _isDisposed: boolean;\r\n    private _avatarEffectType: number = -1;\r\n\r\n    public loadAvatarData(k: string, _arg_2: string): void\r\n    {\r\n        this._data = new Map();\r\n        this._colors = new Map();\r\n        this._gender = _arg_2;\r\n\r\n        this.parseFigureString(k);\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._data = null;\r\n        this._colors = null;\r\n        this._isDisposed = true;\r\n    }\r\n\r\n    public get disposed(): boolean\r\n    {\r\n        return this._isDisposed;\r\n    }\r\n\r\n    private parseFigureString(k: string): void\r\n    {\r\n        if(!k) return;\r\n\r\n        for(const set of k.split('.'))\r\n        {\r\n            const _local_3 = set.split('-');\r\n\r\n            if(_local_3.length > 0)\r\n            {\r\n                const part = _local_3[0];\r\n                const setId = parseInt(_local_3[1]);\r\n                const colors: number[] = [];\r\n\r\n                let i = 2;\r\n\r\n                while(i < _local_3.length)\r\n                {\r\n                    colors.push(parseInt(_local_3[i]));\r\n\r\n                    i++;\r\n                }\r\n\r\n                if(!colors.length) colors.push(0);\r\n\r\n                this.savePartSetId(part, setId, false);\r\n                this.savePartSetColourId(part, colors, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    public hasSetType(k: string): boolean\r\n    {\r\n        return !!this._data.get(k);\r\n    }\r\n\r\n    public getPartSetId(k: string): number\r\n    {\r\n        if(this.hasSetType(k)) return this._data.get(k);\r\n\r\n        return -1;\r\n    }\r\n\r\n    public getColourIds(k: string): number[]\r\n    {\r\n        if(this._colors.get(k)) return this._colors.get(k);\r\n\r\n        return [];\r\n    }\r\n\r\n    public getFigureString(): string\r\n    {\r\n        let figure = '';\r\n\r\n        const sets: string[] = [];\r\n\r\n        for(const [ key, value ] of this._data.entries())\r\n        {\r\n            let set = ((key + '-') + value);\r\n\r\n            const colors = this._colors.get(key);\r\n\r\n            if(colors) for(const color of colors) set = (set + ('-' + color));\r\n\r\n            sets.push(set);\r\n        }\r\n\r\n        let i = 0;\r\n\r\n        while(i < sets.length)\r\n        {\r\n            figure = (figure + sets[i]);\r\n\r\n            if(i < (sets.length - 1)) figure = (figure + '.');\r\n\r\n            i++;\r\n        }\r\n\r\n        return figure;\r\n    }\r\n\r\n    public savePartData(k: string, _arg_2: number, _arg_3: number[], _arg_4: boolean = false): void\r\n    {\r\n        this.savePartSetId(k, _arg_2, _arg_4);\r\n        this.savePartSetColourId(k, _arg_3, _arg_4);\r\n    }\r\n\r\n    private savePartSetId(k: string, _arg_2: number, _arg_3: boolean = true): void\r\n    {\r\n        switch(k)\r\n        {\r\n            case FigureDataContainer.HD:\r\n            case FigureDataContainer.HAIR:\r\n            case FigureDataContainer.HAT:\r\n            case FigureDataContainer.HEAD_ACCESSORIES:\r\n            case FigureDataContainer.EYE_ACCESSORIES:\r\n            case FigureDataContainer.FACE_ACCESSORIES:\r\n            case FigureDataContainer.SHIRT:\r\n            case FigureDataContainer.JACKET:\r\n            case FigureDataContainer.CHEST_ACCESSORIES:\r\n            case FigureDataContainer.CHEST_PRINTS:\r\n            case FigureDataContainer.TROUSERS:\r\n            case FigureDataContainer.SHOES:\r\n            case FigureDataContainer.TROUSER_ACCESSORIES:\r\n                if(_arg_2 >= 0)\r\n                {\r\n                    this._data.set(k, _arg_2);\r\n                }\r\n                else\r\n                {\r\n                    this._data.delete(k);\r\n                }\r\n        }\r\n    }\r\n\r\n    public savePartSetColourId(k: string, _arg_2: number[], _arg_3: boolean = true): void\r\n    {\r\n        switch(k)\r\n        {\r\n            case FigureDataContainer.HD:\r\n            case FigureDataContainer.HAIR:\r\n            case FigureDataContainer.HAT:\r\n            case FigureDataContainer.HEAD_ACCESSORIES:\r\n            case FigureDataContainer.EYE_ACCESSORIES:\r\n            case FigureDataContainer.FACE_ACCESSORIES:\r\n            case FigureDataContainer.SHIRT:\r\n            case FigureDataContainer.JACKET:\r\n            case FigureDataContainer.CHEST_ACCESSORIES:\r\n            case FigureDataContainer.CHEST_PRINTS:\r\n            case FigureDataContainer.TROUSERS:\r\n            case FigureDataContainer.SHOES:\r\n            case FigureDataContainer.TROUSER_ACCESSORIES:\r\n                this._colors.set(k, _arg_2);\r\n                return;\r\n        }\r\n    }\r\n\r\n    public getFigureStringWithFace(k: number): string\r\n    {\r\n        const partSets: string[] = [ FigureDataContainer.HD ];\r\n\r\n        let figure = '';\r\n        const sets: string[] = [];\r\n\r\n        for(const part of partSets)\r\n        {\r\n            const colors = this._colors.get(part);\r\n\r\n            if(colors)\r\n            {\r\n                let setId = this._data.get(part);\r\n\r\n                if(part === FigureDataContainer.HD) setId = k;\r\n\r\n                let set = ((part + '-') + setId);\r\n\r\n                if(setId >= 0)\r\n                {\r\n                    let i = 0;\r\n\r\n                    while(i < colors.length)\r\n                    {\r\n                        set = (set + ('-' + colors[i]));\r\n\r\n                        i++;\r\n                    }\r\n                }\r\n\r\n                sets.push(set);\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n\r\n        while(i < sets.length)\r\n        {\r\n            figure = (figure + sets[i]);\r\n\r\n            if(i < (sets.length - 1)) figure = (figure + '.');\r\n\r\n            i++;\r\n        }\r\n\r\n        return figure;\r\n    }\r\n\r\n    public get gender(): string\r\n    {\r\n        return this._gender;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}