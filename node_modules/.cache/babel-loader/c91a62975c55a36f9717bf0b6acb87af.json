{"ast":null,"code":"import { RoomObjectVariable } from '../../RoomObjectVariable';\nimport { IsometricImageFurniVisualization } from './IsometricImageFurniVisualization';\nexport class FurnitureGuildIsometricBadgeVisualization extends IsometricImageFurniVisualization {\n  constructor() {\n    super(...arguments);\n    this._color1 = void 0;\n    this._color2 = void 0;\n  }\n\n  updateModel(scale) {\n    const flag = super.updateModel(scale);\n\n    if (!this.hasThumbnailImage) {\n      const assetName = this.object.model.getValue(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_ASSET_NAME);\n      if (assetName && assetName.length) this.setThumbnailImages(this.getBitmapAsset(assetName));\n    }\n\n    const color1 = this.object.model.getValue(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_COLOR_1);\n    this._color1 = color1 ? color1 : FurnitureGuildIsometricBadgeVisualization.DEFAULT_COLOR_1;\n    const color2 = this.object.model.getValue(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_COLOR_2);\n    this._color2 = color2 ? color2 : FurnitureGuildIsometricBadgeVisualization.DEFAULT_COLOR_2;\n    return flag;\n  }\n\n  getLayerColor(scale, layerId, colorId) {\n    const tag = this.getLayerTag(scale, this._direction, layerId);\n\n    switch (tag) {\n      case FurnitureGuildIsometricBadgeVisualization.PRIMARY_COLOUR_SPRITE_TAG:\n        return this._color1;\n\n      case FurnitureGuildIsometricBadgeVisualization.SECONDARY_COLOUR_SPRITE_TAG:\n        return this._color2;\n    }\n\n    return super.getLayerColor(scale, layerId, colorId);\n  }\n\n  getLibraryAssetNameForSprite(asset, sprite) {\n    if (sprite.tag === FurnitureGuildIsometricBadgeVisualization.THUMBNAIL) {\n      if (this.object && this.object.model.getValue(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_ASSET_NAME)) {\n        return '%group.badge.url%' + this.object.model.getValue(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_ASSET_NAME);\n      }\n    }\n\n    return super.getLibraryAssetNameForSprite(asset, sprite);\n  }\n\n  getBitmapAsset(name) {\n    const asset = this.asset.getAsset(name);\n    if (!asset || !asset.texture) return null;\n    return asset.texture;\n  }\n\n}\nFurnitureGuildIsometricBadgeVisualization.PRIMARY_COLOUR_SPRITE_TAG = 'COLOR1';\nFurnitureGuildIsometricBadgeVisualization.SECONDARY_COLOUR_SPRITE_TAG = 'COLOR2';\nFurnitureGuildIsometricBadgeVisualization.DEFAULT_COLOR_1 = 0xEEEEEE;\nFurnitureGuildIsometricBadgeVisualization.DEFAULT_COLOR_2 = 0x4B4B4B;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/furniture/FurnitureGuildIsometricBadgeVisualization.ts"],"names":["RoomObjectVariable","IsometricImageFurniVisualization","FurnitureGuildIsometricBadgeVisualization","_color1","_color2","updateModel","scale","flag","hasThumbnailImage","assetName","object","model","getValue","FURNITURE_GUILD_CUSTOMIZED_ASSET_NAME","length","setThumbnailImages","getBitmapAsset","color1","FURNITURE_GUILD_CUSTOMIZED_COLOR_1","DEFAULT_COLOR_1","color2","FURNITURE_GUILD_CUSTOMIZED_COLOR_2","DEFAULT_COLOR_2","getLayerColor","layerId","colorId","tag","getLayerTag","_direction","PRIMARY_COLOUR_SPRITE_TAG","SECONDARY_COLOUR_SPRITE_TAG","getLibraryAssetNameForSprite","asset","sprite","THUMBNAIL","name","getAsset","texture"],"mappings":"AACA,SAASA,kBAAT,QAAmC,0BAAnC;AACA,SAASC,gCAAT,QAAiD,oCAAjD;AAEA,OAAO,MAAMC,yCAAN,SAAwDD,gCAAxD,CACP;AAAA;AAAA;AAAA,SAMYE,OANZ;AAAA,SAOYC,OAPZ;AAAA;;AAScC,EAAAA,WAAW,CAACC,KAAD,EACrB;AACI,UAAMC,IAAI,GAAG,MAAMF,WAAN,CAAkBC,KAAlB,CAAb;;AAEA,QAAG,CAAC,KAAKE,iBAAT,EACA;AACI,YAAMC,SAAS,GAAG,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAAmCZ,kBAAkB,CAACa,qCAAtD,CAAlB;AAEA,UAAGJ,SAAS,IAAIA,SAAS,CAACK,MAA1B,EAAkC,KAAKC,kBAAL,CAAwB,KAAKC,cAAL,CAAoBP,SAApB,CAAxB;AACrC;;AAED,UAAMQ,MAAM,GAAG,KAAKP,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAAmCZ,kBAAkB,CAACkB,kCAAtD,CAAf;AAEA,SAAKf,OAAL,GAAec,MAAM,GAAGA,MAAH,GAAWf,yCAAyC,CAACiB,eAA1E;AAEA,UAAMC,MAAM,GAAG,KAAKV,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAAmCZ,kBAAkB,CAACqB,kCAAtD,CAAf;AAEA,SAAKjB,OAAL,GAAegB,MAAM,GAAGA,MAAH,GAAWlB,yCAAyC,CAACoB,eAA1E;AAEA,WAAOf,IAAP;AACH;;AAESgB,EAAAA,aAAa,CAACjB,KAAD,EAAgBkB,OAAhB,EAAiCC,OAAjC,EACvB;AACI,UAAMC,GAAG,GAAG,KAAKC,WAAL,CAAiBrB,KAAjB,EAAwB,KAAKsB,UAA7B,EAAyCJ,OAAzC,CAAZ;;AAEA,YAAOE,GAAP;AAEI,WAAKxB,yCAAyC,CAAC2B,yBAA/C;AAA0E,eAAO,KAAK1B,OAAZ;;AAC1E,WAAKD,yCAAyC,CAAC4B,2BAA/C;AAA4E,eAAO,KAAK1B,OAAZ;AAHhF;;AAMA,WAAO,MAAMmB,aAAN,CAAoBjB,KAApB,EAA2BkB,OAA3B,EAAoCC,OAApC,CAAP;AACH;;AAESM,EAAAA,4BAA4B,CAACC,KAAD,EAAuBC,MAAvB,EACtC;AACI,QAAGA,MAAM,CAACP,GAAP,KAAexB,yCAAyC,CAACgC,SAA5D,EACA;AACI,UAAG,KAAKxB,MAAL,IAAe,KAAKA,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAAmCZ,kBAAkB,CAACa,qCAAtD,CAAlB,EACA;AACI,eAAO,sBAAsB,KAAKH,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAAmCZ,kBAAkB,CAACa,qCAAtD,CAA7B;AACH;AACJ;;AAED,WAAO,MAAMkB,4BAAN,CAAmCC,KAAnC,EAA0CC,MAA1C,CAAP;AACH;;AAEOjB,EAAAA,cAAc,CAACmB,IAAD,EACtB;AACI,UAAMH,KAAK,GAAG,KAAKA,KAAL,CAAWI,QAAX,CAAoBD,IAApB,CAAd;AAEA,QAAG,CAACH,KAAD,IAAU,CAACA,KAAK,CAACK,OAApB,EAA6B,OAAO,IAAP;AAE7B,WAAOL,KAAK,CAACK,OAAb;AACH;;AAhEL;AADanC,yC,CAEK2B,yB,GAAoC,Q;AAFzC3B,yC,CAGK4B,2B,GAAsC,Q;AAH3C5B,yC,CAIKiB,e,GAA0B,Q;AAJ/BjB,yC,CAKKoB,e,GAA0B,Q","sourcesContent":["import { IGraphicAsset, IRoomObjectSprite } from '../../../../../room';\r\nimport { RoomObjectVariable } from '../../RoomObjectVariable';\r\nimport { IsometricImageFurniVisualization } from './IsometricImageFurniVisualization';\r\n\r\nexport class FurnitureGuildIsometricBadgeVisualization extends IsometricImageFurniVisualization\r\n{\r\n    public static PRIMARY_COLOUR_SPRITE_TAG: string = 'COLOR1';\r\n    public static SECONDARY_COLOUR_SPRITE_TAG: string = 'COLOR2';\r\n    public static DEFAULT_COLOR_1: number = 0xEEEEEE;\r\n    public static DEFAULT_COLOR_2: number = 0x4B4B4B;\r\n\r\n    private _color1: number;\r\n    private _color2: number;\r\n\r\n    protected updateModel(scale: number): boolean\r\n    {\r\n        const flag = super.updateModel(scale);\r\n\r\n        if(!this.hasThumbnailImage)\r\n        {\r\n            const assetName = this.object.model.getValue<string>(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_ASSET_NAME);\r\n\r\n            if(assetName && assetName.length) this.setThumbnailImages(this.getBitmapAsset(assetName));\r\n        }\r\n\r\n        const color1 = this.object.model.getValue<number>(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_COLOR_1);\r\n\r\n        this._color1 = color1 ? color1: FurnitureGuildIsometricBadgeVisualization.DEFAULT_COLOR_1;\r\n\r\n        const color2 = this.object.model.getValue<number>(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_COLOR_2);\r\n\r\n        this._color2 = color2 ? color2: FurnitureGuildIsometricBadgeVisualization.DEFAULT_COLOR_2;\r\n\r\n        return flag;\r\n    }\r\n\r\n    protected getLayerColor(scale: number, layerId: number, colorId: number): number\r\n    {\r\n        const tag = this.getLayerTag(scale, this._direction, layerId);\r\n\r\n        switch(tag)\r\n        {\r\n            case FurnitureGuildIsometricBadgeVisualization.PRIMARY_COLOUR_SPRITE_TAG: return this._color1;\r\n            case FurnitureGuildIsometricBadgeVisualization.SECONDARY_COLOUR_SPRITE_TAG: return this._color2;\r\n        }\r\n\r\n        return super.getLayerColor(scale, layerId, colorId);\r\n    }\r\n\r\n    protected getLibraryAssetNameForSprite(asset: IGraphicAsset, sprite: IRoomObjectSprite): string\r\n    {\r\n        if(sprite.tag === FurnitureGuildIsometricBadgeVisualization.THUMBNAIL)\r\n        {\r\n            if(this.object && this.object.model.getValue<string>(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_ASSET_NAME))\r\n            {\r\n                return '%group.badge.url%' + this.object.model.getValue<string>(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_ASSET_NAME);\r\n            }\r\n        }\r\n\r\n        return super.getLibraryAssetNameForSprite(asset, sprite);\r\n    }\r\n\r\n    private getBitmapAsset(name: string)\r\n    {\r\n        const asset = this.asset.getAsset(name);\r\n\r\n        if(!asset || !asset.texture) return null;\r\n\r\n        return asset.texture;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}