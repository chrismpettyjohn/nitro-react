{"ast":null,"code":"export class BadgeBaseAndLevel {\n  constructor(badgeId) {\n    this._badgeId = '';\n    this._level = 1;\n    this._base = '';\n    this._badgeId = badgeId;\n    this.parseText();\n  }\n\n  parseText() {\n    let length = this._badgeId.length - 1;\n\n    while (length > 0 && this.isNumber(this._badgeId.charAt(length))) length--;\n\n    this._base = this._badgeId.substr(0, length + 1);\n\n    const level = this._badgeId.substr(length + 1, this._badgeId.length);\n\n    if (level && level !== '') this._level = Number.parseInt(level);\n  }\n\n  isNumber(text) {\n    const char = text.charCodeAt(0);\n    return char >= 48 && char <= 57;\n  }\n\n  get level() {\n    return this._level;\n  }\n\n  set level(k) {\n    this._level = Math.max(1, k);\n  }\n\n  get getBadgeId() {\n    return this._base + this._level;\n  }\n\n  get base() {\n    return this._base;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/localization/BadgeBaseAndLevel.ts"],"names":["BadgeBaseAndLevel","constructor","badgeId","_badgeId","_level","_base","parseText","length","isNumber","charAt","substr","level","Number","parseInt","text","char","charCodeAt","k","Math","max","getBadgeId","base"],"mappings":"AAAA,OAAO,MAAMA,iBAAN,CACP;AAKIC,EAAAA,WAAW,CAACC,OAAD,EACX;AAAA,SALQC,QAKR,GAL2B,EAK3B;AAAA,SAJQC,MAIR,GAJyB,CAIzB;AAAA,SAHQC,KAGR,GAHwB,EAGxB;AACI,SAAKF,QAAL,GAAgBD,OAAhB;AAEA,SAAKI,SAAL;AACH;;AAEOA,EAAAA,SAAS,GACjB;AACI,QAAIC,MAAM,GAAI,KAAKJ,QAAL,CAAcI,MAAd,GAAuB,CAArC;;AAEA,WAAMA,MAAM,GAAG,CAAT,IAAc,KAAKC,QAAL,CAAc,KAAKL,QAAL,CAAcM,MAAd,CAAqBF,MAArB,CAAd,CAApB,EAAiEA,MAAM;;AAEvE,SAAKF,KAAL,GAAa,KAAKF,QAAL,CAAcO,MAAd,CAAqB,CAArB,EAAyBH,MAAM,GAAG,CAAlC,CAAb;;AAEA,UAAMI,KAAK,GAAG,KAAKR,QAAL,CAAcO,MAAd,CAAsBH,MAAM,GAAG,CAA/B,EAAmC,KAAKJ,QAAL,CAAcI,MAAjD,CAAd;;AAEA,QAAGI,KAAK,IAAKA,KAAK,KAAK,EAAvB,EAA4B,KAAKP,MAAL,GAAcQ,MAAM,CAACC,QAAP,CAAgBF,KAAhB,CAAd;AAC/B;;AAEOH,EAAAA,QAAQ,CAACM,IAAD,EAChB;AACI,UAAMC,IAAI,GAAGD,IAAI,CAACE,UAAL,CAAgB,CAAhB,CAAb;AAEA,WAAQD,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,EAA9B;AACH;;AAEe,MAALJ,KAAK,GAChB;AACI,WAAO,KAAKP,MAAZ;AACH;;AAEe,MAALO,KAAK,CAACM,CAAD,EAChB;AACI,SAAKb,MAAL,GAAcc,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,CAAZ,CAAd;AACH;;AAEoB,MAAVG,UAAU,GACrB;AACI,WAAO,KAAKf,KAAL,GAAa,KAAKD,MAAzB;AACH;;AAEc,MAAJiB,IAAI,GACf;AACI,WAAO,KAAKhB,KAAZ;AACH;;AAlDL","sourcesContent":["export class BadgeBaseAndLevel\r\n{\r\n    private _badgeId: string = '';\r\n    private _level: number = 1;\r\n    private _base: string = '';\r\n\r\n    constructor(badgeId: string)\r\n    {\r\n        this._badgeId = badgeId;\r\n\r\n        this.parseText();\r\n    }\r\n\r\n    private parseText():void\r\n    {\r\n        let length = (this._badgeId.length - 1);\r\n\r\n        while(length > 0 && this.isNumber(this._badgeId.charAt(length))) length--;\r\n\r\n        this._base = this._badgeId.substr(0, (length + 1));\r\n\r\n        const level = this._badgeId.substr((length + 1), this._badgeId.length);\r\n\r\n        if(level && (level !== '')) this._level = Number.parseInt(level);\r\n    }\r\n\r\n    private isNumber(text: string): boolean\r\n    {\r\n        const char = text.charCodeAt(0);\r\n\r\n        return (char >= 48 && char <= 57);\r\n    }\r\n\r\n    public get level(): number\r\n    {\r\n        return this._level;\r\n    }\r\n\r\n    public set level(k : number)\r\n    {\r\n        this._level = Math.max(1, k);\r\n    }\r\n\r\n    public get getBadgeId(): string\r\n    {\r\n        return this._base + this._level;\r\n    }\r\n\r\n    public get base(): string\r\n    {\r\n        return this._base;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}