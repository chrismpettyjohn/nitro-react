{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/achievements/views/AchievementCategoryView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nimport { Column } from '../../../common';\nimport { AchievementListView } from './achievement-list/AchievementListView';\nimport { AchievementDetailsView } from './AchievementDetailsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AchievementCategoryView = props => {\n  _s();\n\n  const {\n    category = null,\n    selectedAchievementId = -1,\n    setSelectedAchievementId = null,\n    setAchievementSeen = null\n  } = props;\n  const selectedAchievement = useMemo(() => {\n    if (selectedAchievementId === -1) return null;\n    return category.achievements.find(achievement => achievement.achievementId === selectedAchievementId);\n  }, [category, selectedAchievementId]);\n  useEffect(() => {\n    if (!selectedAchievement) {\n      if (category.achievements.length) setSelectedAchievementId(category.achievements[0].achievementId);\n    }\n  }, [selectedAchievement, category, setSelectedAchievementId]);\n  useEffect(() => {\n    if (!selectedAchievement) return;\n    setAchievementSeen(category.code, selectedAchievement.achievementId);\n  }, [selectedAchievement, category, setAchievementSeen]);\n  if (!category) return null;\n  return /*#__PURE__*/_jsxDEV(Column, {\n    fullHeight: true,\n    justifyContent: \"between\",\n    children: [/*#__PURE__*/_jsxDEV(AchievementListView, {\n      achievements: category.achievements,\n      selectedAchievementId: selectedAchievementId,\n      setSelectedAchievementId: setSelectedAchievementId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), !!selectedAchievement && /*#__PURE__*/_jsxDEV(AchievementDetailsView, {\n      achievement: selectedAchievement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AchievementCategoryView, \"l0z17I6D9+VnYTEJOUGQb9K6ZAU=\");\n\n_c = AchievementCategoryView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AchievementCategoryView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/achievements/views/AchievementCategoryView.tsx"],"names":["useEffect","useMemo","Column","AchievementListView","AchievementDetailsView","AchievementCategoryView","props","category","selectedAchievementId","setSelectedAchievementId","setAchievementSeen","selectedAchievement","achievements","find","achievement","achievementId","length","code"],"mappings":";;;AAAA,SAAuCA,SAAvC,EAAkDC,OAAlD,QAAiE,OAAjE;AAEA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,mBAAT,QAAoC,wCAApC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;;AAUA,OAAO,MAAMC,uBAAyD,GAAGC,KAAK,IAC9E;AAAA;;AACI,QAAM;AAAEC,IAAAA,QAAQ,GAAG,IAAb;AAAmBC,IAAAA,qBAAqB,GAAG,CAAC,CAA5C;AAA+CC,IAAAA,wBAAwB,GAAG,IAA1E;AAAgFC,IAAAA,kBAAkB,GAAG;AAArG,MAA8GJ,KAApH;AAEA,QAAMK,mBAAmB,GAAGV,OAAO,CAAC,MACpC;AACI,QAAGO,qBAAqB,KAAK,CAAC,CAA9B,EAAiC,OAAO,IAAP;AAEjC,WAAOD,QAAQ,CAACK,YAAT,CAAsBC,IAAtB,CAA2BC,WAAW,IAAKA,WAAW,CAACC,aAAZ,KAA8BP,qBAAzE,CAAP;AACH,GALkC,EAKhC,CAAED,QAAF,EAAYC,qBAAZ,CALgC,CAAnC;AAOAR,EAAAA,SAAS,CAAC,MACV;AACI,QAAG,CAACW,mBAAJ,EACA;AACI,UAAGJ,QAAQ,CAACK,YAAT,CAAsBI,MAAzB,EAAiCP,wBAAwB,CAACF,QAAQ,CAACK,YAAT,CAAsB,CAAtB,EAAyBG,aAA1B,CAAxB;AACpC;AACJ,GANQ,EAMN,CAAEJ,mBAAF,EAAuBJ,QAAvB,EAAiCE,wBAAjC,CANM,CAAT;AAQAT,EAAAA,SAAS,CAAC,MACV;AACI,QAAG,CAACW,mBAAJ,EAAyB;AAEzBD,IAAAA,kBAAkB,CAACH,QAAQ,CAACU,IAAV,EAAgBN,mBAAmB,CAACI,aAApC,CAAlB;AACH,GALQ,EAKN,CAAEJ,mBAAF,EAAuBJ,QAAvB,EAAiCG,kBAAjC,CALM,CAAT;AAOA,MAAG,CAACH,QAAJ,EAAc,OAAO,IAAP;AAEd,sBACI,QAAC,MAAD;AAAQ,IAAA,UAAU,MAAlB;AAAmB,IAAA,cAAc,EAAC,SAAlC;AAAA,4BACI,QAAC,mBAAD;AAAqB,MAAA,YAAY,EAAGA,QAAQ,CAACK,YAA7C;AAA4D,MAAA,qBAAqB,EAAGJ,qBAApF;AAA4G,MAAA,wBAAwB,EAAGC;AAAvI;AAAA;AAAA;AAAA;AAAA,YADJ,EAEM,CAAC,CAACE,mBAAF,iBACE,QAAC,sBAAD;AAAwB,MAAA,WAAW,EAAGA;AAAtC;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAnCM;;GAAMN,uB;;KAAAA,uB","sourcesContent":["import { Dispatch, FC, SetStateAction, useEffect, useMemo } from 'react';\nimport { AchievementCategory } from '../../../api';\nimport { Column } from '../../../common';\nimport { AchievementListView } from './achievement-list/AchievementListView';\nimport { AchievementDetailsView } from './AchievementDetailsView';\n\ninterface AchievementCategoryViewProps\n{\n    category: AchievementCategory;\n    selectedAchievementId: number;\n    setSelectedAchievementId: Dispatch<SetStateAction<number>>;\n    setAchievementSeen: (code: string, achievementId: number) => void;\n}\n\nexport const AchievementCategoryView: FC<AchievementCategoryViewProps> = props =>\n{\n    const { category = null, selectedAchievementId = -1, setSelectedAchievementId = null, setAchievementSeen = null } = props;\n\n    const selectedAchievement = useMemo(() =>\n    {\n        if(selectedAchievementId === -1) return null;\n\n        return category.achievements.find(achievement => (achievement.achievementId === selectedAchievementId));\n    }, [ category, selectedAchievementId ]);\n\n    useEffect(() =>\n    {\n        if(!selectedAchievement)\n        {\n            if(category.achievements.length) setSelectedAchievementId(category.achievements[0].achievementId);\n        }\n    }, [ selectedAchievement, category, setSelectedAchievementId ]);\n\n    useEffect(() =>\n    {\n        if(!selectedAchievement) return;\n\n        setAchievementSeen(category.code, selectedAchievement.achievementId);\n    }, [ selectedAchievement, category, setAchievementSeen ]);\n\n    if(!category) return null;\n\n    return (\n        <Column fullHeight justifyContent=\"between\">\n            <AchievementListView achievements={ category.achievements } selectedAchievementId={ selectedAchievementId } setSelectedAchievementId={ setSelectedAchievementId } />\n            { !!selectedAchievement &&\n                <AchievementDetailsView achievement={ selectedAchievement } /> }\n        </Column>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}