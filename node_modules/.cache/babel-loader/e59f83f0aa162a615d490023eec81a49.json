{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionGiveScoreToPredefinedTeamView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredActionGiveScoreToPredefinedTeamView = props => {\n  _s();\n\n  const [points, setPoints] = useState(1);\n  const [time, setTime] = useState(1);\n  const [selectedTeam, setSelectedTeam] = useState(1);\n  const {\n    trigger = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => setIntParams([points, time, selectedTeam]);\n\n  useEffect(() => {\n    if (trigger.intData.length >= 2) {\n      setPoints(trigger.intData[0]);\n      setTime(trigger.intData[1]);\n      setSelectedTeam(trigger.intData[2]);\n    } else {\n      setPoints(1);\n      setTime(1);\n      setSelectedTeam(1);\n    }\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredActionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.setpoints', ['points'], [points.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: 'wired-slider',\n        min: 1,\n        max: 100,\n        value: points,\n        onChange: event => setPoints(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.settimesingame', ['times'], [time.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: 'wired-slider',\n        min: 1,\n        max: 10,\n        value: time,\n        onChange: event => setTime(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.team')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), [1, 2, 3, 4].map(value => {\n        return /*#__PURE__*/_jsxDEV(Flex, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"selectedTeam\",\n            id: `selectedTeam${value}`,\n            checked: selectedTeam === value,\n            onChange: event => setSelectedTeam(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('wiredfurni.params.team.' + value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredActionGiveScoreToPredefinedTeamView, \"EVfMn7ZEOh/3hEC5+0gt6m4bsr4=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredActionGiveScoreToPredefinedTeamView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredActionGiveScoreToPredefinedTeamView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionGiveScoreToPredefinedTeamView.tsx"],"names":["useEffect","useState","ReactSlider","LocalizeText","WiredFurniType","Column","Flex","Text","useWiredContext","WiredActionBaseView","WiredActionGiveScoreToPredefinedTeamView","props","points","setPoints","time","setTime","selectedTeam","setSelectedTeam","trigger","setIntParams","save","intData","length","STUFF_SELECTION_OPTION_NONE","toString","event","map","value"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\n\nexport const WiredActionGiveScoreToPredefinedTeamView: FC<{}> = props =>\n{\n    const [ points, setPoints ] = useState(1);\n    const [ time, setTime ] = useState(1);\n    const [ selectedTeam, setSelectedTeam ] = useState(1);\n    const { trigger = null, setIntParams = null } = useWiredContext();\n\n    const save = () => setIntParams([ points, time, selectedTeam ]);\n\n    useEffect(() =>\n    {\n        if(trigger.intData.length >= 2)\n        {\n            setPoints(trigger.intData[0]);\n            setTime(trigger.intData[1]);\n            setSelectedTeam(trigger.intData[2]);\n        }\n        else\n        {\n            setPoints(1);\n            setTime(1);\n            setSelectedTeam(1);\n        }\n    }, [ trigger ]);\n\n    return (\n        <WiredActionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.setpoints', [ 'points' ], [ points.toString() ]) }</Text>\n                <ReactSlider\n                    className={ 'wired-slider' }\n                    min={ 1 }\n                    max={ 100 }\n                    value={ points }\n                    onChange={ event => setPoints(event) } />\n            </Column>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.settimesingame', [ 'times' ], [ time.toString() ]) }</Text>\n                <ReactSlider\n                    className={ 'wired-slider' }\n                    min={ 1 }\n                    max={ 10 }\n                    value={ time }\n                    onChange={ event => setTime(event) } />\n            </Column>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.team') }</Text>\n                { [ 1, 2, 3, 4 ].map(value =>\n                {\n                    return (\n                        <Flex key={ value } gap={ 1 }>\n                            <input className=\"form-check-input\" type=\"radio\" name=\"selectedTeam\" id={ `selectedTeam${ value }` } checked={ (selectedTeam === value) } onChange={ event => setSelectedTeam(value) } />\n                            <Text>{ LocalizeText('wiredfurni.params.team.' + value) }</Text>\n                        </Flex>\n                    );\n                }) }\n            </Column>\n        </WiredActionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}