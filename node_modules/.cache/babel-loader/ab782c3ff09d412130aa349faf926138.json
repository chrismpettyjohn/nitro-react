{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/navigator/views/NavigatorRoomInfoView.tsx\",\n    _s = $RefreshSig$();\n\nimport { RoomMuteComposer, RoomSettingsComposer, RoomStaffPickComposer, SecurityLevel, UserHomeRoomComposer } from '@nitrots/nitro-renderer';\nimport classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { CreateLinkEvent, GetGroupInformation, GetSessionDataManager, LocalizeText, SendMessageComposer } from '../../../api';\nimport { Base, Button, Column, Flex, LayoutBadgeImageView, LayoutRoomThumbnailView, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text, UserProfileIconView } from '../../../common';\nimport { RoomWidgetThumbnailEvent } from '../../../events';\nimport { DispatchUiEvent } from '../../../hooks';\nimport { useNavigatorContext } from '../NavigatorContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class NavigatorRoomInfoViewProps {\n  constructor() {\n    this.onCloseClick = void 0;\n  }\n\n}\nexport const NavigatorRoomInfoView = props => {\n  _s();\n\n  const {\n    onCloseClick = null\n  } = props;\n  const [isRoomPicked, setIsRoomPicked] = useState(false);\n  const [isRoomMuted, setIsRoomMuted] = useState(false);\n  const {\n    navigatorData = null\n  } = useNavigatorContext();\n\n  const hasPermission = permission => {\n    switch (permission) {\n      case 'settings':\n        return GetSessionDataManager().userId === navigatorData.enteredGuestRoom.ownerId || GetSessionDataManager().isModerator;\n\n      case 'staff_pick':\n        return GetSessionDataManager().securityLevel >= SecurityLevel.COMMUNITY;\n\n      default:\n        return false;\n    }\n  };\n\n  const processAction = (action, value) => {\n    if (!navigatorData || !navigatorData.enteredGuestRoom) return;\n\n    switch (action) {\n      case 'set_home_room':\n        let newRoomId = -1;\n\n        if (navigatorData.homeRoomId !== navigatorData.enteredGuestRoom.roomId) {\n          newRoomId = navigatorData.enteredGuestRoom.roomId;\n        }\n\n        if (newRoomId > 0) SendMessageComposer(new UserHomeRoomComposer(newRoomId));\n        return;\n\n      case 'navigator_search_tag':\n        return;\n\n      case 'open_room_thumbnail_camera':\n        DispatchUiEvent(new RoomWidgetThumbnailEvent(RoomWidgetThumbnailEvent.TOGGLE_THUMBNAIL));\n        return;\n\n      case 'open_group_info':\n        GetGroupInformation(navigatorData.enteredGuestRoom.habboGroupId);\n        return;\n\n      case 'toggle_room_link':\n        CreateLinkEvent('navigator/toggle-room-link');\n        return;\n\n      case 'open_room_settings':\n        SendMessageComposer(new RoomSettingsComposer(navigatorData.enteredGuestRoom.roomId));\n        return;\n\n      case 'toggle_pick':\n        setIsRoomPicked(value => !value);\n        SendMessageComposer(new RoomStaffPickComposer(navigatorData.enteredGuestRoom.roomId));\n        return;\n\n      case 'toggle_mute':\n        setIsRoomMuted(value => !value);\n        SendMessageComposer(new RoomMuteComposer());\n        return;\n\n      case 'open_floorplan_editor':\n        CreateLinkEvent('floor-editor/toggle');\n        return;\n\n      case 'close':\n        onCloseClick();\n        return;\n    }\n  };\n\n  useEffect(() => {\n    if (!navigatorData) return;\n    setIsRoomPicked(navigatorData.currentRoomIsStaffPick);\n    if (navigatorData.enteredGuestRoom) setIsRoomMuted(navigatorData.enteredGuestRoom.allInRoomMuted);\n  }, [navigatorData]);\n  if (!navigatorData.enteredGuestRoom) return null;\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    className: \"nitro-room-info\",\n    theme: \"primary\",\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: LocalizeText('navigator.roomsettings.roominfo'),\n      onCloseClick: () => processAction('close')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      className: \"text-black\",\n      children: navigatorData.enteredGuestRoom && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          gap: 2,\n          overflow: \"hidden\",\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            grow: true,\n            gap: 1,\n            overflow: \"hidden\",\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              gap: 1,\n              children: [/*#__PURE__*/_jsxDEV(Column, {\n                grow: true,\n                gap: 1,\n                children: [/*#__PURE__*/_jsxDEV(Flex, {\n                  gap: 1,\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    small: true,\n                    bold: true,\n                    children: navigatorData.enteredGuestRoom.roomName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this), navigatorData.enteredGuestRoom.showOwner && /*#__PURE__*/_jsxDEV(Flex, {\n                  alignItems: \"center\",\n                  gap: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    small: true,\n                    variant: \"muted\",\n                    children: LocalizeText('navigator.roomownercaption')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                    alignItems: \"center\",\n                    gap: 1,\n                    children: [/*#__PURE__*/_jsxDEV(UserProfileIconView, {\n                      userId: navigatorData.enteredGuestRoom.ownerId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      small: true,\n                      children: navigatorData.enteredGuestRoom.ownerName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  alignItems: \"center\",\n                  gap: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    small: true,\n                    variant: \"muted\",\n                    children: LocalizeText('navigator.roomrating')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    small: true,\n                    children: navigatorData.currentRoomRating\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 41\n                }, this), navigatorData.enteredGuestRoom.tags.length > 0 && /*#__PURE__*/_jsxDEV(Flex, {\n                  alignItems: \"center\",\n                  gap: 1,\n                  children: navigatorData.enteredGuestRoom.tags.map(tag => {\n                    return /*#__PURE__*/_jsxDEV(Text, {\n                      pointer: true,\n                      className: \"bg-muted rounded p-1\",\n                      onClick: event => processAction('navigator_search_tag', tag),\n                      children: [\"#\", tag]\n                    }, tag, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 60\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                alignItems: \"center\",\n                gap: 1,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => processAction('set_home_room'),\n                  className: 'flex-shrink-0 icon icon-house-small cursor-pointer' + classNames({\n                    ' gray': navigatorData.homeRoomId !== navigatorData.enteredGuestRoom.roomId\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              small: true,\n              overflow: \"auto\",\n              style: {\n                maxHeight: 50\n              },\n              children: navigatorData.enteredGuestRoom.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(LayoutRoomThumbnailView, {\n                roomId: navigatorData.enteredGuestRoom.roomId,\n                customUrl: navigatorData.enteredGuestRoom.officialRoomPicRef,\n                children: hasPermission('settings') && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon icon-camera-small position-absolute b-0 r-0 m-1 cursor-pointer top-0\",\n                  onClick: () => processAction('open_room_thumbnail_camera')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 72\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), navigatorData.enteredGuestRoom.habboGroupId > 0 && /*#__PURE__*/_jsxDEV(Flex, {\n              pointer: true,\n              alignItems: \"center\",\n              gap: 2,\n              onClick: () => processAction('open_group_info'),\n              children: [/*#__PURE__*/_jsxDEV(LayoutBadgeImageView, {\n                className: \"flex-none\",\n                badgeCode: navigatorData.enteredGuestRoom.groupBadgeCode,\n                isGroup: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                small: true,\n                underline: true,\n                children: LocalizeText('navigator.guildbase', ['groupName'], [navigatorData.enteredGuestRoom.groupName])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              gap: 1,\n              className: \"w-100 room-tool-item\",\n              onClick: () => processAction('toggle_room_link'),\n              children: [/*#__PURE__*/_jsxDEV(Base, {\n                pointer: true,\n                title: LocalizeText('room.like.button.text'),\n                className: \"icon-width icon icon-link-room float-start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                underline: true,\n                small: true,\n                children: LocalizeText('navigator.embed.caption')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [hasPermission('staff_pick') && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => processAction('toggle_pick'),\n            children: LocalizeText(isRoomPicked ? 'navigator.staffpicks.unpick' : 'navigator.staffpicks.pick')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            disabled: true,\n            children: LocalizeText('help.emergency.main.report.room')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), hasPermission('settings') && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => processAction('open_room_settings'),\n              children: LocalizeText('navigator.room.popup.info.room.settings')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => processAction('toggle_mute'),\n              children: LocalizeText(isRoomMuted ? 'navigator.muteall_on' : 'navigator.muteall_off')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => processAction('open_floorplan_editor'),\n              children: LocalizeText('open.floor.plan.editor')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavigatorRoomInfoView, \"a83YMNqMWNGzMfVZjt1FTJjFF24=\", false, function () {\n  return [useNavigatorContext];\n});\n\n_c = NavigatorRoomInfoView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigatorRoomInfoView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/navigator/views/NavigatorRoomInfoView.tsx"],"names":["RoomMuteComposer","RoomSettingsComposer","RoomStaffPickComposer","SecurityLevel","UserHomeRoomComposer","classNames","useEffect","useState","CreateLinkEvent","GetGroupInformation","GetSessionDataManager","LocalizeText","SendMessageComposer","Base","Button","Column","Flex","LayoutBadgeImageView","LayoutRoomThumbnailView","NitroCardContentView","NitroCardHeaderView","NitroCardView","Text","UserProfileIconView","RoomWidgetThumbnailEvent","DispatchUiEvent","useNavigatorContext","NavigatorRoomInfoViewProps","onCloseClick","NavigatorRoomInfoView","props","isRoomPicked","setIsRoomPicked","isRoomMuted","setIsRoomMuted","navigatorData","hasPermission","permission","userId","enteredGuestRoom","ownerId","isModerator","securityLevel","COMMUNITY","processAction","action","value","newRoomId","homeRoomId","roomId","TOGGLE_THUMBNAIL","habboGroupId","currentRoomIsStaffPick","allInRoomMuted","roomName","showOwner","ownerName","currentRoomRating","tags","length","map","tag","event","maxHeight","description","officialRoomPicRef","groupBadgeCode","groupName"],"mappings":"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","sourcesContent":["import { RoomMuteComposer, RoomSettingsComposer, RoomStaffPickComposer, SecurityLevel, UserHomeRoomComposer } from '@nitrots/nitro-renderer';\nimport classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\nimport { CreateLinkEvent, GetGroupInformation, GetSessionDataManager, LocalizeText, SendMessageComposer } from '../../../api';\nimport { Base, Button, Column, Flex, LayoutBadgeImageView, LayoutRoomThumbnailView, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text, UserProfileIconView } from '../../../common';\nimport { RoomWidgetThumbnailEvent } from '../../../events';\nimport { DispatchUiEvent } from '../../../hooks';\nimport { useNavigatorContext } from '../NavigatorContext';\n\nexport class NavigatorRoomInfoViewProps\n{\n    onCloseClick: () => void;\n}\n\nexport const NavigatorRoomInfoView: FC<NavigatorRoomInfoViewProps> = props =>\n{\n    const { onCloseClick = null } = props;\n    const [ isRoomPicked, setIsRoomPicked ] = useState(false);\n    const [ isRoomMuted, setIsRoomMuted ] = useState(false);\n    const { navigatorData = null } = useNavigatorContext();\n\n\n    const hasPermission = (permission: string) =>\n    {\n        switch(permission)\n        {\n            case 'settings':\n                return (GetSessionDataManager().userId === navigatorData.enteredGuestRoom.ownerId || GetSessionDataManager().isModerator);\n            case 'staff_pick':\n                return GetSessionDataManager().securityLevel >= SecurityLevel.COMMUNITY;\n            default: return false;\n        }\n    }\n    \n    const processAction = (action: string, value?: string) =>\n    {\n        if(!navigatorData || !navigatorData.enteredGuestRoom) return;\n\n        switch(action)\n        {\n            case 'set_home_room':\n                let newRoomId = -1;\n\n                if(navigatorData.homeRoomId !== navigatorData.enteredGuestRoom.roomId)\n                {\n                    newRoomId = navigatorData.enteredGuestRoom.roomId;\n                }\n\n                if(newRoomId > 0) SendMessageComposer(new UserHomeRoomComposer(newRoomId));\n                return;\n            case 'navigator_search_tag':\n                return;\n            case 'open_room_thumbnail_camera':\n                DispatchUiEvent(new RoomWidgetThumbnailEvent(RoomWidgetThumbnailEvent.TOGGLE_THUMBNAIL));\n                return;\n            case 'open_group_info':\n                GetGroupInformation(navigatorData.enteredGuestRoom.habboGroupId);\n                return;\n            case 'toggle_room_link':\n                CreateLinkEvent('navigator/toggle-room-link');\n                return;\n            case 'open_room_settings':\n                SendMessageComposer(new RoomSettingsComposer(navigatorData.enteredGuestRoom.roomId));\n                return;\n            case 'toggle_pick':\n                setIsRoomPicked(value => !value);\n                SendMessageComposer(new RoomStaffPickComposer(navigatorData.enteredGuestRoom.roomId));\n                return;\n            case 'toggle_mute':\n                setIsRoomMuted(value => !value);\n                SendMessageComposer(new RoomMuteComposer());\n                return;\n            case 'open_floorplan_editor':\n                CreateLinkEvent('floor-editor/toggle');\n                return;\n            case 'close':\n                onCloseClick();\n                return;\n        }\n        \n    }\n\n    useEffect(() =>\n    {\n        if(!navigatorData) return;\n\n        setIsRoomPicked(navigatorData.currentRoomIsStaffPick);\n        \n        if(navigatorData.enteredGuestRoom) setIsRoomMuted(navigatorData.enteredGuestRoom.allInRoomMuted);\n    }, [ navigatorData ]);\n\n    if(!navigatorData.enteredGuestRoom) return null;\n    \n    return (\n        <NitroCardView className=\"nitro-room-info\" theme=\"primary\">\n            <NitroCardHeaderView headerText={ LocalizeText('navigator.roomsettings.roominfo') } onCloseClick={ () => processAction('close') } />\n            <NitroCardContentView className=\"text-black\">\n                { navigatorData.enteredGuestRoom &&\n                    <>\n                        <Flex gap={ 2 } overflow=\"hidden\">\n                            <Column grow gap={ 1 } overflow=\"hidden\">\n                                <Flex gap={ 1 }>\n                                    <Column grow gap={ 1 }>\n                                        <Flex gap={ 1 }>\n                                            <Text small bold>{ navigatorData.enteredGuestRoom.roomName }</Text>\n                                        </Flex>\n                                        { navigatorData.enteredGuestRoom.showOwner &&\n                                            <Flex alignItems=\"center\" gap={ 1 }>\n                                                <Text small variant=\"muted\">{ LocalizeText('navigator.roomownercaption') }</Text>\n                                                <Flex alignItems=\"center\" gap={ 1 }>\n                                                    <UserProfileIconView userId={ navigatorData.enteredGuestRoom.ownerId } />\n                                                    <Text small>{ navigatorData.enteredGuestRoom.ownerName }</Text>\n                                                </Flex>\n                                            </Flex> }\n                                        <Flex alignItems=\"center\" gap={ 1 }>\n                                            <Text small variant=\"muted\">{ LocalizeText('navigator.roomrating') }</Text>\n                                            <Text small>{ navigatorData.currentRoomRating }</Text>\n                                        </Flex>\n                                        { (navigatorData.enteredGuestRoom.tags.length > 0) &&\n                                            <Flex alignItems=\"center\" gap={ 1 }>\n                                                { navigatorData.enteredGuestRoom.tags.map(tag =>\n                                                {\n                                                    return <Text key={ tag } pointer className=\"bg-muted rounded p-1\" onClick={ event => processAction('navigator_search_tag', tag) }>#{ tag }</Text>\n                                                }) }\n                                            </Flex> }\n                                    </Column>\n                                    <Column alignItems=\"center\" gap={ 1 }>\n                                        <i onClick={ () => processAction('set_home_room') } className={ 'flex-shrink-0 icon icon-house-small cursor-pointer' + classNames({ ' gray': navigatorData.homeRoomId !== navigatorData.enteredGuestRoom.roomId }) } />\n                                    </Column>\n                                </Flex>\n                                <Text small overflow=\"auto\" style={ { maxHeight: 50 } }>{ navigatorData.enteredGuestRoom.description }</Text>\n                                <Flex justifyContent=\"center\">\n                                    <LayoutRoomThumbnailView roomId={ navigatorData.enteredGuestRoom.roomId } customUrl={ navigatorData.enteredGuestRoom.officialRoomPicRef }>\n                                        { hasPermission('settings') && <i className=\"icon icon-camera-small position-absolute b-0 r-0 m-1 cursor-pointer top-0\" onClick={ () => processAction('open_room_thumbnail_camera') } /> }\n                                    </LayoutRoomThumbnailView>\n                                </Flex>\n                                { (navigatorData.enteredGuestRoom.habboGroupId > 0) &&\n                                    <Flex pointer alignItems=\"center\" gap={ 2 } onClick={ () => processAction('open_group_info') }>\n                                        <LayoutBadgeImageView className=\"flex-none\" badgeCode={ navigatorData.enteredGuestRoom.groupBadgeCode } isGroup={ true } />\n                                        <Text small underline>\n                                            { LocalizeText('navigator.guildbase', [ 'groupName' ], [ navigatorData.enteredGuestRoom.groupName ]) }\n                                        </Text>\n                                    </Flex>\n                                }\n                                <Flex gap={ 1 } className=\"w-100 room-tool-item\" onClick={ () => processAction('toggle_room_link') }>\n                                    <Base pointer title={ LocalizeText('room.like.button.text') } className=\"icon-width icon icon-link-room float-start\" />\n                                    <Text underline small >{ LocalizeText('navigator.embed.caption') }</Text>\n                                </Flex>\n                            </Column>\n                        </Flex>\n                        <Column gap={ 1 }>\n                            { hasPermission('staff_pick') &&\n                            <Button onClick={ () => processAction('toggle_pick') }>\n                                { LocalizeText(isRoomPicked ? 'navigator.staffpicks.unpick' : 'navigator.staffpicks.pick') }\n                            </Button> }\n                            <Button variant=\"danger\" disabled>\n                                { LocalizeText('help.emergency.main.report.room') }\n                            </Button>\n                            { hasPermission('settings') &&\n                            <>\n                                <Button onClick={ () => processAction('open_room_settings') }>\n                                    { LocalizeText('navigator.room.popup.info.room.settings') }\n                                </Button>\n                                <Button onClick={ () => processAction('toggle_mute') }>\n                                    { LocalizeText(isRoomMuted ? 'navigator.muteall_on' : 'navigator.muteall_off') }\n                                </Button>\n                                <Button onClick={ () => processAction('open_floorplan_editor') }>\n                                    { LocalizeText('open.floor.plan.editor') }\n                                </Button>\n                            </> }\n                        </Column>\n                    </> }\n                \n            </NitroCardContentView>\n        </NitroCardView>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}