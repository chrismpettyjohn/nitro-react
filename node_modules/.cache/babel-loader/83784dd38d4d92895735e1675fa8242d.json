{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/navigator/views/NavigatorDoorStateView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { CreateRoomSession, DoorStateType, GoToDesktop, LocalizeText } from '../../../api';\nimport { Button, Column, Flex, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../../common';\nimport { useNavigatorContext } from '../NavigatorContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VISIBLE_STATES = [DoorStateType.START_DOORBELL, DoorStateType.STATE_WAITING, DoorStateType.STATE_NO_ANSWER, DoorStateType.START_PASSWORD, DoorStateType.STATE_WRONG_PASSWORD];\nconst DOORBELL_STATES = [DoorStateType.START_DOORBELL, DoorStateType.STATE_WAITING, DoorStateType.STATE_NO_ANSWER];\nconst PASSWORD_STATES = [DoorStateType.START_PASSWORD, DoorStateType.STATE_WRONG_PASSWORD];\nexport const NavigatorDoorStateView = props => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const {\n    doorData = null,\n    setDoorData = null\n  } = useNavigatorContext();\n\n  const close = () => {\n    if (doorData && doorData.state === DoorStateType.STATE_WAITING) GoToDesktop();\n    setDoorData(null);\n  };\n\n  const ring = () => {\n    if (!doorData || !doorData.roomInfo) return;\n    CreateRoomSession(doorData.roomInfo.roomId);\n    setDoorData(prevValue => {\n      const newValue = { ...prevValue\n      };\n      newValue.state = DoorStateType.STATE_PENDING_SERVER;\n      return newValue;\n    });\n  };\n\n  const tryEntering = () => {\n    if (!doorData || !doorData.roomInfo) return;\n    CreateRoomSession(doorData.roomInfo.roomId, password);\n    setDoorData(prevValue => {\n      const newValue = { ...prevValue\n      };\n      newValue.state = DoorStateType.STATE_PENDING_SERVER;\n      return newValue;\n    });\n  };\n\n  useEffect(() => {\n    if (!doorData || doorData.state !== DoorStateType.STATE_NO_ANSWER) return;\n    GoToDesktop();\n  }, [doorData]);\n  if (!doorData || doorData.state === DoorStateType.NONE || VISIBLE_STATES.indexOf(doorData.state) === -1) return null;\n  const isDoorbell = DOORBELL_STATES.indexOf(doorData.state) >= 0;\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    className: \"nitro-navigator-doorbell\",\n    theme: \"primary\",\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: LocalizeText(isDoorbell ? 'navigator.doorbell.title' : 'navigator.password.title'),\n      onCloseClick: close\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      className: \"px-3 pb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          bold: true,\n          children: doorData && doorData.roomInfo && doorData.roomInfo.roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), doorData.state === DoorStateType.START_DOORBELL && /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: LocalizeText('navigator.doorbell.info')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), doorData.state === DoorStateType.STATE_WAITING && /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: LocalizeText('navigator.doorbell.waiting')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), doorData.state === DoorStateType.STATE_NO_ANSWER && /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: LocalizeText('navigator.doorbell.no.answer')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), doorData.state === DoorStateType.START_PASSWORD && /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: LocalizeText('navigator.password.info')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), doorData.state === DoorStateType.STATE_WRONG_PASSWORD && /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: LocalizeText('navigator.password.retryinfo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), isDoorbell && /*#__PURE__*/_jsxDEV(Flex, {\n        fullWidth: true,\n        gap: 1,\n        className: \"align-items-end mt-auto pt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          className: \"cursor-pointer\",\n          underline: true,\n          onClick: close,\n          children: LocalizeText('generic.cancel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), doorData.state === DoorStateType.START_DOORBELL && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"ms-auto\",\n          onClick: ring,\n          children: LocalizeText('navigator.doorbell.button.ring')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), !isDoorbell && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          className: \"pt-3 align-items-center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            fullWidth: true,\n            children: LocalizeText('navigator.password.enter')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control form-control-sm\",\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          fullWidth: true,\n          gap: 1,\n          className: \"align-items-end mt-auto pt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            className: \"cursor-pointer\",\n            underline: true,\n            onClick: close,\n            children: LocalizeText('generic.cancel')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"ms-auto\",\n            onClick: tryEntering,\n            children: LocalizeText('navigator.password.button.try')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavigatorDoorStateView, \"x8Rq8NEAnNFruCCNShv8UN9V8/8=\", false, function () {\n  return [useNavigatorContext];\n});\n\n_c = NavigatorDoorStateView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigatorDoorStateView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/navigator/views/NavigatorDoorStateView.tsx"],"names":["useEffect","useState","CreateRoomSession","DoorStateType","GoToDesktop","LocalizeText","Button","Column","Flex","NitroCardContentView","NitroCardHeaderView","NitroCardView","Text","useNavigatorContext","VISIBLE_STATES","START_DOORBELL","STATE_WAITING","STATE_NO_ANSWER","START_PASSWORD","STATE_WRONG_PASSWORD","DOORBELL_STATES","PASSWORD_STATES","NavigatorDoorStateView","props","password","setPassword","doorData","setDoorData","close","state","ring","roomInfo","roomId","prevValue","newValue","STATE_PENDING_SERVER","tryEntering","NONE","indexOf","isDoorbell","roomName","event","target","value"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { CreateRoomSession, DoorStateType, GoToDesktop, LocalizeText } from '../../../api';\nimport { Button, Column, Flex, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../../common';\nimport { useNavigatorContext } from '../NavigatorContext';\n\nconst VISIBLE_STATES = [ DoorStateType.START_DOORBELL, DoorStateType.STATE_WAITING, DoorStateType.STATE_NO_ANSWER, DoorStateType.START_PASSWORD, DoorStateType.STATE_WRONG_PASSWORD ];\nconst DOORBELL_STATES = [ DoorStateType.START_DOORBELL, DoorStateType.STATE_WAITING, DoorStateType.STATE_NO_ANSWER ];\nconst PASSWORD_STATES = [ DoorStateType.START_PASSWORD, DoorStateType.STATE_WRONG_PASSWORD ];\n\nexport const NavigatorDoorStateView: FC<{}> = props =>\n{\n    const [ password, setPassword ] = useState('');\n    const { doorData = null, setDoorData = null } = useNavigatorContext();\n\n    const close = () =>\n    {\n        if(doorData && (doorData.state === DoorStateType.STATE_WAITING)) GoToDesktop();\n\n        setDoorData(null);\n    }\n\n    const ring = () =>\n    {\n        if(!doorData || !doorData.roomInfo) return;\n\n        CreateRoomSession(doorData.roomInfo.roomId);\n        \n        setDoorData(prevValue =>\n        {\n            const newValue = { ...prevValue };\n\n            newValue.state = DoorStateType.STATE_PENDING_SERVER;\n\n            return newValue;\n        });\n    }\n\n    const tryEntering = () =>\n    {\n        if(!doorData || !doorData.roomInfo) return;\n\n        CreateRoomSession(doorData.roomInfo.roomId, password);\n\n        setDoorData(prevValue =>\n        {\n            const newValue = { ...prevValue };\n\n            newValue.state = DoorStateType.STATE_PENDING_SERVER;\n\n            return newValue;\n        });\n    }\n\n    useEffect(() =>\n    {\n        if(!doorData || (doorData.state !== DoorStateType.STATE_NO_ANSWER)) return;\n\n        GoToDesktop();\n    }, [ doorData ]);\n\n    if(!doorData || (doorData.state === DoorStateType.NONE) || (VISIBLE_STATES.indexOf(doorData.state) === -1)) return null;\n\n    const isDoorbell = (DOORBELL_STATES.indexOf(doorData.state) >= 0);\n\n    return (\n        <NitroCardView className=\"nitro-navigator-doorbell\" theme=\"primary\">\n            <NitroCardHeaderView headerText={ LocalizeText(isDoorbell ? 'navigator.doorbell.title' : 'navigator.password.title') } onCloseClick={ close } />\n            <NitroCardContentView className=\"px-3 pb-4\">\n                <Column gap={ 1 }>\n                    <Text small bold>{ doorData && doorData.roomInfo && doorData.roomInfo.roomName }</Text>\n                    { (doorData.state === DoorStateType.START_DOORBELL) &&\n                        <Text small>{ LocalizeText('navigator.doorbell.info') }</Text> }\n                    { (doorData.state === DoorStateType.STATE_WAITING) &&\n                        <Text small>{ LocalizeText('navigator.doorbell.waiting') }</Text> }\n                    { (doorData.state === DoorStateType.STATE_NO_ANSWER) &&\n                        <Text small>{ LocalizeText('navigator.doorbell.no.answer') }</Text> }\n                    { (doorData.state === DoorStateType.START_PASSWORD) &&\n                        <Text small>{ LocalizeText('navigator.password.info') }</Text> }\n                    { (doorData.state === DoorStateType.STATE_WRONG_PASSWORD) &&\n                        <Text small>{ LocalizeText('navigator.password.retryinfo') }</Text> }\n                </Column>\n                { isDoorbell &&\n                    <Flex fullWidth gap={ 1 } className=\"align-items-end mt-auto pt-3\">\n                        <Text small className=\"cursor-pointer\" underline onClick={ close }>\n                            { LocalizeText('generic.cancel') }\n                        </Text>\n                        { (doorData.state === DoorStateType.START_DOORBELL) &&\n                            <Button className=\"ms-auto\" onClick={ ring }>\n                                { LocalizeText('navigator.doorbell.button.ring') }\n                            </Button> }\n                    </Flex> }\n                { !isDoorbell &&\n                    <>\n                        <Flex className=\"pt-3 align-items-center\" gap={ 1 }>\n                            <Text small fullWidth>{ LocalizeText('navigator.password.enter') }</Text>\n                            <input type=\"password\" className=\"form-control form-control-sm\" onChange={ event => setPassword(event.target.value) } />\n                        </Flex>\n                        <Flex fullWidth gap={ 1 } className=\"align-items-end mt-auto pt-3\">\n                            <Text small className=\"cursor-pointer\" underline onClick={ close }>\n                                { LocalizeText('generic.cancel') }\n                            </Text>\n                            <Button className=\"ms-auto\" onClick={ tryEntering }>\n                                { LocalizeText('navigator.password.button.try') }\n                            </Button>\n                        </Flex>\n                    </> }\n            </NitroCardContentView>\n        </NitroCardView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}