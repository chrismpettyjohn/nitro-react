{"ast":null,"code":"import { CallForHelpTopicData } from './CallForHelpTopicData';\nexport class CallForHelpCategoryData {\n  constructor(wrapper) {\n    this._name = void 0;\n    this._topics = void 0;\n    this._disposed = void 0;\n    this._topics = [];\n    this._name = wrapper.readString();\n    let count = wrapper.readInt();\n\n    while (count > 0) {\n      this._topics.push(new CallForHelpTopicData(wrapper));\n\n      count--;\n    }\n  }\n\n  dispose() {\n    if (this._disposed) return;\n    this._disposed = true;\n    this._topics = null;\n  }\n\n  get disposed() {\n    return this._disposed;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get topics() {\n    return this._topics;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/incoming/callforhelp/CallForHelpCategoryData.ts"],"names":["CallForHelpTopicData","CallForHelpCategoryData","constructor","wrapper","_name","_topics","_disposed","readString","count","readInt","push","dispose","disposed","name","topics"],"mappings":"AAEA,SAASA,oBAAT,QAAqC,wBAArC;AAEA,OAAO,MAAMC,uBAAN,CACP;AAKIC,EAAAA,WAAW,CAACC,OAAD,EACX;AAAA,SALQC,KAKR;AAAA,SAJQC,OAIR;AAAA,SAHQC,SAGR;AACI,SAAKD,OAAL,GAAe,EAAf;AACA,SAAKD,KAAL,GAAaD,OAAO,CAACI,UAAR,EAAb;AAEA,QAAIC,KAAK,GAAGL,OAAO,CAACM,OAAR,EAAZ;;AAEA,WAAMD,KAAK,GAAG,CAAd,EACA;AACI,WAAKH,OAAL,CAAaK,IAAb,CAAkB,IAAIV,oBAAJ,CAAyBG,OAAzB,CAAlB;;AAEAK,MAAAA,KAAK;AACR;AACJ;;AAEMG,EAAAA,OAAO,GACd;AACI,QAAG,KAAKL,SAAR,EAAmB;AAEnB,SAAKA,SAAL,GAAiB,IAAjB;AACA,SAAKD,OAAL,GAAe,IAAf;AACH;;AAEkB,MAARO,QAAQ,GACnB;AACI,WAAO,KAAKN,SAAZ;AACH;;AAEc,MAAJO,IAAI,GACf;AACI,WAAO,KAAKT,KAAZ;AACH;;AAEgB,MAANU,MAAM,GACjB;AACI,WAAO,KAAKT,OAAZ;AACH;;AAzCL","sourcesContent":["import { IDisposable, IMessageDataWrapper } from '../../../../../core';\r\nimport { INamed } from '../moderation';\r\nimport { CallForHelpTopicData } from './CallForHelpTopicData';\r\n\r\nexport class CallForHelpCategoryData implements INamed, IDisposable\r\n{\r\n    private _name: string;\r\n    private _topics: CallForHelpTopicData[];\r\n    private _disposed: boolean;\r\n\r\n    constructor(wrapper: IMessageDataWrapper)\r\n    {\r\n        this._topics = [];\r\n        this._name = wrapper.readString();\r\n\r\n        let count = wrapper.readInt();\r\n\r\n        while(count > 0)\r\n        {\r\n            this._topics.push(new CallForHelpTopicData(wrapper));\r\n\r\n            count--;\r\n        }\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        if(this._disposed) return;\r\n\r\n        this._disposed = true;\r\n        this._topics = null;\r\n    }\r\n\r\n    public get disposed(): boolean\r\n    {\r\n        return this._disposed;\r\n    }\r\n\r\n    public get name(): string\r\n    {\r\n        return this._name;\r\n    }\r\n\r\n    public get topics(): CallForHelpTopicData[]\r\n    {\r\n        return this._topics;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}