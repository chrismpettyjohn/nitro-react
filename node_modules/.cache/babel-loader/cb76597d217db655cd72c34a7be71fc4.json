{"ast":null,"code":"export class TradingOpenParser {\n  constructor() {\n    this._userId = void 0;\n    this._userCanTrade = void 0;\n    this._otherUserId = void 0;\n    this._otherUserCanTrade = void 0;\n  }\n\n  flush() {\n    this._userId = -1;\n    this._userCanTrade = false;\n    this._otherUserId = -1;\n    this._otherUserCanTrade = false;\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._userId = wrapper.readInt();\n    this._userCanTrade = wrapper.readInt() === 1;\n    this._otherUserId = wrapper.readInt();\n    this._otherUserCanTrade = wrapper.readInt() === 1;\n    return true;\n  }\n\n  get userID() {\n    return this._userId;\n  }\n\n  get userCanTrade() {\n    return this._userCanTrade;\n  }\n\n  get otherUserID() {\n    return this._otherUserId;\n  }\n\n  get otherUserCanTrade() {\n    return this._otherUserCanTrade;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/inventory/trading/TradingOpenParser.ts"],"names":["TradingOpenParser","_userId","_userCanTrade","_otherUserId","_otherUserCanTrade","flush","parse","wrapper","readInt","userID","userCanTrade","otherUserID","otherUserCanTrade"],"mappings":"AAEA,OAAO,MAAMA,iBAAN,CACP;AAAA;AAAA,SACYC,OADZ;AAAA,SAEYC,aAFZ;AAAA,SAGYC,YAHZ;AAAA,SAIYC,kBAJZ;AAAA;;AAMWC,EAAAA,KAAK,GACZ;AACI,SAAKJ,OAAL,GAAe,CAAC,CAAhB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,YAAL,GAAoB,CAAC,CAArB;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKN,OAAL,GAAeM,OAAO,CAACC,OAAR,EAAf;AACA,SAAKN,aAAL,GAAsBK,OAAO,CAACC,OAAR,OAAsB,CAA5C;AACA,SAAKL,YAAL,GAAoBI,OAAO,CAACC,OAAR,EAApB;AACA,SAAKJ,kBAAL,GAA2BG,OAAO,CAACC,OAAR,OAAsB,CAAjD;AAEA,WAAO,IAAP;AACH;;AAEgB,MAANC,MAAM,GACjB;AACI,WAAO,KAAKR,OAAZ;AACH;;AAEsB,MAAZS,YAAY,GACvB;AACI,WAAO,KAAKR,aAAZ;AACH;;AAEqB,MAAXS,WAAW,GACtB;AACI,WAAO,KAAKR,YAAZ;AACH;;AAE2B,MAAjBS,iBAAiB,GAC5B;AACI,WAAO,KAAKR,kBAAZ;AACH;;AA9CL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\n\r\nexport class TradingOpenParser implements IMessageParser\r\n{\r\n    private _userId: number;\r\n    private _userCanTrade: boolean;\r\n    private _otherUserId: number;\r\n    private _otherUserCanTrade: boolean;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._userId = -1;\r\n        this._userCanTrade = false;\r\n        this._otherUserId = -1;\r\n        this._otherUserCanTrade = false;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._userId = wrapper.readInt();\r\n        this._userCanTrade = (wrapper.readInt() === 1);\r\n        this._otherUserId = wrapper.readInt();\r\n        this._otherUserCanTrade = (wrapper.readInt() === 1);\r\n\r\n        return true;\r\n    }\r\n\r\n    public get userID(): number\r\n    {\r\n        return this._userId;\r\n    }\r\n\r\n    public get userCanTrade(): boolean\r\n    {\r\n        return this._userCanTrade;\r\n    }\r\n\r\n    public get otherUserID(): number\r\n    {\r\n        return this._otherUserId;\r\n    }\r\n\r\n    public get otherUserCanTrade(): boolean\r\n    {\r\n        return this._otherUserCanTrade;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}