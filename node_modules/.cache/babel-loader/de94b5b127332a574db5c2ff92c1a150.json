{"ast":null,"code":"export class NitroLogger {\n  constructor(name) {\n    let description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    this._name = void 0;\n    this._description = void 0;\n    this._print = void 0;\n    this._name = name;\n    this._description = description;\n    this._print = true;\n  }\n\n  log(message) {\n    this.printMessage(message, 'log');\n  }\n\n  error(message, trace) {\n    this.printMessage(trace || message, 'error');\n  }\n\n  warn(message) {\n    this.printMessage(message, 'warn');\n  }\n\n  printMessage(message, modus) {\n    if (!this._print) return;\n    NitroLogger.log(message, this._name, modus);\n  }\n\n  static log(message) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Nitro';\n    let modus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const logString = `[Nitro] [${name}] ${message} ${this.getTimestamp()}`;\n\n    switch (modus) {\n      case 'error':\n        console.error(logString);\n        break;\n\n      case 'warn':\n        console.warn(logString);\n        break;\n\n      case 'log':\n      default:\n        console.log(logString);\n        break;\n    }\n  }\n\n  static getTimestamp() {\n    const now = Date.now();\n    const result = ` +${now - NitroLogger.LAST_TIMESTAMP || 0}ms`;\n    this.LAST_TIMESTAMP = now;\n    return result;\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  set description(description) {\n    this._description = description;\n  }\n\n  get print() {\n    return this._print;\n  }\n\n  set print(flag) {\n    this._print = flag;\n  }\n\n}\nNitroLogger.LAST_TIMESTAMP = Date.now();","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/core/common/logger/NitroLogger.ts"],"names":["NitroLogger","constructor","name","description","_name","_description","_print","log","message","printMessage","error","trace","warn","modus","logString","getTimestamp","console","now","Date","result","LAST_TIMESTAMP","print","flag"],"mappings":"AAEA,OAAO,MAAMA,WAAN,CACP;AAOIC,EAAAA,WAAW,CAACC,IAAD,EACX;AAAA,QAD0BC,WAC1B,uEADyD,IACzD;AAAA,SALQC,KAKR;AAAA,SAJQC,YAIR;AAAA,SAHQC,MAGR;AACI,SAAKF,KAAL,GAAaF,IAAb;AACA,SAAKG,YAAL,GAAoBF,WAApB;AACA,SAAKG,MAAL,GAAc,IAAd;AACH;;AAEMC,EAAAA,GAAG,CAACC,OAAD,EACV;AACI,SAAKC,YAAL,CAAkBD,OAAlB,EAA2B,KAA3B;AACH;;AAEME,EAAAA,KAAK,CAACF,OAAD,EAAkBG,KAAlB,EACZ;AACI,SAAKF,YAAL,CAAkBE,KAAK,IAAIH,OAA3B,EAAoC,OAApC;AACH;;AAEMI,EAAAA,IAAI,CAACJ,OAAD,EACX;AACI,SAAKC,YAAL,CAAkBD,OAAlB,EAA2B,MAA3B;AACH;;AAEMC,EAAAA,YAAY,CAACD,OAAD,EAAkBK,KAAlB,EACnB;AACI,QAAG,CAAC,KAAKP,MAAT,EAAiB;AAEjBN,IAAAA,WAAW,CAACO,GAAZ,CAAgBC,OAAhB,EAAyB,KAAKJ,KAA9B,EAAqCS,KAArC;AACH;;AAEgB,SAAHN,GAAG,CAACC,OAAD,EACjB;AAAA,QADmCN,IACnC,uEADkD,OAClD;AAAA,QAD2DW,KAC3D,uEAD2E,IAC3E;AACI,UAAMC,SAAS,GAAI,YAAYZ,IAAM,KAAKM,OAAS,IAAI,KAAKO,YAAL,EAAqB,EAA5E;;AAEA,YAAOF,KAAP;AAEI,WAAK,OAAL;AACIG,QAAAA,OAAO,CAACN,KAAR,CAAcI,SAAd;AACA;;AACJ,WAAK,MAAL;AACIE,QAAAA,OAAO,CAACJ,IAAR,CAAaE,SAAb;AACA;;AACJ,WAAK,KAAL;AACA;AACIE,QAAAA,OAAO,CAACT,GAAR,CAAYO,SAAZ;AACA;AAXR;AAaH;;AAEyB,SAAZC,YAAY,GAC1B;AACI,UAAME,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AAEA,UAAME,MAAM,GAAI,KAAKF,GAAG,GAAGjB,WAAW,CAACoB,cAAlB,IAAoC,CAAG,IAA5D;AAEA,SAAKA,cAAL,GAAsBH,GAAtB;AAEA,WAAOE,MAAP;AACH;;AAEqB,MAAXhB,WAAW,GACtB;AACI,WAAO,KAAKE,YAAZ;AACH;;AAEqB,MAAXF,WAAW,CAACA,WAAD,EACtB;AACI,SAAKE,YAAL,GAAoBF,WAApB;AACH;;AAEe,MAALkB,KAAK,GAChB;AACI,WAAO,KAAKf,MAAZ;AACH;;AAEe,MAALe,KAAK,CAACC,IAAD,EAChB;AACI,SAAKhB,MAAL,GAAcgB,IAAd;AACH;;AApFL;AADatB,W,CAEMoB,c,GAAyBF,IAAI,CAACD,GAAL,E","sourcesContent":["import { INitroLogger } from './INitroLogger';\r\n\r\nexport class NitroLogger implements INitroLogger\r\n{\r\n    private static LAST_TIMESTAMP: number = Date.now();\r\n\r\n    private _name: string;\r\n    private _description: string | number;\r\n    private _print: boolean;\r\n\r\n    constructor(name: string, description: string | number = null)\r\n    {\r\n        this._name = name;\r\n        this._description = description;\r\n        this._print = true;\r\n    }\r\n\r\n    public log(message: string): void\r\n    {\r\n        this.printMessage(message, 'log');\r\n    }\r\n\r\n    public error(message: string, trace?: string): void\r\n    {\r\n        this.printMessage(trace || message, 'error');\r\n    }\r\n\r\n    public warn(message: string): void\r\n    {\r\n        this.printMessage(message, 'warn');\r\n    }\r\n\r\n    public printMessage(message: string, modus: string): void\r\n    {\r\n        if(!this._print) return;\r\n\r\n        NitroLogger.log(message, this._name, modus);\r\n    }\r\n\r\n    public static log(message: string, name: string = 'Nitro', modus: string = null): void\r\n    {\r\n        const logString = `[Nitro] [${ name }] ${ message } ${ this.getTimestamp() }`;\r\n\r\n        switch(modus)\r\n        {\r\n            case 'error':\r\n                console.error(logString);\r\n                break;\r\n            case 'warn':\r\n                console.warn(logString);\r\n                break;\r\n            case 'log':\r\n            default:\r\n                console.log(logString);\r\n                break;\r\n        }\r\n    }\r\n\r\n    public static getTimestamp(): string\r\n    {\r\n        const now = Date.now();\r\n\r\n        const result = ` +${ now - NitroLogger.LAST_TIMESTAMP || 0 }ms`;\r\n\r\n        this.LAST_TIMESTAMP = now;\r\n\r\n        return result;\r\n    }\r\n\r\n    public get description(): string | number\r\n    {\r\n        return this._description;\r\n    }\r\n\r\n    public set description(description: string | number)\r\n    {\r\n        this._description = description;\r\n    }\r\n\r\n    public get print(): boolean\r\n    {\r\n        return this._print;\r\n    }\r\n\r\n    public set print(flag: boolean)\r\n    {\r\n        this._print = flag;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}