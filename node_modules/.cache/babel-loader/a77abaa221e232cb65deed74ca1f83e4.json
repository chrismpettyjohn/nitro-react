{"ast":null,"code":"export class GuideTicketResolutionMessageParser {\n  constructor() {\n    this._resolution = void 0;\n  }\n\n  flush() {\n    this._resolution = 0;\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._resolution = wrapper.readInt();\n    return true;\n  }\n\n  get resolution() {\n    return this._resolution;\n  }\n\n}\nGuideTicketResolutionMessageParser.RESOLUTION_GUARDIANS_TOOK_ACTION = 0;\nGuideTicketResolutionMessageParser.RESOLUTION_FORWARDED_TO_MODERATORS = 1;\nGuideTicketResolutionMessageParser.RESOLUTION_REPORTER_IS_ABUSIVE = 2;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/help/GuideTicketResolutionMessageParser.ts"],"names":["GuideTicketResolutionMessageParser","_resolution","flush","parse","wrapper","readInt","resolution","RESOLUTION_GUARDIANS_TOOK_ACTION","RESOLUTION_FORWARDED_TO_MODERATORS","RESOLUTION_REPORTER_IS_ABUSIVE"],"mappings":"AAEA,OAAO,MAAMA,kCAAN,CACP;AAAA;AAAA,SAKYC,WALZ;AAAA;;AAOWC,EAAAA,KAAK,GACZ;AACI,SAAKD,WAAL,GAAmB,CAAnB;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKH,WAAL,GAAmBG,OAAO,CAACC,OAAR,EAAnB;AAEA,WAAO,IAAP;AACH;;AAEoB,MAAVC,UAAU,GACrB;AACI,WAAO,KAAKL,WAAZ;AACH;;AA1BL;AADaD,kC,CAEcO,gC,GAA2C,C;AAFzDP,kC,CAGcQ,kC,GAA6C,C;AAH3DR,kC,CAIcS,8B,GAAyC,C","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\n\r\nexport class GuideTicketResolutionMessageParser implements IMessageParser\r\n{\r\n    public static readonly RESOLUTION_GUARDIANS_TOOK_ACTION: number = 0;\r\n    public static readonly RESOLUTION_FORWARDED_TO_MODERATORS: number = 1;\r\n    public static readonly RESOLUTION_REPORTER_IS_ABUSIVE: number = 2;\r\n\r\n    private _resolution: number;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._resolution = 0;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._resolution = wrapper.readInt();\r\n\r\n        return true;\r\n    }\r\n\r\n    public get resolution(): number\r\n    {\r\n        return this._resolution;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}