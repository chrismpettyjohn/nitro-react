{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/Button.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Flex } from './Flex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = props => {\n  _s();\n\n  const {\n    variant = 'primary',\n    size = '',\n    active = false,\n    disabled = false,\n    classNames = [],\n    ...rest\n  } = props;\n  const getClassNames = useMemo(() => {\n    const newClassNames = ['btn'];\n    if (variant) newClassNames.push('btn-' + variant);\n    if (size) newClassNames.push('btn-' + size);\n    if (active) newClassNames.push('active');\n    if (disabled) newClassNames.push('disabled');\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [variant, size, active, disabled, classNames]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    center: true,\n    classNames: getClassNames,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Button, \"dyksOB5DadzwRcuUMLdvWwPn8K8=\");\n\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/Button.tsx"],"names":["useMemo","Flex","Button","props","variant","size","active","disabled","classNames","rest","getClassNames","newClassNames","push","length"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AACA,SAASC,IAAT,QAAgC,QAAhC;;AAWA,OAAO,MAAMC,MAAuB,GAAGC,KAAK,IAC5C;AAAA;;AACI,QAAM;AAAEC,IAAAA,OAAO,GAAG,SAAZ;AAAuBC,IAAAA,IAAI,GAAG,EAA9B;AAAkCC,IAAAA,MAAM,GAAG,KAA3C;AAAkDC,IAAAA,QAAQ,GAAG,KAA7D;AAAoEC,IAAAA,UAAU,GAAG,EAAjF;AAAqF,OAAGC;AAAxF,MAAiGN,KAAvG;AAEA,QAAMO,aAAa,GAAGV,OAAO,CAAC,MAC9B;AACI,UAAMW,aAAuB,GAAG,CAAE,KAAF,CAAhC;AAEA,QAAGP,OAAH,EAAYO,aAAa,CAACC,IAAd,CAAmB,SAASR,OAA5B;AAEZ,QAAGC,IAAH,EAASM,aAAa,CAACC,IAAd,CAAmB,SAASP,IAA5B;AAET,QAAGC,MAAH,EAAWK,aAAa,CAACC,IAAd,CAAmB,QAAnB;AAEX,QAAGL,QAAH,EAAaI,aAAa,CAACC,IAAd,CAAmB,UAAnB;AAEb,QAAGJ,UAAU,CAACK,MAAd,EAAsBF,aAAa,CAACC,IAAd,CAAmB,GAAGJ,UAAtB;AAEtB,WAAOG,aAAP;AACH,GAf4B,EAe1B,CAAEP,OAAF,EAAWC,IAAX,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,UAAnC,CAf0B,CAA7B;AAiBA,sBAAO,QAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,UAAU,EAAGE,aAA1B;AAAA,OAA+CD;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAtBM;;GAAMP,M;;KAAAA,M","sourcesContent":["import { FC, useMemo } from 'react';\nimport { Flex, FlexProps } from './Flex';\nimport { ButtonSizeType, ColorVariantType } from './types';\n\nexport interface ButtonProps extends FlexProps\n{\n    variant?: ColorVariantType;\n    size?: ButtonSizeType;\n    active?: boolean;\n    disabled?: boolean;\n}\n\nexport const Button: FC<ButtonProps> = props =>\n{\n    const { variant = 'primary', size = '', active = false, disabled = false, classNames = [], ...rest } = props;\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [ 'btn' ];\n\n        if(variant) newClassNames.push('btn-' + variant);\n\n        if(size) newClassNames.push('btn-' + size);\n\n        if(active) newClassNames.push('active');\n\n        if(disabled) newClassNames.push('disabled');\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ variant, size, active, disabled, classNames ]);\n\n    return <Flex center classNames={ getClassNames } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}