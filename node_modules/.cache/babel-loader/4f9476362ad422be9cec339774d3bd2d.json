{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { NitroLogger } from '@nitrots/nitro-renderer';\nimport { useState } from 'react';\n\nconst useLocalStorageState = (key, initialValue) => {\n  _s();\n\n  const [storedValue, setStoredValuie] = useState(() => {\n    if (typeof window === 'undefined') return initialValue;\n\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValuie(valueToStore);\n      if (typeof window !== 'undefined') window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      NitroLogger.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\n_s(useLocalStorageState, \"oEyW1lEcKNK8eWmBVJZIAylAd6g=\");\n\nexport const useLocalStorage = useLocalStorageState;","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/hooks/useLocalStorage.ts"],"names":["NitroLogger","useState","useLocalStorageState","key","initialValue","storedValue","setStoredValuie","window","item","localStorage","getItem","JSON","parse","error","setValue","value","valueToStore","Function","setItem","stringify","useLocalStorage"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,MAAMC,oBAAoB,GAAG,CAAIC,GAAJ,EAAiBC,YAAjB,KAC7B;AAAA;;AACI,QAAM,CAAEC,WAAF,EAAeC,eAAf,IAAmCL,QAAQ,CAAI,MACrD;AACI,QAAG,OAAOM,MAAP,KAAkB,WAArB,EAAkC,OAAOH,YAAP;;AAElC,QACA;AACI,YAAMI,IAAI,GAAGD,MAAM,CAACE,YAAP,CAAoBC,OAApB,CAA4BP,GAA5B,CAAb;AAEA,aAAOK,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAH,GAAsBJ,YAAjC;AACH,KALD,CAOA,OAAMS,KAAN,EACA;AACI,aAAOT,YAAP;AACH;AACJ,GAfgD,CAAjD;;AAiBA,QAAMU,QAAQ,GAAIC,KAAD,IACjB;AACI,QACA;AACI,YAAMC,YAAY,GAAGD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACV,WAAD,CAAjC,GAAiDU,KAAtE;AAEAT,MAAAA,eAAe,CAACU,YAAD,CAAf;AAEA,UAAG,OAAOT,MAAP,KAAkB,WAArB,EAAkCA,MAAM,CAACE,YAAP,CAAoBS,OAApB,CAA4Bf,GAA5B,EAAiCQ,IAAI,CAACQ,SAAL,CAAeH,YAAf,CAAjC;AACrC,KAPD,CASA,OAAMH,KAAN,EACA;AACIb,MAAAA,WAAW,CAACa,KAAZ,CAAkBA,KAAlB;AACH;AACJ,GAfD;;AAiBA,SAAO,CAAER,WAAF,EAAeS,QAAf,CAAP;AACH,CArCD;;GAAMZ,oB;;AAuCN,OAAO,MAAMkB,eAAe,GAAGlB,oBAAxB","sourcesContent":["import { NitroLogger } from '@nitrots/nitro-renderer';\nimport { Dispatch, SetStateAction, useState } from 'react';\n\nconst useLocalStorageState = <T>(key: string, initialValue: T): [ T, Dispatch<SetStateAction<T>>] =>\n{\n    const [ storedValue, setStoredValuie ] = useState<T>(() =>\n    {\n        if(typeof window === 'undefined') return initialValue;\n\n        try\n        {\n            const item = window.localStorage.getItem(key);\n\n            return item ? JSON.parse(item) : initialValue;\n        }\n\n        catch(error)\n        {\n            return initialValue;\n        }\n    });\n\n    const setValue = (value: T) =>\n    {\n        try\n        {\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n\n            setStoredValuie(valueToStore);\n\n            if(typeof window !== 'undefined') window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        }\n\n        catch(error)\n        {\n            NitroLogger.error(error);\n        }\n    }\n\n    return [ storedValue, setValue ];\n}\n\nexport const useLocalStorage = useLocalStorageState;\n"]},"metadata":{},"sourceType":"module"}