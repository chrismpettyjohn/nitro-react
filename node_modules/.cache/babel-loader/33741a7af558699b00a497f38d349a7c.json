{"ast":null,"code":"import { AdvancedMap } from '../../../../../../core/utils/AdvancedMap';\nimport { RelationshipStatusInfo } from './RelationshipStatusInfo';\nexport class RelationshipStatusInfoMessageParser {\n  constructor() {\n    this._userId = void 0;\n    this._relationshipStatusMap = void 0;\n  }\n\n  flush() {\n    this._userId = 0;\n    this._relationshipStatusMap = null;\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._userId = wrapper.readInt();\n    this._relationshipStatusMap = new AdvancedMap();\n    const relationshipsCount = wrapper.readInt();\n\n    for (let i = 0; i < relationshipsCount; i++) {\n      const relationship = new RelationshipStatusInfo(wrapper);\n\n      this._relationshipStatusMap.add(relationship.relationshipStatusType, relationship);\n    }\n\n    return true;\n  }\n\n  get userId() {\n    return this._userId;\n  }\n\n  get relationshipStatusMap() {\n    return this._relationshipStatusMap;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/user/data/RelationshipStatusInfoMessageParser.ts"],"names":["AdvancedMap","RelationshipStatusInfo","RelationshipStatusInfoMessageParser","_userId","_relationshipStatusMap","flush","parse","wrapper","readInt","relationshipsCount","i","relationship","add","relationshipStatusType","userId","relationshipStatusMap"],"mappings":"AACA,SAASA,WAAT,QAA4B,0CAA5B;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AAEA,OAAO,MAAMC,mCAAN,CACP;AAAA;AAAA,SACYC,OADZ;AAAA,SAEYC,sBAFZ;AAAA;;AAIWC,EAAAA,KAAK,GACZ;AACI,SAAKF,OAAL,GAAe,CAAf;AACA,SAAKC,sBAAL,GAA8B,IAA9B;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKJ,OAAL,GAAeI,OAAO,CAACC,OAAR,EAAf;AACA,SAAKJ,sBAAL,GAA8B,IAAIJ,WAAJ,EAA9B;AAEA,UAAMS,kBAAkB,GAAGF,OAAO,CAACC,OAAR,EAA3B;;AAEA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,kBAAnB,EAAuCC,CAAC,EAAxC,EACA;AACI,YAAMC,YAAY,GAAG,IAAIV,sBAAJ,CAA2BM,OAA3B,CAArB;;AAEA,WAAKH,sBAAL,CAA4BQ,GAA5B,CAAgCD,YAAY,CAACE,sBAA7C,EAAqEF,YAArE;AACH;;AAED,WAAO,IAAP;AACH;;AAEgB,MAANG,MAAM,GACjB;AACI,WAAO,KAAKX,OAAZ;AACH;;AAE+B,MAArBY,qBAAqB,GAChC;AACI,WAAO,KAAKX,sBAAZ;AACH;;AAvCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\nimport { AdvancedMap } from '../../../../../../core/utils/AdvancedMap';\r\nimport { RelationshipStatusInfo } from './RelationshipStatusInfo';\r\n\r\nexport class RelationshipStatusInfoMessageParser implements IMessageParser\r\n{\r\n    private _userId: number;\r\n    private _relationshipStatusMap: AdvancedMap<number, RelationshipStatusInfo>;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._userId = 0;\r\n        this._relationshipStatusMap = null;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._userId = wrapper.readInt();\r\n        this._relationshipStatusMap = new AdvancedMap();\r\n\r\n        const relationshipsCount = wrapper.readInt();\r\n\r\n        for(let i = 0; i < relationshipsCount; i++)\r\n        {\r\n            const relationship = new RelationshipStatusInfo(wrapper);\r\n\r\n            this._relationshipStatusMap.add(relationship.relationshipStatusType, relationship);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get userId(): number\r\n    {\r\n        return this._userId;\r\n    }\r\n\r\n    public get relationshipStatusMap(): AdvancedMap<number, RelationshipStatusInfo>\r\n    {\r\n        return this._relationshipStatusMap;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}