{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/triggers/WiredTriggerAvatarSaysSomethingView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { GetSessionDataManager, LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredTriggerBaseView } from './WiredTriggerBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredTriggerAvatarSaysSomethingView = props => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [triggererAvatar, setTriggererAvatar] = useState(-1);\n  const {\n    trigger = null,\n    setStringParam = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => {\n    setStringParam(message);\n    setIntParams([triggererAvatar]);\n  };\n\n  useEffect(() => {\n    setMessage(trigger.stringData);\n    setTriggererAvatar(trigger.intData.length > 0 ? trigger.intData[0] : 0);\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredTriggerBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.whatissaid')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: message,\n        onChange: event => setMessage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.picktriggerer')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"triggererAvatar\",\n          id: \"triggererAvatar0\",\n          checked: triggererAvatar === 0,\n          onChange: event => setTriggererAvatar(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('wiredfurni.params.anyavatar')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"triggererAvatar\",\n          id: \"triggererAvatar1\",\n          checked: triggererAvatar === 1,\n          onChange: event => setTriggererAvatar(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: GetSessionDataManager().userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredTriggerAvatarSaysSomethingView, \"qDS44ImqK1RN1eniRNNCkIAd86o=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredTriggerAvatarSaysSomethingView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredTriggerAvatarSaysSomethingView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/triggers/WiredTriggerAvatarSaysSomethingView.tsx"],"names":["useEffect","useState","GetSessionDataManager","LocalizeText","WiredFurniType","Column","Flex","Text","useWiredContext","WiredTriggerBaseView","WiredTriggerAvatarSaysSomethingView","props","message","setMessage","triggererAvatar","setTriggererAvatar","trigger","setStringParam","setIntParams","save","stringData","intData","length","STUFF_SELECTION_OPTION_NONE","event","target","value","userName"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { GetSessionDataManager, LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredTriggerBaseView } from './WiredTriggerBaseView';\n\nexport const WiredTriggerAvatarSaysSomethingView: FC<{}> = props =>\n{\n    const [ message, setMessage ] = useState('');\n    const [ triggererAvatar, setTriggererAvatar ] = useState(-1);\n    const { trigger = null, setStringParam = null, setIntParams = null } = useWiredContext();\n\n    const save = () =>\n    {\n        setStringParam(message);\n        setIntParams([ triggererAvatar ]);\n    }\n\n    useEffect(() =>\n    {\n        setMessage(trigger.stringData);\n        setTriggererAvatar((trigger.intData.length > 0) ? trigger.intData[0] : 0);\n    }, [ trigger ]);\n    \n    return (\n        <WiredTriggerBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.whatissaid') }</Text>\n                <input type=\"text\" className=\"form-control form-control-sm\" value={ message } onChange={ event => setMessage(event.target.value) } />\n            </Column>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.picktriggerer') }</Text>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"radio\" name=\"triggererAvatar\" id=\"triggererAvatar0\" checked={ (triggererAvatar === 0) } onChange={ event => setTriggererAvatar(0) } />\n                    <Text>{ LocalizeText('wiredfurni.params.anyavatar') }</Text>\n                </Flex>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"radio\" name=\"triggererAvatar\" id=\"triggererAvatar1\" checked={ (triggererAvatar === 1) } onChange={ event => setTriggererAvatar(1) } />\n                    <Text>{ GetSessionDataManager().userName }</Text>\n                </Flex>\n            </Column>\n        </WiredTriggerBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}