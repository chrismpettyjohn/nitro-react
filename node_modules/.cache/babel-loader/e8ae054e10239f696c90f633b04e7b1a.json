{"ast":null,"code":"import { CallForHelpCategoryData } from '../../incoming/callforhelp/CallForHelpCategoryData';\nexport class CfhTopicsInitMessageParser {\n  constructor() {\n    this._callForHelpCategories = void 0;\n  }\n\n  flush() {\n    this._callForHelpCategories = null;\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._callForHelpCategories = [];\n    let count = wrapper.readInt();\n\n    while (count > 0) {\n      this._callForHelpCategories.push(new CallForHelpCategoryData(wrapper));\n\n      count--;\n    }\n\n    return true;\n  }\n\n  get callForHelpCategories() {\n    return this._callForHelpCategories;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/callforhelp/CfhTopicsInitMessageParser.ts"],"names":["CallForHelpCategoryData","CfhTopicsInitMessageParser","_callForHelpCategories","flush","parse","wrapper","count","readInt","push","callForHelpCategories"],"mappings":"AACA,SAASA,uBAAT,QAAwC,oDAAxC;AAGA,OAAO,MAAMC,0BAAN,CACP;AAAA;AAAA,SACYC,sBADZ;AAAA;;AAGWC,EAAAA,KAAK,GACZ;AACI,SAAKD,sBAAL,GAA8B,IAA9B;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKH,sBAAL,GAA8B,EAA9B;AAEA,QAAII,KAAK,GAAGD,OAAO,CAACE,OAAR,EAAZ;;AAEA,WAAMD,KAAK,GAAG,CAAd,EACA;AACI,WAAKJ,sBAAL,CAA4BM,IAA5B,CAAiC,IAAIR,uBAAJ,CAA4BK,OAA5B,CAAjC;;AAEAC,MAAAA,KAAK;AACR;;AAED,WAAO,IAAP;AACH;;AAE+B,MAArBG,qBAAqB,GAChC;AACI,WAAO,KAAKP,sBAAZ;AACH;;AA/BL","sourcesContent":["import { IMessageDataWrapper } from '../../../../../core';\r\nimport { CallForHelpCategoryData } from '../../incoming/callforhelp/CallForHelpCategoryData';\r\nimport { IMessageParser } from './../../../../../core';\r\n\r\nexport class CfhTopicsInitMessageParser implements IMessageParser\r\n{\r\n    private _callForHelpCategories: CallForHelpCategoryData[];\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._callForHelpCategories = null;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._callForHelpCategories = [];\r\n\r\n        let count = wrapper.readInt();\r\n\r\n        while(count > 0)\r\n        {\r\n            this._callForHelpCategories.push(new CallForHelpCategoryData(wrapper));\r\n\r\n            count--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get callForHelpCategories(): CallForHelpCategoryData[]\r\n    {\r\n        return this._callForHelpCategories;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}