{"ast":null,"code":"export class EvaWireDataWrapper {\n  constructor(header, buffer) {\n    this._header = void 0;\n    this._buffer = void 0;\n    this._header = header;\n    this._buffer = buffer;\n  }\n\n  readBytes(length) {\n    if (!this._buffer) return null;\n    return this._buffer.readBytes(length);\n  }\n\n  readByte() {\n    if (!this._buffer) return -1;\n    return this._buffer.readByte();\n  }\n\n  readBoolean() {\n    return this.readByte() === 1;\n  }\n\n  readShort() {\n    if (!this._buffer) return -1;\n    return this._buffer.readShort();\n  }\n\n  readInt() {\n    if (!this._buffer) return -1;\n    return this._buffer.readInt();\n  }\n\n  readFloat() {\n    if (!this._buffer) return -1;\n    return this._buffer.readFloat();\n  }\n\n  readDouble() {\n    if (!this._buffer) return -1;\n    return this._buffer.readDouble();\n  }\n\n  readString() {\n    const length = this.readShort();\n\n    const buffer = this._buffer.readBytes(length);\n\n    return buffer.toString('utf8');\n  }\n\n  get header() {\n    return this._header;\n  }\n\n  get bytesAvailable() {\n    return this._buffer && this._buffer.remaining() > 0;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/core/communication/codec/evawire/EvaWireDataWrapper.ts"],"names":["EvaWireDataWrapper","constructor","header","buffer","_header","_buffer","readBytes","length","readByte","readBoolean","readShort","readInt","readFloat","readDouble","readString","toString","bytesAvailable","remaining"],"mappings":"AAGA,OAAO,MAAMA,kBAAN,CACP;AAIIC,EAAAA,WAAW,CAACC,MAAD,EAAiBC,MAAjB,EACX;AAAA,SAJQC,OAIR;AAAA,SAHQC,OAGR;AACI,SAAKD,OAAL,GAAeF,MAAf;AACA,SAAKG,OAAL,GAAeF,MAAf;AACH;;AAEMG,EAAAA,SAAS,CAACC,MAAD,EAChB;AACI,QAAG,CAAC,KAAKF,OAAT,EAAkB,OAAO,IAAP;AAElB,WAAO,KAAKA,OAAL,CAAaC,SAAb,CAAuBC,MAAvB,CAAP;AACH;;AAEMC,EAAAA,QAAQ,GACf;AACI,QAAG,CAAC,KAAKH,OAAT,EAAkB,OAAO,CAAC,CAAR;AAElB,WAAO,KAAKA,OAAL,CAAaG,QAAb,EAAP;AACH;;AAEMC,EAAAA,WAAW,GAClB;AACI,WAAQ,KAAKD,QAAL,OAAoB,CAA5B;AACH;;AAEME,EAAAA,SAAS,GAChB;AACI,QAAG,CAAC,KAAKL,OAAT,EAAkB,OAAO,CAAC,CAAR;AAElB,WAAO,KAAKA,OAAL,CAAaK,SAAb,EAAP;AACH;;AAEMC,EAAAA,OAAO,GACd;AACI,QAAG,CAAC,KAAKN,OAAT,EAAkB,OAAO,CAAC,CAAR;AAElB,WAAO,KAAKA,OAAL,CAAaM,OAAb,EAAP;AACH;;AAEMC,EAAAA,SAAS,GAChB;AACI,QAAG,CAAC,KAAKP,OAAT,EAAkB,OAAO,CAAC,CAAR;AAElB,WAAO,KAAKA,OAAL,CAAaO,SAAb,EAAP;AACH;;AAEMC,EAAAA,UAAU,GACjB;AACI,QAAG,CAAC,KAAKR,OAAT,EAAkB,OAAO,CAAC,CAAR;AAElB,WAAO,KAAKA,OAAL,CAAaQ,UAAb,EAAP;AACH;;AAEMC,EAAAA,UAAU,GACjB;AACI,UAAMP,MAAM,GAAG,KAAKG,SAAL,EAAf;;AACA,UAAMP,MAAM,GAAG,KAAKE,OAAL,CAAaC,SAAb,CAAuBC,MAAvB,CAAf;;AAEA,WAAOJ,MAAM,CAACY,QAAP,CAAgB,MAAhB,CAAP;AACH;;AAEgB,MAANb,MAAM,GACjB;AACI,WAAO,KAAKE,OAAZ;AACH;;AAEwB,MAAdY,cAAc,GACzB;AACI,WAAQ,KAAKX,OAAL,IAAiB,KAAKA,OAAL,CAAaY,SAAb,KAA2B,CAApD;AACH;;AAzEL","sourcesContent":["import { IMessageDataWrapper } from '../../messages/IMessageDataWrapper';\r\nimport { BinaryReader } from '../BinaryReader';\r\n\r\nexport class EvaWireDataWrapper implements IMessageDataWrapper\r\n{\r\n    private _header: number;\r\n    private _buffer: BinaryReader;\r\n\r\n    constructor(header: number, buffer: BinaryReader)\r\n    {\r\n        this._header = header;\r\n        this._buffer = buffer;\r\n    }\r\n\r\n    public readBytes(length: number): BinaryReader\r\n    {\r\n        if(!this._buffer) return null;\r\n\r\n        return this._buffer.readBytes(length);\r\n    }\r\n\r\n    public readByte(): number\r\n    {\r\n        if(!this._buffer) return -1;\r\n\r\n        return this._buffer.readByte();\r\n    }\r\n\r\n    public readBoolean(): boolean\r\n    {\r\n        return (this.readByte() === 1);\r\n    }\r\n\r\n    public readShort(): number\r\n    {\r\n        if(!this._buffer) return -1;\r\n\r\n        return this._buffer.readShort();\r\n    }\r\n\r\n    public readInt(): number\r\n    {\r\n        if(!this._buffer) return -1;\r\n\r\n        return this._buffer.readInt();\r\n    }\r\n\r\n    public readFloat(): number\r\n    {\r\n        if(!this._buffer) return -1;\r\n\r\n        return this._buffer.readFloat();\r\n    }\r\n\r\n    public readDouble(): number\r\n    {\r\n        if(!this._buffer) return -1;\r\n\r\n        return this._buffer.readDouble();\r\n    }\r\n\r\n    public readString(): string\r\n    {\r\n        const length = this.readShort();\r\n        const buffer = this._buffer.readBytes(length);\r\n\r\n        return buffer.toString('utf8');\r\n    }\r\n\r\n    public get header(): number\r\n    {\r\n        return this._header;\r\n    }\r\n\r\n    public get bytesAvailable(): boolean\r\n    {\r\n        return (this._buffer && (this._buffer.remaining() > 0));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}