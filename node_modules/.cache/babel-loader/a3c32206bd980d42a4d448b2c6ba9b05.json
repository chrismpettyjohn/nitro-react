{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/achievements/views/AchievementBadgeView.tsx\";\nimport { GetAchievementBadgeCode, GetAchievementHasStarted } from '../../../api';\nimport { LayoutBadgeImageView } from '../../../common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AchievementBadgeView = props => {\n  const {\n    achievement = null,\n    scale = 1,\n    ...rest\n  } = props;\n  if (!achievement) return null;\n  return /*#__PURE__*/_jsxDEV(LayoutBadgeImageView, {\n    badgeCode: GetAchievementBadgeCode(achievement),\n    isGrayscale: !GetAchievementHasStarted(achievement),\n    scale: scale,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n_c = AchievementBadgeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AchievementBadgeView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/achievements/views/AchievementBadgeView.tsx"],"names":["GetAchievementBadgeCode","GetAchievementHasStarted","LayoutBadgeImageView","AchievementBadgeView","props","achievement","scale","rest"],"mappings":";AAEA,SAASA,uBAAT,EAAkCC,wBAAlC,QAAkE,cAAlE;AACA,SAAoBC,oBAApB,QAAgD,iBAAhD;;AAQA,OAAO,MAAMC,oBAAmD,GAAGC,KAAK,IACxE;AACI,QAAM;AAAEC,IAAAA,WAAW,GAAG,IAAhB;AAAsBC,IAAAA,KAAK,GAAG,CAA9B;AAAiC,OAAGC;AAApC,MAA6CH,KAAnD;AAEA,MAAG,CAACC,WAAJ,EAAiB,OAAO,IAAP;AAEjB,sBAAO,QAAC,oBAAD;AAAsB,IAAA,SAAS,EAAGL,uBAAuB,CAACK,WAAD,CAAzD;AAAyE,IAAA,WAAW,EAAG,CAACJ,wBAAwB,CAACI,WAAD,CAAhH;AAAgI,IAAA,KAAK,EAAGC,KAAxI;AAAA,OAAqJC;AAArJ;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAPM;KAAMJ,oB","sourcesContent":["import { AchievementData } from '@nitrots/nitro-renderer';\nimport { FC } from 'react';\nimport { GetAchievementBadgeCode, GetAchievementHasStarted } from '../../../api';\nimport { BaseProps, LayoutBadgeImageView } from '../../../common';\n\ninterface AchievementBadgeViewProps extends BaseProps<HTMLDivElement>\n{\n    achievement: AchievementData;\n    scale?: number;\n}\n\nexport const AchievementBadgeView: FC<AchievementBadgeViewProps> = props =>\n{\n    const { achievement = null, scale = 1, ...rest } = props;\n\n    if(!achievement) return null;\n\n    return <LayoutBadgeImageView badgeCode={ GetAchievementBadgeCode(achievement) } isGrayscale={ !GetAchievementHasStarted(achievement) } scale={ scale } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}