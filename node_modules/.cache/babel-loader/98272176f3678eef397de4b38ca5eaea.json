{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/triggers/WiredTriggerAvatarEnterRoomView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredTriggerBaseView } from './WiredTriggerBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredTriggerAvatarEnterRoomView = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [avatarMode, setAvatarMode] = useState(0);\n  const {\n    trigger = null,\n    setStringParam = null\n  } = useWiredContext();\n\n  const save = () => setStringParam(avatarMode === 1 ? username : '');\n\n  useEffect(() => {\n    setUsername(trigger.stringData);\n    setAvatarMode(trigger.stringData ? 1 : 0);\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredTriggerBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.picktriggerer')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"avatarMode\",\n          id: \"avatarMode0\",\n          checked: avatarMode === 0,\n          onChange: event => setAvatarMode(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('wiredfurni.params.anyavatar')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"avatarMode\",\n          id: \"avatarMode1\",\n          checked: avatarMode === 1,\n          onChange: event => setAvatarMode(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('wiredfurni.params.certainavatar')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), avatarMode === 1 && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredTriggerAvatarEnterRoomView, \"gIRtD/65PXyup17TcM+NLaAOmhw=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredTriggerAvatarEnterRoomView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredTriggerAvatarEnterRoomView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/triggers/WiredTriggerAvatarEnterRoomView.tsx"],"names":["useEffect","useState","LocalizeText","WiredFurniType","Column","Flex","Text","useWiredContext","WiredTriggerBaseView","WiredTriggerAvatarEnterRoomView","props","username","setUsername","avatarMode","setAvatarMode","trigger","setStringParam","save","stringData","STUFF_SELECTION_OPTION_NONE","event","target","value"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredTriggerBaseView } from './WiredTriggerBaseView';\n\nexport const WiredTriggerAvatarEnterRoomView: FC<{}> = props =>\n{\n    const [ username, setUsername ] = useState('');\n    const [ avatarMode, setAvatarMode ] = useState(0);\n    const { trigger = null, setStringParam = null } = useWiredContext();\n\n    const save = () => setStringParam((avatarMode === 1) ? username : '');\n\n    useEffect(() =>\n    {\n        setUsername(trigger.stringData);\n        setAvatarMode(trigger.stringData ? 1 : 0);\n    }, [ trigger ]);\n\n    return (\n        <WiredTriggerBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.picktriggerer') }</Text>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"radio\" name=\"avatarMode\" id=\"avatarMode0\" checked={ (avatarMode === 0) } onChange={ event => setAvatarMode(0) } />\n                    <Text>{ LocalizeText('wiredfurni.params.anyavatar') }</Text>\n                </Flex>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"radio\" name=\"avatarMode\" id=\"avatarMode1\" checked={ (avatarMode === 1) } onChange={ event => setAvatarMode(1) } />\n                    <Text>{ LocalizeText('wiredfurni.params.certainavatar') }</Text>\n                </Flex>\n                { (avatarMode === 1) &&\n                    <input type=\"text\" className=\"form-control form-control-sm\" value={ username } onChange={ event => setUsername(event.target.value) } /> }\n            </Column>\n        </WiredTriggerBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}