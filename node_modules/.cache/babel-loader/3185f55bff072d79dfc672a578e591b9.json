{"ast":null,"code":"import { PlaneMaskBitmap } from './PlaneMaskBitmap';\nexport class PlaneMaskVisualization {\n  constructor() {\n    this._bitmaps = void 0;\n    this._bitmaps = [];\n  }\n\n  dispose() {\n    for (const mask of this._bitmaps) {\n      if (!mask) continue;\n      mask.dispose();\n    }\n\n    this._bitmaps = null;\n  }\n\n  addBitmap(k) {\n    let _arg_2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n    let _arg_3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    let _arg_4 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n\n    let _arg_5 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n\n    this._bitmaps.push(new PlaneMaskBitmap(k, _arg_2, _arg_3, _arg_4, _arg_5));\n  }\n\n  getAsset(k) {\n    if (!k) return null;\n\n    for (const mask of this._bitmaps) {\n      if (!mask) continue;\n\n      if (k.x >= mask.normalMinX && k.x <= mask.normalMaxX && k.y >= mask.normalMinY && k.y <= mask.normalMaxY) {\n        return mask.asset;\n      }\n    }\n\n    return null;\n  }\n\n}\nPlaneMaskVisualization.MIN_NORMAL_COORDINATE_VALUE = -1;\nPlaneMaskVisualization.MAX_NORMAL_COORDINATE_VALUE = 1;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/room/mask/PlaneMaskVisualization.ts"],"names":["PlaneMaskBitmap","PlaneMaskVisualization","constructor","_bitmaps","dispose","mask","addBitmap","k","_arg_2","_arg_3","_arg_4","_arg_5","push","getAsset","x","normalMinX","normalMaxX","y","normalMinY","normalMaxY","asset","MIN_NORMAL_COORDINATE_VALUE","MAX_NORMAL_COORDINATE_VALUE"],"mappings":"AAEA,SAASA,eAAT,QAAgC,mBAAhC;AAEA,OAAO,MAAMC,sBAAN,CACP;AAMIC,EAAAA,WAAW,GACX;AAAA,SAHQC,QAGR;AACI,SAAKA,QAAL,GAAgB,EAAhB;AACH;;AAEMC,EAAAA,OAAO,GACd;AACI,SAAI,MAAMC,IAAV,IAAkB,KAAKF,QAAvB,EACA;AACI,UAAG,CAACE,IAAJ,EAAU;AAEVA,MAAAA,IAAI,CAACD,OAAL;AACH;;AAED,SAAKD,QAAL,GAAgB,IAAhB;AACH;;AAEMG,EAAAA,SAAS,CAACC,CAAD,EAChB;AAAA,QADmCC,MACnC,uEADoD,CAAC,CACrD;;AAAA,QADwDC,MACxD,uEADyE,CACzE;;AAAA,QAD4EC,MAC5E,uEAD6F,CAAC,CAC9F;;AAAA,QADiGC,MACjG,uEADkH,CAClH;;AACI,SAAKR,QAAL,CAAcS,IAAd,CAAmB,IAAIZ,eAAJ,CAAoBO,CAApB,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+CC,MAA/C,CAAnB;AACH;;AAEME,EAAAA,QAAQ,CAACN,CAAD,EACf;AACI,QAAG,CAACA,CAAJ,EAAO,OAAO,IAAP;;AAEP,SAAI,MAAMF,IAAV,IAAkB,KAAKF,QAAvB,EACA;AACI,UAAG,CAACE,IAAJ,EAAU;;AAEV,UAAME,CAAC,CAACO,CAAF,IAAOT,IAAI,CAACU,UAAb,IAA6BR,CAAC,CAACO,CAAF,IAAOT,IAAI,CAACW,UAA1C,IAA2DT,CAAC,CAACU,CAAF,IAAOZ,IAAI,CAACa,UAAxE,IAAyFX,CAAC,CAACU,CAAF,IAAOZ,IAAI,CAACc,UAAxG,EACA;AACI,eAAOd,IAAI,CAACe,KAAZ;AACH;AACJ;;AAED,WAAO,IAAP;AACH;;AA3CL;AADanB,sB,CAEKoB,2B,GAAsC,CAAC,C;AAF5CpB,sB,CAGKqB,2B,GAAsC,C","sourcesContent":["import { IGraphicAsset } from '../../../../../../room/object/visualization/utils/IGraphicAsset';\r\nimport { IVector3D } from '../../../../../../room/utils/IVector3D';\r\nimport { PlaneMaskBitmap } from './PlaneMaskBitmap';\r\n\r\nexport class PlaneMaskVisualization\r\n{\r\n    public static MIN_NORMAL_COORDINATE_VALUE: number = -1;\r\n    public static MAX_NORMAL_COORDINATE_VALUE: number = 1;\r\n\r\n    private _bitmaps: PlaneMaskBitmap[];\r\n\r\n    constructor()\r\n    {\r\n        this._bitmaps = [];\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        for(const mask of this._bitmaps)\r\n        {\r\n            if(!mask) continue;\r\n\r\n            mask.dispose();\r\n        }\r\n\r\n        this._bitmaps = null;\r\n    }\r\n\r\n    public addBitmap(k: IGraphicAsset, _arg_2: number = -1, _arg_3: number = 1, _arg_4: number = -1, _arg_5: number = 1): void\r\n    {\r\n        this._bitmaps.push(new PlaneMaskBitmap(k, _arg_2, _arg_3, _arg_4, _arg_5));\r\n    }\r\n\r\n    public getAsset(k: IVector3D): IGraphicAsset\r\n    {\r\n        if(!k) return null;\r\n\r\n        for(const mask of this._bitmaps)\r\n        {\r\n            if(!mask) continue;\r\n\r\n            if((((k.x >= mask.normalMinX) && (k.x <= mask.normalMaxX)) && (k.y >= mask.normalMinY)) && (k.y <= mask.normalMaxY))\r\n            {\r\n                return mask.asset;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}