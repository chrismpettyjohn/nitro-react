{"ast":null,"code":"import { MouseEventType } from '@nitrots/nitro-renderer';\nimport { NitroSoundEvent } from '@nitrots/nitro-renderer/src/nitro/events/NitroSoundEvent';\nimport { DispatchMainEvent } from '../../hooks';\nlet canPlaySound = false;\nexport const PlaySound = sampleCode => {\n  if (!canPlaySound) return;\n  DispatchMainEvent(new NitroSoundEvent(NitroSoundEvent.PLAY_SOUND, sampleCode));\n};\n_c = PlaySound;\nconst eventTypes = [MouseEventType.MOUSE_CLICK];\n\nconst startListening = () => {\n  const stopListening = () => eventTypes.forEach(type => window.removeEventListener(type, onEvent));\n\n  const onEvent = event => (canPlaySound = true) && stopListening();\n\n  eventTypes.forEach(type => window.addEventListener(type, onEvent));\n};\n\nstartListening();\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaySound\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/api/utils/PlaySound.ts"],"names":["MouseEventType","NitroSoundEvent","DispatchMainEvent","canPlaySound","PlaySound","sampleCode","PLAY_SOUND","eventTypes","MOUSE_CLICK","startListening","stopListening","forEach","type","window","removeEventListener","onEvent","event","addEventListener"],"mappings":"AAAA,SAASA,cAAT,QAA+B,yBAA/B;AACA,SAASC,eAAT,QAAgC,0DAAhC;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA,IAAIC,YAAY,GAAG,KAAnB;AAEA,OAAO,MAAMC,SAAS,GAAIC,UAAD,IACzB;AACI,MAAG,CAACF,YAAJ,EAAkB;AAElBD,EAAAA,iBAAiB,CAAC,IAAID,eAAJ,CAAoBA,eAAe,CAACK,UAApC,EAAgDD,UAAhD,CAAD,CAAjB;AACH,CALM;KAAMD,S;AAOb,MAAMG,UAAU,GAAG,CAAEP,cAAc,CAACQ,WAAjB,CAAnB;;AAEA,MAAMC,cAAc,GAAG,MACvB;AACI,QAAMC,aAAa,GAAG,MAAMH,UAAU,CAACI,OAAX,CAAmBC,IAAI,IAAIC,MAAM,CAACC,mBAAP,CAA2BF,IAA3B,EAAiCG,OAAjC,CAA3B,CAA5B;;AAEA,QAAMA,OAAO,GAAIC,KAAD,IAAmB,CAACb,YAAY,GAAG,IAAhB,KAAyBO,aAAa,EAAzE;;AAEAH,EAAAA,UAAU,CAACI,OAAX,CAAmBC,IAAI,IAAIC,MAAM,CAACI,gBAAP,CAAwBL,IAAxB,EAA8BG,OAA9B,CAA3B;AACH,CAPD;;AASAN,cAAc","sourcesContent":["import { MouseEventType } from '@nitrots/nitro-renderer';\nimport { NitroSoundEvent } from '@nitrots/nitro-renderer/src/nitro/events/NitroSoundEvent';\nimport { DispatchMainEvent } from '../../hooks';\n\nlet canPlaySound = false;\n\nexport const PlaySound = (sampleCode: string) =>\n{\n    if(!canPlaySound) return;\n\n    DispatchMainEvent(new NitroSoundEvent(NitroSoundEvent.PLAY_SOUND, sampleCode));\n}\n\nconst eventTypes = [ MouseEventType.MOUSE_CLICK ];\n\nconst startListening = () =>\n{\n    const stopListening = () => eventTypes.forEach(type => window.removeEventListener(type, onEvent));\n\n    const onEvent = (event: Event) => ((canPlaySound = true) && stopListening());\n\n    eventTypes.forEach(type => window.addEventListener(type, onEvent));\n}\n\nstartListening();\n"]},"metadata":{},"sourceType":"module"}