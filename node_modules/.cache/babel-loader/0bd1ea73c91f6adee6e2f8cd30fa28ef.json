{"ast":null,"code":"import { Vector3d } from '../../../room/utils/Vector3d';\nexport class LegacyWallGeometry {\n  constructor() {\n    this._isDisposed = void 0;\n    this._scale = void 0;\n    this._heightMap = void 0;\n    this._width = void 0;\n    this._height = void 0;\n    this._floorHeight = void 0;\n    this._isDisposed = false;\n    this._scale = 64;\n    this._heightMap = [];\n    this._width = 0;\n    this._height = 0;\n    this._floorHeight = 0;\n  }\n\n  get disposed() {\n    return this._isDisposed;\n  }\n\n  get scale() {\n    return this._scale;\n  }\n\n  set scale(k) {\n    this._scale = k;\n  }\n\n  dispose() {\n    this.reset();\n    this._isDisposed = true;\n  }\n\n  initialize(width, height, floorHeight) {\n    if (width <= this._width && height <= this._height) {\n      this._width = width;\n      this._height = height;\n      this._floorHeight = floorHeight;\n      return;\n    }\n\n    this.reset();\n    let y = 0;\n\n    while (y < height) {\n      const heights = [];\n\n      this._heightMap.push(heights);\n\n      let x = 0;\n\n      while (x < width) {\n        heights.push(0);\n        x++;\n      }\n\n      y++;\n    }\n\n    this._width = width;\n    this._height = height;\n    this._floorHeight = floorHeight;\n  }\n\n  reset() {\n    this._heightMap = [];\n  }\n\n  setHeight(x, y, height) {\n    if (x < 0 || x >= this._width || y < 0 || y >= this._height) return false;\n    const heightMap = this._heightMap[y];\n    if (!heightMap) return false;\n    heightMap[x] = height;\n    return true;\n  }\n\n  getHeight(x, y) {\n    if (x < 0 || x >= this._width || y < 0 || y >= this._height) return 0;\n    const heightMap = this._heightMap[y];\n    if (!heightMap) return 0;\n    return heightMap[x];\n  }\n\n  getLocation(k, _arg_2, _arg_3, _arg_4, _arg_5) {\n    let _local_12;\n\n    let _local_6;\n\n    let _local_7;\n\n    if (k == 0 && _arg_2 == 0) {\n      k = this._width;\n      _arg_2 = this._height;\n      _local_12 = Math.round(this.scale / 10);\n\n      if (_arg_5 == LegacyWallGeometry.R) {\n        _local_7 = this._width - 1;\n\n        while (_local_7 >= 0) {\n          _local_6 = 1;\n\n          while (_local_6 < this._height) {\n            if (this.getHeight(_local_7, _local_6) <= this._floorHeight) {\n              if (_local_6 - 1 < _arg_2) {\n                k = _local_7;\n                _arg_2 = _local_6 - 1;\n              }\n\n              break;\n            }\n\n            _local_6++;\n          }\n\n          _local_7--;\n        }\n\n        _arg_4 = _arg_4 + (this.scale / 4 - _local_12 / 2);\n        _arg_3 = _arg_3 + this.scale / 2;\n      } else {\n        _local_6 = this._height - 1;\n\n        while (_local_6 >= 0) {\n          _local_7 = 1;\n\n          while (_local_7 < this._width) {\n            if (this.getHeight(_local_7, _local_6) <= this._floorHeight) {\n              if (_local_7 - 1 < k) {\n                k = _local_7 - 1;\n                _arg_2 = _local_6;\n              }\n\n              break;\n            }\n\n            _local_7++;\n          }\n\n          _local_6--;\n        }\n\n        _arg_4 = _arg_4 + (this.scale / 4 - _local_12 / 2);\n        _arg_3 = _arg_3 - _local_12;\n      }\n    }\n\n    let _local_8 = k;\n    let _local_9 = _arg_2;\n\n    let _local_10 = this.getHeight(k, _arg_2);\n\n    if (_arg_5 == LegacyWallGeometry.R) {\n      _local_8 = _local_8 + (_arg_3 / (this._scale / 2) - 0.5);\n      _local_9 = _local_9 + 0.5;\n      _local_10 = _local_10 - (_arg_4 - _arg_3 / 2) / (this._scale / 2);\n    } else {\n      _local_9 = _local_9 + ((this._scale / 2 - _arg_3) / (this._scale / 2) - 0.5);\n      _local_8 = _local_8 + 0.5;\n      _local_10 = _local_10 - (_arg_4 - (this._scale / 2 - _arg_3) / 2) / (this._scale / 2);\n    }\n\n    const _local_11 = new Vector3d(_local_8, _local_9, _local_10);\n\n    return _local_11;\n  }\n\n  getLocationOldFormat(k, _arg_2, _arg_3) {\n    let _local_4;\n\n    let _local_5;\n\n    let _local_6 = 0;\n    let _local_7 = 0;\n    _local_5 = Math.ceil(k);\n    _local_6 = _local_5 - k;\n\n    let _local_8;\n\n    let _local_9;\n\n    let _local_11;\n\n    let _local_12 = 0;\n    _local_4 = 0;\n\n    while (_local_4 < this._width) {\n      if (_local_5 >= 0 && _local_5 < this._height) {\n        if (this.getHeight(_local_4, _local_5) <= this._floorHeight) {\n          _local_8 = _local_4 - 1;\n          _local_9 = _local_5;\n          _local_7 = _local_4;\n          _arg_3 = LegacyWallGeometry.L;\n          break;\n        }\n\n        if (this.getHeight(_local_4, _local_5 + 1) <= this._floorHeight) {\n          _local_8 = _local_4;\n          _local_9 = _local_5;\n          _local_7 = _local_9 - k;\n          _arg_3 = LegacyWallGeometry.R;\n          break;\n        }\n      }\n\n      _local_5++;\n      _local_4++;\n    }\n\n    const _local_10 = this.scale / 2 * _local_6;\n\n    let _local_13 = -_local_7 * this.scale / 2;\n\n    _local_13 = _local_13 + -_arg_2 * 18 / 32 * this.scale / 2;\n    _local_12 = this.getHeight(_local_8, _local_9);\n    _local_11 = _local_12 * this.scale / 2 + _local_13;\n\n    if (_arg_3 == LegacyWallGeometry.R) {\n      _local_11 = _local_11 + _local_6 * this.scale / 4;\n    } else {\n      _local_11 = _local_11 + (1 - _local_6) * this.scale / 4;\n    }\n\n    return this.getLocation(_local_8, _local_9, _local_10, _local_11, _arg_3);\n  }\n\n  getOldLocation(k, _arg_2) {\n    if (k == null) {\n      return null;\n    }\n\n    let _local_3 = 0;\n    let _local_4 = 0;\n    let _local_5 = 0;\n    let _local_6 = 0;\n    let _local_7 = '';\n    let _local_8 = 0;\n\n    if (_arg_2 == 90) {\n      _local_3 = Math.floor(k.x - 0.5);\n      _local_4 = Math.floor(k.y + 0.5);\n      _local_8 = this.getHeight(_local_3, _local_4);\n      _local_5 = this._scale / 2 - (k.y - _local_4 + 0.5) * (this._scale / 2);\n      _local_6 = (_local_8 - k.z) * (this._scale / 2) + (this._scale / 2 - _local_5) / 2;\n      _local_7 = LegacyWallGeometry.L;\n    } else {\n      if (_arg_2 == 180) {\n        _local_3 = Math.floor(k.x + 0.5);\n        _local_4 = Math.floor(k.y - 0.5);\n        _local_8 = this.getHeight(_local_3, _local_4);\n        _local_5 = (k.x + 0.5 - _local_3) * (this._scale / 2);\n        _local_6 = (_local_8 - k.z) * (this._scale / 2) + _local_5 / 2;\n        _local_7 = LegacyWallGeometry.R;\n      } else {\n        return null;\n      }\n    }\n\n    return [_local_3, _local_4, _local_5, _local_6, _local_7];\n  }\n\n  getOldLocationString(k, _arg_2) {\n    const _local_3 = this.getOldLocation(k, _arg_2);\n\n    if (_local_3 == null) {\n      return null;\n    }\n\n    const _local_4 = Math.trunc(_local_3[0]);\n\n    const _local_5 = Math.trunc(_local_3[1]);\n\n    const _local_6 = Math.trunc(_local_3[2]);\n\n    const _local_7 = Math.trunc(_local_3[3]);\n\n    const _local_8 = _local_3[4];\n\n    const _local_9 = ':w=' + _local_4 + ',' + _local_5 + ' l=' + _local_6 + ',' + _local_7 + ' ' + _local_8;\n\n    return _local_9;\n  }\n\n  getDirection(k) {\n    if (k == LegacyWallGeometry.R) {\n      return 180;\n    }\n\n    return 90;\n  }\n\n  getFloorAltitude(k, _arg_2) {\n    const _local_3 = this.getHeight(k, _arg_2);\n\n    const _local_4 = _local_3 + 1;\n\n    return _local_3 + (Math.trunc(this.getHeight(k - 1, _arg_2 - 1)) == _local_4 || Math.trunc(this.getHeight(k, _arg_2 - 1)) == _local_4 || Math.trunc(this.getHeight(k + 1, _arg_2 - 1)) == _local_4 || Math.trunc(this.getHeight(k - 1, _arg_2)) == _local_4 || Math.trunc(this.getHeight(k + 1, _arg_2)) == _local_4 || Math.trunc(this.getHeight(k - 1, _arg_2 + 1)) == _local_4 || Math.trunc(this.getHeight(k, _arg_2 + 1)) == _local_4 || Math.trunc(this.getHeight(k + 1, _arg_2 + 1)) == _local_4 ? 0.5 : 0);\n  }\n\n  isRoomTile(k, _arg_2) {\n    return k >= 0 && k < this._width && _arg_2 >= 0 && _arg_2 < this._height && this._heightMap[_arg_2][k] >= 0;\n  }\n\n}\nLegacyWallGeometry.DEFAULT_SCALE = 32;\nLegacyWallGeometry.L = 'l';\nLegacyWallGeometry.R = 'r';","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/utils/LegacyWallGeometry.ts"],"names":["Vector3d","LegacyWallGeometry","constructor","_isDisposed","_scale","_heightMap","_width","_height","_floorHeight","disposed","scale","k","dispose","reset","initialize","width","height","floorHeight","y","heights","push","x","setHeight","heightMap","getHeight","getLocation","_arg_2","_arg_3","_arg_4","_arg_5","_local_12","_local_6","_local_7","Math","round","R","_local_8","_local_9","_local_10","_local_11","getLocationOldFormat","_local_4","_local_5","ceil","L","_local_13","getOldLocation","_local_3","floor","z","getOldLocationString","trunc","getDirection","getFloorAltitude","isRoomTile","DEFAULT_SCALE"],"mappings":"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","sourcesContent":["import { IVector3D } from '../../../room/utils/IVector3D';\r\nimport { Vector3d } from '../../../room/utils/Vector3d';\r\n\r\nexport class LegacyWallGeometry\r\n{\r\n    public static DEFAULT_SCALE: number = 32;\r\n\r\n    private static L: string = 'l';\r\n    private static R: string = 'r';\r\n\r\n    private _isDisposed: boolean;\r\n    private _scale: number;\r\n    private _heightMap: number[][];\r\n    private _width: number;\r\n    private _height: number;\r\n    private _floorHeight: number;\r\n\r\n    constructor()\r\n    {\r\n        this._isDisposed = false;\r\n        this._scale = 64;\r\n        this._heightMap = [];\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._floorHeight = 0;\r\n    }\r\n\r\n    public get disposed(): boolean\r\n    {\r\n        return this._isDisposed;\r\n    }\r\n\r\n    public get scale(): number\r\n    {\r\n        return this._scale;\r\n    }\r\n\r\n    public set scale(k: number)\r\n    {\r\n        this._scale = k;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this.reset();\r\n        this._isDisposed = true;\r\n    }\r\n\r\n    public initialize(width: number, height: number, floorHeight: number): void\r\n    {\r\n        if((width <= this._width) && (height <= this._height))\r\n        {\r\n            this._width = width;\r\n            this._height = height;\r\n            this._floorHeight = floorHeight;\r\n\r\n            return;\r\n        }\r\n\r\n        this.reset();\r\n\r\n        let y = 0;\r\n\r\n        while(y < height)\r\n        {\r\n            const heights: number[] = [];\r\n\r\n            this._heightMap.push(heights);\r\n\r\n            let x = 0;\r\n\r\n            while(x < width)\r\n            {\r\n                heights.push(0);\r\n\r\n                x++;\r\n            }\r\n\r\n            y++;\r\n        }\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._floorHeight = floorHeight;\r\n    }\r\n\r\n    private reset(): void\r\n    {\r\n        this._heightMap = [];\r\n    }\r\n\r\n    public setHeight(x: number, y: number, height: number): boolean\r\n    {\r\n        if((((x < 0) || (x >= this._width)) || (y < 0)) || (y >= this._height)) return false;\r\n\r\n        const heightMap = this._heightMap[y];\r\n\r\n        if(!heightMap) return false;\r\n\r\n        heightMap[x] = height;\r\n\r\n        return true;\r\n    }\r\n\r\n    public getHeight(x: number, y: number): number\r\n    {\r\n        if((((x < 0) || (x >= this._width)) || (y < 0)) || (y >= this._height)) return 0;\r\n\r\n        const heightMap = this._heightMap[y];\r\n\r\n        if(!heightMap) return 0;\r\n\r\n        return heightMap[x];\r\n    }\r\n\r\n    public getLocation(k: number, _arg_2: number, _arg_3: number, _arg_4: number, _arg_5: string): IVector3D\r\n    {\r\n        let _local_12: number;\r\n        let _local_6: number;\r\n        let _local_7: number;\r\n        if(((k == 0) && (_arg_2 == 0)))\r\n        {\r\n            k = this._width;\r\n            _arg_2 = this._height;\r\n            _local_12 = Math.round((this.scale / 10));\r\n            if(_arg_5 == LegacyWallGeometry.R)\r\n            {\r\n                _local_7 = (this._width - 1);\r\n                while(_local_7 >= 0)\r\n                {\r\n                    _local_6 = 1;\r\n                    while(_local_6 < this._height)\r\n                    {\r\n                        if(this.getHeight(_local_7, _local_6) <= this._floorHeight)\r\n                        {\r\n                            if((_local_6 - 1) < _arg_2)\r\n                            {\r\n                                k = _local_7;\r\n                                _arg_2 = (_local_6 - 1);\r\n                            }\r\n                            break;\r\n                        }\r\n                        _local_6++;\r\n                    }\r\n                    _local_7--;\r\n                }\r\n                _arg_4 = (_arg_4 + ((this.scale / 4) - (_local_12 / 2)));\r\n                _arg_3 = (_arg_3 + (this.scale / 2));\r\n            }\r\n            else\r\n            {\r\n                _local_6 = (this._height - 1);\r\n                while(_local_6 >= 0)\r\n                {\r\n                    _local_7 = 1;\r\n                    while(_local_7 < this._width)\r\n                    {\r\n                        if(this.getHeight(_local_7, _local_6) <= this._floorHeight)\r\n                        {\r\n                            if((_local_7 - 1) < k)\r\n                            {\r\n                                k = (_local_7 - 1);\r\n                                _arg_2 = _local_6;\r\n                            }\r\n                            break;\r\n                        }\r\n                        _local_7++;\r\n                    }\r\n                    _local_6--;\r\n                }\r\n                _arg_4 = (_arg_4 + ((this.scale / 4) - (_local_12 / 2)));\r\n                _arg_3 = (_arg_3 - _local_12);\r\n            }\r\n        }\r\n        let _local_8: number = k;\r\n        let _local_9: number = _arg_2;\r\n        let _local_10: number = this.getHeight(k, _arg_2);\r\n        if(_arg_5 == LegacyWallGeometry.R)\r\n        {\r\n            _local_8 = (_local_8 + ((_arg_3 / (this._scale / 2)) - 0.5));\r\n            _local_9 = (_local_9 + 0.5);\r\n            _local_10 = (_local_10 - ((_arg_4 - (_arg_3 / 2)) / (this._scale / 2)));\r\n        }\r\n        else\r\n        {\r\n            _local_9 = (_local_9 + ((((this._scale / 2) - _arg_3) / (this._scale / 2)) - 0.5));\r\n            _local_8 = (_local_8 + 0.5);\r\n            _local_10 = (_local_10 - ((_arg_4 - (((this._scale / 2) - _arg_3) / 2)) / (this._scale / 2)));\r\n        }\r\n        const _local_11:Vector3d = new Vector3d(_local_8, _local_9, _local_10);\r\n        return _local_11;\r\n    }\r\n\r\n    public getLocationOldFormat(k: number, _arg_2: number, _arg_3: string):IVector3D\r\n    {\r\n        let _local_4: number;\r\n        let _local_5: number;\r\n        let _local_6 = 0;\r\n        let _local_7 = 0;\r\n        _local_5 = Math.ceil(k);\r\n        _local_6 = (_local_5 - k);\r\n        let _local_8: number;\r\n        let _local_9: number;\r\n        let _local_11: number;\r\n        let _local_12 = 0;\r\n        _local_4 = 0;\r\n        while(_local_4 < this._width)\r\n        {\r\n            if(((_local_5 >= 0) && (_local_5 < this._height)))\r\n            {\r\n                if(this.getHeight(_local_4, _local_5) <= this._floorHeight)\r\n                {\r\n                    _local_8 = (_local_4 - 1);\r\n                    _local_9 = _local_5;\r\n                    _local_7 = _local_4;\r\n                    _arg_3 = LegacyWallGeometry.L;\r\n                    break;\r\n                }\r\n                if(this.getHeight(_local_4, (_local_5 + 1)) <= this._floorHeight)\r\n                {\r\n                    _local_8 = _local_4;\r\n                    _local_9 = _local_5;\r\n                    _local_7 = (_local_9 - k);\r\n                    _arg_3 = LegacyWallGeometry.R;\r\n                    break;\r\n                }\r\n            }\r\n            _local_5++;\r\n            _local_4++;\r\n        }\r\n        const _local_10 = ((this.scale / 2) * _local_6);\r\n        let _local_13: number = ((-(_local_7) * this.scale) / 2);\r\n        _local_13 = (_local_13 + ((((-(_arg_2) * 18) / 32) * this.scale) / 2));\r\n        _local_12 = this.getHeight(_local_8, _local_9);\r\n        _local_11 = (((_local_12 * this.scale) / 2) + _local_13);\r\n        if(_arg_3 == LegacyWallGeometry.R)\r\n        {\r\n            _local_11 = (_local_11 + ((_local_6 * this.scale) / 4));\r\n        }\r\n        else\r\n        {\r\n            _local_11 = (_local_11 + (((1 - _local_6) * this.scale) / 4));\r\n        }\r\n        return this.getLocation(_local_8, _local_9, _local_10, _local_11, _arg_3);\r\n    }\r\n\r\n    public getOldLocation(k:IVector3D, _arg_2: number): [ number, number, number, number, string ]\r\n    {\r\n        if(k == null)\r\n        {\r\n            return null;\r\n        }\r\n        let _local_3 = 0;\r\n        let _local_4 = 0;\r\n        let _local_5 = 0;\r\n        let _local_6 = 0;\r\n        let _local_7 = '';\r\n        let _local_8 = 0;\r\n        if(_arg_2 == 90)\r\n        {\r\n            _local_3 = Math.floor((k.x - 0.5));\r\n            _local_4 = Math.floor((k.y + 0.5));\r\n            _local_8 = this.getHeight(_local_3, _local_4);\r\n            _local_5 = ((this._scale / 2) - (((k.y - _local_4) + 0.5) * (this._scale / 2)));\r\n            _local_6 = (((_local_8 - k.z) * (this._scale / 2)) + (((this._scale / 2) - _local_5) / 2));\r\n            _local_7 = LegacyWallGeometry.L;\r\n        }\r\n        else\r\n        {\r\n            if(_arg_2 == 180)\r\n            {\r\n                _local_3 = Math.floor((k.x + 0.5));\r\n                _local_4 = Math.floor((k.y - 0.5));\r\n                _local_8 = this.getHeight(_local_3, _local_4);\r\n                _local_5 = (((k.x + 0.5) - _local_3) * (this._scale / 2));\r\n                _local_6 = (((_local_8 - k.z) * (this._scale / 2)) + (_local_5 / 2));\r\n                _local_7 = LegacyWallGeometry.R;\r\n            }\r\n            else\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n        return [_local_3, _local_4, _local_5, _local_6, _local_7];\r\n    }\r\n\r\n    public getOldLocationString(k:IVector3D, _arg_2: number): string\r\n    {\r\n        const _local_3 = this.getOldLocation(k, _arg_2);\r\n        if(_local_3 == null)\r\n        {\r\n            return null;\r\n        }\r\n        const _local_4: number = Math.trunc(_local_3[0]);\r\n        const _local_5: number = Math.trunc(_local_3[1]);\r\n        const _local_6: number = Math.trunc(_local_3[2]);\r\n        const _local_7: number = Math.trunc(_local_3[3]);\r\n        const _local_8: string = _local_3[4];\r\n        const _local_9: string = (((((((((':w=' + _local_4) + ',') + _local_5) + ' l=') + _local_6) + ',') + _local_7) + ' ') + _local_8);\r\n        return _local_9;\r\n    }\r\n\r\n    public getDirection(k: string): number\r\n    {\r\n        if(k == LegacyWallGeometry.R)\r\n        {\r\n            return 180;\r\n        }\r\n        return 90;\r\n    }\r\n\r\n    public getFloorAltitude(k: number, _arg_2: number): number\r\n    {\r\n        const _local_3 = this.getHeight(k, _arg_2);\r\n        const _local_4 = (_local_3 + 1);\r\n\r\n        return _local_3 + (((((((((Math.trunc(this.getHeight((k - 1), (_arg_2 - 1))) == _local_4) || (Math.trunc(this.getHeight(k, (_arg_2 - 1))) == _local_4)) || (Math.trunc(this.getHeight((k + 1), (_arg_2 - 1))) == _local_4)) || (Math.trunc(this.getHeight((k - 1), _arg_2)) == _local_4)) || (Math.trunc(this.getHeight((k + 1), _arg_2)) == _local_4)) || (Math.trunc(this.getHeight((k - 1), (_arg_2 + 1))) == _local_4)) || (Math.trunc(this.getHeight(k, (_arg_2 + 1))) == _local_4)) || (Math.trunc(this.getHeight((k + 1), (_arg_2 + 1))) == _local_4)) ? 0.5 : 0);\r\n    }\r\n\r\n    public isRoomTile(k: number, _arg_2: number): boolean\r\n    {\r\n        return ((((k >= 0) && (k < this._width)) && (_arg_2 >= 0)) && (_arg_2 < this._height)) && (this._heightMap[_arg_2][k] >= 0);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}