{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/guide-tool/GuideToolView.tsx\",\n    _s = $RefreshSig$();\n\nimport { GuideOnDutyStatusMessageEvent, GuideSessionAttachedMessageEvent, GuideSessionDetachedMessageEvent, GuideSessionEndedMessageEvent, GuideSessionInvitedToGuideRoomMessageEvent, GuideSessionMessageMessageEvent, GuideSessionOnDutyUpdateMessageComposer, GuideSessionPartnerIsTypingMessageEvent, GuideSessionStartedMessageEvent, PerkAllowancesMessageEvent, PerkEnum } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useState } from 'react';\nimport { AddEventLinkTracker, GetConfiguration, GetSessionDataManager, LocalizeText, RemoveLinkEventTracker, SendMessageComposer } from '../../api';\nimport { NitroCardContentView, NitroCardHeaderView, NitroCardView } from '../../common';\nimport { GuideToolEvent, NotificationAlertEvent } from '../../events';\nimport { DispatchUiEvent, UseMessageEventHook, UseUiEvent } from '../../hooks';\nimport { GuideSessionState } from './common/GuideSessionState';\nimport { GuideToolMessage } from './common/GuideToolMessage';\nimport { GuideToolMessageGroup } from './common/GuideToolMessageGroup';\nimport { GuideToolAcceptView } from './views/GuideToolAcceptView';\nimport { GuideToolMenuView } from './views/GuideToolMenuView';\nimport { GuideToolOngoingView } from './views/GuideToolOngoingView';\nimport { GuideToolUserCreateRequestView } from './views/GuideToolUserCreateRequestView';\nimport { GuideToolUserFeedbackView } from './views/GuideToolUserFeedbackView';\nimport { GuideToolUserPendingView } from './views/GuideToolUserPendingView';\nimport { GuideToolUserThanksView } from './views/GuideToolUserThanksView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GuideToolView = props => {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [headerText, setHeaderText] = useState(LocalizeText('guide.help.guide.tool.title'));\n  const [noCloseButton, setNoCloseButton] = useState(false);\n  const [sessionState, setSessionState] = useState(GuideSessionState.GUIDE_TOOL_MENU);\n  const [isOnDuty, setIsOnDuty] = useState(false);\n  const [isHandlingBullyReports, setIsHandlingBullyReports] = useState(false);\n  const [isHandlingGuideRequests, setIsHandlingGuideRequests] = useState(false);\n  const [isHandlingHelpRequests, setIsHandlingHelpRequests] = useState(false);\n  const [helpersOnDuty, setHelpersOnDuty] = useState(0);\n  const [guidesOnDuty, setGuidesOnDuty] = useState(0);\n  const [guardiansOnDuty, setGuardiansOnDuty] = useState(0);\n  const [userRequest, setUserRequest] = useState('');\n  const [helpRequestDescription, setHelpRequestDescription] = useState(null);\n  const [helpRequestAverageTime, setHelpRequestAverageTime] = useState(0);\n  const [ongoingUserId, setOngoingUserId] = useState(0);\n  const [ongoingUsername, setOngoingUsername] = useState(null);\n  const [ongoingFigure, setOngoingFigure] = useState(null);\n  const [ongoingIsTyping, setOngoingIsTyping] = useState(false);\n  const [ongoingMessageGroups, setOngoingMessageGroups] = useState([]);\n  const updateSessionState = useCallback((newState, replacement) => {\n    switch (newState) {\n      case GuideSessionState.GUIDE_TOOL_MENU:\n        setHeaderText(LocalizeText('guide.help.guide.tool.title'));\n        setNoCloseButton(false);\n        break;\n\n      case GuideSessionState.GUIDE_ACCEPT:\n        setHeaderText(LocalizeText('guide.help.request.guide.accept.title'));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.GUIDE_ONGOING:\n        setHeaderText(LocalizeText('guide.help.request.guide.ongoing.title', ['name'], [replacement]));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.USER_CREATE:\n        setHeaderText(LocalizeText('guide.help.request.user.create.title'));\n        setNoCloseButton(false);\n        break;\n\n      case GuideSessionState.USER_PENDING:\n        setHeaderText(LocalizeText('guide.help.request.user.pending.title'));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.USER_ONGOING:\n        setHeaderText(LocalizeText('guide.help.request.user.ongoing.title', ['name'], [replacement]));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.USER_FEEDBACK:\n        setHeaderText(LocalizeText('guide.help.request.user.feedback.title'));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.USER_THANKS:\n        setHeaderText(LocalizeText('guide.help.request.user.thanks.title'));\n        setNoCloseButton(false);\n        break;\n    }\n\n    setSessionState(newState);\n    setIsVisible(true);\n  }, []);\n  const onGuideToolEvent = useCallback(event => {\n    switch (event.type) {\n      case GuideToolEvent.SHOW_GUIDE_TOOL:\n        setIsVisible(true);\n        return;\n\n      case GuideToolEvent.HIDE_GUIDE_TOOL:\n        setIsVisible(false);\n        return;\n\n      case GuideToolEvent.TOGGLE_GUIDE_TOOL:\n        setIsVisible(value => !value);\n        return;\n\n      case GuideToolEvent.CREATE_HELP_REQUEST:\n        updateSessionState(GuideSessionState.USER_CREATE);\n        return;\n    }\n  }, [updateSessionState]);\n  UseUiEvent(GuideToolEvent.SHOW_GUIDE_TOOL, onGuideToolEvent);\n  UseUiEvent(GuideToolEvent.HIDE_GUIDE_TOOL, onGuideToolEvent);\n  UseUiEvent(GuideToolEvent.TOGGLE_GUIDE_TOOL, onGuideToolEvent);\n  UseUiEvent(GuideToolEvent.CREATE_HELP_REQUEST, onGuideToolEvent);\n  const onPerkAllowancesMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n\n    if (!parser.isAllowed(PerkEnum.USE_GUIDE_TOOL) && isOnDuty) {\n      setIsOnDuty(false);\n      SendMessageComposer(new GuideSessionOnDutyUpdateMessageComposer(false, false, false, false));\n    }\n  }, [isOnDuty, setIsOnDuty]);\n  UseMessageEventHook(PerkAllowancesMessageEvent, onPerkAllowancesMessageEvent);\n  const onGuideOnDutyStatusMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n    setIsOnDuty(parser.onDuty);\n    setGuidesOnDuty(parser.guidesOnDuty);\n    setHelpersOnDuty(parser.helpersOnDuty);\n    setGuardiansOnDuty(parser.guardiansOnDuty);\n  }, [setIsOnDuty, setHelpersOnDuty, setGuidesOnDuty, setGuardiansOnDuty]);\n  UseMessageEventHook(GuideOnDutyStatusMessageEvent, onGuideOnDutyStatusMessageEvent);\n  const onGuideSessionAttachedMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n    setHelpRequestDescription(parser.helpRequestDescription);\n    setHelpRequestAverageTime(parser.roleSpecificWaitTime);\n    if (parser.asGuide && isOnDuty) updateSessionState(GuideSessionState.GUIDE_ACCEPT);\n    if (!parser.asGuide) updateSessionState(GuideSessionState.USER_PENDING);\n  }, [isOnDuty, updateSessionState]);\n  UseMessageEventHook(GuideSessionAttachedMessageEvent, onGuideSessionAttachedMessageEvent);\n  const onGuideSessionStartedMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n\n    if (isOnDuty) {\n      setOngoingUserId(parser.requesterUserId);\n      setOngoingUsername(parser.requesterName);\n      setOngoingFigure(parser.requesterFigure);\n      updateSessionState(GuideSessionState.GUIDE_ONGOING, parser.requesterName);\n    } else {\n      setOngoingUserId(parser.guideUserId);\n      setOngoingUsername(parser.guideName);\n      setOngoingFigure(parser.guideFigure);\n      updateSessionState(GuideSessionState.USER_ONGOING, parser.guideName);\n    }\n  }, [isOnDuty, updateSessionState]);\n  UseMessageEventHook(GuideSessionStartedMessageEvent, onGuideSessionStartedMessageEvent);\n  const onGuideSessionPartnerIsTypingMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n    setOngoingIsTyping(parser.isTyping);\n  }, []);\n  UseMessageEventHook(GuideSessionPartnerIsTypingMessageEvent, onGuideSessionPartnerIsTypingMessageEvent);\n  const onGuideSessionMessageMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n    const messageGroups = [...ongoingMessageGroups];\n    let lastGroup = messageGroups[messageGroups.length - 1];\n\n    if (!lastGroup || lastGroup.userId !== parser.senderId) {\n      lastGroup = new GuideToolMessageGroup(parser.senderId);\n      messageGroups.push(lastGroup);\n    }\n\n    lastGroup.addChat(new GuideToolMessage(parser.chatMessage));\n    setOngoingMessageGroups(messageGroups);\n  }, [ongoingMessageGroups]);\n  UseMessageEventHook(GuideSessionMessageMessageEvent, onGuideSessionMessageMessageEvent);\n  const onGuideSessionInvitedToGuideRoomMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n    const messageGroups = [...ongoingMessageGroups];\n    let lastGroup = messageGroups[messageGroups.length - 1];\n    const guideId = isOnDuty ? GetSessionDataManager().userId : ongoingUserId;\n\n    if (!lastGroup || lastGroup.userId !== guideId) {\n      lastGroup = new GuideToolMessageGroup(guideId);\n      messageGroups.push(lastGroup);\n    }\n\n    lastGroup.addChat(new GuideToolMessage(parser.roomName, parser.roomId));\n    setOngoingMessageGroups(messageGroups);\n  }, [isOnDuty, ongoingMessageGroups, ongoingUserId]);\n  UseMessageEventHook(GuideSessionInvitedToGuideRoomMessageEvent, onGuideSessionInvitedToGuideRoomMessageEvent);\n  const onGuideSessionEndedMessageEvent = useCallback(event => {\n    if (isOnDuty) {\n      setOngoingUserId(0);\n      setOngoingUsername(null);\n      setOngoingFigure(null);\n      setOngoingIsTyping(false);\n      setOngoingMessageGroups([]);\n      updateSessionState(GuideSessionState.GUIDE_TOOL_MENU);\n    } else {\n      updateSessionState(GuideSessionState.USER_FEEDBACK);\n    }\n  }, [isOnDuty, updateSessionState]);\n  UseMessageEventHook(GuideSessionEndedMessageEvent, onGuideSessionEndedMessageEvent);\n  const onGuideSessionDetachedMessageEvent = useCallback(event => {\n    setOngoingUserId(0);\n    setOngoingUsername(null);\n    setOngoingFigure(null);\n    setOngoingIsTyping(false);\n    setOngoingMessageGroups([]);\n\n    if (isOnDuty) {\n      updateSessionState(GuideSessionState.GUIDE_TOOL_MENU);\n    } else {\n      updateSessionState(GuideSessionState.USER_THANKS);\n    }\n  }, [isOnDuty, updateSessionState]);\n  UseMessageEventHook(GuideSessionDetachedMessageEvent, onGuideSessionDetachedMessageEvent);\n  const linkReceived = useCallback(url => {\n    const parts = url.split('/');\n    if (parts.length < 2) return;\n\n    switch (parts[1]) {\n      case 'tour':\n        //Create Tour Request\n        return;\n    }\n  }, []);\n  useEffect(() => {\n    const linkTracker = {\n      linkReceived,\n      eventUrlPrefix: 'help/'\n    };\n    AddEventLinkTracker(linkTracker);\n    return () => RemoveLinkEventTracker(linkTracker);\n  }, [linkReceived]);\n  const processAction = useCallback(action => {\n    switch (action) {\n      case 'close':\n        setIsVisible(false);\n        setUserRequest('');\n        setSessionState(GuideSessionState.GUIDE_TOOL_MENU);\n        return;\n\n      case 'toggle_duty':\n        if (!isHandlingBullyReports && !isHandlingGuideRequests && !isHandlingHelpRequests) {\n          DispatchUiEvent(new NotificationAlertEvent([LocalizeText('guide.help.guide.tool.noqueueselected.message')], null, null, null, LocalizeText('guide.help.guide.tool.noqueueselected.caption'), null));\n          return;\n        }\n\n        setIsOnDuty(v => {\n          SendMessageComposer(new GuideSessionOnDutyUpdateMessageComposer(!v, v ? false : isHandlingGuideRequests, v ? false : isHandlingHelpRequests, v ? false : isHandlingBullyReports));\n          return !v;\n        });\n        return;\n\n      case 'forum_link':\n        const url = GetConfiguration('group.homepage.url', '').replace('%groupid%', GetConfiguration('guide.help.alpha.groupid', '0'));\n        window.open(url);\n        return;\n    }\n  }, [isHandlingBullyReports, isHandlingGuideRequests, isHandlingHelpRequests]);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    className: \"nitro-guide-tool\",\n    theme: \"primary\",\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: headerText,\n      onCloseClick: event => processAction('close'),\n      noCloseButton: noCloseButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      className: \"text-black\",\n      children: [sessionState === GuideSessionState.GUIDE_TOOL_MENU && /*#__PURE__*/_jsxDEV(GuideToolMenuView, {\n        isOnDuty: isOnDuty,\n        isHandlingGuideRequests: isHandlingGuideRequests,\n        setIsHandlingGuideRequests: setIsHandlingGuideRequests,\n        isHandlingHelpRequests: isHandlingHelpRequests,\n        setIsHandlingHelpRequests: setIsHandlingHelpRequests,\n        isHandlingBullyReports: isHandlingBullyReports,\n        setIsHandlingBullyReports: setIsHandlingBullyReports,\n        guidesOnDuty: guidesOnDuty,\n        helpersOnDuty: helpersOnDuty,\n        guardiansOnDuty: guardiansOnDuty,\n        processAction: processAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.GUIDE_ACCEPT && /*#__PURE__*/_jsxDEV(GuideToolAcceptView, {\n        helpRequestDescription: helpRequestDescription,\n        helpRequestAverageTime: helpRequestAverageTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }, this), [GuideSessionState.GUIDE_ONGOING, GuideSessionState.USER_ONGOING].includes(sessionState) && /*#__PURE__*/_jsxDEV(GuideToolOngoingView, {\n        isGuide: isOnDuty,\n        userId: ongoingUserId,\n        userName: ongoingUsername,\n        userFigure: ongoingFigure,\n        isTyping: ongoingIsTyping,\n        messageGroups: ongoingMessageGroups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.USER_CREATE && /*#__PURE__*/_jsxDEV(GuideToolUserCreateRequestView, {\n        userRequest: userRequest,\n        setUserRequest: setUserRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.USER_PENDING && /*#__PURE__*/_jsxDEV(GuideToolUserPendingView, {\n        helpRequestDescription: helpRequestDescription,\n        helpRequestAverageTime: helpRequestAverageTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.USER_FEEDBACK && /*#__PURE__*/_jsxDEV(GuideToolUserFeedbackView, {\n        userName: ongoingUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.USER_THANKS && /*#__PURE__*/_jsxDEV(GuideToolUserThanksView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GuideToolView, \"LfzRiKTPanqgxw5UdaT84RNjv64=\");\n\n_c = GuideToolView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuideToolView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/guide-tool/GuideToolView.tsx"],"names":["GuideOnDutyStatusMessageEvent","GuideSessionAttachedMessageEvent","GuideSessionDetachedMessageEvent","GuideSessionEndedMessageEvent","GuideSessionInvitedToGuideRoomMessageEvent","GuideSessionMessageMessageEvent","GuideSessionOnDutyUpdateMessageComposer","GuideSessionPartnerIsTypingMessageEvent","GuideSessionStartedMessageEvent","PerkAllowancesMessageEvent","PerkEnum","useCallback","useEffect","useState","AddEventLinkTracker","GetConfiguration","GetSessionDataManager","LocalizeText","RemoveLinkEventTracker","SendMessageComposer","NitroCardContentView","NitroCardHeaderView","NitroCardView","GuideToolEvent","NotificationAlertEvent","DispatchUiEvent","UseMessageEventHook","UseUiEvent","GuideSessionState","GuideToolMessage","GuideToolMessageGroup","GuideToolAcceptView","GuideToolMenuView","GuideToolOngoingView","GuideToolUserCreateRequestView","GuideToolUserFeedbackView","GuideToolUserPendingView","GuideToolUserThanksView","GuideToolView","props","isVisible","setIsVisible","headerText","setHeaderText","noCloseButton","setNoCloseButton","sessionState","setSessionState","GUIDE_TOOL_MENU","isOnDuty","setIsOnDuty","isHandlingBullyReports","setIsHandlingBullyReports","isHandlingGuideRequests","setIsHandlingGuideRequests","isHandlingHelpRequests","setIsHandlingHelpRequests","helpersOnDuty","setHelpersOnDuty","guidesOnDuty","setGuidesOnDuty","guardiansOnDuty","setGuardiansOnDuty","userRequest","setUserRequest","helpRequestDescription","setHelpRequestDescription","helpRequestAverageTime","setHelpRequestAverageTime","ongoingUserId","setOngoingUserId","ongoingUsername","setOngoingUsername","ongoingFigure","setOngoingFigure","ongoingIsTyping","setOngoingIsTyping","ongoingMessageGroups","setOngoingMessageGroups","updateSessionState","newState","replacement","GUIDE_ACCEPT","GUIDE_ONGOING","USER_CREATE","USER_PENDING","USER_ONGOING","USER_FEEDBACK","USER_THANKS","onGuideToolEvent","event","type","SHOW_GUIDE_TOOL","HIDE_GUIDE_TOOL","TOGGLE_GUIDE_TOOL","value","CREATE_HELP_REQUEST","onPerkAllowancesMessageEvent","parser","getParser","isAllowed","USE_GUIDE_TOOL","onGuideOnDutyStatusMessageEvent","onDuty","onGuideSessionAttachedMessageEvent","roleSpecificWaitTime","asGuide","onGuideSessionStartedMessageEvent","requesterUserId","requesterName","requesterFigure","guideUserId","guideName","guideFigure","onGuideSessionPartnerIsTypingMessageEvent","isTyping","onGuideSessionMessageMessageEvent","messageGroups","lastGroup","length","userId","senderId","push","addChat","chatMessage","onGuideSessionInvitedToGuideRoomMessageEvent","guideId","roomName","roomId","onGuideSessionEndedMessageEvent","onGuideSessionDetachedMessageEvent","linkReceived","url","parts","split","linkTracker","eventUrlPrefix","processAction","action","v","replace","window","open","includes"],"mappings":"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","sourcesContent":["import { GuideOnDutyStatusMessageEvent, GuideSessionAttachedMessageEvent, GuideSessionDetachedMessageEvent, GuideSessionEndedMessageEvent, GuideSessionInvitedToGuideRoomMessageEvent, GuideSessionMessageMessageEvent, GuideSessionOnDutyUpdateMessageComposer, GuideSessionPartnerIsTypingMessageEvent, GuideSessionStartedMessageEvent, ILinkEventTracker, PerkAllowancesMessageEvent, PerkEnum } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { AddEventLinkTracker, GetConfiguration, GetSessionDataManager, LocalizeText, RemoveLinkEventTracker, SendMessageComposer } from '../../api';\nimport { NitroCardContentView, NitroCardHeaderView, NitroCardView } from '../../common';\nimport { GuideToolEvent, NotificationAlertEvent } from '../../events';\nimport { DispatchUiEvent, UseMessageEventHook, UseUiEvent } from '../../hooks';\nimport { GuideSessionState } from './common/GuideSessionState';\nimport { GuideToolMessage } from './common/GuideToolMessage';\nimport { GuideToolMessageGroup } from './common/GuideToolMessageGroup';\nimport { GuideToolAcceptView } from './views/GuideToolAcceptView';\nimport { GuideToolMenuView } from './views/GuideToolMenuView';\nimport { GuideToolOngoingView } from './views/GuideToolOngoingView';\nimport { GuideToolUserCreateRequestView } from './views/GuideToolUserCreateRequestView';\nimport { GuideToolUserFeedbackView } from './views/GuideToolUserFeedbackView';\nimport { GuideToolUserPendingView } from './views/GuideToolUserPendingView';\nimport { GuideToolUserThanksView } from './views/GuideToolUserThanksView';\n\nexport const GuideToolView: FC<{}> = props =>\n{\n    const [ isVisible, setIsVisible ] = useState<boolean>(false);\n    const [ headerText, setHeaderText ] = useState<string>(LocalizeText('guide.help.guide.tool.title'));\n    const [ noCloseButton, setNoCloseButton ] = useState<boolean>(false);\n    const [ sessionState, setSessionState ] = useState<string>(GuideSessionState.GUIDE_TOOL_MENU);\n\n    const [ isOnDuty, setIsOnDuty ] = useState<boolean>(false);\n    const [ isHandlingBullyReports, setIsHandlingBullyReports ] = useState<boolean>(false);\n    const [ isHandlingGuideRequests, setIsHandlingGuideRequests ] = useState<boolean>(false);\n    const [ isHandlingHelpRequests, setIsHandlingHelpRequests ] = useState<boolean>(false);\n\n    const [ helpersOnDuty, setHelpersOnDuty ] = useState<number>(0);\n    const [ guidesOnDuty, setGuidesOnDuty ] = useState<number>(0);\n    const [ guardiansOnDuty, setGuardiansOnDuty ] = useState<number>(0);\n\n    const [ userRequest, setUserRequest ] = useState<string>('');\n\n    const [ helpRequestDescription, setHelpRequestDescription ] = useState<string>(null);\n    const [ helpRequestAverageTime, setHelpRequestAverageTime ] = useState<number>(0);\n\n    const [ ongoingUserId, setOngoingUserId ] = useState<number>(0);\n    const [ ongoingUsername, setOngoingUsername ] = useState<string>(null);\n    const [ ongoingFigure, setOngoingFigure ] = useState<string>(null);\n    const [ ongoingIsTyping, setOngoingIsTyping ] = useState<boolean>(false);\n    const [ ongoingMessageGroups, setOngoingMessageGroups ] = useState<GuideToolMessageGroup[]>([]);\n\n    const updateSessionState = useCallback((newState: string, replacement?: string) =>\n    {\n        switch(newState)\n        {\n            case GuideSessionState.GUIDE_TOOL_MENU:\n                setHeaderText(LocalizeText('guide.help.guide.tool.title'));\n                setNoCloseButton(false);\n                break;\n            case GuideSessionState.GUIDE_ACCEPT:\n                setHeaderText(LocalizeText('guide.help.request.guide.accept.title'));\n                setNoCloseButton(true);\n                break;\n            case GuideSessionState.GUIDE_ONGOING:\n                setHeaderText(LocalizeText('guide.help.request.guide.ongoing.title', [ 'name' ], [ replacement ]));\n                setNoCloseButton(true);\n                break;\n            case GuideSessionState.USER_CREATE:\n                setHeaderText(LocalizeText('guide.help.request.user.create.title'));\n                setNoCloseButton(false);\n                break;\n            case GuideSessionState.USER_PENDING:\n                setHeaderText(LocalizeText('guide.help.request.user.pending.title'));\n                setNoCloseButton(true);\n                break;\n            case GuideSessionState.USER_ONGOING:\n                setHeaderText(LocalizeText('guide.help.request.user.ongoing.title', [ 'name' ], [ replacement ]));\n                setNoCloseButton(true);\n                break;\n            case GuideSessionState.USER_FEEDBACK:\n                setHeaderText(LocalizeText('guide.help.request.user.feedback.title'));\n                setNoCloseButton(true);\n                break;\n            case GuideSessionState.USER_THANKS:\n                setHeaderText(LocalizeText('guide.help.request.user.thanks.title'));\n                setNoCloseButton(false);\n                break;\n        }\n\n        setSessionState(newState);\n        setIsVisible(true);\n    }, []);\n\n    const onGuideToolEvent = useCallback((event: GuideToolEvent) =>\n    {\n        switch(event.type)\n        {\n            case GuideToolEvent.SHOW_GUIDE_TOOL:\n                setIsVisible(true);\n                return;\n            case GuideToolEvent.HIDE_GUIDE_TOOL:\n                setIsVisible(false);\n                return;   \n            case GuideToolEvent.TOGGLE_GUIDE_TOOL:\n                setIsVisible(value => !value);\n                return;\n            case GuideToolEvent.CREATE_HELP_REQUEST:\n                updateSessionState(GuideSessionState.USER_CREATE);\n                return;\n        }\n    }, [ updateSessionState ]);\n\n    UseUiEvent(GuideToolEvent.SHOW_GUIDE_TOOL, onGuideToolEvent);\n    UseUiEvent(GuideToolEvent.HIDE_GUIDE_TOOL, onGuideToolEvent);\n    UseUiEvent(GuideToolEvent.TOGGLE_GUIDE_TOOL, onGuideToolEvent);\n    UseUiEvent(GuideToolEvent.CREATE_HELP_REQUEST, onGuideToolEvent);\n\n    const onPerkAllowancesMessageEvent = useCallback((event: PerkAllowancesMessageEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(!parser.isAllowed(PerkEnum.USE_GUIDE_TOOL) && isOnDuty)\n        {\n            setIsOnDuty(false);\n            SendMessageComposer(new GuideSessionOnDutyUpdateMessageComposer(false, false, false, false));\n        }\n    }, [ isOnDuty, setIsOnDuty ]);\n\n    UseMessageEventHook(PerkAllowancesMessageEvent, onPerkAllowancesMessageEvent);\n\n    const onGuideOnDutyStatusMessageEvent = useCallback((event: GuideOnDutyStatusMessageEvent) =>\n    {\n        const parser = event.getParser();\n\n        setIsOnDuty(parser.onDuty);\n        setGuidesOnDuty(parser.guidesOnDuty);\n        setHelpersOnDuty(parser.helpersOnDuty);\n        setGuardiansOnDuty(parser.guardiansOnDuty);\n    }, [ setIsOnDuty, setHelpersOnDuty, setGuidesOnDuty, setGuardiansOnDuty ]);\n\n    UseMessageEventHook(GuideOnDutyStatusMessageEvent, onGuideOnDutyStatusMessageEvent);\n\n    const onGuideSessionAttachedMessageEvent = useCallback((event: GuideSessionAttachedMessageEvent) =>\n    {\n        const parser = event.getParser();\n\n        setHelpRequestDescription(parser.helpRequestDescription);\n        setHelpRequestAverageTime(parser.roleSpecificWaitTime);\n\n        if(parser.asGuide && isOnDuty) updateSessionState(GuideSessionState.GUIDE_ACCEPT);\n        \n        if(!parser.asGuide) updateSessionState(GuideSessionState.USER_PENDING);\n        \n    }, [ isOnDuty, updateSessionState ]);\n\n    UseMessageEventHook(GuideSessionAttachedMessageEvent, onGuideSessionAttachedMessageEvent);\n    \n    const onGuideSessionStartedMessageEvent = useCallback((event: GuideSessionStartedMessageEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(isOnDuty)\n        {\n            setOngoingUserId(parser.requesterUserId);\n            setOngoingUsername(parser.requesterName);\n            setOngoingFigure(parser.requesterFigure);\n            updateSessionState(GuideSessionState.GUIDE_ONGOING, parser.requesterName);\n        }\n        else\n        {\n            setOngoingUserId(parser.guideUserId);\n            setOngoingUsername(parser.guideName);\n            setOngoingFigure(parser.guideFigure);\n            updateSessionState(GuideSessionState.USER_ONGOING, parser.guideName);\n        }\n    }, [ isOnDuty, updateSessionState ]);\n\n    UseMessageEventHook(GuideSessionStartedMessageEvent, onGuideSessionStartedMessageEvent);\n\n    const onGuideSessionPartnerIsTypingMessageEvent = useCallback((event: GuideSessionPartnerIsTypingMessageEvent) =>\n    {\n        const parser = event.getParser();\n\n        setOngoingIsTyping(parser.isTyping);\n    }, []);\n\n    UseMessageEventHook(GuideSessionPartnerIsTypingMessageEvent, onGuideSessionPartnerIsTypingMessageEvent);\n    \n    const onGuideSessionMessageMessageEvent = useCallback((event: GuideSessionMessageMessageEvent) =>\n    {\n        const parser = event.getParser();\n\n        const messageGroups = [ ...ongoingMessageGroups ];\n\n        let lastGroup = messageGroups[messageGroups.length - 1];\n\n        if(!lastGroup || lastGroup.userId !== parser.senderId)\n        {\n            lastGroup = new GuideToolMessageGroup(parser.senderId);\n            messageGroups.push(lastGroup);\n        }\n\n        lastGroup.addChat(new GuideToolMessage(parser.chatMessage));\n        setOngoingMessageGroups(messageGroups);\n    }, [ ongoingMessageGroups ]);\n\n    UseMessageEventHook(GuideSessionMessageMessageEvent, onGuideSessionMessageMessageEvent);\n\n    const onGuideSessionInvitedToGuideRoomMessageEvent = useCallback((event: GuideSessionInvitedToGuideRoomMessageEvent) =>\n    {\n        const parser = event.getParser();\n\n        const messageGroups = [ ...ongoingMessageGroups ];\n\n        let lastGroup = messageGroups[messageGroups.length - 1];\n\n        const guideId = (isOnDuty ? GetSessionDataManager().userId : ongoingUserId);\n\n        if(!lastGroup || lastGroup.userId !== guideId)\n        {\n            lastGroup = new GuideToolMessageGroup(guideId);\n            messageGroups.push(lastGroup);\n        }\n\n        lastGroup.addChat(new GuideToolMessage(parser.roomName, parser.roomId));\n        setOngoingMessageGroups(messageGroups);\n    }, [ isOnDuty, ongoingMessageGroups, ongoingUserId ]);\n\n    UseMessageEventHook(GuideSessionInvitedToGuideRoomMessageEvent, onGuideSessionInvitedToGuideRoomMessageEvent);\n\n    const onGuideSessionEndedMessageEvent = useCallback((event: GuideSessionEndedMessageEvent) =>\n    {\n        if(isOnDuty)\n        {\n            setOngoingUserId(0);\n            setOngoingUsername(null);\n            setOngoingFigure(null);\n            setOngoingIsTyping(false);\n            setOngoingMessageGroups([]);\n            updateSessionState(GuideSessionState.GUIDE_TOOL_MENU);\n        }\n        else\n        {\n            updateSessionState(GuideSessionState.USER_FEEDBACK);\n        }\n    }, [ isOnDuty, updateSessionState ]);\n\n    UseMessageEventHook(GuideSessionEndedMessageEvent, onGuideSessionEndedMessageEvent);\n\n    const onGuideSessionDetachedMessageEvent = useCallback((event: GuideSessionDetachedMessageEvent) =>\n    {\n        setOngoingUserId(0);\n        setOngoingUsername(null);\n        setOngoingFigure(null);\n        setOngoingIsTyping(false);\n        setOngoingMessageGroups([]);\n\n        if(isOnDuty)\n        {\n            \n            updateSessionState(GuideSessionState.GUIDE_TOOL_MENU);\n        }\n        else\n        {\n            updateSessionState(GuideSessionState.USER_THANKS);\n        }\n    }, [ isOnDuty, updateSessionState ]);\n\n    UseMessageEventHook(GuideSessionDetachedMessageEvent, onGuideSessionDetachedMessageEvent);\n\n    const linkReceived = useCallback((url: string) =>\n    {\n        const parts = url.split('/');\n\n        if(parts.length < 2) return;\n\n        switch(parts[1])\n        {\n            case 'tour':\n            //Create Tour Request\n                return;\n        }\n    }, []);\n\n    useEffect(() =>\n    {\n        const linkTracker: ILinkEventTracker = {\n            linkReceived,\n            eventUrlPrefix: 'help/'\n        };\n\n        AddEventLinkTracker(linkTracker);\n\n        return () => RemoveLinkEventTracker(linkTracker);\n    }, [ linkReceived ]);\n\n    const processAction = useCallback((action: string) =>\n    {\n        switch(action)\n        {\n            case 'close':\n                setIsVisible(false);\n                setUserRequest('');\n                setSessionState(GuideSessionState.GUIDE_TOOL_MENU);\n                return;\n            case 'toggle_duty':\n                if(!isHandlingBullyReports && !isHandlingGuideRequests && !isHandlingHelpRequests)\n                {\n                    DispatchUiEvent(new NotificationAlertEvent([ LocalizeText('guide.help.guide.tool.noqueueselected.message') ], null, null, null, LocalizeText('guide.help.guide.tool.noqueueselected.caption'), null));\n                    return;\n                }\n\n                setIsOnDuty(v =>\n                {\n                    SendMessageComposer(new GuideSessionOnDutyUpdateMessageComposer(!v, v ? false : isHandlingGuideRequests, v ? false : isHandlingHelpRequests, v ? false : isHandlingBullyReports));\n                    return !v;\n                });\n                \n                return;\n            case 'forum_link':\n                const url: string = GetConfiguration<string>('group.homepage.url', '').replace('%groupid%', GetConfiguration<string>('guide.help.alpha.groupid', '0'));\n                window.open(url);\n                return;\n        }\n    }, [ isHandlingBullyReports, isHandlingGuideRequests, isHandlingHelpRequests ]);\n\n    if(!isVisible) return null;\n\n    return (\n        <NitroCardView className=\"nitro-guide-tool\" theme=\"primary\">\n            <NitroCardHeaderView headerText={ headerText } onCloseClick={ event => processAction('close') } noCloseButton={ noCloseButton } />\n            <NitroCardContentView className=\"text-black\">\n                { (sessionState === GuideSessionState.GUIDE_TOOL_MENU) &&\n                    <GuideToolMenuView isOnDuty={ isOnDuty } isHandlingGuideRequests={ isHandlingGuideRequests } setIsHandlingGuideRequests={ setIsHandlingGuideRequests } isHandlingHelpRequests={ isHandlingHelpRequests } setIsHandlingHelpRequests={ setIsHandlingHelpRequests } isHandlingBullyReports={ isHandlingBullyReports } setIsHandlingBullyReports={ setIsHandlingBullyReports } guidesOnDuty={ guidesOnDuty } helpersOnDuty={ helpersOnDuty } guardiansOnDuty={ guardiansOnDuty } processAction={ processAction } /> } \n                { (sessionState === GuideSessionState.GUIDE_ACCEPT) &&\n                    <GuideToolAcceptView helpRequestDescription={ helpRequestDescription } helpRequestAverageTime={ helpRequestAverageTime } /> }\n                { [ GuideSessionState.GUIDE_ONGOING, GuideSessionState.USER_ONGOING ].includes(sessionState) &&\n                    <GuideToolOngoingView isGuide={ isOnDuty } userId={ ongoingUserId } userName={ ongoingUsername } userFigure={ ongoingFigure } isTyping={ ongoingIsTyping } messageGroups={ ongoingMessageGroups } /> }\n                { (sessionState === GuideSessionState.USER_CREATE) &&\n                    <GuideToolUserCreateRequestView userRequest={ userRequest } setUserRequest={ setUserRequest } /> }\n                { (sessionState === GuideSessionState.USER_PENDING) &&\n                    <GuideToolUserPendingView helpRequestDescription={ helpRequestDescription } helpRequestAverageTime={ helpRequestAverageTime } /> }\n                { (sessionState === GuideSessionState.USER_FEEDBACK) &&\n                    <GuideToolUserFeedbackView userName={ ongoingUsername } /> }\n                { (sessionState === GuideSessionState.USER_THANKS) &&\n                    <GuideToolUserThanksView /> }\n            </NitroCardContentView>\n        </NitroCardView>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}