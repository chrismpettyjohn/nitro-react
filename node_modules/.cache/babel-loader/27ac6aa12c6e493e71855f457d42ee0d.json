{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/HorizontalRule.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Base } from './Base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HorizontalRule = props => {\n  _s();\n\n  const {\n    variant = 'black',\n    height = 1,\n    classNames = [],\n    style = {},\n    ...rest\n  } = props;\n  const getClassNames = useMemo(() => {\n    const newClassNames = [];\n    if (variant) newClassNames.push('bg-' + variant);\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [variant, classNames]);\n  const getStyle = useMemo(() => {\n    let newStyle = {\n      display: 'list-item'\n    };\n    if (height > 0) newStyle.height = height;\n    if (Object.keys(style).length) newStyle = { ...newStyle,\n      ...style\n    };\n    return newStyle;\n  }, [height, style]);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    classNames: getClassNames,\n    style: getStyle,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_s(HorizontalRule, \"JAnVx+4W+r7coZiWP+qo7L5cH5o=\");\n\n_c = HorizontalRule;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalRule\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/HorizontalRule.tsx"],"names":["useMemo","Base","HorizontalRule","props","variant","height","classNames","style","rest","getClassNames","newClassNames","push","length","getStyle","newStyle","display","Object","keys"],"mappings":";;;AAAA,SAA4BA,OAA5B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAgC,QAAhC;;AASA,OAAO,MAAMC,cAAuC,GAAGC,KAAK,IAC5D;AAAA;;AACI,QAAM;AAAEC,IAAAA,OAAO,GAAG,OAAZ;AAAqBC,IAAAA,MAAM,GAAG,CAA9B;AAAiCC,IAAAA,UAAU,GAAG,EAA9C;AAAkDC,IAAAA,KAAK,GAAG,EAA1D;AAA8D,OAAGC;AAAjE,MAA0EL,KAAhF;AAEA,QAAMM,aAAa,GAAGT,OAAO,CAAC,MAC9B;AACI,UAAMU,aAAuB,GAAG,EAAhC;AAEA,QAAGN,OAAH,EAAYM,aAAa,CAACC,IAAd,CAAmB,QAAQP,OAA3B;AAEZ,QAAGE,UAAU,CAACM,MAAd,EAAsBF,aAAa,CAACC,IAAd,CAAmB,GAAGL,UAAtB;AAEtB,WAAOI,aAAP;AACH,GAT4B,EAS1B,CAAEN,OAAF,EAAWE,UAAX,CAT0B,CAA7B;AAWA,QAAMO,QAAQ,GAAGb,OAAO,CAAC,MACzB;AACI,QAAIc,QAAuB,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA9B;AAEA,QAAGV,MAAM,GAAG,CAAZ,EAAeS,QAAQ,CAACT,MAAT,GAAkBA,MAAlB;AAEf,QAAGW,MAAM,CAACC,IAAP,CAAYV,KAAZ,EAAmBK,MAAtB,EAA8BE,QAAQ,GAAG,EAAE,GAAGA,QAAL;AAAe,SAAGP;AAAlB,KAAX;AAE9B,WAAOO,QAAP;AACH,GATuB,EASrB,CAAET,MAAF,EAAUE,KAAV,CATqB,CAAxB;AAWA,sBAAO,QAAC,IAAD;AAAM,IAAA,UAAU,EAAGE,aAAnB;AAAmC,IAAA,KAAK,EAAGI,QAA3C;AAAA,OAA2DL;AAA3D;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA3BM;;GAAMN,c;;KAAAA,c","sourcesContent":["import { CSSProperties, FC, useMemo } from 'react';\nimport { Base, BaseProps } from './Base';\nimport { ColorVariantType } from './types';\n\nexport interface HorizontalRuleProps extends BaseProps<HTMLDivElement>\n{\n    variant?: ColorVariantType;\n    height?: number;\n}\n\nexport const HorizontalRule: FC<HorizontalRuleProps> = props =>\n{\n    const { variant = 'black', height = 1, classNames = [], style = {}, ...rest } = props;\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [];\n\n        if(variant) newClassNames.push('bg-' + variant);\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ variant, classNames ]);\n\n    const getStyle = useMemo(() =>\n    {\n        let newStyle: CSSProperties = { display: 'list-item' };\n\n        if(height > 0) newStyle.height = height;\n\n        if(Object.keys(style).length) newStyle = { ...newStyle, ...style };\n\n        return newStyle;\n    }, [ height, style ]);\n\n    return <Base classNames={ getClassNames } style={ getStyle } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}