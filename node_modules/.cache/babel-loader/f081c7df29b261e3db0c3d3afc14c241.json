{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/WiredView.tsx\",\n    _s = $RefreshSig$();\n\nimport { ConditionDefinition, TriggerDefinition, UpdateActionMessageComposer, UpdateConditionMessageComposer, UpdateTriggerMessageComposer, WiredActionDefinition } from '@nitrots/nitro-renderer';\nimport { useState } from 'react';\nimport { IsOwnerOfFloorFurniture, LocalizeText, NotificationUtilities, SendMessageComposer } from '../../api';\nimport { GetWiredLayout } from './common/GetWiredLayout';\nimport { WiredContextProvider } from './WiredContext';\nimport { WiredMessageHandler } from './WiredMessageHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredView = props => {\n  _s();\n\n  const [trigger, setTrigger] = useState(null);\n  const [intParams, setIntParams] = useState([]);\n  const [stringParam, setStringParam] = useState('');\n  const [furniIds, setFurniIds] = useState([]);\n  const [actionDelay, setActionDelay] = useState(0);\n\n  const saveWired = () => {\n    const save = trigger => {\n      if (!trigger) return;\n\n      if (trigger instanceof WiredActionDefinition) {\n        SendMessageComposer(new UpdateActionMessageComposer(trigger.id, intParams, stringParam, furniIds, actionDelay, trigger.stuffTypeSelectionCode));\n      } else if (trigger instanceof TriggerDefinition) {\n        SendMessageComposer(new UpdateTriggerMessageComposer(trigger.id, intParams, stringParam, furniIds, trigger.stuffTypeSelectionCode));\n      } else if (trigger instanceof ConditionDefinition) {\n        SendMessageComposer(new UpdateConditionMessageComposer(trigger.id, intParams, stringParam, furniIds, trigger.stuffTypeSelectionCode));\n      }\n    };\n\n    if (!IsOwnerOfFloorFurniture(trigger.id)) {\n      NotificationUtilities.confirm(LocalizeText('wiredfurni.nonowner.change.confirm.body'), () => {\n        save(trigger);\n      }, null, null, null, LocalizeText('wiredfurni.nonowner.change.confirm.title'));\n    } else {\n      save(trigger);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(WiredContextProvider, {\n    value: {\n      trigger,\n      setTrigger,\n      intParams,\n      setIntParams,\n      stringParam,\n      setStringParam,\n      furniIds,\n      setFurniIds,\n      actionDelay,\n      setActionDelay,\n      saveWired\n    },\n    children: [/*#__PURE__*/_jsxDEV(WiredMessageHandler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), trigger !== null && GetWiredLayout(trigger)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredView, \"ejo6+gvB9rAHBu2oQwezNNk7bU8=\");\n\n_c = WiredView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/WiredView.tsx"],"names":["ConditionDefinition","TriggerDefinition","UpdateActionMessageComposer","UpdateConditionMessageComposer","UpdateTriggerMessageComposer","WiredActionDefinition","useState","IsOwnerOfFloorFurniture","LocalizeText","NotificationUtilities","SendMessageComposer","GetWiredLayout","WiredContextProvider","WiredMessageHandler","WiredView","props","trigger","setTrigger","intParams","setIntParams","stringParam","setStringParam","furniIds","setFurniIds","actionDelay","setActionDelay","saveWired","save","id","stuffTypeSelectionCode","confirm"],"mappings":";;;AAAA,SAASA,mBAAT,EAA2CC,iBAA3C,EAA8DC,2BAA9D,EAA2FC,8BAA3F,EAA2HC,4BAA3H,EAAyJC,qBAAzJ,QAAsL,yBAAtL;AACA,SAAaC,QAAb,QAA6B,OAA7B;AACA,SAASC,uBAAT,EAAkCC,YAAlC,EAAgDC,qBAAhD,EAAuEC,mBAAvE,QAAkG,WAAlG;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAEA,OAAO,MAAMC,SAAiB,GAAGC,KAAK,IACtC;AAAA;;AACI,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAc,IAAd,CAAxC;AACA,QAAM,CAAEY,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,CAAW,EAAX,CAA5C;AACA,QAAM,CAAEc,WAAF,EAAeC,cAAf,IAAkCf,QAAQ,CAAS,EAAT,CAAhD;AACA,QAAM,CAAEgB,QAAF,EAAYC,WAAZ,IAA4BjB,QAAQ,CAAW,EAAX,CAA1C;AACA,QAAM,CAAEkB,WAAF,EAAeC,cAAf,IAAkCnB,QAAQ,CAAS,CAAT,CAAhD;;AAEA,QAAMoB,SAAS,GAAG,MAClB;AACI,UAAMC,IAAI,GAAIX,OAAD,IACb;AACI,UAAG,CAACA,OAAJ,EAAa;;AAEb,UAAGA,OAAO,YAAYX,qBAAtB,EACA;AACIK,QAAAA,mBAAmB,CAAC,IAAIR,2BAAJ,CAAgCc,OAAO,CAACY,EAAxC,EAA4CV,SAA5C,EAAuDE,WAAvD,EAAoEE,QAApE,EAA8EE,WAA9E,EAA2FR,OAAO,CAACa,sBAAnG,CAAD,CAAnB;AACH,OAHD,MAKK,IAAGb,OAAO,YAAYf,iBAAtB,EACL;AACIS,QAAAA,mBAAmB,CAAC,IAAIN,4BAAJ,CAAiCY,OAAO,CAACY,EAAzC,EAA6CV,SAA7C,EAAwDE,WAAxD,EAAqEE,QAArE,EAA+EN,OAAO,CAACa,sBAAvF,CAAD,CAAnB;AACH,OAHI,MAKA,IAAGb,OAAO,YAAYhB,mBAAtB,EACL;AACIU,QAAAA,mBAAmB,CAAC,IAAIP,8BAAJ,CAAmCa,OAAO,CAACY,EAA3C,EAA+CV,SAA/C,EAA0DE,WAA1D,EAAuEE,QAAvE,EAAiFN,OAAO,CAACa,sBAAzF,CAAD,CAAnB;AACH;AACJ,KAlBD;;AAoBA,QAAG,CAACtB,uBAAuB,CAACS,OAAO,CAACY,EAAT,CAA3B,EACA;AACInB,MAAAA,qBAAqB,CAACqB,OAAtB,CAA8BtB,YAAY,CAAC,yCAAD,CAA1C,EAAuF,MACvF;AACImB,QAAAA,IAAI,CAACX,OAAD,CAAJ;AACH,OAHD,EAGG,IAHH,EAGS,IAHT,EAGe,IAHf,EAGqBR,YAAY,CAAC,0CAAD,CAHjC;AAIH,KAND,MAQA;AACImB,MAAAA,IAAI,CAACX,OAAD,CAAJ;AACH;AACJ,GAjCD;;AAmCA,sBACI,QAAC,oBAAD;AAAsB,IAAA,KAAK,EAAG;AAAEA,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA,SAAvB;AAAkCC,MAAAA,YAAlC;AAAgDC,MAAAA,WAAhD;AAA6DC,MAAAA,cAA7D;AAA6EC,MAAAA,QAA7E;AAAuFC,MAAAA,WAAvF;AAAoGC,MAAAA,WAApG;AAAiHC,MAAAA,cAAjH;AAAiIC,MAAAA;AAAjI,KAA9B;AAAA,4BACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEOV,OAAO,KAAK,IAAb,IACEL,cAAc,CAACK,OAAD,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAlDM;;GAAMF,S;;KAAAA,S","sourcesContent":["import { ConditionDefinition, Triggerable, TriggerDefinition, UpdateActionMessageComposer, UpdateConditionMessageComposer, UpdateTriggerMessageComposer, WiredActionDefinition } from '@nitrots/nitro-renderer';\nimport { FC, useState } from 'react';\nimport { IsOwnerOfFloorFurniture, LocalizeText, NotificationUtilities, SendMessageComposer } from '../../api';\nimport { GetWiredLayout } from './common/GetWiredLayout';\nimport { WiredContextProvider } from './WiredContext';\nimport { WiredMessageHandler } from './WiredMessageHandler';\n\nexport const WiredView: FC<{}> = props =>\n{\n    const [ trigger, setTrigger ] = useState<Triggerable>(null);\n    const [ intParams, setIntParams ] = useState<number[]>([]);\n    const [ stringParam, setStringParam ] = useState<string>('');\n    const [ furniIds, setFurniIds ] = useState<number[]>([]);\n    const [ actionDelay, setActionDelay ] = useState<number>(0);\n\n    const saveWired = () =>\n    {\n        const save = (trigger: Triggerable) =>\n        {\n            if(!trigger) return;\n\n            if(trigger instanceof WiredActionDefinition)\n            {\n                SendMessageComposer(new UpdateActionMessageComposer(trigger.id, intParams, stringParam, furniIds, actionDelay, trigger.stuffTypeSelectionCode));\n            }\n\n            else if(trigger instanceof TriggerDefinition)\n            {\n                SendMessageComposer(new UpdateTriggerMessageComposer(trigger.id, intParams, stringParam, furniIds, trigger.stuffTypeSelectionCode));\n            }\n\n            else if(trigger instanceof ConditionDefinition)\n            {\n                SendMessageComposer(new UpdateConditionMessageComposer(trigger.id, intParams, stringParam, furniIds, trigger.stuffTypeSelectionCode));\n            }\n        }\n\n        if(!IsOwnerOfFloorFurniture(trigger.id))\n        {\n            NotificationUtilities.confirm(LocalizeText('wiredfurni.nonowner.change.confirm.body'), () =>\n            {\n                save(trigger)\n            }, null, null, null, LocalizeText('wiredfurni.nonowner.change.confirm.title'));\n        }\n        else\n        {\n            save(trigger);\n        }\n    }\n\n    return (\n        <WiredContextProvider value={ { trigger, setTrigger, intParams, setIntParams, stringParam, setStringParam, furniIds, setFurniIds, actionDelay, setActionDelay, saveWired } }>\n            <WiredMessageHandler />\n            { (trigger !== null) &&\n                GetWiredLayout(trigger) }\n        </WiredContextProvider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}