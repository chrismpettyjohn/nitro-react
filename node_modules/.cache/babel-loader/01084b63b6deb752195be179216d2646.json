{"ast":null,"code":"import { RoomObjectType } from '../../../../../room/object/RoomObjectType';\nimport { UserMessageData } from './UserMessageData';\nexport class RoomUnitParser {\n  constructor() {\n    this._users = void 0;\n  }\n\n  flush() {\n    this._users = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._users = [];\n    const totalUsers = wrapper.readInt();\n    let i = 0;\n\n    while (i < totalUsers) {\n      const id = wrapper.readInt();\n      const username = wrapper.readString();\n      const custom = wrapper.readString();\n      let figure = wrapper.readString();\n      const roomIndex = wrapper.readInt();\n      const x = wrapper.readInt();\n      const y = wrapper.readInt();\n      const z = parseFloat(wrapper.readString());\n      const direction = wrapper.readInt();\n      const type = wrapper.readInt();\n      const user = new UserMessageData(roomIndex);\n      user.dir = direction;\n      user.name = username;\n      user.custom = custom;\n      user.x = x;\n      user.y = y;\n      user.z = z;\n\n      this._users.push(user);\n\n      if (type === 1) {\n        user.webID = id;\n        user.userType = RoomObjectType.USER;\n        user.sex = this.resolveSex(wrapper.readString());\n        user.groupID = '' + wrapper.readInt();\n        user.groupStatus = wrapper.readInt();\n        user.groupName = wrapper.readString();\n        const swimFigure = wrapper.readString();\n        if (swimFigure !== '') figure = this.convertSwimFigure(swimFigure, figure, user.sex);\n        user.figure = figure;\n        user.activityPoints = wrapper.readInt();\n        user.isModerator = wrapper.readBoolean();\n      } else if (type === 2) {\n        user.userType = RoomObjectType.PET;\n        user.figure = figure;\n        user.webID = id;\n        user.subType = wrapper.readInt().toString();\n        user.ownerId = wrapper.readInt();\n        user.ownerName = wrapper.readString();\n        user.rarityLevel = wrapper.readInt();\n        user.hasSaddle = wrapper.readBoolean();\n        user.isRiding = wrapper.readBoolean();\n        user.canBreed = wrapper.readBoolean();\n        user.canHarvest = wrapper.readBoolean();\n        user.canRevive = wrapper.readBoolean();\n        user.hasBreedingPermission = wrapper.readBoolean();\n        user.petLevel = wrapper.readInt();\n        user.petPosture = wrapper.readString();\n      } else if (type === 3) {\n        user.userType = RoomObjectType.BOT;\n        user.webID = roomIndex * -1;\n        if (figure.indexOf('/') === -1) user.figure = figure;else user.figure = 'hr-100-.hd-180-1.ch-876-66.lg-270-94.sh-300-64';\n        user.sex = UserMessageData.M;\n      } else if (type === 4) {\n        user.userType = RoomObjectType.RENTABLE_BOT;\n        user.webID = id;\n        user.sex = this.resolveSex(wrapper.readString());\n        user.figure = figure;\n        user.ownerId = wrapper.readInt();\n        user.ownerName = wrapper.readString();\n        const totalSkills = wrapper.readInt();\n\n        if (totalSkills) {\n          const skills = [];\n          let j = 0;\n\n          while (j < totalSkills) {\n            skills.push(wrapper.readShort());\n            j++;\n          }\n\n          user.botSkills = skills;\n        }\n      }\n\n      i++;\n    }\n\n    return true;\n  }\n\n  resolveSex(sex) {\n    if (sex.substr(0, 1).toLowerCase() === 'f') return UserMessageData.F;\n    return UserMessageData.M;\n  }\n\n  convertSwimFigure(k, _arg_2, _arg_3) {\n    const _local_4 = _arg_2.split('.');\n\n    let _local_5 = 1;\n    let _local_6 = 1;\n    let _local_7 = 1;\n    const _local_8 = 10000;\n    let i = 0;\n\n    while (i < _local_4.length) {\n      const _local_13 = _local_4[i];\n\n      const _local_14 = _local_13.split('-');\n\n      if (_local_14.length > 2) {\n        const _local_15 = _local_14[0];\n        if (_local_15 === 'hd') _local_5 = parseInt(_local_14[2]);\n      }\n\n      i++;\n    }\n\n    const _local_10 = ['238,238,238', '250,56,49', '253,146,160', '42,199,210', '53,51,44', '239,255,146', '198,255,152', '255,146,90', '157,89,126', '182,243,255', '109,255,51', '51,120,201', '255,182,49', '223,161,233', '249,251,50', '202,175,143', '197,198,197', '71,98,61', '138,131,97', '255,140,51', '84,198,39', '30,108,153', '152,79,136', '119,200,255', '255,192,142', '60,75,135', '124,44,71', '215,255,227', '143,63,28', '255,99,147', '31,155,121', '253,255,51'];\n\n    const _local_11 = k.split('=');\n\n    if (_local_11.length > 1) {\n      const _local_16 = _local_11[1].split('/');\n\n      const _local_17 = _local_16[0];\n      const _local_18 = _local_16[1];\n      if (_arg_3 === 'F') _local_7 = 10010;else _local_7 = 10011;\n\n      const _local_19 = _local_10.indexOf(_local_18);\n\n      _local_6 = _local_8 + _local_19 + 1;\n    }\n\n    return _arg_2 + ('.bds-10001-' + _local_5 + '.ss-' + _local_7 + '-' + _local_6);\n  }\n\n  get users() {\n    return this._users;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/room/unit/RoomUnitParser.ts"],"names":["RoomObjectType","UserMessageData","RoomUnitParser","_users","flush","parse","wrapper","totalUsers","readInt","i","id","username","readString","custom","figure","roomIndex","x","y","z","parseFloat","direction","type","user","dir","name","push","webID","userType","USER","sex","resolveSex","groupID","groupStatus","groupName","swimFigure","convertSwimFigure","activityPoints","isModerator","readBoolean","PET","subType","toString","ownerId","ownerName","rarityLevel","hasSaddle","isRiding","canBreed","canHarvest","canRevive","hasBreedingPermission","petLevel","petPosture","BOT","indexOf","M","RENTABLE_BOT","totalSkills","skills","j","readShort","botSkills","substr","toLowerCase","F","k","_arg_2","_arg_3","_local_4","split","_local_5","_local_6","_local_7","_local_8","length","_local_13","_local_14","_local_15","parseInt","_local_10","_local_11","_local_16","_local_17","_local_18","_local_19","users"],"mappings":"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","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\nimport { RoomObjectType } from '../../../../../room/object/RoomObjectType';\r\nimport { UserMessageData } from './UserMessageData';\r\n\r\nexport class RoomUnitParser implements IMessageParser\r\n{\r\n    private _users: UserMessageData[];\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._users = [];\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._users = [];\r\n\r\n        const totalUsers = wrapper.readInt();\r\n\r\n        let i = 0;\r\n\r\n        while(i < totalUsers)\r\n        {\r\n            const id = wrapper.readInt();\r\n            const username = wrapper.readString();\r\n            const custom = wrapper.readString();\r\n            let figure = wrapper.readString();\r\n            const roomIndex = wrapper.readInt();\r\n            const x = wrapper.readInt();\r\n            const y = wrapper.readInt();\r\n            const z = parseFloat(wrapper.readString());\r\n            const direction = wrapper.readInt();\r\n            const type = wrapper.readInt();\r\n\r\n            const user = new UserMessageData(roomIndex);\r\n\r\n            user.dir = direction;\r\n            user.name = username;\r\n            user.custom = custom;\r\n            user.x = x;\r\n            user.y = y;\r\n            user.z = z;\r\n\r\n            this._users.push(user);\r\n\r\n            if(type === 1)\r\n            {\r\n                user.webID = id;\r\n                user.userType = RoomObjectType.USER;\r\n                user.sex = this.resolveSex(wrapper.readString());\r\n                user.groupID = ('' + wrapper.readInt());\r\n                user.groupStatus = wrapper.readInt();\r\n                user.groupName = wrapper.readString();\r\n\r\n                const swimFigure = wrapper.readString();\r\n\r\n                if(swimFigure !== '') figure = this.convertSwimFigure(swimFigure, figure, user.sex);\r\n\r\n                user.figure = figure;\r\n                user.activityPoints = wrapper.readInt();\r\n                user.isModerator = wrapper.readBoolean();\r\n            }\r\n\r\n            else if(type === 2)\r\n            {\r\n                user.userType = RoomObjectType.PET;\r\n                user.figure = figure;\r\n                user.webID = id;\r\n                user.subType = wrapper.readInt().toString();\r\n                user.ownerId = wrapper.readInt();\r\n                user.ownerName = wrapper.readString();\r\n                user.rarityLevel = wrapper.readInt();\r\n                user.hasSaddle = wrapper.readBoolean();\r\n                user.isRiding = wrapper.readBoolean();\r\n                user.canBreed = wrapper.readBoolean();\r\n                user.canHarvest = wrapper.readBoolean();\r\n                user.canRevive = wrapper.readBoolean();\r\n                user.hasBreedingPermission = wrapper.readBoolean();\r\n                user.petLevel = wrapper.readInt();\r\n                user.petPosture = wrapper.readString();\r\n            }\r\n\r\n            else if(type === 3)\r\n            {\r\n                user.userType = RoomObjectType.BOT;\r\n                user.webID = (roomIndex * -1);\r\n\r\n                if(figure.indexOf('/') === -1) user.figure = figure;\r\n                else user.figure = 'hr-100-.hd-180-1.ch-876-66.lg-270-94.sh-300-64';\r\n\r\n                user.sex = UserMessageData.M;\r\n            }\r\n\r\n            else if(type === 4)\r\n            {\r\n                user.userType = RoomObjectType.RENTABLE_BOT;\r\n                user.webID = id;\r\n                user.sex = this.resolveSex(wrapper.readString());\r\n                user.figure = figure;\r\n                user.ownerId = wrapper.readInt();\r\n                user.ownerName = wrapper.readString();\r\n\r\n                const totalSkills = wrapper.readInt();\r\n\r\n                if(totalSkills)\r\n                {\r\n                    const skills: number[] = [];\r\n\r\n                    let j = 0;\r\n\r\n                    while(j < totalSkills)\r\n                    {\r\n                        skills.push(wrapper.readShort());\r\n\r\n                        j++;\r\n                    }\r\n\r\n                    user.botSkills = skills;\r\n                }\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private resolveSex(sex: string): string\r\n    {\r\n        if(sex.substr(0, 1).toLowerCase() === 'f') return UserMessageData.F;\r\n\r\n        return UserMessageData.M;\r\n    }\r\n\r\n    private convertSwimFigure(k: string, _arg_2: string, _arg_3: string): string\r\n    {\r\n        const _local_4 = _arg_2.split('.');\r\n        let _local_5 = 1;\r\n        let _local_6 = 1;\r\n        let _local_7 = 1;\r\n        const _local_8 = 10000;\r\n        let i = 0;\r\n\r\n        while(i < _local_4.length)\r\n        {\r\n            const _local_13 = _local_4[i];\r\n            const _local_14 = _local_13.split('-');\r\n\r\n            if(_local_14.length > 2)\r\n            {\r\n                const _local_15 = _local_14[0];\r\n\r\n                if(_local_15 === 'hd') _local_5 = parseInt(_local_14[2]);\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        const _local_10 = ['238,238,238', '250,56,49', '253,146,160', '42,199,210', '53,51,44', '239,255,146', '198,255,152', '255,146,90', '157,89,126', '182,243,255', '109,255,51', '51,120,201', '255,182,49', '223,161,233', '249,251,50', '202,175,143', '197,198,197', '71,98,61', '138,131,97', '255,140,51', '84,198,39', '30,108,153', '152,79,136', '119,200,255', '255,192,142', '60,75,135', '124,44,71', '215,255,227', '143,63,28', '255,99,147', '31,155,121', '253,255,51'];\r\n        const _local_11 = k.split('=');\r\n\r\n        if(_local_11.length > 1)\r\n        {\r\n            const _local_16 = _local_11[1].split('/');\r\n            const _local_17 = _local_16[0];\r\n            const _local_18 = _local_16[1];\r\n\r\n            if(_arg_3 === 'F') _local_7 = 10010;\r\n            else _local_7 = 10011;\r\n\r\n            const _local_19 = _local_10.indexOf(_local_18);\r\n\r\n            _local_6 = ((_local_8 + _local_19) + 1);\r\n        }\r\n\r\n        return _arg_2 + ((((('.bds-10001-' + _local_5) + '.ss-') + _local_7) + '-') + _local_6);\r\n    }\r\n\r\n    public get users(): UserMessageData[]\r\n    {\r\n        return this._users;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}