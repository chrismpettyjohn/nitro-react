{"ast":null,"code":"import { QuestMessageData } from '../../incoming/quest/QuestMessageData';\nexport class QuestsMessageParser {\n  constructor() {\n    this._quests = void 0;\n    this._openWindow = void 0;\n  }\n\n  flush() {\n    this._quests = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    const count = wrapper.readInt();\n\n    for (let i = 0; i < count; i++) {\n      this._quests.push(new QuestMessageData(wrapper));\n    }\n\n    this._openWindow = wrapper.readBoolean();\n    return true;\n  }\n\n  get quests() {\n    return this._quests;\n  }\n\n  get openWindow() {\n    return this._openWindow;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/quest/QuestsMessageParser.ts"],"names":["QuestMessageData","QuestsMessageParser","_quests","_openWindow","flush","parse","wrapper","count","readInt","i","push","readBoolean","quests","openWindow"],"mappings":"AACA,SAASA,gBAAT,QAAiC,uCAAjC;AAEA,OAAO,MAAMC,mBAAN,CACP;AAAA;AAAA,SACYC,OADZ;AAAA,SAEYC,WAFZ;AAAA;;AAKWC,EAAAA,KAAK,GACZ;AACI,SAAKF,OAAL,GAAe,EAAf;AACA,WAAO,IAAP;AACH;;AAEMG,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,UAAMC,KAAK,GAAGD,OAAO,CAACE,OAAR,EAAd;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,KAAnB,EAA0BE,CAAC,EAA3B,EACA;AACI,WAAKP,OAAL,CAAaQ,IAAb,CAAkB,IAAIV,gBAAJ,CAAqBM,OAArB,CAAlB;AACH;;AAED,SAAKH,WAAL,GAAmBG,OAAO,CAACK,WAAR,EAAnB;AACA,WAAO,IAAP;AACH;;AAEgB,MAANC,MAAM,GACjB;AACI,WAAO,KAAKV,OAAZ;AACH;;AAEoB,MAAVW,UAAU,GACrB;AACI,WAAO,KAAKV,WAAZ;AACH;;AAlCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\nimport { QuestMessageData } from '../../incoming/quest/QuestMessageData';\r\n\r\nexport class QuestsMessageParser implements IMessageParser\r\n{\r\n    private _quests: QuestMessageData[];\r\n    private _openWindow: boolean;\r\n\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._quests = [];\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper:IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        const count = wrapper.readInt();\r\n\r\n        for(let i = 0; i < count; i++)\r\n        {\r\n            this._quests.push(new QuestMessageData(wrapper));\r\n        }\r\n\r\n        this._openWindow = wrapper.readBoolean();\r\n        return true;\r\n    }\r\n\r\n    public get quests(): QuestMessageData[]\r\n    {\r\n        return this._quests;\r\n    }\r\n\r\n    public get openWindow(): boolean\r\n    {\r\n        return this._openWindow;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}