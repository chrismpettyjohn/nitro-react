{"ast":null,"code":"import { Rectangle } from '@pixi/math';\nexport class ImageData {\n  constructor(texture, rectangle, _arg_3, flipH, color) {\n    let container = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    this._texture = void 0;\n    this._container = void 0;\n    this._rect = void 0;\n    this._regPoint = void 0;\n    this._flipH = void 0;\n    this._colorTransform = void 0;\n    this._texture = texture;\n    this._container = container;\n    this._rect = rectangle;\n    this._regPoint = _arg_3;\n    this._flipH = flipH;\n    this._colorTransform = color;\n    if (flipH) this._regPoint.x = -this._regPoint.x + rectangle.width;\n  }\n\n  dispose() {\n    this._texture = null;\n    this._regPoint = null;\n    this._colorTransform = null;\n  }\n\n  get texture() {\n    return this._texture;\n  }\n\n  get container() {\n    return this._container;\n  }\n\n  get rect() {\n    return this._rect;\n  }\n\n  get regPoint() {\n    return this._regPoint;\n  }\n\n  get flipH() {\n    return this._flipH;\n  }\n\n  get colorTransform() {\n    return this._colorTransform;\n  }\n\n  get offsetRect() {\n    return new Rectangle(-this._regPoint.x, -this._regPoint.y, this._rect.width, this._rect.height);\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/avatar/cache/ImageData.ts"],"names":["Rectangle","ImageData","constructor","texture","rectangle","_arg_3","flipH","color","container","_texture","_container","_rect","_regPoint","_flipH","_colorTransform","x","width","dispose","rect","regPoint","colorTransform","offsetRect","y","height"],"mappings":"AAEA,SAAgBA,SAAhB,QAAiC,YAAjC;AAEA,OAAO,MAAMC,SAAN,CACP;AAQIC,EAAAA,WAAW,CAACC,OAAD,EAA6BC,SAA7B,EAAmDC,MAAnD,EAAkEC,KAAlE,EAAkFC,KAAlF,EACX;AAAA,QAD4GC,SAC5G,uEADmI,IACnI;AAAA,SARQC,QAQR;AAAA,SAPQC,UAOR;AAAA,SANQC,KAMR;AAAA,SALQC,SAKR;AAAA,SAJQC,MAIR;AAAA,SAHQC,eAGR;AACI,SAAKL,QAAL,GAAgBN,OAAhB;AACA,SAAKO,UAAL,GAAkBF,SAAlB;AACA,SAAKG,KAAL,GAAaP,SAAb;AACA,SAAKQ,SAAL,GAAiBP,MAAjB;AACA,SAAKQ,MAAL,GAAcP,KAAd;AACA,SAAKQ,eAAL,GAAuBP,KAAvB;AAEA,QAAGD,KAAH,EAAU,KAAKM,SAAL,CAAeG,CAAf,GAAoB,CAAE,KAAKH,SAAL,CAAeG,CAAjB,GAAsBX,SAAS,CAACY,KAApD;AACb;;AAEMC,EAAAA,OAAO,GACd;AACI,SAAKR,QAAL,GAAgB,IAAhB;AACA,SAAKG,SAAL,GAAiB,IAAjB;AACA,SAAKE,eAAL,GAAuB,IAAvB;AACH;;AAEiB,MAAPX,OAAO,GAClB;AACI,WAAO,KAAKM,QAAZ;AACH;;AAEmB,MAATD,SAAS,GACpB;AACI,WAAO,KAAKE,UAAZ;AACH;;AAEc,MAAJQ,IAAI,GACf;AACI,WAAO,KAAKP,KAAZ;AACH;;AAEkB,MAARQ,QAAQ,GACnB;AACI,WAAO,KAAKP,SAAZ;AACH;;AAEe,MAALN,KAAK,GAChB;AACI,WAAO,KAAKO,MAAZ;AACH;;AAEwB,MAAdO,cAAc,GACzB;AACI,WAAO,KAAKN,eAAZ;AACH;;AAEoB,MAAVO,UAAU,GACrB;AACI,WAAO,IAAIrB,SAAJ,CAAc,CAAE,KAAKY,SAAL,CAAeG,CAA/B,EAAmC,CAAE,KAAKH,SAAL,CAAeU,CAApD,EAAwD,KAAKX,KAAL,CAAWK,KAAnE,EAA0E,KAAKL,KAAL,CAAWY,MAArF,CAAP;AACH;;AA5DL","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { Container } from '@pixi/display';\r\nimport { Point, Rectangle } from '@pixi/math';\r\n\r\nexport class ImageData\r\n{\r\n    private _texture: Texture<Resource>;\r\n    private _container: Container;\r\n    private _rect: Rectangle;\r\n    private _regPoint: Point;\r\n    private _flipH: boolean;\r\n    private _colorTransform: number;\r\n\r\n    constructor(texture: Texture<Resource>, rectangle: Rectangle, _arg_3: Point, flipH: boolean, color: number, container: Container = null)\r\n    {\r\n        this._texture = texture;\r\n        this._container = container;\r\n        this._rect = rectangle;\r\n        this._regPoint = _arg_3;\r\n        this._flipH = flipH;\r\n        this._colorTransform = color;\r\n\r\n        if(flipH) this._regPoint.x = (-(this._regPoint.x) + rectangle.width);\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._texture = null;\r\n        this._regPoint = null;\r\n        this._colorTransform = null;\r\n    }\r\n\r\n    public get texture(): Texture<Resource>\r\n    {\r\n        return this._texture;\r\n    }\r\n\r\n    public get container(): Container\r\n    {\r\n        return this._container;\r\n    }\r\n\r\n    public get rect(): Rectangle\r\n    {\r\n        return this._rect;\r\n    }\r\n\r\n    public get regPoint(): Point\r\n    {\r\n        return this._regPoint;\r\n    }\r\n\r\n    public get flipH(): boolean\r\n    {\r\n        return this._flipH;\r\n    }\r\n\r\n    public get colorTransform(): number\r\n    {\r\n        return this._colorTransform;\r\n    }\r\n\r\n    public get offsetRect(): Rectangle\r\n    {\r\n        return new Rectangle(-(this._regPoint.x), -(this._regPoint.y), this._rect.width, this._rect.height);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}