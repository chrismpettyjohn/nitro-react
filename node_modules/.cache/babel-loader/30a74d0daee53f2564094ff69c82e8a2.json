{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/conditions/WiredConditionUserCountInRoomView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredConditionBaseView } from './WiredConditionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredConditionUserCountInRoomView = props => {\n  _s();\n\n  const [min, setMin] = useState(1);\n  const [max, setMax] = useState(1);\n  const {\n    trigger = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => setIntParams([min, max]);\n\n  useEffect(() => {\n    if (trigger.intData.length >= 2) {\n      setMin(trigger.intData[0]);\n      setMax(trigger.intData[1]);\n    } else {\n      setMin(1);\n      setMax(1);\n    }\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredConditionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.usercountmin', ['value'], [min.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: 'wired-slider',\n        min: 1,\n        max: 50,\n        value: min,\n        onChange: event => setMin(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.usercountmax', ['value'], [max.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: 'wired-slider',\n        min: 1,\n        max: 50,\n        value: max,\n        onChange: event => setMax(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredConditionUserCountInRoomView, \"Qf6lzApxPCTgh8Qo5i7rK/Ahf6k=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredConditionUserCountInRoomView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredConditionUserCountInRoomView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/conditions/WiredConditionUserCountInRoomView.tsx"],"names":["useEffect","useState","ReactSlider","LocalizeText","WiredFurniType","Column","Text","useWiredContext","WiredConditionBaseView","WiredConditionUserCountInRoomView","props","min","setMin","max","setMax","trigger","setIntParams","save","intData","length","STUFF_SELECTION_OPTION_NONE","toString","event"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,oBAA7B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;;AAEA,OAAO,MAAMC,iCAAyC,GAAGC,KAAK,IAC9D;AAAA;;AACI,QAAM,CAAEC,GAAF,EAAOC,MAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAAEY,GAAF,EAAOC,MAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAEc,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,YAAY,GAAG;AAAjC,MAA0CT,eAAe,EAA/D;;AAEA,QAAMU,IAAI,GAAG,MAAMD,YAAY,CAAC,CAAEL,GAAF,EAAOE,GAAP,CAAD,CAA/B;;AAEAb,EAAAA,SAAS,CAAC,MACV;AACI,QAAGe,OAAO,CAACG,OAAR,CAAgBC,MAAhB,IAA0B,CAA7B,EACA;AACIP,MAAAA,MAAM,CAACG,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAD,CAAN;AACAJ,MAAAA,MAAM,CAACC,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAD,CAAN;AACH,KAJD,MAMA;AACIN,MAAAA,MAAM,CAAC,CAAD,CAAN;AACAE,MAAAA,MAAM,CAAC,CAAD,CAAN;AACH;AACJ,GAZQ,EAYN,CAAEC,OAAF,CAZM,CAAT;AAcA,sBACI,QAAC,sBAAD;AAAwB,IAAA,aAAa,EAAGX,cAAc,CAACgB,2BAAvD;AAAqF,IAAA,eAAe,EAAG,IAAvG;AAA8G,IAAA,IAAI,EAAGH,IAArH;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAed,YAAY,CAAC,gCAAD,EAAmC,CAAE,OAAF,CAAnC,EAAgD,CAAEQ,GAAG,CAACU,QAAJ,EAAF,CAAhD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AACI,QAAA,SAAS,EAAG,cADhB;AAEI,QAAA,GAAG,EAAG,CAFV;AAGI,QAAA,GAAG,EAAG,EAHV;AAII,QAAA,KAAK,EAAGV,GAJZ;AAKI,QAAA,QAAQ,EAAGW,KAAK,IAAIV,MAAM,CAACU,KAAD;AAL9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAenB,YAAY,CAAC,gCAAD,EAAmC,CAAE,OAAF,CAAnC,EAAgD,CAAEU,GAAG,CAACQ,QAAJ,EAAF,CAAhD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AACI,QAAA,SAAS,EAAG,cADhB;AAEI,QAAA,GAAG,EAAG,CAFV;AAGI,QAAA,GAAG,EAAG,EAHV;AAII,QAAA,KAAK,EAAGR,GAJZ;AAKI,QAAA,QAAQ,EAAGS,KAAK,IAAIR,MAAM,CAACQ,KAAD;AAL9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA5CM;;GAAMb,iC;UAIuCF,e;;;KAJvCE,iC","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredConditionBaseView } from './WiredConditionBaseView';\n\nexport const WiredConditionUserCountInRoomView: FC<{}> = props =>\n{\n    const [ min, setMin ] = useState(1);\n    const [ max, setMax ] = useState(1);\n    const { trigger = null, setIntParams = null } = useWiredContext();\n\n    const save = () => setIntParams([ min, max ]);\n\n    useEffect(() =>\n    {\n        if(trigger.intData.length >= 2)\n        {\n            setMin(trigger.intData[0]);\n            setMax(trigger.intData[1]);\n        }\n        else\n        {\n            setMin(1);\n            setMax(1);\n        }\n    }, [ trigger ]);\n    \n    return (\n        <WiredConditionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.usercountmin', [ 'value' ], [ min.toString() ]) }</Text>\n                <ReactSlider\n                    className={ 'wired-slider' }\n                    min={ 1 }\n                    max={ 50 }\n                    value={ min }\n                    onChange={ event => setMin(event) } />\n            </Column>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.usercountmax', [ 'value' ], [ max.toString() ]) }</Text>\n                <ReactSlider\n                    className={ 'wired-slider' }\n                    min={ 1 }\n                    max={ 50 }\n                    value={ max }\n                    onChange={ event => setMax(event) } />\n            </Column>\n        </WiredConditionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}