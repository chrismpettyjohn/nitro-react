{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionBotTalkView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType, WIRED_STRING_DELIMETER } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredActionBotTalkView = props => {\n  _s();\n\n  const [botName, setBotName] = useState('');\n  const [message, setMessage] = useState('');\n  const [talkMode, setTalkMode] = useState(-1);\n  const {\n    trigger = null,\n    setStringParam = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => {\n    setStringParam(botName + WIRED_STRING_DELIMETER + message);\n    setIntParams([talkMode]);\n  };\n\n  useEffect(() => {\n    const data = trigger.stringData.split(WIRED_STRING_DELIMETER);\n    if (data.length > 0) setBotName(data[0]);\n    if (data.length > 1) setMessage(data[1].length > 0 ? data[1] : '');\n    setTalkMode(trigger.intData.length > 0 ? trigger.intData[0] : 0);\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredActionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.bot.name')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        maxLength: 32,\n        value: botName,\n        onChange: event => setBotName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.message')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        maxLength: 64,\n        value: message,\n        onChange: event => setMessage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"talkMode\",\n          id: \"talkMode1\",\n          checked: talkMode === 0,\n          onChange: event => setTalkMode(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('wiredfurni.params.talk')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"talkMode\",\n          id: \"talkMode2\",\n          checked: talkMode === 1,\n          onChange: event => setTalkMode(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('wiredfurni.params.shout')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredActionBotTalkView, \"Hr00b8WUS8/FmZSbvWMMIizyMPA=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredActionBotTalkView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredActionBotTalkView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionBotTalkView.tsx"],"names":["useEffect","useState","LocalizeText","WiredFurniType","WIRED_STRING_DELIMETER","Column","Flex","Text","useWiredContext","WiredActionBaseView","WiredActionBotTalkView","props","botName","setBotName","message","setMessage","talkMode","setTalkMode","trigger","setStringParam","setIntParams","save","data","stringData","split","length","intData","STUFF_SELECTION_OPTION_NONE","event","target","value"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType, WIRED_STRING_DELIMETER } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\n\nexport const WiredActionBotTalkView: FC<{}> = props =>\n{\n    const [ botName, setBotName ] = useState('');\n    const [ message, setMessage ] = useState('');\n    const [ talkMode, setTalkMode ] = useState(-1);\n    const { trigger = null, setStringParam = null, setIntParams = null } = useWiredContext();\n\n    const save = () =>\n    {\n        setStringParam(botName + WIRED_STRING_DELIMETER + message);\n        setIntParams([ talkMode ]);\n    }\n\n    useEffect(() =>\n    {\n        const data = trigger.stringData.split(WIRED_STRING_DELIMETER);\n        \n        if(data.length > 0) setBotName(data[0]);\n        if(data.length > 1) setMessage(data[1].length > 0 ? data[1] : '');\n    \n        setTalkMode((trigger.intData.length > 0) ? trigger.intData[0] : 0);\n    }, [ trigger ]);\n\n    return (\n        <WiredActionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.bot.name') }</Text>\n                <input type=\"text\" className=\"form-control form-control-sm\" maxLength={ 32 } value={ botName } onChange={ event => setBotName(event.target.value) } />\n            </Column>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.message') }</Text>\n                <input type=\"text\" className=\"form-control form-control-sm\" maxLength={ 64 } value={ message } onChange={ event => setMessage(event.target.value) } />\n            </Column>\n            <Column gap={ 1 }>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"radio\" name=\"talkMode\" id=\"talkMode1\" checked={ (talkMode === 0) } onChange={ event => setTalkMode(0) } />\n                    <Text>{ LocalizeText('wiredfurni.params.talk') }</Text>\n                </Flex>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"radio\" name=\"talkMode\" id=\"talkMode2\" checked={ (talkMode === 1) } onChange={ event => setTalkMode(1) } />\n                    <Text>{ LocalizeText('wiredfurni.params.shout') }</Text>\n                </Flex>\n            </Column>\n        </WiredActionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}