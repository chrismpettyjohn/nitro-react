{"ast":null,"code":"import { Vector3D } from '../../../../avatar/geometry/Vector3D';\nexport class FurnitureParticleSystemParticle {\n  constructor() {\n    this._x = void 0;\n    this._y = void 0;\n    this._z = void 0;\n    this._lastX = void 0;\n    this._lastY = void 0;\n    this._lastZ = void 0;\n    this._hasMoved = false;\n    this._particleDirection = void 0;\n    this._age = 0;\n    this._lifeTime = void 0;\n    this._isEmitter = false;\n    this._fade = false;\n    this._fadeTime = void 0;\n    this._alphaMultiplier = 1;\n    this._frames = void 0;\n  }\n\n  init(x, y, z, direction, energy, timeStep, lifeTime) {\n    let isEmitter = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n    let frames = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n    let fade = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._particleDirection = new Vector3D(direction.x, direction.y, direction.z);\n\n    this._particleDirection.scaleBy(energy);\n\n    this._lastX = this._x - this._particleDirection.x * timeStep;\n    this._lastY = this._y - this._particleDirection.y * timeStep;\n    this._lastZ = this._z - this._particleDirection.z * timeStep;\n    this._age = 0;\n    this._hasMoved = false;\n    this._lifeTime = lifeTime;\n    this._isEmitter = isEmitter;\n    this._frames = frames;\n    this._fade = fade;\n    this._alphaMultiplier = 1;\n    this._fadeTime = 0.5 + Math.random() * 0.5;\n  }\n\n  dispose() {\n    this._particleDirection = null;\n  }\n\n  update() {\n    this._age++;\n    if (this._age === this._lifeTime) this.ignite();\n\n    if (this._fade) {\n      if (this._age / this._lifeTime > this._fadeTime) {\n        this._alphaMultiplier = (this._lifeTime - this._age) / (this._lifeTime * (1 - this._fadeTime));\n      }\n    }\n  }\n\n  getAsset() {\n    if (this._frames && this._frames.length > 0) {\n      return this._frames[this._age % this._frames.length];\n    }\n\n    return null;\n  }\n\n  ignite() {}\n\n  get fade() {\n    return this._fade;\n  }\n\n  get alphaMultiplier() {\n    return this._alphaMultiplier;\n  }\n\n  get direction() {\n    return this._particleDirection;\n  }\n\n  get age() {\n    return this._age;\n  }\n\n  get isEmitter() {\n    return this._isEmitter;\n  }\n\n  get isAlive() {\n    return this._age <= this._lifeTime;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set x(x) {\n    this._x = x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set y(y) {\n    this._y = y;\n  }\n\n  get z() {\n    return this._z;\n  }\n\n  set z(z) {\n    this._z = z;\n  }\n\n  get lastX() {\n    return this._lastX;\n  }\n\n  set lastX(y) {\n    this._hasMoved = true;\n    this._lastX = y;\n  }\n\n  get lastY() {\n    return this._lastY;\n  }\n\n  set lastY(k) {\n    this._hasMoved = true;\n    this._lastY = k;\n  }\n\n  get lastZ() {\n    return this._lastZ;\n  }\n\n  set lastZ(z) {\n    this._hasMoved = true;\n    this._lastZ = z;\n  }\n\n  get hasMoved() {\n    return this._hasMoved;\n  }\n\n  toString() {\n    return [this._x, this._y, this._z].toString();\n  }\n\n  copy(particle, scale) {\n    this._x = particle._x * scale;\n    this._y = particle._y * scale;\n    this._z = particle._z * scale;\n    this._lastX = particle._lastX * scale;\n    this._lastY = particle._lastY * scale;\n    this._lastZ = particle._lastZ * scale;\n    this._hasMoved = particle.hasMoved;\n    this._particleDirection = particle._particleDirection;\n    this._age = particle._age;\n    this._lifeTime = particle._lifeTime;\n    this._isEmitter = particle._isEmitter;\n    this._fade = particle._fade;\n    this._fadeTime = particle._fadeTime;\n    this._alphaMultiplier = particle._alphaMultiplier;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/furniture/FurnitureParticleSystemParticle.ts"],"names":["Vector3D","FurnitureParticleSystemParticle","_x","_y","_z","_lastX","_lastY","_lastZ","_hasMoved","_particleDirection","_age","_lifeTime","_isEmitter","_fade","_fadeTime","_alphaMultiplier","_frames","init","x","y","z","direction","energy","timeStep","lifeTime","isEmitter","frames","fade","scaleBy","Math","random","dispose","update","ignite","getAsset","length","alphaMultiplier","age","isAlive","lastX","lastY","k","lastZ","hasMoved","toString","copy","particle","scale"],"mappings":"AACA,SAASA,QAAT,QAAyB,sCAAzB;AAEA,OAAO,MAAMC,+BAAN,CACP;AAAA;AAAA,SACYC,EADZ;AAAA,SAEYC,EAFZ;AAAA,SAGYC,EAHZ;AAAA,SAIYC,MAJZ;AAAA,SAKYC,MALZ;AAAA,SAMYC,MANZ;AAAA,SAOYC,SAPZ,GAOiC,KAPjC;AAAA,SAQYC,kBARZ;AAAA,SASYC,IATZ,GAS2B,CAT3B;AAAA,SAUYC,SAVZ;AAAA,SAWYC,UAXZ,GAWkC,KAXlC;AAAA,SAYYC,KAZZ,GAY6B,KAZ7B;AAAA,SAaYC,SAbZ;AAAA,SAcYC,gBAdZ,GAcuC,CAdvC;AAAA,SAeYC,OAfZ;AAAA;;AAiBWC,EAAAA,IAAI,CAACC,CAAD,EAAYC,CAAZ,EAAuBC,CAAvB,EAAkCC,SAAlC,EAAuDC,MAAvD,EAAuEC,QAAvE,EAAyFC,QAAzF,EACX;AAAA,QADsHC,SACtH,uEAD2I,KAC3I;AAAA,QADkJC,MAClJ,uEAD4K,IAC5K;AAAA,QADkLC,IAClL,uEADkM,KAClM;AACI,SAAKzB,EAAL,GAAUgB,CAAV;AACA,SAAKf,EAAL,GAAUgB,CAAV;AACA,SAAKf,EAAL,GAAUgB,CAAV;AACA,SAAKX,kBAAL,GAA0B,IAAIT,QAAJ,CAAaqB,SAAS,CAACH,CAAvB,EAA0BG,SAAS,CAACF,CAApC,EAAuCE,SAAS,CAACD,CAAjD,CAA1B;;AACA,SAAKX,kBAAL,CAAwBmB,OAAxB,CAAgCN,MAAhC;;AAEA,SAAKjB,MAAL,GAAe,KAAKH,EAAL,GAAW,KAAKO,kBAAL,CAAwBS,CAAxB,GAA4BK,QAAtD;AACA,SAAKjB,MAAL,GAAe,KAAKH,EAAL,GAAW,KAAKM,kBAAL,CAAwBU,CAAxB,GAA4BI,QAAtD;AACA,SAAKhB,MAAL,GAAe,KAAKH,EAAL,GAAW,KAAKK,kBAAL,CAAwBW,CAAxB,GAA4BG,QAAtD;AACA,SAAKb,IAAL,GAAY,CAAZ;AACA,SAAKF,SAAL,GAAiB,KAAjB;AACA,SAAKG,SAAL,GAAiBa,QAAjB;AACA,SAAKZ,UAAL,GAAkBa,SAAlB;AACA,SAAKT,OAAL,GAAeU,MAAf;AACA,SAAKb,KAAL,GAAac,IAAb;AACA,SAAKZ,gBAAL,GAAwB,CAAxB;AACA,SAAKD,SAAL,GAAkB,MAAOe,IAAI,CAACC,MAAL,KAAgB,GAAzC;AACH;;AAEMC,EAAAA,OAAO,GACd;AACI,SAAKtB,kBAAL,GAA0B,IAA1B;AACH;;AAEMuB,EAAAA,MAAM,GACb;AACI,SAAKtB,IAAL;AAEA,QAAG,KAAKA,IAAL,KAAc,KAAKC,SAAtB,EAAiC,KAAKsB,MAAL;;AAEjC,QAAG,KAAKpB,KAAR,EACA;AACI,UAAI,KAAKH,IAAL,GAAY,KAAKC,SAAlB,GAA+B,KAAKG,SAAvC,EACA;AACI,aAAKC,gBAAL,GAAyB,CAAC,KAAKJ,SAAL,GAAiB,KAAKD,IAAvB,KAAgC,KAAKC,SAAL,IAAkB,IAAI,KAAKG,SAA3B,CAAhC,CAAzB;AACH;AACJ;AACJ;;AAEMoB,EAAAA,QAAQ,GACf;AACI,QAAK,KAAKlB,OAAN,IAAmB,KAAKA,OAAL,CAAamB,MAAb,GAAsB,CAA7C,EACA;AACI,aAAO,KAAKnB,OAAL,CAAc,KAAKN,IAAL,GAAY,KAAKM,OAAL,CAAamB,MAAvC,CAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAESF,EAAAA,MAAM,GAChB,CACC;;AAEc,MAAJN,IAAI,GACf;AACI,WAAO,KAAKd,KAAZ;AACH;;AAEyB,MAAfuB,eAAe,GAC1B;AACI,WAAO,KAAKrB,gBAAZ;AACH;;AAEmB,MAATM,SAAS,GACpB;AACI,WAAO,KAAKZ,kBAAZ;AACH;;AAEa,MAAH4B,GAAG,GACd;AACI,WAAO,KAAK3B,IAAZ;AACH;;AAEmB,MAATe,SAAS,GACpB;AACI,WAAO,KAAKb,UAAZ;AACH;;AAEiB,MAAP0B,OAAO,GAClB;AACI,WAAO,KAAK5B,IAAL,IAAa,KAAKC,SAAzB;AACH;;AAEW,MAADO,CAAC,GACZ;AACI,WAAO,KAAKhB,EAAZ;AACH;;AAEW,MAADgB,CAAC,CAACA,CAAD,EACZ;AACI,SAAKhB,EAAL,GAAUgB,CAAV;AACH;;AAEW,MAADC,CAAC,GACZ;AACI,WAAO,KAAKhB,EAAZ;AACH;;AAEW,MAADgB,CAAC,CAACA,CAAD,EACZ;AACI,SAAKhB,EAAL,GAAUgB,CAAV;AACH;;AAEW,MAADC,CAAC,GACZ;AACI,WAAO,KAAKhB,EAAZ;AACH;;AAEW,MAADgB,CAAC,CAACA,CAAD,EACZ;AACI,SAAKhB,EAAL,GAAUgB,CAAV;AACH;;AAEe,MAALmB,KAAK,GAChB;AACI,WAAO,KAAKlC,MAAZ;AACH;;AAEe,MAALkC,KAAK,CAACpB,CAAD,EAChB;AACI,SAAKX,SAAL,GAAiB,IAAjB;AACA,SAAKH,MAAL,GAAcc,CAAd;AACH;;AAEe,MAALqB,KAAK,GAChB;AACI,WAAO,KAAKlC,MAAZ;AACH;;AAEe,MAALkC,KAAK,CAACC,CAAD,EAChB;AACI,SAAKjC,SAAL,GAAiB,IAAjB;AACA,SAAKF,MAAL,GAAcmC,CAAd;AACH;;AAEe,MAALC,KAAK,GAChB;AACI,WAAO,KAAKnC,MAAZ;AACH;;AAEe,MAALmC,KAAK,CAACtB,CAAD,EAChB;AACI,SAAKZ,SAAL,GAAiB,IAAjB;AACA,SAAKD,MAAL,GAAca,CAAd;AACH;;AAEkB,MAARuB,QAAQ,GACnB;AACI,WAAO,KAAKnC,SAAZ;AACH;;AAEMoC,EAAAA,QAAQ,GACf;AACI,WAAO,CAAE,KAAK1C,EAAP,EAAW,KAAKC,EAAhB,EAAoB,KAAKC,EAAzB,EAA8BwC,QAA9B,EAAP;AACH;;AAEMC,EAAAA,IAAI,CAACC,QAAD,EAA4CC,KAA5C,EACX;AACI,SAAK7C,EAAL,GAAW4C,QAAQ,CAAC5C,EAAT,GAAc6C,KAAzB;AACA,SAAK5C,EAAL,GAAW2C,QAAQ,CAAC3C,EAAT,GAAc4C,KAAzB;AACA,SAAK3C,EAAL,GAAW0C,QAAQ,CAAC1C,EAAT,GAAc2C,KAAzB;AACA,SAAK1C,MAAL,GAAeyC,QAAQ,CAACzC,MAAT,GAAkB0C,KAAjC;AACA,SAAKzC,MAAL,GAAewC,QAAQ,CAACxC,MAAT,GAAkByC,KAAjC;AACA,SAAKxC,MAAL,GAAeuC,QAAQ,CAACvC,MAAT,GAAkBwC,KAAjC;AACA,SAAKvC,SAAL,GAAiBsC,QAAQ,CAACH,QAA1B;AACA,SAAKlC,kBAAL,GAA0BqC,QAAQ,CAACrC,kBAAnC;AACA,SAAKC,IAAL,GAAYoC,QAAQ,CAACpC,IAArB;AACA,SAAKC,SAAL,GAAiBmC,QAAQ,CAACnC,SAA1B;AACA,SAAKC,UAAL,GAAkBkC,QAAQ,CAAClC,UAA3B;AACA,SAAKC,KAAL,GAAaiC,QAAQ,CAACjC,KAAtB;AACA,SAAKC,SAAL,GAAiBgC,QAAQ,CAAChC,SAA1B;AACA,SAAKC,gBAAL,GAAwB+B,QAAQ,CAAC/B,gBAAjC;AACH;;AA9LL","sourcesContent":["import { IGraphicAsset } from '../../../../../room';\r\nimport { Vector3D } from '../../../../avatar/geometry/Vector3D';\r\n\r\nexport class FurnitureParticleSystemParticle\r\n{\r\n    private _x: number;\r\n    private _y: number;\r\n    private _z: number;\r\n    private _lastX: number;\r\n    private _lastY: number;\r\n    private _lastZ: number;\r\n    private _hasMoved: boolean = false;\r\n    private _particleDirection: Vector3D;\r\n    private _age: number = 0;\r\n    private _lifeTime: number;\r\n    private _isEmitter: boolean = false;\r\n    private _fade: boolean = false;\r\n    private _fadeTime: number;\r\n    private _alphaMultiplier: number = 1;\r\n    private _frames: IGraphicAsset[];\r\n\r\n    public init(x: number, y: number, z: number, direction: Vector3D, energy: number, timeStep: number, lifeTime: number, isEmitter: boolean = false, frames: IGraphicAsset[] = null, fade: boolean = false): void\r\n    {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        this._particleDirection = new Vector3D(direction.x, direction.y, direction.z);\r\n        this._particleDirection.scaleBy(energy);\r\n\r\n        this._lastX = (this._x - (this._particleDirection.x * timeStep));\r\n        this._lastY = (this._y - (this._particleDirection.y * timeStep));\r\n        this._lastZ = (this._z - (this._particleDirection.z * timeStep));\r\n        this._age = 0;\r\n        this._hasMoved = false;\r\n        this._lifeTime = lifeTime;\r\n        this._isEmitter = isEmitter;\r\n        this._frames = frames;\r\n        this._fade = fade;\r\n        this._alphaMultiplier = 1;\r\n        this._fadeTime = (0.5 + (Math.random() * 0.5));\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._particleDirection = null;\r\n    }\r\n\r\n    public update(): void\r\n    {\r\n        this._age++;\r\n\r\n        if(this._age === this._lifeTime) this.ignite();\r\n\r\n        if(this._fade)\r\n        {\r\n            if((this._age / this._lifeTime) > this._fadeTime)\r\n            {\r\n                this._alphaMultiplier = ((this._lifeTime - this._age) / (this._lifeTime * (1 - this._fadeTime)));\r\n            }\r\n        }\r\n    }\r\n\r\n    public getAsset(): IGraphicAsset\r\n    {\r\n        if(((this._frames) && (this._frames.length > 0)))\r\n        {\r\n            return this._frames[(this._age % this._frames.length)];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected ignite(): void\r\n    {\r\n    }\r\n\r\n    public get fade(): boolean\r\n    {\r\n        return this._fade;\r\n    }\r\n\r\n    public get alphaMultiplier(): number\r\n    {\r\n        return this._alphaMultiplier;\r\n    }\r\n\r\n    public get direction(): Vector3D\r\n    {\r\n        return this._particleDirection;\r\n    }\r\n\r\n    public get age(): number\r\n    {\r\n        return this._age;\r\n    }\r\n\r\n    public get isEmitter(): boolean\r\n    {\r\n        return this._isEmitter;\r\n    }\r\n\r\n    public get isAlive(): boolean\r\n    {\r\n        return this._age <= this._lifeTime;\r\n    }\r\n\r\n    public get x(): number\r\n    {\r\n        return this._x;\r\n    }\r\n\r\n    public set x(x: number)\r\n    {\r\n        this._x = x;\r\n    }\r\n\r\n    public get y(): number\r\n    {\r\n        return this._y;\r\n    }\r\n\r\n    public set y(y: number)\r\n    {\r\n        this._y = y;\r\n    }\r\n\r\n    public get z(): number\r\n    {\r\n        return this._z;\r\n    }\r\n\r\n    public set z(z: number)\r\n    {\r\n        this._z = z;\r\n    }\r\n\r\n    public get lastX(): number\r\n    {\r\n        return this._lastX;\r\n    }\r\n\r\n    public set lastX(y: number)\r\n    {\r\n        this._hasMoved = true;\r\n        this._lastX = y;\r\n    }\r\n\r\n    public get lastY(): number\r\n    {\r\n        return this._lastY;\r\n    }\r\n\r\n    public set lastY(k: number)\r\n    {\r\n        this._hasMoved = true;\r\n        this._lastY = k;\r\n    }\r\n\r\n    public get lastZ(): number\r\n    {\r\n        return this._lastZ;\r\n    }\r\n\r\n    public set lastZ(z: number)\r\n    {\r\n        this._hasMoved = true;\r\n        this._lastZ = z;\r\n    }\r\n\r\n    public get hasMoved(): boolean\r\n    {\r\n        return this._hasMoved;\r\n    }\r\n\r\n    public toString(): string\r\n    {\r\n        return [ this._x, this._y, this._z ].toString();\r\n    }\r\n\r\n    public copy(particle: FurnitureParticleSystemParticle, scale: number): void\r\n    {\r\n        this._x = (particle._x * scale);\r\n        this._y = (particle._y * scale);\r\n        this._z = (particle._z * scale);\r\n        this._lastX = (particle._lastX * scale);\r\n        this._lastY = (particle._lastY * scale);\r\n        this._lastZ = (particle._lastZ * scale);\r\n        this._hasMoved = particle.hasMoved;\r\n        this._particleDirection = particle._particleDirection;\r\n        this._age = particle._age;\r\n        this._lifeTime = particle._lifeTime;\r\n        this._isEmitter = particle._isEmitter;\r\n        this._fade = particle._fade;\r\n        this._fadeTime = particle._fadeTime;\r\n        this._alphaMultiplier = particle._alphaMultiplier;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}