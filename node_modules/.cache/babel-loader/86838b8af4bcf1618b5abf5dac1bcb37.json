{"ast":null,"code":"import { NitroLogger } from '../../core/common/logger/NitroLogger';\nimport { EventDispatcher } from '../../core/events/EventDispatcher';\nimport { FurnitureEcotronBoxLogic, FurnitureEffectBoxLogic, FurnitureGroupForumTerminalLogic, FurnitureHweenLovelockLogic, FurnitureInternalLinkLogic, FurnitureJukeboxLogic, FurnitureLoveLockLogic, FurnitureMonsterplantSeedLogic, FurnitureMysteryBoxLogic, FurnitureMysteryTrophyLogic, FurniturePlaceholderLogic, FurniturePlanetSystemLogic, FurnitureRandomStateLogic, FurnitureRandomTeleportLogic, FurnitureRentableSpaceLogic, FurnitureSongDiskLogic, FurnitureSoundMachineLogic, FurnitureWelcomeGiftLogic } from './object';\nimport { AvatarLogic } from './object/logic/avatar/AvatarLogic';\nimport { FurnitureBadgeDisplayLogic } from './object/logic/furniture/FurnitureBadgeDisplayLogic';\nimport { FurnitureChangeStateWhenStepOnLogic } from './object/logic/furniture/FurnitureChangeStateWhenStepOnLogic';\nimport { FurnitureClothingChangeLogic } from './object/logic/furniture/FurnitureClothingChangeLogic';\nimport { FurnitureCounterClockLogic } from './object/logic/furniture/FurnitureCounterClockLogic';\nimport { FurnitureCrackableLogic } from './object/logic/furniture/FurnitureCrackableLogic';\nimport { FurnitureCraftingGizmoLogic } from './object/logic/furniture/FurnitureCraftingGizmoLogic';\nimport { FurnitureCreditLogic } from './object/logic/furniture/FurnitureCreditLogic';\nimport { FurnitureCuckooClockLogic } from './object/logic/furniture/FurnitureCuckooClockLogic';\nimport { FurnitureCustomStackHeightLogic } from './object/logic/furniture/FurnitureCustomStackHeightLogic';\nimport { FurnitureDiceLogic } from './object/logic/furniture/FurnitureDiceLogic';\nimport { FurnitureEditableInternalLinkLogic } from './object/logic/furniture/FurnitureEditableInternalLinkLogic';\nimport { FurnitureEditableRoomLinkLogic } from './object/logic/furniture/FurnitureEditableRoomLinkLogic';\nimport { FurnitureExternalImageLogic } from './object/logic/furniture/FurnitureExternalImageLogic';\nimport { FurnitureFireworksLogic } from './object/logic/furniture/FurnitureFireworksLogic';\nimport { FurnitureFloorHoleLogic } from './object/logic/furniture/FurnitureFloorHoleLogic';\nimport { FurnitureGuildCustomizedLogic } from './object/logic/furniture/FurnitureGuildCustomizedLogic';\nimport { FurnitureHighScoreLogic } from './object/logic/furniture/FurnitureHighScoreLogic';\nimport { FurnitureHockeyScoreLogic } from './object/logic/furniture/FurnitureHockeyScoreLogic';\nimport { FurnitureIceStormLogic } from './object/logic/furniture/FurnitureIceStormLogic';\nimport { FurnitureLogic } from './object/logic/furniture/FurnitureLogic';\nimport { FurnitureMannequinLogic } from './object/logic/furniture/FurnitureMannequinLogic';\nimport { FurnitureMultiHeightLogic } from './object/logic/furniture/FurnitureMultiHeightLogic';\nimport { FurnitureMultiStateLogic } from './object/logic/furniture/FurnitureMultiStateLogic';\nimport { FurnitureOneWayDoorLogic } from './object/logic/furniture/FurnitureOneWayDoorLogic';\nimport { FurniturePetCustomizationLogic } from './object/logic/furniture/FurniturePetCustomizationLogic';\nimport { FurniturePresentLogic } from './object/logic/furniture/FurniturePresentLogic';\nimport { FurniturePurchaseableClothingLogic } from './object/logic/furniture/FurniturePurchaseableClothingLogic';\nimport { FurniturePushableLogic } from './object/logic/furniture/FurniturePushableLogic';\nimport { FurnitureRoomBackgroundColorLogic } from './object/logic/furniture/FurnitureRoomBackgroundColorLogic';\nimport { FurnitureRoomBackgroundLogic } from './object/logic/furniture/FurnitureRoomBackgroundLogic';\nimport { FurnitureRoomBillboardLogic } from './object/logic/furniture/FurnitureRoomBillboardLogic';\nimport { FurnitureRoomDimmerLogic } from './object/logic/furniture/FurnitureRoomDimmerLogic';\nimport { FurnitureScoreLogic } from './object/logic/furniture/FurnitureScoreLogic';\nimport { FurnitureSoundBlockLogic } from './object/logic/furniture/FurnitureSoundBlockLogic';\nimport { FurnitureStickieLogic } from './object/logic/furniture/FurnitureStickieLogic';\nimport { FurnitureTrophyLogic } from './object/logic/furniture/FurnitureTrophyLogic';\nimport { FurnitureVoteCounterLogic } from './object/logic/furniture/FurnitureVoteCounterLogic';\nimport { FurnitureVoteMajorityLogic } from './object/logic/furniture/FurnitureVoteMajorityLogic';\nimport { FurnitureWindowLogic } from './object/logic/furniture/FurnitureWindowLogic';\nimport { FurnitureYoutubeLogic } from './object/logic/furniture/FurnitureYoutubeLogic';\nimport { PetLogic } from './object/logic/pet/PetLogic';\nimport { RoomLogic } from './object/logic/room/RoomLogic';\nimport { SelectionArrowLogic } from './object/logic/room/SelectionArrowLogic';\nimport { TileCursorLogic } from './object/logic/room/TileCursorLogic';\nimport { RoomObjectLogicType } from './object/RoomObjectLogicType';\nexport class RoomObjectLogicFactory {\n  constructor() {\n    this._events = void 0;\n    this._cachedEvents = void 0;\n    this._registeredEvents = void 0;\n    this._functions = void 0;\n    this._events = new EventDispatcher();\n    this._cachedEvents = new Map();\n    this._registeredEvents = new Map();\n    this._functions = [];\n  }\n\n  getLogic(type) {\n    const logic = this.getLogicType(type);\n    if (!logic) return null;\n    const instance = new logic();\n    if (!instance) return null;\n    instance.eventDispatcher = this._events;\n\n    if (!this._cachedEvents.get(type)) {\n      this._cachedEvents.set(type, true);\n\n      const eventTypes = instance.getEventTypes();\n\n      for (const eventType of eventTypes) {\n        if (!eventType) continue;\n        this.registerEventType(eventType);\n      }\n    }\n\n    return instance;\n  }\n\n  registerEventType(type) {\n    if (this._registeredEvents.get(type)) return;\n\n    this._registeredEvents.set(type, true);\n\n    for (const func of this._functions) {\n      if (!func) continue;\n\n      this._events.addEventListener(type, func);\n    }\n  }\n\n  registerEventFunction(func) {\n    if (!func) return;\n    if (this._functions.indexOf(func) >= 0) return;\n\n    this._functions.push(func);\n\n    for (const eventType of this._registeredEvents.keys()) {\n      if (!eventType) continue;\n\n      this._events.addEventListener(eventType, func);\n    }\n  }\n\n  removeEventFunction(func) {\n    if (!func) return;\n\n    const index = this._functions.indexOf(func);\n\n    if (index === -1) return;\n\n    this._functions.splice(index, 1);\n\n    for (const event of this._registeredEvents.keys()) {\n      if (!event) continue;\n\n      this._events.removeEventListener(event, func);\n    }\n  }\n\n  getLogicType(type) {\n    if (!type) return null;\n    let logic = null;\n\n    switch (type) {\n      case RoomObjectLogicType.ROOM:\n        logic = RoomLogic;\n        break;\n\n      case RoomObjectLogicType.TILE_CURSOR:\n        logic = TileCursorLogic;\n        break;\n\n      case RoomObjectLogicType.SELECTION_ARROW:\n        logic = SelectionArrowLogic;\n        break;\n\n      case RoomObjectLogicType.USER:\n      case RoomObjectLogicType.BOT:\n      case RoomObjectLogicType.RENTABLE_BOT:\n        logic = AvatarLogic;\n        break;\n\n      case RoomObjectLogicType.PET:\n        logic = PetLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_BASIC:\n        logic = FurnitureLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_BADGE_DISPLAY:\n        logic = FurnitureBadgeDisplayLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_CHANGE_STATE_WHEN_STEP_ON:\n        logic = FurnitureChangeStateWhenStepOnLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_COUNTER_CLOCK:\n        logic = FurnitureCounterClockLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_CRACKABLE:\n        logic = FurnitureCrackableLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_CREDIT:\n        logic = FurnitureCreditLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_CUSTOM_STACK_HEIGHT:\n        logic = FurnitureCustomStackHeightLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_DICE:\n        logic = FurnitureDiceLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_EDITABLE_INTERNAL_LINK:\n        logic = FurnitureEditableInternalLinkLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_EDITABLE_ROOM_LINK:\n        logic = FurnitureEditableRoomLinkLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_EXTERNAL_IMAGE_WALLITEM:\n        logic = FurnitureExternalImageLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_FIREWORKS:\n        logic = FurnitureFireworksLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_FLOOR_HOLE:\n        logic = FurnitureFloorHoleLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_GUILD_CUSTOMIZED:\n        logic = FurnitureGuildCustomizedLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_HIGH_SCORE:\n        logic = FurnitureHighScoreLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_HOCKEY_SCORE:\n        logic = FurnitureHockeyScoreLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_ES:\n        logic = FurnitureIceStormLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_MANNEQUIN:\n        logic = FurnitureMannequinLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_MULTIHEIGHT:\n        logic = FurnitureMultiHeightLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_MULTISTATE:\n        logic = FurnitureMultiStateLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_ONE_WAY_DOOR:\n        logic = FurnitureOneWayDoorLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_PET_CUSTOMIZATION:\n        logic = FurniturePetCustomizationLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_PRESENT:\n        logic = FurniturePresentLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_PURCHASABLE_CLOTHING:\n        logic = FurniturePurchaseableClothingLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_PUSHABLE:\n        logic = FurniturePushableLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_BACKGROUND_COLOR:\n        logic = FurnitureRoomBackgroundColorLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_BG:\n        logic = FurnitureRoomBackgroundLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_BB:\n        logic = FurnitureRoomBillboardLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_ROOMDIMMER:\n        logic = FurnitureRoomDimmerLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_SCORE:\n        logic = FurnitureScoreLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_SOUNDBLOCK:\n        logic = FurnitureSoundBlockLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_STICKIE:\n        logic = FurnitureStickieLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_TROPHY:\n        logic = FurnitureTrophyLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_VOTE_COUNTER:\n        logic = FurnitureVoteCounterLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_VOTE_MAJORITY:\n        logic = FurnitureVoteMajorityLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_WINDOW:\n        logic = FurnitureWindowLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_LOVELOCK:\n        logic = FurnitureLoveLockLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_YOUTUBE:\n        logic = FurnitureYoutubeLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_CRAFTING_GIZMO:\n        logic = FurnitureCraftingGizmoLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_RENTABLE_SPACE:\n        logic = FurnitureRentableSpaceLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_EFFECTBOX:\n        logic = FurnitureEffectBoxLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_MONSTERPLANT_SEED:\n        logic = FurnitureMonsterplantSeedLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_MYSTERYBOX:\n        logic = FurnitureMysteryBoxLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_MYSTERYTROPHY:\n        logic = FurnitureMysteryTrophyLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_RANDOM_TELEPORT:\n        logic = FurnitureRandomTeleportLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_CLOTHING_CHANGE:\n        logic = FurnitureClothingChangeLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_CUCKOO_CLOCK:\n        logic = FurnitureCuckooClockLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_ECOTRON_BOX:\n        logic = FurnitureEcotronBoxLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_GROUP_FORUM_TERMINAL:\n        logic = FurnitureGroupForumTerminalLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_HWEEN_LOVELOCK:\n        logic = FurnitureHweenLovelockLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_INTERNAL_LINK:\n        logic = FurnitureInternalLinkLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_JUKEBOX:\n        logic = FurnitureJukeboxLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_PLACEHOLDER:\n        logic = FurniturePlaceholderLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_PLANET_SYSTEM:\n        logic = FurniturePlanetSystemLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_RANDOMSTATE:\n        logic = FurnitureRandomStateLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_SONG_DISK:\n        logic = FurnitureSongDiskLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_SOUND_MACHINE:\n        logic = FurnitureSoundMachineLogic;\n        break;\n\n      case RoomObjectLogicType.FURNITURE_WELCOME_GIFT:\n        logic = FurnitureWelcomeGiftLogic;\n        break;\n\n      default:\n        logic = FurnitureLogic;\n        break;\n    }\n\n    if (!logic) {\n      NitroLogger.log(`Unknown Logic: ${type}`);\n      return null;\n    }\n\n    return logic;\n  }\n\n  get events() {\n    return this._events;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/RoomObjectLogicFactory.ts"],"names":["NitroLogger","EventDispatcher","FurnitureEcotronBoxLogic","FurnitureEffectBoxLogic","FurnitureGroupForumTerminalLogic","FurnitureHweenLovelockLogic","FurnitureInternalLinkLogic","FurnitureJukeboxLogic","FurnitureLoveLockLogic","FurnitureMonsterplantSeedLogic","FurnitureMysteryBoxLogic","FurnitureMysteryTrophyLogic","FurniturePlaceholderLogic","FurniturePlanetSystemLogic","FurnitureRandomStateLogic","FurnitureRandomTeleportLogic","FurnitureRentableSpaceLogic","FurnitureSongDiskLogic","FurnitureSoundMachineLogic","FurnitureWelcomeGiftLogic","AvatarLogic","FurnitureBadgeDisplayLogic","FurnitureChangeStateWhenStepOnLogic","FurnitureClothingChangeLogic","FurnitureCounterClockLogic","FurnitureCrackableLogic","FurnitureCraftingGizmoLogic","FurnitureCreditLogic","FurnitureCuckooClockLogic","FurnitureCustomStackHeightLogic","FurnitureDiceLogic","FurnitureEditableInternalLinkLogic","FurnitureEditableRoomLinkLogic","FurnitureExternalImageLogic","FurnitureFireworksLogic","FurnitureFloorHoleLogic","FurnitureGuildCustomizedLogic","FurnitureHighScoreLogic","FurnitureHockeyScoreLogic","FurnitureIceStormLogic","FurnitureLogic","FurnitureMannequinLogic","FurnitureMultiHeightLogic","FurnitureMultiStateLogic","FurnitureOneWayDoorLogic","FurniturePetCustomizationLogic","FurniturePresentLogic","FurniturePurchaseableClothingLogic","FurniturePushableLogic","FurnitureRoomBackgroundColorLogic","FurnitureRoomBackgroundLogic","FurnitureRoomBillboardLogic","FurnitureRoomDimmerLogic","FurnitureScoreLogic","FurnitureSoundBlockLogic","FurnitureStickieLogic","FurnitureTrophyLogic","FurnitureVoteCounterLogic","FurnitureVoteMajorityLogic","FurnitureWindowLogic","FurnitureYoutubeLogic","PetLogic","RoomLogic","SelectionArrowLogic","TileCursorLogic","RoomObjectLogicType","RoomObjectLogicFactory","constructor","_events","_cachedEvents","_registeredEvents","_functions","Map","getLogic","type","logic","getLogicType","instance","eventDispatcher","get","set","eventTypes","getEventTypes","eventType","registerEventType","func","addEventListener","registerEventFunction","indexOf","push","keys","removeEventFunction","index","splice","event","removeEventListener","ROOM","TILE_CURSOR","SELECTION_ARROW","USER","BOT","RENTABLE_BOT","PET","FURNITURE_BASIC","FURNITURE_BADGE_DISPLAY","FURNITURE_CHANGE_STATE_WHEN_STEP_ON","FURNITURE_COUNTER_CLOCK","FURNITURE_CRACKABLE","FURNITURE_CREDIT","FURNITURE_CUSTOM_STACK_HEIGHT","FURNITURE_DICE","FURNITURE_EDITABLE_INTERNAL_LINK","FURNITURE_EDITABLE_ROOM_LINK","FURNITURE_EXTERNAL_IMAGE_WALLITEM","FURNITURE_FIREWORKS","FURNITURE_FLOOR_HOLE","FURNITURE_GUILD_CUSTOMIZED","FURNITURE_HIGH_SCORE","FURNITURE_HOCKEY_SCORE","FURNITURE_ES","FURNITURE_MANNEQUIN","FURNITURE_MULTIHEIGHT","FURNITURE_MULTISTATE","FURNITURE_ONE_WAY_DOOR","FURNITURE_PET_CUSTOMIZATION","FURNITURE_PRESENT","FURNITURE_PURCHASABLE_CLOTHING","FURNITURE_PUSHABLE","FURNITURE_BACKGROUND_COLOR","FURNITURE_BG","FURNITURE_BB","FURNITURE_ROOMDIMMER","FURNITURE_SCORE","FURNITURE_SOUNDBLOCK","FURNITURE_STICKIE","FURNITURE_TROPHY","FURNITURE_VOTE_COUNTER","FURNITURE_VOTE_MAJORITY","FURNITURE_WINDOW","FURNITURE_LOVELOCK","FURNITURE_YOUTUBE","FURNITURE_CRAFTING_GIZMO","FURNITURE_RENTABLE_SPACE","FURNITURE_EFFECTBOX","FURNITURE_MONSTERPLANT_SEED","FURNITURE_MYSTERYBOX","FURNITURE_MYSTERYTROPHY","FURNITURE_RANDOM_TELEPORT","FURNITURE_CLOTHING_CHANGE","FURNITURE_CUCKOO_CLOCK","FURNITURE_ECOTRON_BOX","FURNITURE_GROUP_FORUM_TERMINAL","FURNITURE_HWEEN_LOVELOCK","FURNITURE_INTERNAL_LINK","FURNITURE_JUKEBOX","FURNITURE_PLACEHOLDER","FURNITURE_PLANET_SYSTEM","FURNITURE_RANDOMSTATE","FURNITURE_SONG_DISK","FURNITURE_SOUND_MACHINE","FURNITURE_WELCOME_GIFT","log","events"],"mappings":"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","sourcesContent":["import { NitroLogger } from '../../core/common/logger/NitroLogger';\r\nimport { EventDispatcher } from '../../core/events/EventDispatcher';\r\nimport { IEventDispatcher } from '../../core/events/IEventDispatcher';\r\nimport { IRoomObjectEventHandler } from '../../room/object/logic/IRoomObjectEventHandler';\r\nimport { IRoomObjectLogicFactory } from '../../room/object/logic/IRoomObjectLogicFactory';\r\nimport { RoomObjectLogicBase } from '../../room/object/logic/RoomObjectLogicBase';\r\nimport { FurnitureEcotronBoxLogic, FurnitureEffectBoxLogic, FurnitureGroupForumTerminalLogic, FurnitureHweenLovelockLogic, FurnitureInternalLinkLogic, FurnitureJukeboxLogic, FurnitureLoveLockLogic, FurnitureMonsterplantSeedLogic, FurnitureMysteryBoxLogic, FurnitureMysteryTrophyLogic, FurniturePlaceholderLogic, FurniturePlanetSystemLogic, FurnitureRandomStateLogic, FurnitureRandomTeleportLogic, FurnitureRentableSpaceLogic, FurnitureSongDiskLogic, FurnitureSoundMachineLogic, FurnitureWelcomeGiftLogic } from './object';\r\nimport { AvatarLogic } from './object/logic/avatar/AvatarLogic';\r\nimport { FurnitureBadgeDisplayLogic } from './object/logic/furniture/FurnitureBadgeDisplayLogic';\r\nimport { FurnitureChangeStateWhenStepOnLogic } from './object/logic/furniture/FurnitureChangeStateWhenStepOnLogic';\r\nimport { FurnitureClothingChangeLogic } from './object/logic/furniture/FurnitureClothingChangeLogic';\r\nimport { FurnitureCounterClockLogic } from './object/logic/furniture/FurnitureCounterClockLogic';\r\nimport { FurnitureCrackableLogic } from './object/logic/furniture/FurnitureCrackableLogic';\r\nimport { FurnitureCraftingGizmoLogic } from './object/logic/furniture/FurnitureCraftingGizmoLogic';\r\nimport { FurnitureCreditLogic } from './object/logic/furniture/FurnitureCreditLogic';\r\nimport { FurnitureCuckooClockLogic } from './object/logic/furniture/FurnitureCuckooClockLogic';\r\nimport { FurnitureCustomStackHeightLogic } from './object/logic/furniture/FurnitureCustomStackHeightLogic';\r\nimport { FurnitureDiceLogic } from './object/logic/furniture/FurnitureDiceLogic';\r\nimport { FurnitureEditableInternalLinkLogic } from './object/logic/furniture/FurnitureEditableInternalLinkLogic';\r\nimport { FurnitureEditableRoomLinkLogic } from './object/logic/furniture/FurnitureEditableRoomLinkLogic';\r\nimport { FurnitureExternalImageLogic } from './object/logic/furniture/FurnitureExternalImageLogic';\r\nimport { FurnitureFireworksLogic } from './object/logic/furniture/FurnitureFireworksLogic';\r\nimport { FurnitureFloorHoleLogic } from './object/logic/furniture/FurnitureFloorHoleLogic';\r\nimport { FurnitureGuildCustomizedLogic } from './object/logic/furniture/FurnitureGuildCustomizedLogic';\r\nimport { FurnitureHighScoreLogic } from './object/logic/furniture/FurnitureHighScoreLogic';\r\nimport { FurnitureHockeyScoreLogic } from './object/logic/furniture/FurnitureHockeyScoreLogic';\r\nimport { FurnitureIceStormLogic } from './object/logic/furniture/FurnitureIceStormLogic';\r\nimport { FurnitureLogic } from './object/logic/furniture/FurnitureLogic';\r\nimport { FurnitureMannequinLogic } from './object/logic/furniture/FurnitureMannequinLogic';\r\nimport { FurnitureMultiHeightLogic } from './object/logic/furniture/FurnitureMultiHeightLogic';\r\nimport { FurnitureMultiStateLogic } from './object/logic/furniture/FurnitureMultiStateLogic';\r\nimport { FurnitureOneWayDoorLogic } from './object/logic/furniture/FurnitureOneWayDoorLogic';\r\nimport { FurniturePetCustomizationLogic } from './object/logic/furniture/FurniturePetCustomizationLogic';\r\nimport { FurniturePresentLogic } from './object/logic/furniture/FurniturePresentLogic';\r\nimport { FurniturePurchaseableClothingLogic } from './object/logic/furniture/FurniturePurchaseableClothingLogic';\r\nimport { FurniturePushableLogic } from './object/logic/furniture/FurniturePushableLogic';\r\nimport { FurnitureRoomBackgroundColorLogic } from './object/logic/furniture/FurnitureRoomBackgroundColorLogic';\r\nimport { FurnitureRoomBackgroundLogic } from './object/logic/furniture/FurnitureRoomBackgroundLogic';\r\nimport { FurnitureRoomBillboardLogic } from './object/logic/furniture/FurnitureRoomBillboardLogic';\r\nimport { FurnitureRoomDimmerLogic } from './object/logic/furniture/FurnitureRoomDimmerLogic';\r\nimport { FurnitureScoreLogic } from './object/logic/furniture/FurnitureScoreLogic';\r\nimport { FurnitureSoundBlockLogic } from './object/logic/furniture/FurnitureSoundBlockLogic';\r\nimport { FurnitureStickieLogic } from './object/logic/furniture/FurnitureStickieLogic';\r\nimport { FurnitureTrophyLogic } from './object/logic/furniture/FurnitureTrophyLogic';\r\nimport { FurnitureVoteCounterLogic } from './object/logic/furniture/FurnitureVoteCounterLogic';\r\nimport { FurnitureVoteMajorityLogic } from './object/logic/furniture/FurnitureVoteMajorityLogic';\r\nimport { FurnitureWindowLogic } from './object/logic/furniture/FurnitureWindowLogic';\r\nimport { FurnitureYoutubeLogic } from './object/logic/furniture/FurnitureYoutubeLogic';\r\nimport { PetLogic } from './object/logic/pet/PetLogic';\r\nimport { RoomLogic } from './object/logic/room/RoomLogic';\r\nimport { SelectionArrowLogic } from './object/logic/room/SelectionArrowLogic';\r\nimport { TileCursorLogic } from './object/logic/room/TileCursorLogic';\r\nimport { RoomObjectLogicType } from './object/RoomObjectLogicType';\r\n\r\nexport class RoomObjectLogicFactory implements IRoomObjectLogicFactory\r\n{\r\n    private _events: IEventDispatcher;\r\n\r\n    private _cachedEvents: Map<string, boolean>;\r\n    private _registeredEvents: Map<string, boolean>;\r\n    private _functions: Function[];\r\n\r\n    constructor()\r\n    {\r\n        this._events = new EventDispatcher();\r\n\r\n        this._cachedEvents = new Map();\r\n        this._registeredEvents = new Map();\r\n        this._functions = [];\r\n    }\r\n\r\n    public getLogic(type: string): IRoomObjectEventHandler\r\n    {\r\n        const logic = this.getLogicType(type);\r\n\r\n        if(!logic) return null;\r\n\r\n        const instance = (new logic() as IRoomObjectEventHandler);\r\n\r\n        if(!instance) return null;\r\n\r\n        instance.eventDispatcher = this._events;\r\n\r\n        if(!this._cachedEvents.get(type))\r\n        {\r\n            this._cachedEvents.set(type, true);\r\n\r\n            const eventTypes = instance.getEventTypes();\r\n\r\n            for(const eventType of eventTypes)\r\n            {\r\n                if(!eventType) continue;\r\n\r\n                this.registerEventType(eventType);\r\n            }\r\n        }\r\n\r\n        return instance;\r\n    }\r\n\r\n    private registerEventType(type: string): void\r\n    {\r\n        if(this._registeredEvents.get(type)) return;\r\n\r\n        this._registeredEvents.set(type, true);\r\n\r\n        for(const func of this._functions)\r\n        {\r\n            if(!func) continue;\r\n\r\n            this._events.addEventListener(type, func);\r\n        }\r\n    }\r\n\r\n    public registerEventFunction(func: Function): void\r\n    {\r\n        if(!func) return;\r\n\r\n        if(this._functions.indexOf(func) >= 0) return;\r\n\r\n        this._functions.push(func);\r\n\r\n        for(const eventType of this._registeredEvents.keys())\r\n        {\r\n            if(!eventType) continue;\r\n\r\n            this._events.addEventListener(eventType, func);\r\n        }\r\n    }\r\n\r\n    public removeEventFunction(func: Function): void\r\n    {\r\n        if(!func) return;\r\n\r\n        const index = this._functions.indexOf(func);\r\n\r\n        if(index === -1) return;\r\n\r\n        this._functions.splice(index, 1);\r\n\r\n        for(const event of this._registeredEvents.keys())\r\n        {\r\n            if(!event) continue;\r\n\r\n            this._events.removeEventListener(event, func);\r\n        }\r\n    }\r\n\r\n    public getLogicType(type: string): typeof RoomObjectLogicBase\r\n    {\r\n        if(!type) return null;\r\n\r\n        let logic: typeof RoomObjectLogicBase = null;\r\n\r\n        switch(type)\r\n        {\r\n            case RoomObjectLogicType.ROOM:\r\n                logic = RoomLogic;\r\n                break;\r\n            case RoomObjectLogicType.TILE_CURSOR:\r\n                logic = TileCursorLogic;\r\n                break;\r\n            case RoomObjectLogicType.SELECTION_ARROW:\r\n                logic = SelectionArrowLogic;\r\n                break;\r\n            case RoomObjectLogicType.USER:\r\n            case RoomObjectLogicType.BOT:\r\n            case RoomObjectLogicType.RENTABLE_BOT:\r\n                logic = AvatarLogic;\r\n                break;\r\n            case RoomObjectLogicType.PET:\r\n                logic = PetLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_BASIC:\r\n                logic = FurnitureLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_BADGE_DISPLAY:\r\n                logic = FurnitureBadgeDisplayLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_CHANGE_STATE_WHEN_STEP_ON:\r\n                logic = FurnitureChangeStateWhenStepOnLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_COUNTER_CLOCK:\r\n                logic = FurnitureCounterClockLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_CRACKABLE:\r\n                logic = FurnitureCrackableLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_CREDIT:\r\n                logic = FurnitureCreditLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_CUSTOM_STACK_HEIGHT:\r\n                logic = FurnitureCustomStackHeightLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_DICE:\r\n                logic = FurnitureDiceLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_EDITABLE_INTERNAL_LINK:\r\n                logic = FurnitureEditableInternalLinkLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_EDITABLE_ROOM_LINK:\r\n                logic = FurnitureEditableRoomLinkLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_EXTERNAL_IMAGE_WALLITEM:\r\n                logic = FurnitureExternalImageLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_FIREWORKS:\r\n                logic = FurnitureFireworksLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_FLOOR_HOLE:\r\n                logic = FurnitureFloorHoleLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_GUILD_CUSTOMIZED:\r\n                logic = FurnitureGuildCustomizedLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_HIGH_SCORE:\r\n                logic = FurnitureHighScoreLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_HOCKEY_SCORE:\r\n                logic = FurnitureHockeyScoreLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_ES:\r\n                logic = FurnitureIceStormLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_MANNEQUIN:\r\n                logic = FurnitureMannequinLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_MULTIHEIGHT:\r\n                logic = FurnitureMultiHeightLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_MULTISTATE:\r\n                logic = FurnitureMultiStateLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_ONE_WAY_DOOR:\r\n                logic = FurnitureOneWayDoorLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_PET_CUSTOMIZATION:\r\n                logic = FurniturePetCustomizationLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_PRESENT:\r\n                logic = FurniturePresentLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_PURCHASABLE_CLOTHING:\r\n                logic = FurniturePurchaseableClothingLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_PUSHABLE:\r\n                logic = FurniturePushableLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_BACKGROUND_COLOR:\r\n                logic = FurnitureRoomBackgroundColorLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_BG:\r\n                logic = FurnitureRoomBackgroundLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_BB:\r\n                logic = FurnitureRoomBillboardLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_ROOMDIMMER:\r\n                logic = FurnitureRoomDimmerLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_SCORE:\r\n                logic = FurnitureScoreLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_SOUNDBLOCK:\r\n                logic = FurnitureSoundBlockLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_STICKIE:\r\n                logic = FurnitureStickieLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_TROPHY:\r\n                logic = FurnitureTrophyLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_VOTE_COUNTER:\r\n                logic = FurnitureVoteCounterLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_VOTE_MAJORITY:\r\n                logic = FurnitureVoteMajorityLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_WINDOW:\r\n                logic = FurnitureWindowLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_LOVELOCK:\r\n                logic = FurnitureLoveLockLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_YOUTUBE:\r\n                logic = FurnitureYoutubeLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_CRAFTING_GIZMO:\r\n                logic = FurnitureCraftingGizmoLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_RENTABLE_SPACE:\r\n                logic = FurnitureRentableSpaceLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_EFFECTBOX:\r\n                logic = FurnitureEffectBoxLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_MONSTERPLANT_SEED:\r\n                logic = FurnitureMonsterplantSeedLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_MYSTERYBOX:\r\n                logic = FurnitureMysteryBoxLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_MYSTERYTROPHY:\r\n                logic = FurnitureMysteryTrophyLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_RANDOM_TELEPORT:\r\n                logic = FurnitureRandomTeleportLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_CLOTHING_CHANGE:\r\n                logic = FurnitureClothingChangeLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_CUCKOO_CLOCK:\r\n                logic = FurnitureCuckooClockLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_ECOTRON_BOX:\r\n                logic = FurnitureEcotronBoxLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_GROUP_FORUM_TERMINAL:\r\n                logic = FurnitureGroupForumTerminalLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_HWEEN_LOVELOCK:\r\n                logic = FurnitureHweenLovelockLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_INTERNAL_LINK:\r\n                logic = FurnitureInternalLinkLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_JUKEBOX:\r\n                logic = FurnitureJukeboxLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_PLACEHOLDER:\r\n                logic = FurniturePlaceholderLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_PLANET_SYSTEM:\r\n                logic = FurniturePlanetSystemLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_RANDOMSTATE:\r\n                logic = FurnitureRandomStateLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_SONG_DISK:\r\n                logic = FurnitureSongDiskLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_SOUND_MACHINE:\r\n                logic = FurnitureSoundMachineLogic;\r\n                break;\r\n            case RoomObjectLogicType.FURNITURE_WELCOME_GIFT:\r\n                logic = FurnitureWelcomeGiftLogic;\r\n                break;\r\n            default:\r\n                logic = FurnitureLogic;\r\n                break;\r\n        }\r\n\r\n        if(!logic)\r\n        {\r\n            NitroLogger.log(`Unknown Logic: ${ type }`);\r\n\r\n            return null;\r\n        }\r\n\r\n        return logic;\r\n    }\r\n\r\n    public get events(): IEventDispatcher\r\n    {\r\n        return this._events;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}