{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { RenderTexture } from '@pixi/core';\r\nimport { Sprite } from '@pixi/sprite';\r\nimport { IDisposable } from '../../core/common/disposable/IDisposable';\r\nimport { IGraphicAsset } from '../../room/object/visualization/utils/IGraphicAsset';\r\nimport { IAnimationLayerData } from './animation/IAnimationLayerData';\r\nimport { IAvatarDataContainer } from './animation/IAvatarDataContainer';\r\nimport { ISpriteDataContainer } from './animation/ISpriteDataContainer';\r\nimport { IAvatarFigureContainer } from './IAvatarFigureContainer';\r\nimport { IPartColor } from './structure/figure/IPartColor';\r\n\r\nexport interface IAvatarImage extends IDisposable\r\n{\r\n    getServerRenderData(): any;\r\n    setDirection(_arg_1: string, _arg_2: number): void;\r\n    setDirectionAngle(_arg_1: string, _arg_2: number): void;\r\n    updateAnimationByFrames(_arg_1?: number): void;\r\n    getScale(): string;\r\n    getSprites(): ISpriteDataContainer[];\r\n    getLayerData(_arg_1: ISpriteDataContainer): IAnimationLayerData;\r\n    getImage(setType: string, hightlight: boolean, scale?: number, cache?: boolean): RenderTexture;\r\n    getImageAsSprite(setType: string, scale?: number): Sprite;\r\n    getCroppedImage(setType: string, scale?: number): HTMLImageElement;\r\n    getAsset(_arg_1: string): IGraphicAsset;\r\n    getDirection(): number;\r\n    getFigure(): IAvatarFigureContainer;\r\n    getPartColor(_arg_1: string): IPartColor;\r\n    isAnimating(): boolean;\r\n    getCanvasOffsets(): number[];\r\n    initActionAppends(): void;\r\n    endActionAppends(): void;\r\n    appendAction(_arg_1: string, ..._args: any[]): boolean;\r\n    avatarSpriteData: IAvatarDataContainer;\r\n    isPlaceholder(): boolean;\r\n    forceActionUpdate(): void;\r\n    animationHasResetOnToggle: boolean;\r\n    resetAnimationFrameCounter(): void;\r\n    mainAction: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}