{"ast":null,"code":"import { Motion } from './Motion';\nexport class Combo extends Motion {\n  constructor() {\n    for (var _len = arguments.length, motions = new Array(_len), _key = 0; _key < _len; _key++) {\n      motions[_key] = arguments[_key];\n    }\n\n    super(motions && motions.length ? motions[0].target : null);\n    this._runningMotions = void 0;\n    this._removedMotions = void 0;\n    this._runningMotions = [];\n    this._removedMotions = [];\n\n    for (const motion of motions) this._runningMotions.push(motion);\n  }\n\n  start() {\n    super.start();\n\n    for (const motion of this._runningMotions) motion.start();\n  }\n\n  tick(k) {\n    super.tick(k);\n    let motion = null;\n\n    while ((motion = this._removedMotions.pop()) !== null) {\n      this._runningMotions.splice(this._removedMotions.indexOf(motion), 1);\n\n      if (motion.running) motion.stop();\n    }\n\n    for (const motion of this._runningMotions) {\n      if (motion.running) motion.tick(k);\n      if (motion.complete) this._removedMotions.push(motion);\n    }\n\n    if (this._runningMotions.length > 0) {\n      for (const motion of this._runningMotions) {\n        this._target = motion.target;\n        if (this._target) break;\n      }\n\n      this._complete = false;\n    } else {\n      this._complete = true;\n    }\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/window/motion/Combo.ts"],"names":["Motion","Combo","constructor","motions","length","target","_runningMotions","_removedMotions","motion","push","start","tick","k","pop","splice","indexOf","running","stop","complete","_target","_complete"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AAEA,OAAO,MAAMC,KAAN,SAAoBD,MAApB,CACP;AAIIE,EAAAA,WAAW,GACX;AAAA,sCADeC,OACf;AADeA,MAAAA,OACf;AAAA;;AACI,UAAOA,OAAO,IAAIA,OAAO,CAACC,MAApB,GAA8BD,OAAO,CAAC,CAAD,CAAP,CAAWE,MAAzC,GAAkD,IAAxD;AADJ,SAJQC,eAIR;AAAA,SAHQC,eAGR;AAGI,SAAKD,eAAL,GAAuB,EAAvB;AACA,SAAKC,eAAL,GAAuB,EAAvB;;AAEA,SAAI,MAAMC,MAAV,IAAoBL,OAApB,EAA6B,KAAKG,eAAL,CAAqBG,IAArB,CAA0BD,MAA1B;AAChC;;AAEME,EAAAA,KAAK,GACZ;AACI,UAAMA,KAAN;;AAEA,SAAI,MAAMF,MAAV,IAAoB,KAAKF,eAAzB,EAA0CE,MAAM,CAACE,KAAP;AAC7C;;AAEMC,EAAAA,IAAI,CAACC,CAAD,EACX;AACI,UAAMD,IAAN,CAAWC,CAAX;AAEA,QAAIJ,MAAc,GAAG,IAArB;;AAEA,WAAO,CAACA,MAAM,GAAG,KAAKD,eAAL,CAAqBM,GAArB,EAAV,MAA0C,IAAjD,EACA;AACI,WAAKP,eAAL,CAAqBQ,MAArB,CAA4B,KAAKP,eAAL,CAAqBQ,OAArB,CAA6BP,MAA7B,CAA5B,EAAkE,CAAlE;;AAEA,UAAGA,MAAM,CAACQ,OAAV,EAAmBR,MAAM,CAACS,IAAP;AACtB;;AAED,SAAI,MAAMT,MAAV,IAAoB,KAAKF,eAAzB,EACA;AACI,UAAGE,MAAM,CAACQ,OAAV,EAAmBR,MAAM,CAACG,IAAP,CAAYC,CAAZ;AAEnB,UAAGJ,MAAM,CAACU,QAAV,EAAoB,KAAKX,eAAL,CAAqBE,IAArB,CAA0BD,MAA1B;AACvB;;AAED,QAAG,KAAKF,eAAL,CAAqBF,MAArB,GAA8B,CAAjC,EACA;AACI,WAAI,MAAMI,MAAV,IAAoB,KAAKF,eAAzB,EACA;AACI,aAAKa,OAAL,GAAeX,MAAM,CAACH,MAAtB;AAEA,YAAG,KAAKc,OAAR,EAAiB;AACpB;;AAED,WAAKC,SAAL,GAAiB,KAAjB;AACH,KAVD,MAYA;AACI,WAAKA,SAAL,GAAiB,IAAjB;AACH;AACJ;;AAxDL","sourcesContent":["import { Motion } from './Motion';\r\n\r\nexport class Combo extends Motion\r\n{\r\n    private _runningMotions: Motion[];\r\n    private _removedMotions: Motion[];\r\n\r\n    constructor(...motions: Motion[])\r\n    {\r\n        super((motions && motions.length) ? motions[0].target : null);\r\n\r\n        this._runningMotions = [];\r\n        this._removedMotions = [];\r\n\r\n        for(const motion of motions) this._runningMotions.push(motion);\r\n    }\r\n\r\n    public start(): void\r\n    {\r\n        super.start();\r\n\r\n        for(const motion of this._runningMotions) motion.start();\r\n    }\r\n\r\n    public tick(k: number): void\r\n    {\r\n        super.tick(k);\r\n\r\n        let motion: Motion = null;\r\n\r\n        while(((motion = this._removedMotions.pop()) !== null))\r\n        {\r\n            this._runningMotions.splice(this._removedMotions.indexOf(motion), 1);\r\n\r\n            if(motion.running) motion.stop();\r\n        }\r\n\r\n        for(const motion of this._runningMotions)\r\n        {\r\n            if(motion.running) motion.tick(k);\r\n\r\n            if(motion.complete) this._removedMotions.push(motion);\r\n        }\r\n\r\n        if(this._runningMotions.length > 0)\r\n        {\r\n            for(const motion of this._runningMotions)\r\n            {\r\n                this._target = motion.target;\r\n\r\n                if(this._target) break;\r\n            }\r\n\r\n            this._complete = false;\r\n        }\r\n        else\r\n        {\r\n            this._complete = true;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}