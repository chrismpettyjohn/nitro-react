{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { IDisposable } from '../core/common/disposable/IDisposable';\r\nimport { IRoomInstanceContainer } from './IRoomInstanceContainer';\r\nimport { IRoomObjectManager } from './IRoomObjectManager';\r\nimport { IRoomObject } from './object/IRoomObject';\r\nimport { IRoomObjectModel } from './object/IRoomObjectModel';\r\nimport { IRoomRendererBase } from './renderer/IRoomRendererBase';\r\n\r\nexport interface IRoomInstance extends IDisposable\r\n{\r\n    setRenderer(renderer: IRoomRendererBase): void;\r\n    getManager(category: number): IRoomObjectManager;\r\n    getTotalObjectsForManager(category: number): number;\r\n    getRoomObject(id: number, category: number): IRoomObject;\r\n    getRoomObjectsForCategory(category: number): IRoomObject[];\r\n    getRoomObjectByIndex(index: number, category: number): IRoomObject;\r\n    createRoomObject(id: number, stateCount: number, type: string, category: number): IRoomObject;\r\n    createRoomObjectAndInitalize(objectId: number, type: string, category: number): IRoomObject;\r\n    removeRoomObject(id: number, category: number): void;\r\n    removeAllManagers(): void;\r\n    addUpdateCategory(category: number): void;\r\n    removeUpdateCategory(category: number): void;\r\n    update(time: number, update?: boolean): void;\r\n    id: string;\r\n    container: IRoomInstanceContainer;\r\n    renderer: IRoomRendererBase;\r\n    managers: Map<number, IRoomObjectManager>;\r\n    model: IRoomObjectModel;\r\n}"]},"metadata":{},"sourceType":"module"}