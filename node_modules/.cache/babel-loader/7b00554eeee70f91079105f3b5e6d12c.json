{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { WiredFurniActionEvent, WiredFurniConditionEvent, WiredFurniTriggerEvent, WiredOpenEvent, WiredRewardResultMessageEvent, WiredSaveSuccessEvent, WiredValidationErrorEvent } from '@nitrots/nitro-renderer';\nimport { useCallback } from 'react';\nimport { LocalizeText, NotificationAlertType, NotificationUtilities } from '../../api';\nimport { UseMessageEventHook } from '../../hooks/messages';\nimport { useWiredContext } from './WiredContext';\nexport const WiredMessageHandler = props => {\n  _s();\n\n  const {\n    setTrigger = null\n  } = useWiredContext();\n  const onWiredFurniActionEvent = useCallback(event => {\n    const parser = event.getParser();\n    setTrigger(parser.definition);\n  }, [setTrigger]);\n  const onWiredFurniConditionEvent = useCallback(event => {\n    const parser = event.getParser();\n    setTrigger(parser.definition);\n  }, [setTrigger]);\n  const onWiredFurniTriggerEvent = useCallback(event => {\n    const parser = event.getParser();\n    setTrigger(parser.definition);\n  }, [setTrigger]);\n  const onWiredOpenEvent = useCallback(event => {\n    const parser = event.getParser();\n    console.log(parser);\n  }, []);\n  const onWiredRewardResultMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n    console.log(parser);\n  }, []);\n  const onWiredSaveSuccessEvent = useCallback(event => {\n    setTrigger(null);\n  }, [setTrigger]);\n  const onWiredValidationErrorEvent = useCallback(event => {\n    const parser = event.getParser();\n    NotificationUtilities.simpleAlert(parser.info, NotificationAlertType.DEFAULT, null, null, LocalizeText('error.title'));\n    console.log(parser);\n  }, []);\n  UseMessageEventHook(WiredFurniActionEvent, onWiredFurniActionEvent);\n  UseMessageEventHook(WiredFurniConditionEvent, onWiredFurniConditionEvent);\n  UseMessageEventHook(WiredFurniTriggerEvent, onWiredFurniTriggerEvent);\n  UseMessageEventHook(WiredOpenEvent, onWiredOpenEvent);\n  UseMessageEventHook(WiredRewardResultMessageEvent, onWiredRewardResultMessageEvent);\n  UseMessageEventHook(WiredSaveSuccessEvent, onWiredSaveSuccessEvent);\n  UseMessageEventHook(WiredValidationErrorEvent, onWiredValidationErrorEvent);\n  return null;\n};\n\n_s(WiredMessageHandler, \"PgPEVsfxy+QCAqHsIO9y9zU9qlg=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredMessageHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredMessageHandler\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/WiredMessageHandler.tsx"],"names":["WiredFurniActionEvent","WiredFurniConditionEvent","WiredFurniTriggerEvent","WiredOpenEvent","WiredRewardResultMessageEvent","WiredSaveSuccessEvent","WiredValidationErrorEvent","useCallback","LocalizeText","NotificationAlertType","NotificationUtilities","UseMessageEventHook","useWiredContext","WiredMessageHandler","props","setTrigger","onWiredFurniActionEvent","event","parser","getParser","definition","onWiredFurniConditionEvent","onWiredFurniTriggerEvent","onWiredOpenEvent","console","log","onWiredRewardResultMessageEvent","onWiredSaveSuccessEvent","onWiredValidationErrorEvent","simpleAlert","info","DEFAULT"],"mappings":"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","sourcesContent":["import { WiredFurniActionEvent, WiredFurniConditionEvent, WiredFurniTriggerEvent, WiredOpenEvent, WiredRewardResultMessageEvent, WiredSaveSuccessEvent, WiredValidationErrorEvent } from '@nitrots/nitro-renderer';\nimport { FC, useCallback } from 'react';\nimport { LocalizeText, NotificationAlertType, NotificationUtilities } from '../../api';\nimport { UseMessageEventHook } from '../../hooks/messages';\nimport { useWiredContext } from './WiredContext';\n\nexport const WiredMessageHandler: FC<{}> = props =>\n{\n    const { setTrigger = null } = useWiredContext();\n\n    const onWiredFurniActionEvent = useCallback((event: WiredFurniActionEvent) =>\n    {\n        const parser = event.getParser();\n\n        setTrigger(parser.definition);\n    }, [ setTrigger ]);\n\n    const onWiredFurniConditionEvent = useCallback((event: WiredFurniConditionEvent) =>\n    {\n        const parser = event.getParser();\n\n        setTrigger(parser.definition);\n    }, [ setTrigger ]);\n\n    const onWiredFurniTriggerEvent = useCallback((event: WiredFurniTriggerEvent) =>\n    {\n        const parser = event.getParser();\n\n        setTrigger(parser.definition);\n    }, [ setTrigger ]);\n\n    const onWiredOpenEvent = useCallback((event: WiredOpenEvent) =>\n    {\n        const parser = event.getParser();\n\n        console.log(parser);\n    }, []);\n\n    const onWiredRewardResultMessageEvent = useCallback((event: WiredRewardResultMessageEvent) =>\n    {\n        const parser = event.getParser();\n\n        console.log(parser);\n    }, []);\n\n    const onWiredSaveSuccessEvent = useCallback((event: WiredSaveSuccessEvent) =>\n    {\n        setTrigger(null);\n    }, [ setTrigger ]);\n\n    const onWiredValidationErrorEvent = useCallback((event: WiredValidationErrorEvent) =>\n    {\n        const parser = event.getParser();\n\n        NotificationUtilities.simpleAlert(parser.info, NotificationAlertType.DEFAULT, null, null, LocalizeText('error.title'));\n        console.log(parser);\n    }, []);\n\n    UseMessageEventHook(WiredFurniActionEvent, onWiredFurniActionEvent);\n    UseMessageEventHook(WiredFurniConditionEvent, onWiredFurniConditionEvent);\n    UseMessageEventHook(WiredFurniTriggerEvent, onWiredFurniTriggerEvent);\n    UseMessageEventHook(WiredOpenEvent, onWiredOpenEvent);\n    UseMessageEventHook(WiredRewardResultMessageEvent, onWiredRewardResultMessageEvent);\n    UseMessageEventHook(WiredSaveSuccessEvent, onWiredSaveSuccessEvent);\n    UseMessageEventHook(WiredValidationErrorEvent, onWiredValidationErrorEvent);\n\n    return null;\n};\n"]},"metadata":{},"sourceType":"module"}