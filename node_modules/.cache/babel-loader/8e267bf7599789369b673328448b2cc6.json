{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/layout/LayoutNotificationBubbleView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { Flex } from '..';\nimport { TransitionAnimation, TransitionAnimationTypes } from '../transitions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LayoutNotificationBubbleView = props => {\n  _s();\n\n  const {\n    fadesOut = true,\n    timeoutMs = 8000,\n    close = null,\n    overflow = 'hidden',\n    classNames = [],\n    ...rest\n  } = props;\n  const [isVisible, setIsVisible] = useState(false);\n  const getClassNames = useMemo(() => {\n    const newClassNames = ['nitro-notification-bubble', 'rounded', 'p-2', 'notification-height'];\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [classNames]);\n  useEffect(() => {\n    setIsVisible(true);\n    return () => setIsVisible(false);\n  }, []);\n  useEffect(() => {\n    if (!fadesOut) return;\n    const timeout = setTimeout(() => {\n      setIsVisible(false);\n      setTimeout(() => close(), 300);\n    }, timeoutMs);\n    return () => clearTimeout(timeout);\n  }, [fadesOut, timeoutMs, close]);\n  return /*#__PURE__*/_jsxDEV(TransitionAnimation, {\n    type: TransitionAnimationTypes.FADE_IN,\n    inProp: isVisible,\n    timeout: 300,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      overflow: overflow,\n      classNames: getClassNames,\n      onClick: close,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LayoutNotificationBubbleView, \"Nf5DRQWjrDc33CShB1JpejC+iNo=\");\n\n_c = LayoutNotificationBubbleView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutNotificationBubbleView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/layout/LayoutNotificationBubbleView.tsx"],"names":["useEffect","useMemo","useState","Flex","TransitionAnimation","TransitionAnimationTypes","LayoutNotificationBubbleView","props","fadesOut","timeoutMs","close","overflow","classNames","rest","isVisible","setIsVisible","getClassNames","newClassNames","length","push","timeout","setTimeout","clearTimeout","FADE_IN"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,OAAxB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,IAAT,QAAgC,IAAhC;AACA,SAASC,mBAAT,EAA8BC,wBAA9B,QAA8D,gBAA9D;;AASA,OAAO,MAAMC,4BAAmE,GAAGC,KAAK,IACxF;AAAA;;AACI,QAAM;AAAEC,IAAAA,QAAQ,GAAG,IAAb;AAAmBC,IAAAA,SAAS,GAAG,IAA/B;AAAqCC,IAAAA,KAAK,GAAG,IAA7C;AAAmDC,IAAAA,QAAQ,GAAG,QAA9D;AAAwEC,IAAAA,UAAU,GAAG,EAArF;AAAyF,OAAGC;AAA5F,MAAqGN,KAA3G;AACA,QAAM,CAAEO,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMc,aAAa,GAAGf,OAAO,CAAC,MAC9B;AACI,UAAMgB,aAAuB,GAAG,CAAE,2BAAF,EAA+B,SAA/B,EAA0C,KAA1C,EAAiD,qBAAjD,CAAhC;AAEA,QAAGL,UAAU,CAACM,MAAd,EAAsBD,aAAa,CAACE,IAAd,CAAmB,GAAGP,UAAtB;AAEtB,WAAOK,aAAP;AACH,GAP4B,EAO1B,CAAEL,UAAF,CAP0B,CAA7B;AASAZ,EAAAA,SAAS,CAAC,MACV;AACIe,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,WAAO,MAAMA,YAAY,CAAC,KAAD,CAAzB;AACH,GALQ,EAKN,EALM,CAAT;AAOAf,EAAAA,SAAS,CAAC,MACV;AACI,QAAG,CAACQ,QAAJ,EAAc;AAEd,UAAMY,OAAO,GAAGC,UAAU,CAAC,MAC3B;AACIN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAM,MAAAA,UAAU,CAAC,MAAMX,KAAK,EAAZ,EAAgB,GAAhB,CAAV;AACH,KALyB,EAKvBD,SALuB,CAA1B;AAOA,WAAO,MAAMa,YAAY,CAACF,OAAD,CAAzB;AACH,GAZQ,EAYN,CAAEZ,QAAF,EAAYC,SAAZ,EAAuBC,KAAvB,CAZM,CAAT;AAcA,sBACI,QAAC,mBAAD;AAAqB,IAAA,IAAI,EAAGL,wBAAwB,CAACkB,OAArD;AAA+D,IAAA,MAAM,EAAGT,SAAxE;AAAoF,IAAA,OAAO,EAAG,GAA9F;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAGH,QAAjB;AAA4B,MAAA,UAAU,EAAGK,aAAzC;AAAyD,MAAA,OAAO,EAAGN,KAAnE;AAAA,SAAgFG;AAAhF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCM;;GAAMP,4B;;KAAAA,4B","sourcesContent":["import { FC, useEffect, useMemo, useState } from 'react';\nimport { Flex, FlexProps } from '..';\nimport { TransitionAnimation, TransitionAnimationTypes } from '../transitions';\n\nexport interface LayoutNotificationBubbleViewProps extends FlexProps\n{\n    fadesOut?: boolean;\n    timeoutMs?: number;\n    close: () => void;\n}\n\nexport const LayoutNotificationBubbleView: FC<LayoutNotificationBubbleViewProps> = props =>\n{\n    const { fadesOut = true, timeoutMs = 8000, close = null, overflow = 'hidden', classNames = [], ...rest } = props;\n    const [ isVisible, setIsVisible ] = useState(false);\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [ 'nitro-notification-bubble', 'rounded', 'p-2', 'notification-height' ];\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ classNames ]);\n\n    useEffect(() =>\n    {\n        setIsVisible(true);\n\n        return () => setIsVisible(false);\n    }, []);\n\n    useEffect(() =>\n    {\n        if(!fadesOut) return;\n\n        const timeout = setTimeout(() =>\n        {\n            setIsVisible(false);\n\n            setTimeout(() => close(), 300);\n        }, timeoutMs);\n\n        return () => clearTimeout(timeout);\n    }, [ fadesOut, timeoutMs, close ]);\n\n    return (\n        <TransitionAnimation type={ TransitionAnimationTypes.FADE_IN } inProp={ isVisible } timeout={ 300 }>\n            <Flex overflow={ overflow } classNames={ getClassNames } onClick={ close } { ...rest } />\n        </TransitionAnimation>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}