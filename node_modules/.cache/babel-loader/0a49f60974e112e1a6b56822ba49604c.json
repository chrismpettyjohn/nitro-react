{"ast":null,"code":"import { RoomObjectVariable } from '../../RoomObjectVariable';\nimport { FurnitureFireworksVisualization } from './FurnitureFireworksVisualization';\nexport class FurnitureGiftWrappedFireworksVisualization extends FurnitureFireworksVisualization {\n  constructor() {\n    super(...arguments);\n    this._packetType = 0;\n    this._ribbonType = 0;\n    this._lastAnimationId = 0;\n  }\n\n  update(geometry, time, update, skipUpdate) {\n    this.updatePresentWrap();\n    super.update(geometry, time, update, skipUpdate);\n  }\n\n  updatePresentWrap() {\n    if (!this.object) return;\n    const local3 = 1000;\n    const extras = this.object.model.getValue(RoomObjectVariable.FURNITURE_EXTRAS);\n    const typeIndex = parseInt(extras);\n    const packetType = Math.floor(typeIndex / local3);\n    const ribbonType = typeIndex % local3;\n    this._packetType = packetType > FurnitureGiftWrappedFireworksVisualization.MAX_PACKET_TYPE_VALUE ? 0 : packetType;\n    this._ribbonType = ribbonType > FurnitureGiftWrappedFireworksVisualization.MAX_RIBBON_TYPE_VALUE ? 0 : ribbonType;\n  }\n\n  getFrameNumber(scale, layerId) {\n    if (this._lastAnimationId === FurnitureGiftWrappedFireworksVisualization.PRESENT_DEFAULT_STATE) {\n      if (layerId <= 1) return this._packetType;\n      if (layerId === 2) return this._ribbonType;\n    }\n\n    return super.getFrameNumber(scale, layerId);\n  }\n\n  getSpriteAssetName(scale, layerId) {\n    const size = this.getValidSize(scale);\n    let assetName = this._type;\n    let layerCode = '';\n\n    if (layerId < this.spriteCount - 1) {\n      layerCode = String.fromCharCode('a'.charCodeAt(0) + layerId);\n    } else {\n      layerCode = 'sd';\n    }\n\n    const frameNumber = this.getFrameNumber(scale, layerId);\n    assetName = assetName + ('_' + size + '_' + layerCode + '_' + this.direction);\n    assetName = assetName + ('_' + frameNumber);\n    return assetName;\n  }\n\n  setAnimation(animationId) {\n    this._lastAnimationId = animationId;\n    super.setAnimation(animationId);\n  }\n\n}\nFurnitureGiftWrappedFireworksVisualization.PRESENT_DEFAULT_STATE = 0;\nFurnitureGiftWrappedFireworksVisualization.MAX_PACKET_TYPE_VALUE = 9;\nFurnitureGiftWrappedFireworksVisualization.MAX_RIBBON_TYPE_VALUE = 11;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/furniture/FurnitureGiftWrappedFireworksVisualization.ts"],"names":["RoomObjectVariable","FurnitureFireworksVisualization","FurnitureGiftWrappedFireworksVisualization","_packetType","_ribbonType","_lastAnimationId","update","geometry","time","skipUpdate","updatePresentWrap","object","local3","extras","model","getValue","FURNITURE_EXTRAS","typeIndex","parseInt","packetType","Math","floor","ribbonType","MAX_PACKET_TYPE_VALUE","MAX_RIBBON_TYPE_VALUE","getFrameNumber","scale","layerId","PRESENT_DEFAULT_STATE","getSpriteAssetName","size","getValidSize","assetName","_type","layerCode","spriteCount","String","fromCharCode","charCodeAt","frameNumber","direction","setAnimation","animationId"],"mappings":"AACA,SAASA,kBAAT,QAAmC,0BAAnC;AACA,SAASC,+BAAT,QAAgD,mCAAhD;AAEA,OAAO,MAAMC,0CAAN,SAAyDD,+BAAzD,CACP;AAAA;AAAA;AAAA,SAKYE,WALZ,GAKkC,CALlC;AAAA,SAMYC,WANZ,GAMkC,CANlC;AAAA,SAOYC,gBAPZ,GAOuC,CAPvC;AAAA;;AASWC,EAAAA,MAAM,CAACC,QAAD,EAA0BC,IAA1B,EAAwCF,MAAxC,EAAyDG,UAAzD,EACb;AACI,SAAKC,iBAAL;AAEA,UAAMJ,MAAN,CAAaC,QAAb,EAAuBC,IAAvB,EAA6BF,MAA7B,EAAqCG,UAArC;AACH;;AAEOC,EAAAA,iBAAiB,GACzB;AACI,QAAG,CAAC,KAAKC,MAAT,EAAiB;AAEjB,UAAMC,MAAM,GAAG,IAAf;AACA,UAAMC,MAAM,GAAG,KAAKF,MAAL,CAAYG,KAAZ,CAAkBC,QAAlB,CAAmCf,kBAAkB,CAACgB,gBAAtD,CAAf;AAEA,UAAMC,SAAS,GAAGC,QAAQ,CAACL,MAAD,CAA1B;AACA,UAAMM,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAYJ,SAAS,GAAGL,MAAxB,CAAnB;AACA,UAAMU,UAAU,GAAIL,SAAS,GAAGL,MAAhC;AAEA,SAAKT,WAAL,GAAqBgB,UAAU,GAAGjB,0CAA0C,CAACqB,qBAAzD,GAAkF,CAAlF,GAAsFJ,UAA1G;AACA,SAAKf,WAAL,GAAqBkB,UAAU,GAAGpB,0CAA0C,CAACsB,qBAAzD,GAAkF,CAAlF,GAAsFF,UAA1G;AACH;;AAEMG,EAAAA,cAAc,CAACC,KAAD,EAAgBC,OAAhB,EACrB;AACI,QAAG,KAAKtB,gBAAL,KAA0BH,0CAA0C,CAAC0B,qBAAxE,EACA;AACI,UAAGD,OAAO,IAAI,CAAd,EAAiB,OAAO,KAAKxB,WAAZ;AAEjB,UAAGwB,OAAO,KAAK,CAAf,EAAkB,OAAO,KAAKvB,WAAZ;AACrB;;AAED,WAAO,MAAMqB,cAAN,CAAqBC,KAArB,EAA4BC,OAA5B,CAAP;AACH;;AAEME,EAAAA,kBAAkB,CAACH,KAAD,EAAgBC,OAAhB,EACzB;AACI,UAAMG,IAAI,GAAG,KAAKC,YAAL,CAAkBL,KAAlB,CAAb;AAEA,QAAIM,SAAS,GAAG,KAAKC,KAArB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAGP,OAAO,GAAI,KAAKQ,WAAL,GAAmB,CAAjC,EACA;AACID,MAAAA,SAAS,GAAGE,MAAM,CAACC,YAAP,CAAqB,IAAIC,UAAJ,CAAe,CAAf,IAAoBX,OAAzC,CAAZ;AACH,KAHD,MAKA;AACIO,MAAAA,SAAS,GAAG,IAAZ;AACH;;AAED,UAAMK,WAAW,GAAG,KAAKd,cAAL,CAAoBC,KAApB,EAA2BC,OAA3B,CAApB;AAEAK,IAAAA,SAAS,GAAIA,SAAS,IAAQ,MAAMF,IAAP,GAAe,GAAhB,GAAuBI,SAAxB,GAAqC,GAAtC,GAA6C,KAAKM,SAAtD,CAAtB;AACAR,IAAAA,SAAS,GAAIA,SAAS,IAAI,MAAMO,WAAV,CAAtB;AAEA,WAAOP,SAAP;AACH;;AAESS,EAAAA,YAAY,CAACC,WAAD,EACtB;AACI,SAAKrC,gBAAL,GAAwBqC,WAAxB;AAEA,UAAMD,YAAN,CAAmBC,WAAnB;AACH;;AAxEL;AADaxC,0C,CAEM0B,qB,GAAgC,C;AAFtC1B,0C,CAGMqB,qB,GAAgC,C;AAHtCrB,0C,CAIMsB,qB,GAAgC,E","sourcesContent":["import { IRoomGeometry } from '../../../../../room/utils/IRoomGeometry';\r\nimport { RoomObjectVariable } from '../../RoomObjectVariable';\r\nimport { FurnitureFireworksVisualization } from './FurnitureFireworksVisualization';\r\n\r\nexport class FurnitureGiftWrappedFireworksVisualization extends FurnitureFireworksVisualization\r\n{\r\n    private static PRESENT_DEFAULT_STATE: number = 0;\r\n    private static MAX_PACKET_TYPE_VALUE: number = 9;\r\n    private static MAX_RIBBON_TYPE_VALUE: number = 11;\r\n\r\n    private _packetType: number = 0;\r\n    private _ribbonType: number = 0;\r\n    private _lastAnimationId: number = 0;\r\n\r\n    public update(geometry: IRoomGeometry, time: number, update: boolean, skipUpdate: boolean)\r\n    {\r\n        this.updatePresentWrap();\r\n\r\n        super.update(geometry, time, update, skipUpdate);\r\n    }\r\n\r\n    private updatePresentWrap(): void\r\n    {\r\n        if(!this.object) return;\r\n\r\n        const local3 = 1000;\r\n        const extras = this.object.model.getValue<string>(RoomObjectVariable.FURNITURE_EXTRAS);\r\n\r\n        const typeIndex = parseInt(extras);\r\n        const packetType = Math.floor((typeIndex / local3));\r\n        const ribbonType = (typeIndex % local3);\r\n\r\n        this._packetType = ((packetType > FurnitureGiftWrappedFireworksVisualization.MAX_PACKET_TYPE_VALUE) ? 0 : packetType);\r\n        this._ribbonType = ((ribbonType > FurnitureGiftWrappedFireworksVisualization.MAX_RIBBON_TYPE_VALUE) ? 0 : ribbonType);\r\n    }\r\n\r\n    public getFrameNumber(scale: number, layerId: number): number\r\n    {\r\n        if(this._lastAnimationId === FurnitureGiftWrappedFireworksVisualization.PRESENT_DEFAULT_STATE)\r\n        {\r\n            if(layerId <= 1) return this._packetType;\r\n\r\n            if(layerId === 2) return this._ribbonType;\r\n        }\r\n\r\n        return super.getFrameNumber(scale, layerId);\r\n    }\r\n\r\n    public getSpriteAssetName(scale: number, layerId: number): string\r\n    {\r\n        const size = this.getValidSize(scale);\r\n\r\n        let assetName = this._type;\r\n        let layerCode = '';\r\n\r\n        if(layerId < (this.spriteCount - 1))\r\n        {\r\n            layerCode = String.fromCharCode(('a'.charCodeAt(0) + layerId));\r\n        }\r\n        else\r\n        {\r\n            layerCode = 'sd';\r\n        }\r\n\r\n        const frameNumber = this.getFrameNumber(scale, layerId);\r\n\r\n        assetName = (assetName + ((((('_' + size) + '_') + layerCode) + '_') + this.direction));\r\n        assetName = (assetName + ('_' + frameNumber));\r\n\r\n        return assetName;\r\n    }\r\n\r\n    protected setAnimation(animationId: number):void\r\n    {\r\n        this._lastAnimationId = animationId;\r\n\r\n        super.setAnimation(animationId);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}