{"ast":null,"code":"import { AdvancedMap } from '../core/utils/AdvancedMap';\nimport { RoomObject } from './object/RoomObject';\nexport class RoomObjectManager {\n  constructor() {\n    this._objects = void 0;\n    this._objectsPerType = void 0;\n    this._objects = new AdvancedMap();\n    this._objectsPerType = new AdvancedMap();\n  }\n\n  dispose() {\n    this.removeAllObjects();\n  }\n\n  getObject(id) {\n    const object = this._objects.getValue(id);\n\n    if (!object) return null;\n    return object;\n  }\n\n  getObjectByIndex(index) {\n    const object = this._objects.getWithIndex(index);\n\n    if (!object) return null;\n    return object;\n  }\n\n  createObject(id, stateCount, type) {\n    const object = new RoomObject(id, stateCount, type);\n    return this.addObject(id, type, object);\n  }\n\n  addObject(id, type, object) {\n    if (this._objects.getValue(id)) {\n      object.dispose();\n      return null;\n    }\n\n    this._objects.add(id, object);\n\n    const typeMap = this.getTypeMap(type);\n    if (typeMap) typeMap.add(id, object);\n    return object;\n  }\n\n  removeObject(id) {\n    const object = this._objects.remove(id);\n\n    if (object) {\n      const typeMap = this.getTypeMap(object.type);\n      if (typeMap) typeMap.remove(object.id);\n      object.dispose();\n    }\n  }\n\n  removeAllObjects() {\n    let i = 0;\n\n    while (i < this._objects.length) {\n      const object = this._objects.getWithIndex(i);\n\n      if (object) object.dispose();\n      i++;\n    }\n\n    this._objects.reset();\n\n    i = 0;\n\n    while (i < this._objectsPerType.length) {\n      const typeMap = this._objectsPerType.getWithIndex(i);\n\n      if (typeMap) typeMap.dispose();\n      i++;\n    }\n\n    this._objectsPerType.reset();\n  }\n\n  getTypeMap(k) {\n    let _arg_2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    let existing = this._objectsPerType.getValue(k);\n\n    if (!existing && _arg_2) {\n      existing = new AdvancedMap();\n\n      this._objectsPerType.add(k, existing);\n    }\n\n    return existing;\n  }\n\n  get objects() {\n    return this._objects;\n  }\n\n  get totalObjects() {\n    return this._objects.length;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/room/RoomObjectManager.ts"],"names":["AdvancedMap","RoomObject","RoomObjectManager","constructor","_objects","_objectsPerType","dispose","removeAllObjects","getObject","id","object","getValue","getObjectByIndex","index","getWithIndex","createObject","stateCount","type","addObject","add","typeMap","getTypeMap","removeObject","remove","i","length","reset","k","_arg_2","existing","objects","totalObjects"],"mappings":"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","sourcesContent":["import { AdvancedMap } from '../core/utils/AdvancedMap';\r\nimport { IRoomObjectManager } from './IRoomObjectManager';\r\nimport { IRoomObjectController } from './object/IRoomObjectController';\r\nimport { RoomObject } from './object/RoomObject';\r\n\r\nexport class RoomObjectManager implements IRoomObjectManager\r\n{\r\n    private _objects: AdvancedMap<number, IRoomObjectController>;\r\n    private _objectsPerType: AdvancedMap<string, AdvancedMap<number, IRoomObjectController>>;\r\n\r\n    constructor()\r\n    {\r\n        this._objects = new AdvancedMap();\r\n        this._objectsPerType = new AdvancedMap();\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this.removeAllObjects();\r\n    }\r\n\r\n    public getObject(id: number): IRoomObjectController\r\n    {\r\n        const object = this._objects.getValue(id);\r\n\r\n        if(!object) return null;\r\n\r\n        return object;\r\n    }\r\n\r\n    public getObjectByIndex(index: number): IRoomObjectController\r\n    {\r\n        const object = this._objects.getWithIndex(index);\r\n\r\n        if(!object) return null;\r\n\r\n        return object;\r\n    }\r\n\r\n    public createObject(id: number, stateCount: number, type: string): IRoomObjectController\r\n    {\r\n        const object = new RoomObject(id, stateCount, type);\r\n\r\n        return this.addObject(id, type, object);\r\n    }\r\n\r\n    private addObject(id: number, type: string, object: IRoomObjectController): IRoomObjectController\r\n    {\r\n        if(this._objects.getValue(id))\r\n        {\r\n            object.dispose();\r\n\r\n            return null;\r\n        }\r\n\r\n        this._objects.add(id, object);\r\n\r\n        const typeMap = this.getTypeMap(type);\r\n\r\n        if(typeMap) typeMap.add(id, object);\r\n\r\n        return object;\r\n    }\r\n\r\n    public removeObject(id: number): void\r\n    {\r\n        const object = this._objects.remove(id);\r\n\r\n        if(object)\r\n        {\r\n            const typeMap = this.getTypeMap(object.type);\r\n\r\n            if(typeMap) typeMap.remove(object.id);\r\n\r\n            object.dispose();\r\n        }\r\n    }\r\n\r\n    public removeAllObjects(): void\r\n    {\r\n        let i = 0;\r\n\r\n        while(i < this._objects.length)\r\n        {\r\n            const object = this._objects.getWithIndex(i);\r\n\r\n            if(object) object.dispose();\r\n\r\n            i++;\r\n        }\r\n\r\n        this._objects.reset();\r\n\r\n        i = 0;\r\n\r\n        while(i < this._objectsPerType.length)\r\n        {\r\n            const typeMap = this._objectsPerType.getWithIndex(i);\r\n\r\n            if(typeMap) typeMap.dispose();\r\n\r\n            i++;\r\n        }\r\n\r\n        this._objectsPerType.reset();\r\n    }\r\n\r\n    private getTypeMap(k: string, _arg_2: boolean = true): AdvancedMap<number, IRoomObjectController>\r\n    {\r\n        let existing = this._objectsPerType.getValue(k);\r\n\r\n        if(!existing && _arg_2)\r\n        {\r\n            existing = new AdvancedMap();\r\n\r\n            this._objectsPerType.add(k, existing);\r\n        }\r\n\r\n        return existing;\r\n    }\r\n\r\n    public get objects(): AdvancedMap<number, IRoomObjectController>\r\n    {\r\n        return this._objects;\r\n    }\r\n\r\n    public get totalObjects(): number\r\n    {\r\n        return this._objects.length;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}