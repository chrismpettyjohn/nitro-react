{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionMoveFurniView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst directionOptions = [{\n  value: 4,\n  icon: 'ne'\n}, {\n  value: 5,\n  icon: 'se'\n}, {\n  value: 6,\n  icon: 'sw'\n}, {\n  value: 7,\n  icon: 'nw'\n}, {\n  value: 2,\n  icon: 'mv-2'\n}, {\n  value: 3,\n  icon: 'mv-3'\n}, {\n  value: 1,\n  icon: 'mv-1'\n}];\nconst rotationOptions = [0, 1, 2, 3];\nexport const WiredActionMoveFurniView = props => {\n  _s();\n\n  const [movement, setMovement] = useState(-1);\n  const [rotation, setRotation] = useState(-1);\n  const {\n    trigger = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => setIntParams([movement, rotation]);\n\n  useEffect(() => {\n    if (trigger.intData.length >= 2) {\n      setMovement(trigger.intData[0]);\n      setRotation(trigger.intData[1]);\n    } else {\n      setMovement(-1);\n      setRotation(-1);\n    }\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredActionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_BY_ID_BY_TYPE_OR_FROM_CONTEXT,\n    hasSpecialInput: true,\n    save: save,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.movefurni')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: \"selectedTeam\",\n          id: \"movement0\",\n          checked: movement === 0,\n          onChange: event => setMovement(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('wiredfurni.params.movefurni.0')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        gap: 1,\n        children: [directionOptions.map(option => {\n          return /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"movement\",\n              id: `movement${option.value}`,\n              checked: movement === option.value,\n              onChange: event => setMovement(option.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `icon icon-${option.icon}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, option.value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.rotatefurni')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), rotationOptions.map(option => {\n        return /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"rotation\",\n            id: `rotation${option}`,\n            checked: rotation === option,\n            onChange: event => setRotation(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [[1, 2].includes(option) && /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `icon icon-rot-${option}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 64\n            }, this), LocalizeText(`wiredfurni.params.rotatefurni.${option}`)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredActionMoveFurniView, \"1b5ezF1CYHs8g85qgwlhfiGNaWs=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredActionMoveFurniView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredActionMoveFurniView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionMoveFurniView.tsx"],"names":["useEffect","useState","LocalizeText","WiredFurniType","Column","Flex","Text","useWiredContext","WiredActionBaseView","directionOptions","value","icon","rotationOptions","WiredActionMoveFurniView","props","movement","setMovement","rotation","setRotation","trigger","setIntParams","save","intData","length","STUFF_SELECTION_OPTION_BY_ID_BY_TYPE_OR_FROM_CONTEXT","event","map","option","includes"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\n\nconst directionOptions: { value: number, icon: string }[] = [\n    {\n        value: 4,\n        icon: 'ne'\n    },\n    {\n        value: 5,\n        icon: 'se'\n    },\n    {\n        value: 6,\n        icon: 'sw'\n    },\n    {\n        value: 7,\n        icon: 'nw'\n    },\n    {\n        value: 2,\n        icon: 'mv-2'\n    },\n    {\n        value: 3,\n        icon: 'mv-3'\n    },\n    {\n        value: 1,\n        icon: 'mv-1'\n    }\n];\n\nconst rotationOptions: number[] = [ 0, 1, 2, 3 ];\n\nexport const WiredActionMoveFurniView: FC<{}> = props =>\n{\n    const [ movement, setMovement ] = useState(-1);\n    const [ rotation, setRotation ] = useState(-1);\n    const { trigger = null, setIntParams = null } = useWiredContext();\n\n    const save = () => setIntParams([ movement, rotation ]);\n\n    useEffect(() =>\n    {\n        if(trigger.intData.length >= 2)\n        {\n            setMovement(trigger.intData[0]);\n            setRotation(trigger.intData[1]);\n        }\n        else\n        {\n            setMovement(-1);\n            setRotation(-1);\n        }\n    }, [ trigger ]);\n\n    return (\n        <WiredActionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_BY_ID_BY_TYPE_OR_FROM_CONTEXT } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.movefurni') }</Text>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"radio\" name=\"selectedTeam\" id=\"movement0\" checked={ (movement === 0) } onChange={ event => setMovement(0) } />\n                    <Text>{ LocalizeText('wiredfurni.params.movefurni.0') }</Text>\n                </Flex>\n                <Flex gap={ 1 }>\n                    { directionOptions.map(option =>\n                    {\n                        return (\n                            <Flex alignItems=\"center\" key={ option.value } gap={ 1 }>\n                                <input className=\"form-check-input\" type=\"radio\" name=\"movement\" id={ `movement${ option.value }` } checked={ (movement === option.value) } onChange={ event => setMovement(option.value) } />\n                                <i className={ `icon icon-${ option.icon }` } />\n                            </Flex>\n                        )\n                    }) }\n                    <div className=\"col\" />\n                </Flex>\n            </Column>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.rotatefurni') }</Text>\n                { rotationOptions.map(option =>\n                {\n                    return (\n                        <Flex alignItems=\"center\" key={ option } gap={ 1 }>\n                            <input className=\"form-check-input\" type=\"radio\" name=\"rotation\" id={ `rotation${ option }` } checked={ (rotation === option) } onChange={ event => setRotation(option) } />\n                            <Text>\n                                { [ 1, 2 ].includes(option) && <i className={ `icon icon-rot-${ option }` } /> }\n                                { LocalizeText(`wiredfurni.params.rotatefurni.${ option }`) }\n                            </Text>\n                        </Flex>\n                    )\n                }) }\n            </Column>\n        </WiredActionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}