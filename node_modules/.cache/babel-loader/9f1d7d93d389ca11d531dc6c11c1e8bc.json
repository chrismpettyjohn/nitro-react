{"ast":null,"code":"export class RoomSettingsUsersListParser {\n  constructor() {\n    this._roomId = void 0;\n    this._users = void 0;\n  }\n\n  flush() {\n    this._roomId = 0;\n    this._users = new Map();\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._roomId = wrapper.readInt();\n    let usersCount = wrapper.readInt();\n\n    while (usersCount > 0) {\n      const id = wrapper.readInt();\n      const name = wrapper.readString();\n\n      this._users.set(id, name);\n\n      usersCount--;\n    }\n\n    return true;\n  }\n\n  get roomId() {\n    return this._roomId;\n  }\n\n  get users() {\n    return this._users;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/room/data/RoomSettingsUsersListParser.ts"],"names":["RoomSettingsUsersListParser","_roomId","_users","flush","Map","parse","wrapper","readInt","usersCount","id","name","readString","set","roomId","users"],"mappings":"AAEA,OAAO,MAAMA,2BAAN,CACP;AAAA;AAAA,SACYC,OADZ;AAAA,SAEYC,MAFZ;AAAA;;AAIWC,EAAAA,KAAK,GACZ;AACI,SAAKF,OAAL,GAAe,CAAf;AACA,SAAKC,MAAL,GAAc,IAAIE,GAAJ,EAAd;AAEA,WAAO,IAAP;AACH;;AAEMC,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKL,OAAL,GAAeK,OAAO,CAACC,OAAR,EAAf;AAEA,QAAIC,UAAU,GAAGF,OAAO,CAACC,OAAR,EAAjB;;AAEA,WAAMC,UAAU,GAAG,CAAnB,EACA;AACI,YAAMC,EAAE,GAAGH,OAAO,CAACC,OAAR,EAAX;AACA,YAAMG,IAAI,GAAGJ,OAAO,CAACK,UAAR,EAAb;;AAEA,WAAKT,MAAL,CAAYU,GAAZ,CAAgBH,EAAhB,EAAoBC,IAApB;;AACAF,MAAAA,UAAU;AACb;;AAED,WAAO,IAAP;AACH;;AAEgB,MAANK,MAAM,GACjB;AACI,WAAO,KAAKZ,OAAZ;AACH;;AAEe,MAALa,KAAK,GAChB;AACI,WAAO,KAAKZ,MAAZ;AACH;;AAxCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\n\r\nexport class RoomSettingsUsersListParser implements IMessageParser\r\n{\r\n    private _roomId: number;\r\n    private _users: Map<number, string>;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._roomId = 0;\r\n        this._users = new Map<number, string>();\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._roomId = wrapper.readInt();\r\n\r\n        let usersCount = wrapper.readInt();\r\n\r\n        while(usersCount > 0)\r\n        {\r\n            const id = wrapper.readInt();\r\n            const name = wrapper.readString();\r\n\r\n            this._users.set(id, name);\r\n            usersCount--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get roomId(): number\r\n    {\r\n        return this._roomId;\r\n    }\r\n\r\n    public get users(): Map<number, string>\r\n    {\r\n        return this._users;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}