{"ast":null,"code":"export class CommunityGoalData {\n  constructor(wrapper) {\n    this._hasGoalExpired = void 0;\n    this._personalContributionScore = void 0;\n    this._personalContributionRank = void 0;\n    this._communityTotalScore = void 0;\n    this._communityHighestAchievedLevel = void 0;\n    this._scoreRemainingUntilNextLevel = void 0;\n    this._percentCompletionTowardsNextLevel = void 0;\n    this._goalCode = void 0;\n    this._timeRemainingInSeconds = void 0;\n    this._rewardUserLimits = void 0;\n    this._rewardUserLimits = [];\n    this._hasGoalExpired = wrapper.readBoolean();\n    this._personalContributionScore = wrapper.readInt();\n    this._personalContributionRank = wrapper.readInt();\n    this._communityTotalScore = wrapper.readInt();\n    this._communityHighestAchievedLevel = wrapper.readInt();\n    this._scoreRemainingUntilNextLevel = wrapper.readInt();\n    this._percentCompletionTowardsNextLevel = wrapper.readInt();\n    this._goalCode = wrapper.readString();\n    this._timeRemainingInSeconds = wrapper.readInt();\n    const count = wrapper.readInt();\n\n    for (let i = 0; i < count; i++) {\n      this._rewardUserLimits.push(wrapper.readInt());\n    }\n  }\n\n  dispose() {\n    this._rewardUserLimits = null;\n  }\n\n  get disposed() {\n    return this._rewardUserLimits == null;\n  }\n\n  get hasGoalExpired() {\n    return this._hasGoalExpired;\n  }\n\n  get personalContributionScore() {\n    return this._personalContributionScore;\n  }\n\n  get personalContributionRank() {\n    return this._personalContributionRank;\n  }\n\n  get communityTotalScore() {\n    return this._communityTotalScore;\n  }\n\n  get communityHighestAchievedLevel() {\n    return this._communityHighestAchievedLevel;\n  }\n\n  get scoreRemainingUntilNextLevel() {\n    return this._scoreRemainingUntilNextLevel;\n  }\n\n  get percentCompletionTowardsNextLevel() {\n    return this._percentCompletionTowardsNextLevel;\n  }\n\n  get timeRemainingInSeconds() {\n    return this._timeRemainingInSeconds;\n  }\n\n  get rewardUserLimits() {\n    return this._rewardUserLimits;\n  }\n\n  get goalCode() {\n    return this._goalCode;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/incoming/quest/CommunityGoalData.ts"],"names":["CommunityGoalData","constructor","wrapper","_hasGoalExpired","_personalContributionScore","_personalContributionRank","_communityTotalScore","_communityHighestAchievedLevel","_scoreRemainingUntilNextLevel","_percentCompletionTowardsNextLevel","_goalCode","_timeRemainingInSeconds","_rewardUserLimits","readBoolean","readInt","readString","count","i","push","dispose","disposed","hasGoalExpired","personalContributionScore","personalContributionRank","communityTotalScore","communityHighestAchievedLevel","scoreRemainingUntilNextLevel","percentCompletionTowardsNextLevel","timeRemainingInSeconds","rewardUserLimits","goalCode"],"mappings":"AAGA,OAAO,MAAMA,iBAAN,CACP;AAYIC,EAAAA,WAAW,CAACC,OAAD,EACX;AAAA,SAZQC,eAYR;AAAA,SAXQC,0BAWR;AAAA,SAVQC,yBAUR;AAAA,SATQC,oBASR;AAAA,SARQC,8BAQR;AAAA,SAPQC,6BAOR;AAAA,SANQC,kCAMR;AAAA,SALQC,SAKR;AAAA,SAJQC,uBAIR;AAAA,SAHQC,iBAGR;AACI,SAAKA,iBAAL,GAAyB,EAAzB;AACA,SAAKT,eAAL,GAAuBD,OAAO,CAACW,WAAR,EAAvB;AACA,SAAKT,0BAAL,GAAkCF,OAAO,CAACY,OAAR,EAAlC;AACA,SAAKT,yBAAL,GAAiCH,OAAO,CAACY,OAAR,EAAjC;AACA,SAAKR,oBAAL,GAA4BJ,OAAO,CAACY,OAAR,EAA5B;AACA,SAAKP,8BAAL,GAAsCL,OAAO,CAACY,OAAR,EAAtC;AACA,SAAKN,6BAAL,GAAqCN,OAAO,CAACY,OAAR,EAArC;AACA,SAAKL,kCAAL,GAA0CP,OAAO,CAACY,OAAR,EAA1C;AACA,SAAKJ,SAAL,GAAiBR,OAAO,CAACa,UAAR,EAAjB;AACA,SAAKJ,uBAAL,GAA+BT,OAAO,CAACY,OAAR,EAA/B;AAEA,UAAME,KAAK,GAAGd,OAAO,CAACY,OAAR,EAAd;;AACA,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAnB,EAA0BC,CAAC,EAA3B,EACA;AACI,WAAKL,iBAAL,CAAuBM,IAAvB,CAA4BhB,OAAO,CAACY,OAAR,EAA5B;AACH;AACJ;;AAEMK,EAAAA,OAAO,GACd;AACI,SAAKP,iBAAL,GAAyB,IAAzB;AACH;;AAEkB,MAARQ,QAAQ,GACnB;AACI,WAAO,KAAKR,iBAAL,IAA0B,IAAjC;AACH;;AAEwB,MAAdS,cAAc,GACzB;AACI,WAAO,KAAKlB,eAAZ;AACH;;AAEmC,MAAzBmB,yBAAyB,GACpC;AACI,WAAO,KAAKlB,0BAAZ;AACH;;AAEkC,MAAxBmB,wBAAwB,GACnC;AACI,WAAO,KAAKlB,yBAAZ;AACH;;AAE6B,MAAnBmB,mBAAmB,GAC9B;AACI,WAAO,KAAKlB,oBAAZ;AACH;;AAEuC,MAA7BmB,6BAA6B,GACxC;AACI,WAAO,KAAKlB,8BAAZ;AACH;;AAEsC,MAA5BmB,4BAA4B,GACvC;AACI,WAAO,KAAKlB,6BAAZ;AACH;;AAE2C,MAAjCmB,iCAAiC,GAC5C;AACI,WAAO,KAAKlB,kCAAZ;AACH;;AAEgC,MAAtBmB,sBAAsB,GACjC;AACI,WAAO,KAAKjB,uBAAZ;AACH;;AAE0B,MAAhBkB,gBAAgB,GAC3B;AACI,WAAO,KAAKjB,iBAAZ;AACH;;AAEkB,MAARkB,QAAQ,GACnB;AACI,WAAO,KAAKpB,SAAZ;AACH;;AA1FL","sourcesContent":["import { IMessageDataWrapper } from '../../../../../core';\r\nimport { IDisposable } from '../../../../../core/common/disposable/IDisposable';\r\n\r\nexport class CommunityGoalData implements IDisposable\r\n{\r\n    private _hasGoalExpired: boolean;\r\n    private _personalContributionScore: number;\r\n    private _personalContributionRank: number;\r\n    private _communityTotalScore: number;\r\n    private _communityHighestAchievedLevel: number;\r\n    private _scoreRemainingUntilNextLevel: number;\r\n    private _percentCompletionTowardsNextLevel: number;\r\n    private _goalCode: string;\r\n    private _timeRemainingInSeconds: number;\r\n    private _rewardUserLimits: number[];\r\n\r\n    constructor(wrapper: IMessageDataWrapper)\r\n    {\r\n        this._rewardUserLimits = [];\r\n        this._hasGoalExpired = wrapper.readBoolean();\r\n        this._personalContributionScore = wrapper.readInt();\r\n        this._personalContributionRank = wrapper.readInt();\r\n        this._communityTotalScore = wrapper.readInt();\r\n        this._communityHighestAchievedLevel = wrapper.readInt();\r\n        this._scoreRemainingUntilNextLevel = wrapper.readInt();\r\n        this._percentCompletionTowardsNextLevel = wrapper.readInt();\r\n        this._goalCode = wrapper.readString();\r\n        this._timeRemainingInSeconds = wrapper.readInt();\r\n\r\n        const count = wrapper.readInt();\r\n        for(let i = 0; i < count; i++)\r\n        {\r\n            this._rewardUserLimits.push(wrapper.readInt());\r\n        }\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._rewardUserLimits = null;\r\n    }\r\n\r\n    public get disposed(): boolean\r\n    {\r\n        return this._rewardUserLimits == null;\r\n    }\r\n\r\n    public get hasGoalExpired(): boolean\r\n    {\r\n        return this._hasGoalExpired;\r\n    }\r\n\r\n    public get personalContributionScore(): number\r\n    {\r\n        return this._personalContributionScore;\r\n    }\r\n\r\n    public get personalContributionRank(): number\r\n    {\r\n        return this._personalContributionRank;\r\n    }\r\n\r\n    public get communityTotalScore(): number\r\n    {\r\n        return this._communityTotalScore;\r\n    }\r\n\r\n    public get communityHighestAchievedLevel(): number\r\n    {\r\n        return this._communityHighestAchievedLevel;\r\n    }\r\n\r\n    public get scoreRemainingUntilNextLevel(): number\r\n    {\r\n        return this._scoreRemainingUntilNextLevel;\r\n    }\r\n\r\n    public get percentCompletionTowardsNextLevel(): number\r\n    {\r\n        return this._percentCompletionTowardsNextLevel;\r\n    }\r\n\r\n    public get timeRemainingInSeconds(): number\r\n    {\r\n        return this._timeRemainingInSeconds;\r\n    }\r\n\r\n    public get rewardUserLimits(): number[]\r\n    {\r\n        return this._rewardUserLimits;\r\n    }\r\n\r\n    public get goalCode(): string\r\n    {\r\n        return this._goalCode;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}