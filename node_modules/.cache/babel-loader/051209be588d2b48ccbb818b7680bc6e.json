{"ast":null,"code":"import { AdvancedMap } from '../../../../../core/utils/AdvancedMap';\nexport class UnseenItemsParser {\n  constructor() {\n    this._items = void 0;\n  }\n\n  flush() {\n    this._items = new AdvancedMap();\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    let totalUnseen = wrapper.readInt();\n\n    while (totalUnseen > 0) {\n      const category = wrapper.readInt();\n      let totalItems = wrapper.readInt();\n      const itemIds = [];\n\n      while (totalItems > 0) {\n        itemIds.push(wrapper.readInt());\n        totalItems--;\n      }\n\n      this._items.add(category, itemIds);\n\n      totalUnseen--;\n    }\n\n    return true;\n  }\n\n  getItemsByCategory(category) {\n    return this._items.getValue(category);\n  }\n\n  get categories() {\n    return this._items.getKeys();\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/notifications/UnseenItemsParser.ts"],"names":["AdvancedMap","UnseenItemsParser","_items","flush","parse","wrapper","totalUnseen","readInt","category","totalItems","itemIds","push","add","getItemsByCategory","getValue","categories","getKeys"],"mappings":"AACA,SAASA,WAAT,QAA4B,uCAA5B;AAEA,OAAO,MAAMC,iBAAN,CACP;AAAA;AAAA,SACYC,MADZ;AAAA;;AAGWC,EAAAA,KAAK,GACZ;AACI,SAAKD,MAAL,GAAc,IAAIF,WAAJ,EAAd;AAEA,WAAO,IAAP;AACH;;AAEMI,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,QAAIC,WAAW,GAAGD,OAAO,CAACE,OAAR,EAAlB;;AAEA,WAAMD,WAAW,GAAG,CAApB,EACA;AACI,YAAME,QAAQ,GAAGH,OAAO,CAACE,OAAR,EAAjB;AAEA,UAAIE,UAAU,GAAGJ,OAAO,CAACE,OAAR,EAAjB;AACA,YAAMG,OAAiB,GAAG,EAA1B;;AAEA,aAAMD,UAAU,GAAG,CAAnB,EACA;AACIC,QAAAA,OAAO,CAACC,IAAR,CAAaN,OAAO,CAACE,OAAR,EAAb;AAEAE,QAAAA,UAAU;AACb;;AAED,WAAKP,MAAL,CAAYU,GAAZ,CAAgBJ,QAAhB,EAA0BE,OAA1B;;AAEAJ,MAAAA,WAAW;AACd;;AAED,WAAO,IAAP;AACH;;AAEMO,EAAAA,kBAAkB,CAACL,QAAD,EACzB;AACI,WAAO,KAAKN,MAAL,CAAYY,QAAZ,CAAqBN,QAArB,CAAP;AACH;;AAEoB,MAAVO,UAAU,GACrB;AACI,WAAO,KAAKb,MAAL,CAAYc,OAAZ,EAAP;AACH;;AA9CL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\nimport { AdvancedMap } from '../../../../../core/utils/AdvancedMap';\r\n\r\nexport class UnseenItemsParser implements IMessageParser\r\n{\r\n    private _items: AdvancedMap<number, number[]>;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._items = new AdvancedMap();\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        let totalUnseen = wrapper.readInt();\r\n\r\n        while(totalUnseen > 0)\r\n        {\r\n            const category = wrapper.readInt();\r\n\r\n            let totalItems = wrapper.readInt();\r\n            const itemIds: number[] = [];\r\n\r\n            while(totalItems > 0)\r\n            {\r\n                itemIds.push(wrapper.readInt());\r\n\r\n                totalItems--;\r\n            }\r\n\r\n            this._items.add(category, itemIds);\r\n\r\n            totalUnseen--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public getItemsByCategory(category: number): number[]\r\n    {\r\n        return this._items.getValue(category);\r\n    }\r\n\r\n    public get categories(): number[]\r\n    {\r\n        return this._items.getKeys();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}