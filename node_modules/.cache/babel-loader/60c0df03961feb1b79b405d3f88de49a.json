{"ast":null,"code":"import { DirectionalOffsetData } from '../data/DirectionalOffsetData';\nimport { FurnitureBrandedImageVisualization } from './FurnitureBrandedImageVisualization';\nexport class FurnitureRoomBackgroundVisualization extends FurnitureBrandedImageVisualization {\n  constructor() {\n    super(...arguments);\n    this._imageOffset = void 0;\n  }\n\n  imageReady(texture, imageUrl) {\n    super.imageReady(texture, imageUrl);\n    if (!texture) return;\n    this.setImageOffset(texture.width, texture.height);\n  }\n\n  setImageOffset(width, height) {\n    const offsetData = new DirectionalOffsetData();\n    offsetData.setDirection(1, 0, -height);\n    offsetData.setDirection(3, 0, 0);\n    offsetData.setDirection(5, -width, 0);\n    offsetData.setDirection(7, -width, -height);\n    offsetData.setDirection(4, -width / 2, -height / 2);\n    this._imageOffset = offsetData;\n  }\n\n  getLayerXOffset(scale, direction, layerId) {\n    if (this._imageOffset) {\n      const offset = this._imageOffset.getXOffset(direction, 0);\n\n      if (offset !== undefined) return offset + this._offsetX;\n    }\n\n    return super.getLayerXOffset(scale, direction, layerId) + this._offsetX;\n  }\n\n  getLayerYOffset(scale, direction, layerId) {\n    if (this._imageOffset) {\n      const offset = this._imageOffset.getYOffset(direction, 0);\n\n      if (offset !== undefined) return offset + this._offsetY;\n    }\n\n    return super.getLayerYOffset(scale, direction, layerId) + this._offsetY;\n  }\n\n  getLayerZOffset(scale, direction, layerId) {\n    return super.getLayerZOffset(scale, direction, layerId) + -this._offsetZ;\n  }\n\n  getLayerIgnoreMouse(scale, direction, layerId) {\n    return true;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/furniture/FurnitureRoomBackgroundVisualization.ts"],"names":["DirectionalOffsetData","FurnitureBrandedImageVisualization","FurnitureRoomBackgroundVisualization","_imageOffset","imageReady","texture","imageUrl","setImageOffset","width","height","offsetData","setDirection","getLayerXOffset","scale","direction","layerId","offset","getXOffset","undefined","_offsetX","getLayerYOffset","getYOffset","_offsetY","getLayerZOffset","_offsetZ","getLayerIgnoreMouse"],"mappings":"AACA,SAASA,qBAAT,QAAsC,+BAAtC;AACA,SAASC,kCAAT,QAAmD,sCAAnD;AAEA,OAAO,MAAMC,oCAAN,SAAmDD,kCAAnD,CACP;AAAA;AAAA;AAAA,SACYE,YADZ;AAAA;;AAGcC,EAAAA,UAAU,CAACC,OAAD,EAA6BC,QAA7B,EACpB;AACI,UAAMF,UAAN,CAAiBC,OAAjB,EAA0BC,QAA1B;AAEA,QAAG,CAACD,OAAJ,EAAa;AAEb,SAAKE,cAAL,CAAoBF,OAAO,CAACG,KAA5B,EAAmCH,OAAO,CAACI,MAA3C;AACH;;AAEOF,EAAAA,cAAc,CAACC,KAAD,EAAgBC,MAAhB,EACtB;AACI,UAAMC,UAAU,GAAG,IAAIV,qBAAJ,EAAnB;AAEAU,IAAAA,UAAU,CAACC,YAAX,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAACF,MAA/B;AACAC,IAAAA,UAAU,CAACC,YAAX,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACAD,IAAAA,UAAU,CAACC,YAAX,CAAwB,CAAxB,EAA2B,CAACH,KAA5B,EAAmC,CAAnC;AACAE,IAAAA,UAAU,CAACC,YAAX,CAAwB,CAAxB,EAA2B,CAACH,KAA5B,EAAmC,CAACC,MAApC;AACAC,IAAAA,UAAU,CAACC,YAAX,CAAwB,CAAxB,EAA4B,CAACH,KAAD,GAAS,CAArC,EAA0C,CAACC,MAAD,GAAU,CAApD;AAEA,SAAKN,YAAL,GAAoBO,UAApB;AACH;;AAESE,EAAAA,eAAe,CAACC,KAAD,EAAgBC,SAAhB,EAAmCC,OAAnC,EACzB;AACI,QAAG,KAAKZ,YAAR,EACA;AACI,YAAMa,MAAM,GAAG,KAAKb,YAAL,CAAkBc,UAAlB,CAA6BH,SAA7B,EAAwC,CAAxC,CAAf;;AAEA,UAAGE,MAAM,KAAKE,SAAd,EAAyB,OAAOF,MAAM,GAAG,KAAKG,QAArB;AAC5B;;AAED,WAAO,MAAMP,eAAN,CAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,OAAxC,IAAmD,KAAKI,QAA/D;AACH;;AAESC,EAAAA,eAAe,CAACP,KAAD,EAAgBC,SAAhB,EAAmCC,OAAnC,EACzB;AACI,QAAG,KAAKZ,YAAR,EACA;AACI,YAAMa,MAAM,GAAG,KAAKb,YAAL,CAAkBkB,UAAlB,CAA6BP,SAA7B,EAAwC,CAAxC,CAAf;;AAEA,UAAGE,MAAM,KAAKE,SAAd,EAAyB,OAAOF,MAAM,GAAG,KAAKM,QAArB;AAC5B;;AAED,WAAO,MAAMF,eAAN,CAAsBP,KAAtB,EAA6BC,SAA7B,EAAwCC,OAAxC,IAAmD,KAAKO,QAA/D;AACH;;AAESC,EAAAA,eAAe,CAACV,KAAD,EAAgBC,SAAhB,EAAmCC,OAAnC,EACzB;AACI,WAAO,MAAMQ,eAAN,CAAsBV,KAAtB,EAA6BC,SAA7B,EAAwCC,OAAxC,IAAoD,CAAE,KAAKS,QAAlE;AACH;;AAESC,EAAAA,mBAAmB,CAACZ,KAAD,EAAgBC,SAAhB,EAAmCC,OAAnC,EAC7B;AACI,WAAO,IAAP;AACH;;AAzDL","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { DirectionalOffsetData } from '../data/DirectionalOffsetData';\r\nimport { FurnitureBrandedImageVisualization } from './FurnitureBrandedImageVisualization';\r\n\r\nexport class FurnitureRoomBackgroundVisualization extends FurnitureBrandedImageVisualization\r\n{\r\n    private _imageOffset: DirectionalOffsetData;\r\n\r\n    protected imageReady(texture: Texture<Resource>, imageUrl: string): void\r\n    {\r\n        super.imageReady(texture, imageUrl);\r\n\r\n        if(!texture) return;\r\n\r\n        this.setImageOffset(texture.width, texture.height);\r\n    }\r\n\r\n    private setImageOffset(width: number, height: number): void\r\n    {\r\n        const offsetData = new DirectionalOffsetData();\r\n\r\n        offsetData.setDirection(1, 0, -height);\r\n        offsetData.setDirection(3, 0, 0);\r\n        offsetData.setDirection(5, -width, 0);\r\n        offsetData.setDirection(7, -width, -height);\r\n        offsetData.setDirection(4, (-width / 2), (-height / 2));\r\n\r\n        this._imageOffset = offsetData;\r\n    }\r\n\r\n    protected getLayerXOffset(scale: number, direction: number, layerId: number): number\r\n    {\r\n        if(this._imageOffset)\r\n        {\r\n            const offset = this._imageOffset.getXOffset(direction, 0);\r\n\r\n            if(offset !== undefined) return offset + this._offsetX;\r\n        }\r\n\r\n        return super.getLayerXOffset(scale, direction, layerId) + this._offsetX;\r\n    }\r\n\r\n    protected getLayerYOffset(scale: number, direction: number, layerId: number): number\r\n    {\r\n        if(this._imageOffset)\r\n        {\r\n            const offset = this._imageOffset.getYOffset(direction, 0);\r\n\r\n            if(offset !== undefined) return offset + this._offsetY;\r\n        }\r\n\r\n        return super.getLayerYOffset(scale, direction, layerId) + this._offsetY;\r\n    }\r\n\r\n    protected getLayerZOffset(scale: number, direction: number, layerId: number): number\r\n    {\r\n        return super.getLayerZOffset(scale, direction, layerId) + (-(this._offsetZ));\r\n    }\r\n\r\n    protected getLayerIgnoreMouse(scale: number, direction: number, layerId: number): boolean\r\n    {\r\n        return true;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}