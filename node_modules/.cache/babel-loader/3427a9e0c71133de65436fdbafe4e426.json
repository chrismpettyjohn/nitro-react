{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { RoomSessionDoorbellEvent } from '@nitrots/nitro-renderer';\nimport { useCallback, useState } from 'react';\nimport { GetRoomSession } from '../../../api';\nimport { UseRoomSessionManagerEvent } from '../../events';\n\nconst useDoorbellWidgetState = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const addUser = useCallback(userName => {\n    if (users.indexOf(userName) >= 0) return;\n    setUsers([...users, userName]);\n  }, [users]);\n  const removeUser = useCallback(userName => {\n    const index = users.indexOf(userName);\n    if (index === -1) return;\n    const newUsers = [...users];\n    newUsers.splice(index, 1);\n    setUsers(newUsers);\n  }, [users]);\n  const answer = useCallback((userName, flag) => {\n    GetRoomSession().sendDoorbellApprovalMessage(userName, flag);\n    removeUser(userName);\n  }, [removeUser]);\n  const onRoomSessionDoorbellEvent = useCallback(event => {\n    switch (event.type) {\n      case RoomSessionDoorbellEvent.DOORBELL:\n        addUser(event.userName);\n        return;\n\n      case RoomSessionDoorbellEvent.RSDE_REJECTED:\n      case RoomSessionDoorbellEvent.RSDE_ACCEPTED:\n        removeUser(event.userName);\n        return;\n    }\n  }, [addUser, removeUser]);\n  UseRoomSessionManagerEvent(RoomSessionDoorbellEvent.DOORBELL, onRoomSessionDoorbellEvent);\n  UseRoomSessionManagerEvent(RoomSessionDoorbellEvent.RSDE_REJECTED, onRoomSessionDoorbellEvent);\n  UseRoomSessionManagerEvent(RoomSessionDoorbellEvent.RSDE_ACCEPTED, onRoomSessionDoorbellEvent);\n  return {\n    users,\n    addUser,\n    removeUser,\n    answer\n  };\n};\n\n_s(useDoorbellWidgetState, \"POMTilGc1QE/osPNOWduW3pSZg8=\");\n\nexport const useDoorbellWidget = useDoorbellWidgetState;","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/hooks/rooms/widgets/useDoorbellWidget.ts"],"names":["RoomSessionDoorbellEvent","useCallback","useState","GetRoomSession","UseRoomSessionManagerEvent","useDoorbellWidgetState","users","setUsers","addUser","userName","indexOf","removeUser","index","newUsers","splice","answer","flag","sendDoorbellApprovalMessage","onRoomSessionDoorbellEvent","event","type","DOORBELL","RSDE_REJECTED","RSDE_ACCEPTED","useDoorbellWidget"],"mappings":";;AAAA,SAASA,wBAAT,QAAyC,yBAAzC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,0BAAT,QAA2C,cAA3C;;AAEA,MAAMC,sBAAsB,GAAG,MAC/B;AAAA;;AACI,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,QAAQ,CAAW,EAAX,CAApC;AAEA,QAAMM,OAAO,GAAGP,WAAW,CAAEQ,QAAD,IAC5B;AACI,QAAGH,KAAK,CAACI,OAAN,CAAcD,QAAd,KAA2B,CAA9B,EAAiC;AAEjCF,IAAAA,QAAQ,CAAC,CAAE,GAAGD,KAAL,EAAYG,QAAZ,CAAD,CAAR;AACH,GAL0B,EAKxB,CAAEH,KAAF,CALwB,CAA3B;AAOA,QAAMK,UAAU,GAAGV,WAAW,CAAEQ,QAAD,IAC/B;AACI,UAAMG,KAAK,GAAGN,KAAK,CAACI,OAAN,CAAcD,QAAd,CAAd;AAEA,QAAGG,KAAK,KAAK,CAAC,CAAd,EAAiB;AAEjB,UAAMC,QAAQ,GAAG,CAAE,GAAGP,KAAL,CAAjB;AAEAO,IAAAA,QAAQ,CAACC,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AAEAL,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAX6B,EAW3B,CAAEP,KAAF,CAX2B,CAA9B;AAaA,QAAMS,MAAM,GAAGd,WAAW,CAAC,CAACQ,QAAD,EAAmBO,IAAnB,KAC3B;AACIb,IAAAA,cAAc,GAAGc,2BAAjB,CAA6CR,QAA7C,EAAuDO,IAAvD;AAEAL,IAAAA,UAAU,CAACF,QAAD,CAAV;AACH,GALyB,EAKvB,CAAEE,UAAF,CALuB,CAA1B;AAOA,QAAMO,0BAA0B,GAAGjB,WAAW,CAAEkB,KAAD,IAC/C;AACI,YAAOA,KAAK,CAACC,IAAb;AAEI,WAAKpB,wBAAwB,CAACqB,QAA9B;AACIb,QAAAA,OAAO,CAACW,KAAK,CAACV,QAAP,CAAP;AACA;;AACJ,WAAKT,wBAAwB,CAACsB,aAA9B;AACA,WAAKtB,wBAAwB,CAACuB,aAA9B;AACIZ,QAAAA,UAAU,CAACQ,KAAK,CAACV,QAAP,CAAV;AACA;AARR;AAUH,GAZ6C,EAY3C,CAAED,OAAF,EAAWG,UAAX,CAZ2C,CAA9C;AAcAP,EAAAA,0BAA0B,CAACJ,wBAAwB,CAACqB,QAA1B,EAAoCH,0BAApC,CAA1B;AACAd,EAAAA,0BAA0B,CAACJ,wBAAwB,CAACsB,aAA1B,EAAyCJ,0BAAzC,CAA1B;AACAd,EAAAA,0BAA0B,CAACJ,wBAAwB,CAACuB,aAA1B,EAAyCL,0BAAzC,CAA1B;AAEA,SAAO;AAAEZ,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBG,IAAAA,UAAlB;AAA8BI,IAAAA;AAA9B,GAAP;AACH,CAlDD;;GAAMV,sB;;AAoDN,OAAO,MAAMmB,iBAAiB,GAAGnB,sBAA1B","sourcesContent":["import { RoomSessionDoorbellEvent } from '@nitrots/nitro-renderer';\nimport { useCallback, useState } from 'react';\nimport { GetRoomSession } from '../../../api';\nimport { UseRoomSessionManagerEvent } from '../../events';\n\nconst useDoorbellWidgetState = () =>\n{\n    const [ users, setUsers ] = useState<string[]>([]);\n\n    const addUser = useCallback((userName: string) =>\n    {\n        if(users.indexOf(userName) >= 0) return;\n\n        setUsers([ ...users, userName ]);\n    }, [ users ]);\n\n    const removeUser = useCallback((userName: string) =>\n    {\n        const index = users.indexOf(userName);\n\n        if(index === -1) return;\n\n        const newUsers = [ ...users ];\n\n        newUsers.splice(index, 1);\n\n        setUsers(newUsers);\n    }, [ users ]);\n\n    const answer = useCallback((userName: string, flag: boolean) =>\n    {\n        GetRoomSession().sendDoorbellApprovalMessage(userName, flag);\n\n        removeUser(userName);\n    }, [ removeUser ]);\n\n    const onRoomSessionDoorbellEvent = useCallback((event: RoomSessionDoorbellEvent) =>\n    {\n        switch(event.type)\n        {\n            case RoomSessionDoorbellEvent.DOORBELL:\n                addUser(event.userName);\n                return;\n            case RoomSessionDoorbellEvent.RSDE_REJECTED:\n            case RoomSessionDoorbellEvent.RSDE_ACCEPTED:\n                removeUser(event.userName);\n                return;\n        }\n    }, [ addUser, removeUser ]);\n\n    UseRoomSessionManagerEvent(RoomSessionDoorbellEvent.DOORBELL, onRoomSessionDoorbellEvent);\n    UseRoomSessionManagerEvent(RoomSessionDoorbellEvent.RSDE_REJECTED, onRoomSessionDoorbellEvent);\n    UseRoomSessionManagerEvent(RoomSessionDoorbellEvent.RSDE_ACCEPTED, onRoomSessionDoorbellEvent);\n\n    return { users, addUser, removeUser, answer };\n}\n\nexport const useDoorbellWidget = useDoorbellWidgetState;\n"]},"metadata":{},"sourceType":"module"}