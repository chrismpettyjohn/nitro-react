{"ast":null,"code":"export class ModToolsActions {}\nModToolsActions.SET_INIT_DATA = 'MTA_SET_INIT_DATA';\nModToolsActions.SET_CURRENT_ROOM_ID = 'MTA_SET_CURRENT_ROOM_ID';\nModToolsActions.SET_OPEN_ROOMS = 'MTA_SET_OPEN_ROOMS';\nModToolsActions.SET_OPEN_USERINFO = 'MTA_SET_OPEN_USERINFO';\nModToolsActions.SET_OPEN_ROOM_CHATLOGS = 'MTA_SET_OPEN_CHATLOGS';\nModToolsActions.SET_OPEN_USER_CHATLOGS = 'MTA_SET_OPEN_USER_CHATLOGS';\nModToolsActions.SET_TICKETS = 'MTA_SET_TICKETS';\nModToolsActions.SET_CFH_CATEGORIES = 'MTA_SET_CFH_CATEGORIES';\nModToolsActions.RESET_STATE = 'MTA_RESET_STATE';\nexport const initialModTools = {\n  settings: null,\n  currentRoomId: null,\n  openRooms: null,\n  openRoomChatlogs: null,\n  openUserChatlogs: null,\n  openUserInfo: null,\n  tickets: null,\n  cfhCategories: null\n};\nexport const ModToolsReducer = (state, action) => {\n  switch (action.type) {\n    case ModToolsActions.SET_INIT_DATA:\n      {\n        const settings = action.payload.settings || state.settings || null;\n        return { ...state,\n          settings\n        };\n      }\n\n    case ModToolsActions.SET_CURRENT_ROOM_ID:\n      {\n        const currentRoomId = action.payload.currentRoomId || state.currentRoomId || null;\n        return { ...state,\n          currentRoomId\n        };\n      }\n\n    case ModToolsActions.SET_OPEN_ROOMS:\n      {\n        const openRooms = action.payload.openRooms || state.openRooms || null;\n        return { ...state,\n          openRooms\n        };\n      }\n\n    case ModToolsActions.SET_OPEN_USERINFO:\n      {\n        const openUserInfo = action.payload.openUserInfo || state.openUserInfo || null;\n        return { ...state,\n          openUserInfo\n        };\n      }\n\n    case ModToolsActions.SET_OPEN_ROOM_CHATLOGS:\n      {\n        const openRoomChatlogs = action.payload.openRoomChatlogs || state.openRoomChatlogs || null;\n        return { ...state,\n          openRoomChatlogs\n        };\n      }\n\n    case ModToolsActions.SET_OPEN_USER_CHATLOGS:\n      {\n        const openUserChatlogs = action.payload.openUserChatlogs || state.openUserChatlogs || null;\n        return { ...state,\n          openUserChatlogs\n        };\n      }\n\n    case ModToolsActions.SET_TICKETS:\n      {\n        const tickets = action.payload.tickets || state.tickets || null;\n        return { ...state,\n          tickets\n        };\n      }\n\n    case ModToolsActions.SET_CFH_CATEGORIES:\n      {\n        const cfhCategories = action.payload.cfhCategories || state.cfhCategories || null;\n        return { ...state,\n          cfhCategories\n        };\n      }\n\n    case ModToolsActions.RESET_STATE:\n      {\n        return { ...initialModTools\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n_c = ModToolsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModToolsReducer\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/mod-tools/reducers/ModToolsReducer.tsx"],"names":["ModToolsActions","SET_INIT_DATA","SET_CURRENT_ROOM_ID","SET_OPEN_ROOMS","SET_OPEN_USERINFO","SET_OPEN_ROOM_CHATLOGS","SET_OPEN_USER_CHATLOGS","SET_TICKETS","SET_CFH_CATEGORIES","RESET_STATE","initialModTools","settings","currentRoomId","openRooms","openRoomChatlogs","openUserChatlogs","openUserInfo","tickets","cfhCategories","ModToolsReducer","state","action","type","payload"],"mappings":"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","sourcesContent":["import { CallForHelpCategoryData, IssueMessageData, ModeratorInitData } from '@nitrots/nitro-renderer';\nimport { Reducer } from 'react';\n\nexport interface IModToolsState\n{\n    settings: ModeratorInitData;\n    currentRoomId: number;\n    openRooms: number[];\n    openRoomChatlogs: number[];\n    openUserInfo: number[];\n    openUserChatlogs: number[];\n    tickets: IssueMessageData[]\n    cfhCategories: CallForHelpCategoryData[];\n}\n\nexport interface IModToolsAction\n{\n    type: string;\n    payload: {\n        settings?: ModeratorInitData;\n        currentRoomId?: number;\n        openRooms?: number[];\n        openRoomChatlogs?: number[];\n        openUserInfo?: number[];\n        openUserChatlogs?: number[];\n        tickets?: IssueMessageData[];\n        cfhCategories?: CallForHelpCategoryData[];\n    }\n}\n\nexport class ModToolsActions\n{\n    public static SET_INIT_DATA: string = 'MTA_SET_INIT_DATA';\n    public static SET_CURRENT_ROOM_ID: string = 'MTA_SET_CURRENT_ROOM_ID';\n    public static SET_OPEN_ROOMS: string = 'MTA_SET_OPEN_ROOMS';\n    public static SET_OPEN_USERINFO: string = 'MTA_SET_OPEN_USERINFO';\n    public static SET_OPEN_ROOM_CHATLOGS: string = 'MTA_SET_OPEN_CHATLOGS';\n    public static SET_OPEN_USER_CHATLOGS: string = 'MTA_SET_OPEN_USER_CHATLOGS';\n    public static SET_TICKETS: string = 'MTA_SET_TICKETS';\n    public static SET_CFH_CATEGORIES: string = 'MTA_SET_CFH_CATEGORIES';\n    public static RESET_STATE: string = 'MTA_RESET_STATE';\n}\n\nexport const initialModTools: IModToolsState = {\n    settings: null,\n    currentRoomId: null,\n    openRooms: null,\n    openRoomChatlogs: null,\n    openUserChatlogs: null,\n    openUserInfo: null,\n    tickets: null,\n    cfhCategories: null\n};\n\nexport const ModToolsReducer: Reducer<IModToolsState, IModToolsAction> = (state, action) =>\n{\n    switch(action.type)\n    {\n        case ModToolsActions.SET_INIT_DATA: {\n            const settings = (action.payload.settings || state.settings || null);\n\n            return { ...state, settings };\n        }\n        case ModToolsActions.SET_CURRENT_ROOM_ID: {\n            const currentRoomId = (action.payload.currentRoomId || state.currentRoomId || null);\n\n            return { ...state, currentRoomId };\n        }\n        case ModToolsActions.SET_OPEN_ROOMS: {\n            const openRooms = (action.payload.openRooms || state.openRooms || null);\n\n            return { ...state, openRooms };\n        }\n        case ModToolsActions.SET_OPEN_USERINFO: {\n            const openUserInfo = (action.payload.openUserInfo || state.openUserInfo || null);\n\n            return { ...state, openUserInfo };\n        }\n        case ModToolsActions.SET_OPEN_ROOM_CHATLOGS: {\n            const openRoomChatlogs = (action.payload.openRoomChatlogs || state.openRoomChatlogs || null);\n\n            return { ...state, openRoomChatlogs };\n        }\n        case ModToolsActions.SET_OPEN_USER_CHATLOGS: {\n            const openUserChatlogs = (action.payload.openUserChatlogs || state.openUserChatlogs || null);\n\n            return { ...state, openUserChatlogs };\n        }\n        case ModToolsActions.SET_TICKETS: {\n            const tickets = (action.payload.tickets || state.tickets || null);\n\n            return { ...state, tickets };\n        }\n        case ModToolsActions.SET_CFH_CATEGORIES: {\n            const cfhCategories = (action.payload.cfhCategories || state.cfhCategories || null);\n\n            return { ...state, cfhCategories };\n        }\n        case ModToolsActions.RESET_STATE: {\n            return { ...initialModTools };\n        }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}