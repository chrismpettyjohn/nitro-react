{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/catalog/CatalogView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { AddEventLinkTracker, LocalizeText, RemoveLinkEventTracker } from '../../api';\nimport { Column, Grid, NitroCardContentView, NitroCardHeaderView, NitroCardTabsItemView, NitroCardTabsView, NitroCardView } from '../../common';\nimport { useCatalog } from '../../hooks';\nimport { CatalogGiftView } from './views/gift/CatalogGiftView';\nimport { CatalogNavigationView } from './views/navigation/CatalogNavigationView';\nimport { CatalogHeaderView } from './views/page/common/CatalogHeaderView';\nimport { GetCatalogLayout } from './views/page/layout/GetCatalogLayout';\nimport { MarketplacePostOfferView } from './views/page/layout/marketplace/MarketplacePostOfferView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CatalogView = props => {\n  _s();\n\n  const {\n    isVisible = false,\n    setIsVisible = null,\n    rootNode = null,\n    currentPage = null,\n    navigationHidden = false,\n    setNavigationHidden = null,\n    activeNodes = [],\n    searchResult = null,\n    setSearchResult = null,\n    openPageByName = null,\n    openPageByOfferId = null,\n    getNodeById = null,\n    activateNode = null\n  } = useCatalog();\n  useEffect(() => {\n    const linkTracker = {\n      linkReceived: url => {\n        const parts = url.split('/');\n        if (parts.length < 2) return;\n\n        switch (parts[1]) {\n          case 'show':\n            setIsVisible(true);\n            return;\n\n          case 'hide':\n            setIsVisible(false);\n            return;\n\n          case 'toggle':\n            setIsVisible(prevValue => !prevValue);\n            return;\n\n          case 'open':\n            if (parts.length > 2) {\n              if (parts.length === 4) {\n                switch (parts[2]) {\n                  case 'offerId':\n                    openPageByOfferId(parseInt(parts[3]));\n                    return;\n                }\n              } else {\n                openPageByName(parts[2]);\n              }\n            } else {\n              setIsVisible(true);\n            }\n\n            return;\n        }\n      },\n      eventUrlPrefix: 'catalog/'\n    };\n    AddEventLinkTracker(linkTracker);\n    return () => RemoveLinkEventTracker(linkTracker);\n  }, [setIsVisible, openPageByOfferId, openPageByName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isVisible && /*#__PURE__*/_jsxDEV(NitroCardView, {\n      uniqueKey: \"catalog\",\n      className: \"nitro-catalog\",\n      children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n        headerText: LocalizeText('catalog.title'),\n        onCloseClick: event => setIsVisible(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NitroCardTabsView, {\n        subClassName: \"w-100\",\n        children: rootNode && rootNode.children.length > 0 && rootNode.children.map(child => {\n          if (!child.isVisible) return null;\n          return /*#__PURE__*/_jsxDEV(NitroCardTabsItemView, {\n            isActive: child.isActive,\n            onClick: event => {\n              if (searchResult) setSearchResult(null);\n              activateNode(child);\n            },\n            children: child.localization\n          }, child.pageId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CatalogHeaderView, {\n        node: rootNode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [!navigationHidden && /*#__PURE__*/_jsxDEV(Column, {\n            size: 4,\n            overflow: \"hidden\",\n            children: activeNodes && activeNodes.length > 0 && /*#__PURE__*/_jsxDEV(CatalogNavigationView, {\n              node: activeNodes[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            size: !navigationHidden ? 8 : 12,\n            overflow: \"hidden\",\n            children: GetCatalogLayout(currentPage, () => setNavigationHidden(true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CatalogGiftView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MarketplacePostOfferView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CatalogView, \"IbF7RBgvaYVXcd3e+MhHJEDLOHE=\", false, function () {\n  return [useCatalog];\n});\n\n_c = CatalogView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/catalog/CatalogView.tsx"],"names":["useEffect","AddEventLinkTracker","LocalizeText","RemoveLinkEventTracker","Column","Grid","NitroCardContentView","NitroCardHeaderView","NitroCardTabsItemView","NitroCardTabsView","NitroCardView","useCatalog","CatalogGiftView","CatalogNavigationView","CatalogHeaderView","GetCatalogLayout","MarketplacePostOfferView","CatalogView","props","isVisible","setIsVisible","rootNode","currentPage","navigationHidden","setNavigationHidden","activeNodes","searchResult","setSearchResult","openPageByName","openPageByOfferId","getNodeById","activateNode","linkTracker","linkReceived","url","parts","split","length","prevValue","parseInt","eventUrlPrefix","event","children","map","child","isActive","localization","pageId"],"mappings":"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","sourcesContent":["import { ILinkEventTracker } from '@nitrots/nitro-renderer';\nimport { FC, useEffect } from 'react';\nimport { AddEventLinkTracker, LocalizeText, RemoveLinkEventTracker } from '../../api';\nimport { Column, Grid, NitroCardContentView, NitroCardHeaderView, NitroCardTabsItemView, NitroCardTabsView, NitroCardView } from '../../common';\nimport { useCatalog } from '../../hooks';\nimport { CatalogGiftView } from './views/gift/CatalogGiftView';\nimport { CatalogNavigationView } from './views/navigation/CatalogNavigationView';\nimport { CatalogHeaderView } from './views/page/common/CatalogHeaderView';\nimport { GetCatalogLayout } from './views/page/layout/GetCatalogLayout';\nimport { MarketplacePostOfferView } from './views/page/layout/marketplace/MarketplacePostOfferView';\n\nexport const CatalogView: FC<{}> = props =>\n{\n    const { isVisible = false, setIsVisible = null, rootNode = null, currentPage = null, navigationHidden = false, setNavigationHidden = null, activeNodes = [], searchResult = null, setSearchResult = null, openPageByName = null, openPageByOfferId = null, getNodeById = null, activateNode = null } = useCatalog();\n\n    useEffect(() =>\n    {\n        const linkTracker: ILinkEventTracker = {\n            linkReceived: (url: string) =>\n            {\n                const parts = url.split('/');\n        \n                if(parts.length < 2) return;\n        \n                switch(parts[1])\n                {\n                    case 'show':\n                        setIsVisible(true);\n                        return;\n                    case 'hide':\n                        setIsVisible(false);\n                        return;\n                    case 'toggle':\n                        setIsVisible(prevValue => !prevValue);\n                        return;\n                    case 'open':\n                        if(parts.length > 2)\n                        {\n                            if(parts.length === 4)\n                            {\n                                switch(parts[2])\n                                {\n                                    case 'offerId':\n                                        openPageByOfferId(parseInt(parts[3]));\n                                        return;\n                                }\n                            }\n                            else\n                            {\n                                openPageByName(parts[2]);\n                            }\n                        }\n                        else\n                        {\n                            setIsVisible(true);\n                        }\n        \n                        return;\n                }\n            },\n            eventUrlPrefix: 'catalog/'\n        };\n\n        AddEventLinkTracker(linkTracker);\n\n        return () => RemoveLinkEventTracker(linkTracker);\n    }, [ setIsVisible, openPageByOfferId, openPageByName ]);\n\n    return (\n        <>\n            { isVisible &&\n                <NitroCardView uniqueKey=\"catalog\" className=\"nitro-catalog\">\n                    <NitroCardHeaderView headerText={ LocalizeText('catalog.title') } onCloseClick={ event => setIsVisible(false) } />\n                    <NitroCardTabsView subClassName=\"w-100\">\n                        { rootNode && (rootNode.children.length > 0) && rootNode.children.map(child =>\n                        {\n                            if(!child.isVisible) return null;\n\n                            return (\n                                <NitroCardTabsItemView key={ child.pageId } isActive={ child.isActive } onClick={ event =>\n                                {\n                                    if(searchResult) setSearchResult(null);\n\n                                    activateNode(child);\n                                } }>\n                                    { child.localization }\n                                </NitroCardTabsItemView>\n                            );\n                        }) }\n                    </NitroCardTabsView>\n                    <CatalogHeaderView node={ rootNode } />\n                    <NitroCardContentView>\n                        <Grid>\n                            { !navigationHidden &&\n                                <Column size={ 4 } overflow=\"hidden\">\n                                    { activeNodes && (activeNodes.length > 0) &&\n                                        <CatalogNavigationView node={ activeNodes[0] } /> }\n                                </Column> }\n                            <Column size={ !navigationHidden ? 8 : 12 } overflow=\"hidden\">\n                                { GetCatalogLayout(currentPage, () => setNavigationHidden(true)) }\n                            </Column>\n                        </Grid>\n                    </NitroCardContentView>\n                </NitroCardView> }\n            <CatalogGiftView />\n            <MarketplacePostOfferView />\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}