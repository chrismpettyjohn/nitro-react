{"ast":null,"code":"export class Randomizer {\n  constructor() {\n    this._seed = 1;\n    this._modulus = 16777216;\n    this._multiplier = 69069;\n    this._increment = 5;\n  }\n\n  static setSeed() {\n    let k = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    if (!Randomizer._randomizer) Randomizer._randomizer = new Randomizer();\n    Randomizer._randomizer.seed = k;\n  }\n\n  static setModulus() {\n    let k = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16777216;\n    if (!Randomizer._randomizer) Randomizer._randomizer = new Randomizer();\n    Randomizer._randomizer.modulus = k;\n  }\n\n  static getValues(k, _arg_2, _arg_3) {\n    if (!Randomizer._randomizer) Randomizer._randomizer = new Randomizer();\n    return Randomizer._randomizer.getRandomValues(k, _arg_2, _arg_3);\n  }\n\n  static getArray(k, _arg_2) {\n    if (!Randomizer._randomizer) Randomizer._randomizer = new Randomizer();\n    return Randomizer._randomizer.getRandomArray(k, _arg_2);\n  }\n\n  set seed(k) {\n    this._seed = k;\n  }\n\n  set modulus(k) {\n    if (k < 1) k = 1;\n    this._modulus = k;\n  }\n\n  dispose() {}\n\n  getRandomValues(k, _arg_2, _arg_3) {\n    const _local_4 = [];\n    let _local_5 = 0;\n\n    while (_local_5 < k) {\n      _local_4.push(this.iterateScaled(_arg_2, _arg_3 - _arg_2));\n\n      _local_5++;\n    }\n\n    return _local_4;\n  }\n\n  getRandomArray(k, _arg_2) {\n    if (k > _arg_2 || _arg_2 > 1000) return null;\n    const _local_3 = [];\n    let _local_4 = 0;\n\n    while (_local_4 <= _arg_2) {\n      _local_3.push(_local_4);\n\n      _local_4++;\n    }\n\n    const _local_5 = [];\n    let _local_6 = 0;\n\n    while (_local_6 < k) {\n      const _local_7 = this.iterateScaled(0, _local_3.length - 1);\n\n      _local_5.push(_local_3[_local_7]);\n\n      _local_3.splice(_local_7, 1);\n\n      _local_6++;\n    }\n\n    return _local_5;\n  }\n\n  iterate() {\n    let k = this._multiplier * this._seed + this._increment;\n    if (k < 0) k = -k;\n    k = k % this._modulus;\n    this._seed = k;\n    return k;\n  }\n\n  iterateScaled(k, _arg_2) {\n    let _local_3 = this.iterate();\n\n    if (_arg_2 < 1) return k;\n    _local_3 = k + _local_3 / this._modulus * _arg_2;\n    return _local_3;\n  }\n\n}\nRandomizer.DEFAULT_SEED = 1;\nRandomizer.DEFAULT_MODULUS = 16777216;\nRandomizer._randomizer = null;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/room/utils/Randomizer.ts"],"names":["Randomizer","_seed","_modulus","_multiplier","_increment","setSeed","k","_randomizer","seed","setModulus","modulus","getValues","_arg_2","_arg_3","getRandomValues","getArray","getRandomArray","dispose","_local_4","_local_5","push","iterateScaled","_local_3","_local_6","_local_7","length","splice","iterate","DEFAULT_SEED","DEFAULT_MODULUS"],"mappings":"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","sourcesContent":["export class Randomizer\r\n{\r\n    public static DEFAULT_SEED: number = 1;\r\n    public static DEFAULT_MODULUS: number = 16777216;\r\n\r\n    private static _randomizer:Randomizer = null;\r\n\r\n    private _seed: number = 1;\r\n    private _modulus: number = 16777216;\r\n    private _multiplier: number = 69069;\r\n    private _increment: number = 5;\r\n\r\n    public static setSeed(k: number = 1): void\r\n    {\r\n        if(!Randomizer._randomizer) Randomizer._randomizer = new Randomizer();\r\n\r\n        Randomizer._randomizer.seed = k;\r\n    }\r\n\r\n    public static setModulus(k: number = 16777216): void\r\n    {\r\n        if(!Randomizer._randomizer) Randomizer._randomizer = new Randomizer();\r\n\r\n        Randomizer._randomizer.modulus = k;\r\n    }\r\n\r\n    public static getValues(k: number, _arg_2: number, _arg_3: number): number[]\r\n    {\r\n        if(!Randomizer._randomizer) Randomizer._randomizer = new Randomizer();\r\n\r\n        return Randomizer._randomizer.getRandomValues(k, _arg_2, _arg_3);\r\n    }\r\n\r\n    public static getArray(k: number, _arg_2: number): number[]\r\n    {\r\n        if(!Randomizer._randomizer) Randomizer._randomizer = new Randomizer();\r\n\r\n        return Randomizer._randomizer.getRandomArray(k, _arg_2);\r\n    }\r\n\r\n    public set seed(k: number)\r\n    {\r\n        this._seed = k;\r\n    }\r\n\r\n    public set modulus(k: number)\r\n    {\r\n        if(k < 1) k = 1;\r\n\r\n        this._modulus = k;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n    }\r\n\r\n    public getRandomValues(k: number, _arg_2: number, _arg_3: number): number[]\r\n    {\r\n        const _local_4: number[] = [];\r\n\r\n        let _local_5 = 0;\r\n\r\n        while(_local_5 < k)\r\n        {\r\n            _local_4.push(this.iterateScaled(_arg_2, (_arg_3 - _arg_2)));\r\n            _local_5++;\r\n        }\r\n\r\n        return _local_4;\r\n    }\r\n\r\n    public getRandomArray(k: number, _arg_2: number): number[]\r\n    {\r\n        if(((k > _arg_2) || (_arg_2 > 1000))) return null;\r\n\r\n        const _local_3: number[] = [];\r\n\r\n        let _local_4 = 0;\r\n\r\n        while(_local_4 <= _arg_2)\r\n        {\r\n            _local_3.push(_local_4);\r\n            _local_4++;\r\n        }\r\n\r\n        const _local_5: number[] = [];\r\n\r\n        let _local_6 = 0;\r\n\r\n        while(_local_6 < k)\r\n        {\r\n            const _local_7 = this.iterateScaled(0, (_local_3.length - 1));\r\n\r\n            _local_5.push(_local_3[_local_7]);\r\n            _local_3.splice(_local_7, 1);\r\n\r\n            _local_6++;\r\n        }\r\n\r\n        return _local_5;\r\n    }\r\n\r\n    private iterate(): number\r\n    {\r\n        let k: number = ((this._multiplier * this._seed) + this._increment);\r\n\r\n        if(k < 0) k = -(k);\r\n\r\n        k = (k % this._modulus);\r\n\r\n        this._seed = k;\r\n\r\n        return k;\r\n    }\r\n\r\n    private iterateScaled(k: number, _arg_2: number): number\r\n    {\r\n        let _local_3: number = this.iterate();\r\n\r\n        if(_arg_2 < 1) return k;\r\n\r\n        _local_3 = (k + ((_local_3 / this._modulus) * _arg_2));\r\n\r\n        return _local_3;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}