{"ast":null,"code":"import { FurnitureListItemParser } from './utils/FurnitureListItemParser';\nexport class FurnitureListParser {\n  constructor() {\n    this._totalFragments = void 0;\n    this._fragmentNumber = void 0;\n    this._fragment = void 0;\n  }\n\n  flush() {\n    this._totalFragments = 0;\n    this._fragmentNumber = 0;\n    this._fragment = new Map();\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._totalFragments = wrapper.readInt();\n    this._fragmentNumber = wrapper.readInt();\n    let totalItems = wrapper.readInt();\n\n    while (totalItems > 0) {\n      const item = new FurnitureListItemParser(wrapper);\n      if (item) this._fragment.set(item.itemId, item);\n      totalItems--;\n    }\n\n    return true;\n  }\n\n  get totalFragments() {\n    return this._totalFragments;\n  }\n\n  get fragmentNumber() {\n    return this._fragmentNumber;\n  }\n\n  get fragment() {\n    return this._fragment;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/inventory/furniture/FurnitureListParser.ts"],"names":["FurnitureListItemParser","FurnitureListParser","_totalFragments","_fragmentNumber","_fragment","flush","Map","parse","wrapper","readInt","totalItems","item","set","itemId","totalFragments","fragmentNumber","fragment"],"mappings":"AACA,SAASA,uBAAT,QAAwC,iCAAxC;AAEA,OAAO,MAAMC,mBAAN,CACP;AAAA;AAAA,SACYC,eADZ;AAAA,SAEYC,eAFZ;AAAA,SAGYC,SAHZ;AAAA;;AAKWC,EAAAA,KAAK,GACZ;AACI,SAAKH,eAAL,GAAuB,CAAvB;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKC,SAAL,GAAiB,IAAIE,GAAJ,EAAjB;AAEA,WAAO,IAAP;AACH;;AAEMC,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKN,eAAL,GAAuBM,OAAO,CAACC,OAAR,EAAvB;AACA,SAAKN,eAAL,GAAuBK,OAAO,CAACC,OAAR,EAAvB;AAEA,QAAIC,UAAU,GAAGF,OAAO,CAACC,OAAR,EAAjB;;AAEA,WAAMC,UAAU,GAAG,CAAnB,EACA;AACI,YAAMC,IAAI,GAAG,IAAIX,uBAAJ,CAA4BQ,OAA5B,CAAb;AAEA,UAAGG,IAAH,EAAS,KAAKP,SAAL,CAAeQ,GAAf,CAAmBD,IAAI,CAACE,MAAxB,EAAgCF,IAAhC;AAETD,MAAAA,UAAU;AACb;;AAED,WAAO,IAAP;AACH;;AAEwB,MAAdI,cAAc,GACzB;AACI,WAAO,KAAKZ,eAAZ;AACH;;AAEwB,MAAda,cAAc,GACzB;AACI,WAAO,KAAKZ,eAAZ;AACH;;AAEkB,MAARa,QAAQ,GACnB;AACI,WAAO,KAAKZ,SAAZ;AACH;;AAhDL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\nimport { FurnitureListItemParser } from './utils/FurnitureListItemParser';\r\n\r\nexport class FurnitureListParser implements IMessageParser\r\n{\r\n    private _totalFragments: number;\r\n    private _fragmentNumber: number;\r\n    private _fragment: Map<number, FurnitureListItemParser>;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._totalFragments = 0;\r\n        this._fragmentNumber = 0;\r\n        this._fragment = new Map();\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._totalFragments = wrapper.readInt();\r\n        this._fragmentNumber = wrapper.readInt();\r\n\r\n        let totalItems = wrapper.readInt();\r\n\r\n        while(totalItems > 0)\r\n        {\r\n            const item = new FurnitureListItemParser(wrapper);\r\n\r\n            if(item) this._fragment.set(item.itemId, item);\r\n\r\n            totalItems--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get totalFragments(): number\r\n    {\r\n        return this._totalFragments;\r\n    }\r\n\r\n    public get fragmentNumber(): number\r\n    {\r\n        return this._fragmentNumber;\r\n    }\r\n\r\n    public get fragment(): Map<number, FurnitureListItemParser>\r\n    {\r\n        return this._fragment;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}