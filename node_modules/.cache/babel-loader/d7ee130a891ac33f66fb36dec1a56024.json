{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionMuteUserView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredActionMuteUserView = props => {\n  _s();\n\n  const [time, setTime] = useState(-1);\n  const [message, setMessage] = useState('');\n  const {\n    trigger = null,\n    setIntParams = null,\n    setStringParam = null\n  } = useWiredContext();\n\n  const save = () => {\n    setIntParams([time]);\n    setStringParam(message);\n  };\n\n  useEffect(() => {\n    setTime(trigger.intData.length > 0 ? trigger.intData[0] : 0);\n    setMessage(trigger.stringData);\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredActionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.length.minutes', ['minutes'], [time.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: 'wired-slider',\n        min: 1,\n        max: 10,\n        value: time,\n        onChange: event => setTime(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.message')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: message,\n        onChange: event => setMessage(event.target.value),\n        maxLength: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredActionMuteUserView, \"6HnxSBaL2bn09WSeqpOmrup7f6I=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredActionMuteUserView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredActionMuteUserView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionMuteUserView.tsx"],"names":["useEffect","useState","ReactSlider","LocalizeText","WiredFurniType","Column","Text","useWiredContext","WiredActionBaseView","WiredActionMuteUserView","props","time","setTime","message","setMessage","trigger","setIntParams","setStringParam","save","intData","length","stringData","STUFF_SELECTION_OPTION_NONE","toString","event","target","value"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,oBAA7B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAEA,OAAO,MAAMC,uBAA+B,GAAGC,KAAK,IACpD;AAAA;;AACI,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAC,CAAC,CAAF,CAAlC;AACA,QAAM,CAAEY,OAAF,EAAWC,UAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEc,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,YAAY,GAAG,IAAjC;AAAuCC,IAAAA,cAAc,GAAG;AAAxD,MAAiEV,eAAe,EAAtF;;AAEA,QAAMW,IAAI,GAAG,MACb;AACIF,IAAAA,YAAY,CAAC,CAAEL,IAAF,CAAD,CAAZ;AACAM,IAAAA,cAAc,CAACJ,OAAD,CAAd;AACH,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MACV;AACIY,IAAAA,OAAO,CAAEG,OAAO,CAACI,OAAR,CAAgBC,MAAhB,GAAyB,CAA1B,GAA+BL,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAA/B,GAAoD,CAArD,CAAP;AACAL,IAAAA,UAAU,CAACC,OAAO,CAACM,UAAT,CAAV;AACH,GAJQ,EAIN,CAAEN,OAAF,CAJM,CAAT;AAMA,sBACI,QAAC,mBAAD;AAAqB,IAAA,aAAa,EAAGX,cAAc,CAACkB,2BAApD;AAAkF,IAAA,eAAe,EAAG,IAApG;AAA2G,IAAA,IAAI,EAAGJ,IAAlH;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAef,YAAY,CAAC,kCAAD,EAAqC,CAAE,SAAF,CAArC,EAAoD,CAAEQ,IAAI,CAACY,QAAL,EAAF,CAApD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AACI,QAAA,SAAS,EAAG,cADhB;AAEI,QAAA,GAAG,EAAG,CAFV;AAGI,QAAA,GAAG,EAAG,EAHV;AAII,QAAA,KAAK,EAAGZ,IAJZ;AAKI,QAAA,QAAQ,EAAGa,KAAK,IAAIZ,OAAO,CAACY,KAAD;AAL/B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAerB,YAAY,CAAC,2BAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,8BAA7B;AAA4D,QAAA,KAAK,EAAGU,OAApE;AAA8E,QAAA,QAAQ,EAAGW,KAAK,IAAIV,UAAU,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA5G;AAAmI,QAAA,SAAS,EAAG;AAA/I;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAnCM;;GAAMjB,uB;UAI8DF,e;;;KAJ9DE,uB","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\n\nexport const WiredActionMuteUserView: FC<{}> = props =>\n{\n    const [ time, setTime ] = useState(-1);\n    const [ message, setMessage ] = useState('');\n    const { trigger = null, setIntParams = null, setStringParam = null } = useWiredContext();\n\n    const save = () =>\n    {\n        setIntParams([ time ]);\n        setStringParam(message);\n    }\n\n    useEffect(() =>\n    {\n        setTime((trigger.intData.length > 0) ? trigger.intData[0] : 0);\n        setMessage(trigger.stringData);\n    }, [ trigger ]);\n\n    return (\n        <WiredActionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.length.minutes', [ 'minutes' ], [ time.toString() ]) }</Text>\n                <ReactSlider\n                    className={ 'wired-slider' }\n                    min={ 1 }\n                    max={ 10 }\n                    value={ time }\n                    onChange={ event => setTime(event) } />\n            </Column>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.message') }</Text>\n                <input type=\"text\" className=\"form-control form-control-sm\" value={ message } onChange={ event => setMessage(event.target.value) } maxLength={ 100 } />\n            </Column>\n        </WiredActionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}