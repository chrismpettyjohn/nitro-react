{"ast":null,"code":"import { Point } from '@pixi/math';\nimport { Vector3d } from '../../../room/utils/Vector3d';\nimport { Nitro } from '../../Nitro';\nimport { RoomObjectCategory } from '../object/RoomObjectCategory';\nimport { PlaneDrawingData } from '../object/visualization/room/PlaneDrawingData';\nimport { RoomEngine } from '../RoomEngine';\nexport class SpriteDataCollector {\n  constructor() {\n    this.maxZ = void 0;\n    this.spriteCount = 0;\n    this.externalImageCount = 0;\n  }\n\n  static addMannequinSprites(k, _arg_2) {\n    const datas = [];\n\n    for (const data of k) {\n      if (!data) continue;\n\n      if (data.type === 'boutique_mannequin1' && data.name.indexOf('mannequin_') === 0) {\n        const roomObject = _arg_2.getRoomObject(_arg_2.activeRoomId, data.objectId, RoomObjectCategory.FLOOR);\n\n        if (roomObject) {\n          const spriteList = roomObject.visualization.getSpriteList();\n\n          if (spriteList) {\n            for (const sprite of spriteList) {\n              sprite.x = sprite.x + (data.x + data.width / 2 + SpriteDataCollector.MANNEQUIN_MAGIC_X_OFFSET);\n              sprite.y = sprite.y + (data.y + data.height + SpriteDataCollector.MANNEQUIN_MAGIC_Y_OFFSET);\n              sprite.z = sprite.z + data.z;\n              datas.push(sprite);\n            }\n          }\n        }\n      } else {\n        datas.push(data);\n      }\n    }\n\n    return datas;\n  }\n\n  static sortSpriteDataObjects(k, _arg_2) {\n    if (k.z < _arg_2.z) return 1;\n    if (k.z > _arg_2.z) return -1;\n    return -1;\n  }\n\n  static isSpriteInViewPort(k, _arg_2, _arg_3) {\n    return true; // var _local_4 = new Rectangle((k.x + _arg_3.screenOffsetX), (k.y + _arg_3.screenOffsetY), k.width, k.height);\n    // // intersects\n    // return _local_4.contains(_arg_2.x, _arg_2.y);\n  }\n\n  static sortQuadPoints(k, _arg_2, _arg_3, _arg_4) {\n    const points = [];\n\n    if (k.x == _arg_2.x) {\n      points.push(k, _arg_3, _arg_2, _arg_4);\n    } else {\n      if (k.x == _arg_3.x) {\n        points.push(k, _arg_2, _arg_3, _arg_4);\n      } else {\n        if (_arg_2.x < k.x && _arg_2.y > k.y || _arg_2.x > k.x && _arg_2.y < k.y) {\n          points.push(k, _arg_3, _arg_2, _arg_4);\n        } else {\n          points.push(k, _arg_2, _arg_3, _arg_4);\n        }\n      }\n    }\n\n    if (points[0].x < points[1].x) {\n      let _local_6 = points[0];\n      points[0] = points[1];\n      points[1] = _local_6;\n      _local_6 = points[2];\n      points[2] = points[3];\n      points[3] = _local_6;\n    }\n\n    if (points[0].y < points[2].y) {\n      let _local_6 = points[0];\n      points[0] = points[2];\n      points[2] = _local_6;\n      _local_6 = points[1];\n      points[1] = points[3];\n      points[3] = _local_6;\n    }\n\n    return points;\n  }\n\n  getFurniData(k, _arg_2, _arg_3, _arg_4) {\n    const _local_5 = [];\n\n    let _local_6 = _arg_2.getSortableSpriteList();\n\n    const _local_7 = _arg_3.getRoomObjects(_arg_3.activeRoomId, RoomObjectCategory.UNIT);\n\n    for (const _local_8 of _local_7) {\n      if (_local_8.id !== _arg_4) {\n        const _local_11 = _local_8.visualization.getSpriteList();\n\n        if (_local_11) {\n          let _local_12 = 0;\n          let _local_13 = 0;\n\n          for (const _local_14 of _local_6) {\n            if (_local_14.name === 'avatar_' + _local_8.id) {\n              _local_12 = _local_14.z;\n              _local_13 = _local_14.y + _local_14.height - _arg_2.geometry.scale / 4;\n              break;\n            }\n          }\n\n          const _local_15 = _arg_3.getRoomObjectScreenLocation(_arg_3.activeRoomId, _local_8.id, RoomObjectCategory.UNIT, _arg_2.id);\n\n          if (_local_15) {\n            if (_local_13 === 0) _local_13 = _local_15.y;\n\n            for (const _local_16 of _local_11) {\n              _local_16.x = _local_16.x + (_local_15.x - _arg_2.screenOffsetX);\n              _local_16.y = _local_16.y + _local_13;\n              _local_16.z = _local_16.z + _local_12;\n\n              if (_local_16.name.indexOf('h_std_fx29_') === 0 || _local_16.name.indexOf('h_std_fx185_') === 0) {\n                _local_16.y = _local_16.y + SpriteDataCollector.AVATAR_WATER_EFFECT_MAGIC_Y_OFFSET;\n              }\n\n              _local_6.push(_local_16);\n            }\n          }\n        }\n      }\n    }\n\n    _local_6 = SpriteDataCollector.addMannequinSprites(_local_6, _arg_3);\n\n    _local_6.sort(SpriteDataCollector.sortSpriteDataObjects);\n\n    for (const _local_9 of _local_6) {\n      if (!(_local_9.name === null) && _local_9.name.length > 0 && !(_local_9.name.indexOf('tile_cursor_') === 0) && SpriteDataCollector.isSpriteInViewPort(_local_9, k, _arg_2) && (_arg_4 < 0 || !(_local_9.objectId == _arg_4))) {\n        _local_5.push(this.getSpriteDataObject(_local_9, k, _arg_2, _arg_3));\n\n        if (!this.maxZ) this.maxZ = _local_9.z;\n        this.spriteCount++;\n      }\n    }\n\n    return JSON.stringify(_local_5);\n  }\n\n  getRoomRenderingModifiers(k) {\n    return JSON.stringify(new Object());\n  }\n\n  getSpriteDataObject(k, _arg_2, _arg_3, _arg_4) {\n    let _local_7 = null;\n    let _local_9 = [];\n    const _local_5 = {};\n    let _local_6 = k.name;\n\n    if (k.name.indexOf('@') !== -1) {\n      _local_9 = k.name.split('@');\n      _local_6 = _local_9[0];\n      _local_7 = _local_9[1];\n    } // if(((_local_7) && (k.type)))\n    // {\n    //     const _local_10 = _arg_4.roomContentLoader.getCollection(k.type);\n    //     if(_local_10)\n    //     {\n    //         const _local_11 = _local_10.getPalette(_local_7);\n    //         if (((!(_local_11 == null)) && (!(_local_11.@source == null))))\n    //         {\n    //             _local_5.paletteSourceName = (_local_11.@source + '');\n    //         }\n    //     }\n    // }\n    // var _local_8: string = _arg_4.configuration.getProperty('image.library.url');\n    // _local_6 = _local_6.replace('%image.library.url%', _local_8);\n    // if (_local_6.indexOf('%group.badge.url%') != -1)\n    // {\n    //     _local_12 = _arg_4.configuration.getProperty('group.badge.url');\n    //     _local_6 = _local_6.replace('%group.badge.url%', '');\n    //     _local_13 = _local_12.replace('%imagerdata%', _local_6);\n    //     _local_6 = _local_13;\n    // }\n\n\n    _local_5.name = _local_6;\n    _local_5.x = k.x - _arg_2.x;\n    _local_5.y = k.y - _arg_2.y;\n    _local_5.x = _local_5.x + _arg_3.screenOffsetX;\n    _local_5.y = _local_5.y + _arg_3.screenOffsetY;\n    _local_5.z = k.z;\n    if (k.alpha && k.alpha.toString() !== '255') _local_5.alpha = k.alpha;\n    if (k.flipH) _local_5.flipH = k.flipH;\n    if (k.skew) _local_5.skew = k.skew;\n    if (k.frame) _local_5.frame = k.frame;\n    if (k.color && k.color.length > 0) _local_5.color = parseInt(k.color);\n    if (k.blendMode && k.blendMode !== 'normal') _local_5.blendMode = k.blendMode;\n\n    if (_local_6.indexOf('http') === 0) {\n      _local_5.width = k.width;\n      _local_5.height = k.height;\n      this.externalImageCount++;\n      if (this.externalImageCount > SpriteDataCollector.MAX_EXTERNAL_IMAGE_COUNT) _local_5.name = 'box';\n    }\n\n    if (k.posture) _local_5.posture = k.posture;\n    return _local_5;\n  }\n\n  makeBackgroundPlane(k, _arg_2, _arg_3) {\n    const _local_4 = new Point(0, 0);\n\n    const _local_5 = new Point(k.width, 0);\n\n    const _local_6 = new Point(0, k.height);\n\n    const _local_7 = new Point(k.width, k.height);\n\n    const _local_8 = SpriteDataCollector.sortQuadPoints(_local_4, _local_5, _local_6, _local_7);\n\n    let _local_9 = 0;\n\n    if (_arg_3.length > 0) {\n      _local_9 = _arg_3[0].z;\n      if (this.maxZ) _local_9 = Math.max(this.maxZ, _local_9);\n    } else {\n      _local_9 = this.maxZ ? this.maxZ : 0;\n    }\n\n    _local_9 = _local_9 + (this.spriteCount * 1.776104 + _arg_3.length * 2.31743);\n\n    const _local_10 = new PlaneDrawingData(null, _arg_2);\n\n    _local_10.cornerPoints = _local_8;\n    _local_10.z = _local_9;\n    return _local_10;\n  }\n\n  sortRoomPlanes(k, _arg_2, _arg_3) {\n    const _local_4 = new Map();\n\n    let _local_5 = 1;\n\n    if (this.maxZ) {\n      _local_5 = _local_5 + this.maxZ;\n    }\n\n    for (const _local_6 of k) {\n      const _local_10 = {\n        plane: _local_6,\n        z: _local_5\n      };\n\n      _local_4.set(_local_6.uniqueId, _local_10);\n    }\n\n    const sprites = _arg_2.getPlaneSortableSprites();\n\n    sprites.sort((a, b) => {\n      return b.z - a.z;\n    });\n    sprites.reverse();\n    let _local_8 = [];\n\n    for (const sprite of sprites) {\n      const objectSprite = sprite.sprite;\n\n      if (objectSprite) {\n        const _local_10 = _local_4.get(objectSprite.id);\n\n        if (_local_10) {\n          _local_4.delete(objectSprite.id);\n\n          _local_10.z = sprite.z;\n\n          _local_8.push(_local_10);\n        }\n      }\n    }\n\n    _local_8 = _local_8.concat(Array.from(_local_4.values()));\n    return _local_8;\n  }\n\n  getRoomPlanes(k, _arg_2, _arg_3, _arg_4) {\n    const _local_5 = [];\n\n    const roomObject = _arg_3.getRoomObject(_arg_3.activeRoomId, RoomEngine.ROOM_OBJECT_ID, RoomObjectCategory.ROOM);\n\n    const visualization = roomObject.visualization;\n\n    if (visualization) {\n      const _local_8 = _arg_2.geometry;\n\n      const _local_9 = this.sortRoomPlanes(visualization.planes, _arg_2, _arg_3);\n\n      const _local_10 = Nitro.instance.stage;\n\n      for (const _local_11 of _local_9) {\n        const _local_12 = _local_11.plane;\n        const _local_13 = [];\n\n        const _local_14 = Vector3d.sum(_local_12.location, _local_12.leftSide);\n\n        const _local_15 = _local_8.getScreenPoint(_local_12.location);\n\n        const _local_16 = _local_8.getScreenPoint(_local_14);\n\n        const _local_17 = _local_8.getScreenPoint(Vector3d.sum(_local_12.location, _local_12.rightSide));\n\n        const _local_18 = _local_8.getScreenPoint(Vector3d.sum(_local_14, _local_12.rightSide));\n\n        _local_13.push(_local_15, _local_16, _local_17, _local_18);\n\n        let _local_19 = 0;\n        let _local_20 = 0;\n\n        for (const _local_21 of _local_13) {\n          _local_21.x += _local_10.width / 2;\n          _local_21.y += _local_10.height / 2;\n          _local_21.x += _arg_2.screenOffsetX;\n          _local_21.y += _arg_2.screenOffsetY;\n          _local_21.x += -k.x;\n          _local_21.y += -k.y;\n          if (_local_21.x < 0) _local_19--;else if (_local_21.x >= k.width) _local_19++;\n          if (_local_21.y < 0) _local_20--;else if (_local_21.y >= k.height) _local_20++;\n        }\n\n        if (Math.abs(_local_19) === 4 || Math.abs(_local_20) === 4) {//\n        } else {\n          const _local_22 = SpriteDataCollector.sortQuadPoints(_local_15, _local_16, _local_17, _local_18);\n\n          for (const _local_23 of _local_12.getDrawingDatas(_local_8)) {\n            _local_23.cornerPoints = _local_22;\n            _local_23.z = _local_11.z;\n\n            _local_5.push(_local_23);\n          }\n        }\n      }\n\n      _local_5.unshift(this.makeBackgroundPlane(k, _arg_4, _local_5));\n    }\n\n    return _local_5;\n  }\n\n}\nSpriteDataCollector.MANNEQUIN_MAGIC_X_OFFSET = 1;\nSpriteDataCollector.MANNEQUIN_MAGIC_Y_OFFSET = -16;\nSpriteDataCollector.AVATAR_WATER_EFFECT_MAGIC_Y_OFFSET = -52;\nSpriteDataCollector.MAX_EXTERNAL_IMAGE_COUNT = 30;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/utils/SpriteDataCollector.ts"],"names":["Point","Vector3d","Nitro","RoomObjectCategory","PlaneDrawingData","RoomEngine","SpriteDataCollector","maxZ","spriteCount","externalImageCount","addMannequinSprites","k","_arg_2","datas","data","type","name","indexOf","roomObject","getRoomObject","activeRoomId","objectId","FLOOR","spriteList","visualization","getSpriteList","sprite","x","width","MANNEQUIN_MAGIC_X_OFFSET","y","height","MANNEQUIN_MAGIC_Y_OFFSET","z","push","sortSpriteDataObjects","isSpriteInViewPort","_arg_3","sortQuadPoints","_arg_4","points","_local_6","getFurniData","_local_5","getSortableSpriteList","_local_7","getRoomObjects","UNIT","_local_8","id","_local_11","_local_12","_local_13","_local_14","geometry","scale","_local_15","getRoomObjectScreenLocation","_local_16","screenOffsetX","AVATAR_WATER_EFFECT_MAGIC_Y_OFFSET","sort","_local_9","length","getSpriteDataObject","JSON","stringify","getRoomRenderingModifiers","Object","split","screenOffsetY","alpha","toString","flipH","skew","frame","color","parseInt","blendMode","MAX_EXTERNAL_IMAGE_COUNT","posture","makeBackgroundPlane","_local_4","Math","max","_local_10","cornerPoints","sortRoomPlanes","Map","plane","set","uniqueId","sprites","getPlaneSortableSprites","a","b","reverse","objectSprite","get","delete","concat","Array","from","values","getRoomPlanes","ROOM_OBJECT_ID","ROOM","planes","instance","stage","sum","location","leftSide","getScreenPoint","_local_17","rightSide","_local_18","_local_19","_local_20","_local_21","abs","_local_22","_local_23","getDrawingDatas","unshift"],"mappings":"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","sourcesContent":["import { Point, Rectangle } from '@pixi/math';\r\nimport { RoomObjectSpriteData } from '../../../room/data/RoomObjectSpriteData';\r\nimport { IPlaneDrawingData } from '../../../room/object/visualization/IPlaneDrawingData';\r\nimport { IPlaneVisualization } from '../../../room/object/visualization/IPlaneVisualization';\r\nimport { IRoomObjectSpriteVisualization } from '../../../room/object/visualization/IRoomObjectSpriteVisualization';\r\nimport { IRoomPlane } from '../../../room/object/visualization/IRoomPlane';\r\nimport { IRoomRenderingCanvas } from '../../../room/renderer/IRoomRenderingCanvas';\r\nimport { Vector3d } from '../../../room/utils/Vector3d';\r\nimport { Nitro } from '../../Nitro';\r\nimport { RoomObjectCategory } from '../object/RoomObjectCategory';\r\nimport { PlaneDrawingData } from '../object/visualization/room/PlaneDrawingData';\r\nimport { RoomEngine } from '../RoomEngine';\r\n\r\nexport class SpriteDataCollector\r\n{\r\n    private static MANNEQUIN_MAGIC_X_OFFSET: number = 1;\r\n    private static MANNEQUIN_MAGIC_Y_OFFSET: number = -16;\r\n    private static AVATAR_WATER_EFFECT_MAGIC_Y_OFFSET: number = -52;\r\n    private static MAX_EXTERNAL_IMAGE_COUNT: number = 30;\r\n\r\n    private maxZ: number;\r\n    private spriteCount: number = 0;\r\n    private externalImageCount: number = 0;\r\n\r\n    private static addMannequinSprites(k: RoomObjectSpriteData[], _arg_2: RoomEngine): RoomObjectSpriteData[]\r\n    {\r\n        const datas: RoomObjectSpriteData[] = [];\r\n\r\n        for(const data of k)\r\n        {\r\n            if(!data) continue;\r\n\r\n            if((data.type === 'boutique_mannequin1') && (data.name.indexOf('mannequin_') === 0))\r\n            {\r\n                const roomObject = _arg_2.getRoomObject(_arg_2.activeRoomId, data.objectId, RoomObjectCategory.FLOOR);\r\n\r\n                if(roomObject)\r\n                {\r\n                    const spriteList = (roomObject.visualization as IRoomObjectSpriteVisualization).getSpriteList();\r\n\r\n                    if(spriteList)\r\n                    {\r\n                        for(const sprite of spriteList)\r\n                        {\r\n                            sprite.x = (sprite.x + ((data.x + (data.width / 2)) + SpriteDataCollector.MANNEQUIN_MAGIC_X_OFFSET));\r\n                            sprite.y = (sprite.y + ((data.y + data.height) + SpriteDataCollector.MANNEQUIN_MAGIC_Y_OFFSET));\r\n                            sprite.z = (sprite.z + data.z);\r\n                            datas.push(sprite);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                datas.push(data);\r\n            }\r\n        }\r\n\r\n        return datas;\r\n    }\r\n\r\n    private static sortSpriteDataObjects(k: RoomObjectSpriteData, _arg_2: RoomObjectSpriteData): number\r\n    {\r\n        if(k.z < _arg_2.z) return 1;\r\n\r\n        if(k.z > _arg_2.z) return -1;\r\n\r\n        return -1;\r\n    }\r\n\r\n    private static isSpriteInViewPort(k:RoomObjectSpriteData, _arg_2: Rectangle, _arg_3: IRoomRenderingCanvas): boolean\r\n    {\r\n        return true;\r\n        // var _local_4 = new Rectangle((k.x + _arg_3.screenOffsetX), (k.y + _arg_3.screenOffsetY), k.width, k.height);\r\n        // // intersects\r\n        // return _local_4.contains(_arg_2.x, _arg_2.y);\r\n    }\r\n\r\n    private static sortQuadPoints(k: Point, _arg_2: Point, _arg_3: Point, _arg_4: Point): Point[]\r\n    {\r\n        const points: Point[] = [];\r\n\r\n        if(k.x == _arg_2.x)\r\n        {\r\n            points.push(k, _arg_3, _arg_2, _arg_4);\r\n        }\r\n        else\r\n        {\r\n            if(k.x == _arg_3.x)\r\n            {\r\n                points.push(k, _arg_2, _arg_3, _arg_4);\r\n            }\r\n            else\r\n            {\r\n                if((((_arg_2.x < k.x) && (_arg_2.y > k.y)) || ((_arg_2.x > k.x) && (_arg_2.y < k.y))))\r\n                {\r\n                    points.push(k, _arg_3, _arg_2, _arg_4);\r\n                }\r\n                else\r\n                {\r\n                    points.push(k, _arg_2, _arg_3, _arg_4);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(points[0].x < points[1].x)\r\n        {\r\n            let _local_6 = points[0];\r\n\r\n            points[0] = points[1];\r\n            points[1] = _local_6;\r\n\r\n            _local_6 = points[2];\r\n\r\n            points[2] = points[3];\r\n            points[3] = _local_6;\r\n        }\r\n\r\n        if(points[0].y < points[2].y)\r\n        {\r\n            let _local_6 = points[0];\r\n\r\n            points[0] = points[2];\r\n            points[2] = _local_6;\r\n\r\n            _local_6 = points[1];\r\n\r\n            points[1] = points[3];\r\n            points[3] = _local_6;\r\n        }\r\n\r\n        return points;\r\n    }\r\n\r\n\r\n    public getFurniData(k: Rectangle, _arg_2:IRoomRenderingCanvas, _arg_3:RoomEngine, _arg_4: number): string\r\n    {\r\n        const _local_5: Object[] = [];\r\n        let _local_6 = _arg_2.getSortableSpriteList();\r\n\r\n        const _local_7 = _arg_3.getRoomObjects(_arg_3.activeRoomId, RoomObjectCategory.UNIT);\r\n\r\n        for(const _local_8 of _local_7)\r\n        {\r\n            if(_local_8.id !== _arg_4)\r\n            {\r\n                const _local_11 = (_local_8.visualization as IRoomObjectSpriteVisualization).getSpriteList();\r\n\r\n                if(_local_11)\r\n                {\r\n                    let _local_12 = 0;\r\n                    let _local_13 = 0;\r\n\r\n                    for(const _local_14 of _local_6)\r\n                    {\r\n                        if(_local_14.name === ('avatar_' + _local_8.id))\r\n                        {\r\n                            _local_12 = _local_14.z;\r\n                            _local_13 = ((_local_14.y + _local_14.height) - (_arg_2.geometry.scale / 4));\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    const _local_15 = _arg_3.getRoomObjectScreenLocation(_arg_3.activeRoomId, _local_8.id, RoomObjectCategory.UNIT, _arg_2.id);\r\n\r\n                    if(_local_15)\r\n                    {\r\n                        if(_local_13 === 0) _local_13 = _local_15.y;\r\n\r\n                        for(const _local_16 of _local_11)\r\n                        {\r\n                            _local_16.x = (_local_16.x + (_local_15.x - _arg_2.screenOffsetX));\r\n                            _local_16.y = (_local_16.y + _local_13);\r\n                            _local_16.z = (_local_16.z + _local_12);\r\n\r\n                            if(((_local_16.name.indexOf('h_std_fx29_') === 0) || (_local_16.name.indexOf('h_std_fx185_') === 0)))\r\n                            {\r\n                                _local_16.y = (_local_16.y + SpriteDataCollector.AVATAR_WATER_EFFECT_MAGIC_Y_OFFSET);\r\n                            }\r\n\r\n                            _local_6.push(_local_16);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        _local_6 = SpriteDataCollector.addMannequinSprites(_local_6, _arg_3);\r\n        _local_6.sort(SpriteDataCollector.sortSpriteDataObjects);\r\n\r\n        for(const _local_9 of _local_6)\r\n        {\r\n            if((((((!(_local_9.name === null)) && (_local_9.name.length > 0)) && (!(_local_9.name.indexOf('tile_cursor_') === 0))) && (SpriteDataCollector.isSpriteInViewPort(_local_9, k, _arg_2))) && ((_arg_4 < 0) || (!(_local_9.objectId == _arg_4)))))\r\n            {\r\n                _local_5.push(this.getSpriteDataObject(_local_9, k, _arg_2, _arg_3));\r\n\r\n                if(!this.maxZ) this.maxZ = _local_9.z;\r\n\r\n                this.spriteCount++;\r\n            }\r\n        }\r\n\r\n        return JSON.stringify(_local_5);\r\n    }\r\n\r\n    public getRoomRenderingModifiers(k: RoomEngine): string\r\n    {\r\n        return JSON.stringify(new Object());\r\n    }\r\n\r\n    private getSpriteDataObject(k: RoomObjectSpriteData, _arg_2: Rectangle, _arg_3: IRoomRenderingCanvas, _arg_4: RoomEngine): Object\r\n    {\r\n        let _local_7: string = null;\r\n        let _local_9: string[] = [];\r\n\r\n        const _local_5: {\r\n            name?: string,\r\n            x?: number,\r\n            y?: number,\r\n            z?: number,\r\n            alpha?: number,\r\n            flipH?: boolean,\r\n            skew?: number,\r\n            frame?: boolean,\r\n            color?: number,\r\n            blendMode?: string,\r\n            width?: number,\r\n            height?: number,\r\n            posture?: string\r\n        } = {};\r\n\r\n        let _local_6 = k.name;\r\n\r\n        if(k.name.indexOf('@') !== -1)\r\n        {\r\n            _local_9 = k.name.split('@');\r\n            _local_6 = _local_9[0];\r\n            _local_7 = _local_9[1];\r\n        }\r\n\r\n        // if(((_local_7) && (k.type)))\r\n        // {\r\n        //     const _local_10 = _arg_4.roomContentLoader.getCollection(k.type);\r\n\r\n        //     if(_local_10)\r\n        //     {\r\n        //         const _local_11 = _local_10.getPalette(_local_7);\r\n\r\n        //         if (((!(_local_11 == null)) && (!(_local_11.@source == null))))\r\n        //         {\r\n        //             _local_5.paletteSourceName = (_local_11.@source + '');\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // var _local_8: string = _arg_4.configuration.getProperty('image.library.url');\r\n        // _local_6 = _local_6.replace('%image.library.url%', _local_8);\r\n        // if (_local_6.indexOf('%group.badge.url%') != -1)\r\n        // {\r\n        //     _local_12 = _arg_4.configuration.getProperty('group.badge.url');\r\n        //     _local_6 = _local_6.replace('%group.badge.url%', '');\r\n        //     _local_13 = _local_12.replace('%imagerdata%', _local_6);\r\n        //     _local_6 = _local_13;\r\n        // }\r\n\r\n        _local_5.name = _local_6;\r\n        _local_5.x = (k.x - _arg_2.x);\r\n        _local_5.y = (k.y - _arg_2.y);\r\n        _local_5.x = (_local_5.x + _arg_3.screenOffsetX);\r\n        _local_5.y = (_local_5.y + _arg_3.screenOffsetY);\r\n        _local_5.z = k.z;\r\n\r\n        if(k.alpha && (k.alpha.toString() !== '255')) _local_5.alpha = k.alpha;\r\n\r\n        if(k.flipH) _local_5.flipH = k.flipH;\r\n\r\n        if(k.skew) _local_5.skew = k.skew;\r\n\r\n        if(k.frame) _local_5.frame = k.frame;\r\n\r\n        if(k.color && (k.color.length > 0)) _local_5.color = parseInt(k.color);\r\n\r\n        if(k.blendMode && (k.blendMode !== 'normal')) _local_5.blendMode = k.blendMode;\r\n\r\n        if(_local_6.indexOf('http') === 0)\r\n        {\r\n            _local_5.width = k.width;\r\n            _local_5.height = k.height;\r\n\r\n            this.externalImageCount++;\r\n\r\n            if(this.externalImageCount > SpriteDataCollector.MAX_EXTERNAL_IMAGE_COUNT) _local_5.name = 'box';\r\n        }\r\n\r\n        if(k.posture) _local_5.posture = k.posture;\r\n\r\n        return _local_5;\r\n    }\r\n\r\n    private makeBackgroundPlane(k: Rectangle, _arg_2: number, _arg_3: IPlaneDrawingData[]): PlaneDrawingData\r\n    {\r\n        const _local_4 = new Point(0, 0);\r\n        const _local_5 = new Point(k.width, 0);\r\n        const _local_6 = new Point(0, k.height);\r\n        const _local_7 = new Point(k.width, k.height);\r\n        const _local_8 = SpriteDataCollector.sortQuadPoints(_local_4, _local_5, _local_6, _local_7);\r\n\r\n        let _local_9 = 0;\r\n\r\n        if(_arg_3.length > 0)\r\n        {\r\n            _local_9 = _arg_3[0].z;\r\n\r\n            if(this.maxZ) _local_9 = Math.max(this.maxZ, _local_9);\r\n        }\r\n        else\r\n        {\r\n            _local_9 = ((this.maxZ) ? this.maxZ : 0);\r\n        }\r\n\r\n        _local_9 = (_local_9 + ((this.spriteCount * 1.776104) + (_arg_3.length * 2.31743)));\r\n\r\n        const _local_10 = new PlaneDrawingData(null, _arg_2);\r\n\r\n        _local_10.cornerPoints = _local_8;\r\n        _local_10.z = _local_9;\r\n\r\n        return _local_10;\r\n    }\r\n\r\n    private sortRoomPlanes(k: IRoomPlane[], _arg_2: IRoomRenderingCanvas, _arg_3: RoomEngine): { plane: IRoomPlane, z: number }[]\r\n    {\r\n        const _local_4: Map<number, { plane: IRoomPlane, z: number }> = new Map();\r\n\r\n        let _local_5 = 1;\r\n\r\n        if(this.maxZ)\r\n        {\r\n            _local_5 = (_local_5 + this.maxZ);\r\n        }\r\n\r\n        for(const _local_6 of k)\r\n        {\r\n            const _local_10 = {\r\n                plane: _local_6,\r\n                z: _local_5\r\n            };\r\n\r\n            _local_4.set(_local_6.uniqueId, _local_10);\r\n        }\r\n\r\n        const sprites = _arg_2.getPlaneSortableSprites();\r\n\r\n        sprites.sort((a, b) =>\r\n        {\r\n            return (b.z - a.z);\r\n        });\r\n\r\n        sprites.reverse();\r\n\r\n        let _local_8: { plane: IRoomPlane, z: number }[] = [];\r\n\r\n        for(const sprite of sprites)\r\n        {\r\n            const objectSprite = sprite.sprite;\r\n\r\n            if(objectSprite)\r\n            {\r\n                const _local_10 = _local_4.get(objectSprite.id);\r\n\r\n                if(_local_10)\r\n                {\r\n                    _local_4.delete(objectSprite.id);\r\n\r\n                    _local_10.z = sprite.z;\r\n\r\n                    _local_8.push(_local_10);\r\n                }\r\n            }\r\n        }\r\n\r\n        _local_8 = _local_8.concat(Array.from(_local_4.values()));\r\n\r\n        return _local_8;\r\n    }\r\n\r\n    public getRoomPlanes(k: Rectangle, _arg_2: IRoomRenderingCanvas, _arg_3: RoomEngine, _arg_4: number): PlaneDrawingData[]\r\n    {\r\n        const _local_5: PlaneDrawingData[] = [];\r\n\r\n        const roomObject = _arg_3.getRoomObject(_arg_3.activeRoomId, RoomEngine.ROOM_OBJECT_ID, RoomObjectCategory.ROOM);\r\n        const visualization = (roomObject.visualization as unknown as IPlaneVisualization);\r\n\r\n        if(visualization)\r\n        {\r\n            const _local_8 = _arg_2.geometry;\r\n            const _local_9 = this.sortRoomPlanes(visualization.planes, _arg_2, _arg_3);\r\n            const _local_10 = Nitro.instance.stage;\r\n\r\n            for(const _local_11 of _local_9)\r\n            {\r\n                const _local_12 = _local_11.plane;\r\n                const _local_13: Point[] = [];\r\n\r\n                const _local_14 = Vector3d.sum(_local_12.location, _local_12.leftSide);\r\n                const _local_15 = _local_8.getScreenPoint(_local_12.location);\r\n                const _local_16 = _local_8.getScreenPoint(_local_14);\r\n                const _local_17 = _local_8.getScreenPoint(Vector3d.sum(_local_12.location, _local_12.rightSide));\r\n                const _local_18 = _local_8.getScreenPoint(Vector3d.sum(_local_14, _local_12.rightSide));\r\n\r\n                _local_13.push(_local_15, _local_16, _local_17, _local_18);\r\n\r\n                let _local_19 = 0;\r\n                let _local_20 = 0;\r\n\r\n                for(const _local_21 of _local_13)\r\n                {\r\n                    _local_21.x += (_local_10.width / 2);\r\n                    _local_21.y += (_local_10.height / 2);\r\n\r\n                    _local_21.x += _arg_2.screenOffsetX;\r\n                    _local_21.y += _arg_2.screenOffsetY;\r\n\r\n                    _local_21.x += -(k.x);\r\n                    _local_21.y += -(k.y);\r\n\r\n                    if(_local_21.x < 0) _local_19--;\r\n\r\n                    else if(_local_21.x >= k.width) _local_19++;\r\n\r\n                    if(_local_21.y < 0) _local_20--;\r\n\r\n                    else if(_local_21.y >= k.height) _local_20++;\r\n                }\r\n\r\n                if(((Math.abs(_local_19) === 4) || (Math.abs(_local_20) === 4)))\r\n                {\r\n                    //\r\n                }\r\n                else\r\n                {\r\n                    const _local_22 = SpriteDataCollector.sortQuadPoints(_local_15, _local_16, _local_17, _local_18);\r\n\r\n                    for(const _local_23 of _local_12.getDrawingDatas(_local_8))\r\n                    {\r\n                        _local_23.cornerPoints = _local_22;\r\n                        _local_23.z = _local_11.z;\r\n\r\n                        _local_5.push(_local_23);\r\n                    }\r\n                }\r\n            }\r\n\r\n            _local_5.unshift(this.makeBackgroundPlane(k, _arg_4, _local_5));\r\n        }\r\n\r\n        return _local_5;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}