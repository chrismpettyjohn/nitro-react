{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { IRoomInstance } from '../../room/IRoomInstance';\r\nimport { IRoomObjectController } from '../../room/object/IRoomObjectController';\r\nimport { IVector3D } from '../../room/utils/IVector3D';\r\nimport { IRoomSessionManager } from '../session/IRoomSessionManager';\r\nimport { ISessionDataManager } from '../session/ISessionDataManager';\r\nimport { IObjectData } from './object/data/IObjectData';\r\nimport { RoomMapData } from './object/RoomMapData';\r\nimport { FurnitureStackingHeightMap } from './utils/FurnitureStackingHeightMap';\r\nimport { LegacyWallGeometry } from './utils/LegacyWallGeometry';\r\n\r\nexport interface IRoomCreator\r\n{\r\n    destroyRoom(id: number): void;\r\n    getRoomInstance(roomId: number): IRoomInstance;\r\n    updateRoomInstancePlaneVisibility(roomId: number, wallVisible: boolean, floorVisible?: boolean): boolean;\r\n    updateRoomInstancePlaneThickness(roomId: number, wallThickness: number, floorThickness: number): boolean;\r\n    updateRoomInstancePlaneType(roomId: number, floorType?: string, wallType?: string, landscapeType?: string, _arg_5?: boolean): boolean;\r\n    removeRoomInstance(roomId: number): void;\r\n    createRoomInstance(roomId: number, roomMap: RoomMapData): void;\r\n    setRoomSessionOwnUser(roomId: number, objectId: number): void;\r\n    setRoomInstanceModelName(roomId: number, name: string): void;\r\n    getFurnitureStackingHeightMap(roomId: number): FurnitureStackingHeightMap;\r\n    setFurnitureStackingHeightMap(roomId: number, heightMap: FurnitureStackingHeightMap): void;\r\n    getLegacyWallGeometry(roomId: number): LegacyWallGeometry;\r\n    getRoomObject(roomId: number, objectId: number, category: number): IRoomObjectController;\r\n    getRoomObjectByIndex(roomId: number, index: number, category: number): IRoomObjectController;\r\n    getRoomObjectCursor(roomId: number): IRoomObjectController;\r\n    getRoomObjectUser(roomId: number, objectId: number): IRoomObjectController;\r\n    removeRoomObjectUser(roomId: number, objectId: number): void;\r\n    getRoomObjectFloor(roomId: number, objectId: number): IRoomObjectController;\r\n    addFurnitureFloor(roomId: number, id: number, typeId: number, location: IVector3D, direction: IVector3D, state: number, objectData: IObjectData, extra?: number, expires?: number, usagePolicy?: number, ownerId?: number, ownerName?: string, synchronized?: boolean, realRoomObject?: boolean, sizeZ?: number): boolean;\r\n    addFurnitureFloorByTypeName(roomId: number, id: number, typeName: string, location: IVector3D, direction: IVector3D, state: number, objectData: IObjectData, extra?: number, expires?: number, usagePolicy?: number, ownerId?: number, ownerName?: string, synchronized?: boolean, realRoomObject?: boolean, sizeZ?: number): boolean;\r\n    addFurnitureWall(roomId: number, id: number, typeId: number, location: IVector3D, direction: IVector3D, state: number, extra: string, expires?: number, usagePolicy?: number, ownerId?: number, ownerName?: string, realRoomObject?: boolean): boolean;\r\n    removeRoomObjectFloor(roomId: number, objectId: number, userId?: number, _arg_4?: boolean): void;\r\n    removeRoomObjectWall(roomId: number, objectId: number, userId?: number): void;\r\n    updateRoomObjectFloor(roomId: number, objectId: number, location: IVector3D, direction: IVector3D, state: number, data: IObjectData, extra?: number): boolean;\r\n    updateRoomObjectWall(roomId: number, objectId: number, location: IVector3D, direction: IVector3D, state: number, extra?: string): boolean;\r\n    updateRoomObjectWallItemData(roomId: number, objectId: number, data: string): boolean;\r\n    updateRoomObjectFloorHeight(roomId: number, objectId: number, height: number): boolean;\r\n    updateRoomObjectFloorExpiration(roomId: number, objectId: number, expires: number): boolean;\r\n    updateRoomObjectWallExpiration(roomId: number, objectId: number, expires: number): boolean;\r\n    rollRoomObjectFloor(roomId: number, objectId: number, location: IVector3D, targetLocation: IVector3D): void;\r\n    addRoomObjectUser(roomId: number, objectId: number, location: IVector3D, direction: IVector3D, headDirection: number, type: number, figure: string): boolean;\r\n    updateRoomObjectUserLocation(roomId: number, objectId: number, location: IVector3D, targetLocation: IVector3D, canStandUp?: boolean, baseY?: number, direction?: IVector3D, headDirection?: number): boolean;\r\n    updateRoomObjectUserAction(roomId: number, objectId: number, action: string, value: number, parameter?: string): boolean;\r\n    updateRoomObjectUserFigure(roomId: number, objectId: number, figure: string, gender?: string, subType?: string, isRiding?: boolean): boolean;\r\n    updateRoomObjectUserFlatControl(roomId: number, objectId: number, level: string): boolean;\r\n    updateRoomObjectUserEffect(roomId: number, objectId: number, effectId: number, delay?: number): boolean;\r\n    updateRoomObjectUserGesture(roomId: number, objectId: number, gestureId: number): boolean;\r\n    updateRoomObjectUserPetGesture(roomId: number, objectId: number, gesture: string): boolean;\r\n    updateRoomObjectUserPosture(roomId: number, objectId: number, type: string, parameter?: string): boolean;\r\n    updateRoomObjectUserOwn(roomId: number, objectId: number): void;\r\n    getPetTypeId(figure: string): number;\r\n    refreshTileObjectMap(k: number, _arg_2: string): void;\r\n    setRoomEngineGameMode(roomId: number, isPlaying: boolean): void;\r\n    sessionDataManager: ISessionDataManager;\r\n    roomSessionManager: IRoomSessionManager;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}