{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/WiredBaseView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { GetSessionDataManager, LocalizeText, WiredFurniType, WiredSelectionVisualizer } from '../../../api';\nimport { Column, Flex, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../../common';\nimport { useWiredContext } from '../WiredContext';\nimport { WiredFurniSelectorView } from './WiredFurniSelectorView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WiredBaseView = props => {\n  _s();\n\n  const {\n    wiredType = '',\n    requiresFurni = WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    save = null,\n    validate = null,\n    children = null,\n    hasSpecialInput = false\n  } = props;\n  const [wiredName, setWiredName] = useState(null);\n  const [wiredDescription, setWiredDescription] = useState(null);\n  const [needsSave, setNeedsSave] = useState(false);\n  const {\n    trigger = null,\n    setTrigger = null,\n    setIntParams = null,\n    setStringParam = null,\n    setFurniIds = null,\n    saveWired = null\n  } = useWiredContext();\n\n  const close = () => setTrigger(null);\n\n  const onSave = () => {\n    if (validate && !validate()) return;\n    if (save) save();\n    setNeedsSave(true);\n  };\n\n  useEffect(() => {\n    if (!needsSave) return;\n    saveWired();\n    setNeedsSave(false);\n  }, [needsSave, saveWired]);\n  useEffect(() => {\n    if (!trigger) return;\n    const spriteId = trigger.spriteId || -1;\n    const furniData = GetSessionDataManager().getFloorItemData(spriteId);\n\n    if (!furniData) {\n      setWiredName('NAME: ' + spriteId);\n      setWiredDescription('NAME: ' + spriteId);\n    } else {\n      setWiredName(furniData.name);\n      setWiredDescription(furniData.description);\n    }\n\n    if (hasSpecialInput) {\n      setIntParams(trigger.intData);\n      setStringParam(trigger.stringData);\n    }\n\n    if (requiresFurni > WiredFurniType.STUFF_SELECTION_OPTION_NONE) {\n      setFurniIds(prevValue => {\n        if (prevValue && prevValue.length) WiredSelectionVisualizer.clearSelectionShaderFromFurni(prevValue);\n\n        if (trigger.selectedItems && trigger.selectedItems.length) {\n          WiredSelectionVisualizer.applySelectionShaderToFurni(trigger.selectedItems);\n          return trigger.selectedItems;\n        }\n\n        return [];\n      });\n    }\n\n    return () => {\n      setNeedsSave(false);\n      setIntParams([]);\n      setStringParam(null);\n      setFurniIds(prevValue => {\n        if (prevValue && prevValue.length) WiredSelectionVisualizer.clearSelectionShaderFromFurni(prevValue);\n        return [];\n      });\n    };\n  }, [trigger, hasSpecialInput, requiresFurni, setIntParams, setStringParam, setFurniIds]);\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    uniqueKey: \"nitro-wired\",\n    className: \"nitro-wired\",\n    theme: \"wired\",\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: LocalizeText('wiredfurni.title'),\n      onCloseClick: close\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `icon icon-wired-${wiredType}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            gfbold: true,\n            children: wiredName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: wiredDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), !!children && /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"m-0 bg-dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }, this), children, requiresFurni > WiredFurniType.STUFF_SELECTION_OPTION_NONE && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"m-0 bg-dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(WiredFurniSelectorView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary notification-buttons w-100\",\n          onClick: onSave,\n          children: LocalizeText('wiredfurni.ready')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary notification-buttons w-100\",\n          onClick: close,\n          children: LocalizeText('cancel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredBaseView, \"qCb8Bz6p51mMibXVUCGpxlTdiAQ=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredBaseView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredBaseView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/WiredBaseView.tsx"],"names":["useEffect","useState","GetSessionDataManager","LocalizeText","WiredFurniType","WiredSelectionVisualizer","Column","Flex","NitroCardContentView","NitroCardHeaderView","NitroCardView","Text","useWiredContext","WiredFurniSelectorView","WiredBaseView","props","wiredType","requiresFurni","STUFF_SELECTION_OPTION_NONE","save","validate","children","hasSpecialInput","wiredName","setWiredName","wiredDescription","setWiredDescription","needsSave","setNeedsSave","trigger","setTrigger","setIntParams","setStringParam","setFurniIds","saveWired","close","onSave","spriteId","furniData","getFloorItemData","name","description","intData","stringData","prevValue","length","clearSelectionShaderFromFurni","selectedItems","applySelectionShaderToFurni"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { GetSessionDataManager, LocalizeText, WiredFurniType, WiredSelectionVisualizer } from '../../../api';\nimport { Button, Column, Flex, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../../common';\nimport { useWiredContext } from '../WiredContext';\nimport { WiredFurniSelectorView } from './WiredFurniSelectorView';\n\nexport interface WiredBaseViewProps\n{\n    wiredType: string;\n    requiresFurni: number;\n    hasSpecialInput: boolean;\n    save: () => void;\n    validate?: () => boolean;\n}\n\nexport const WiredBaseView: FC<WiredBaseViewProps> = props =>\n{\n    const { wiredType = '', requiresFurni = WiredFurniType.STUFF_SELECTION_OPTION_NONE, save = null, validate = null, children = null, hasSpecialInput = false } = props;\n    const [ wiredName, setWiredName ] = useState<string>(null);\n    const [ wiredDescription, setWiredDescription ] = useState<string>(null);\n    const [ needsSave, setNeedsSave ] = useState<boolean>(false);\n    const { trigger = null, setTrigger = null, setIntParams = null, setStringParam = null, setFurniIds = null, saveWired = null } = useWiredContext();\n\n    const close = () => setTrigger(null);\n    \n    const onSave = () =>\n    {\n        if(validate && !validate()) return;\n\n        if(save) save();\n\n        setNeedsSave(true);\n    }\n\n    useEffect(() =>\n    {\n        if(!needsSave) return;\n\n        saveWired();\n\n        setNeedsSave(false);\n    }, [ needsSave, saveWired ]);\n\n    useEffect(() =>\n    {\n        if(!trigger) return;\n\n        const spriteId = (trigger.spriteId || -1);\n        const furniData = GetSessionDataManager().getFloorItemData(spriteId);\n\n        if(!furniData)\n        {\n            setWiredName(('NAME: ' + spriteId));\n            setWiredDescription(('NAME: ' + spriteId));\n        }\n        else\n        {\n            setWiredName(furniData.name);\n            setWiredDescription(furniData.description);\n        }\n\n        if(hasSpecialInput)\n        {\n            setIntParams(trigger.intData);\n            setStringParam(trigger.stringData);\n        }\n        \n        if(requiresFurni > WiredFurniType.STUFF_SELECTION_OPTION_NONE)\n        {\n            setFurniIds(prevValue =>\n            {\n                if(prevValue && prevValue.length) WiredSelectionVisualizer.clearSelectionShaderFromFurni(prevValue);\n\n                if(trigger.selectedItems && trigger.selectedItems.length)\n                {\n                    WiredSelectionVisualizer.applySelectionShaderToFurni(trigger.selectedItems);\n\n                    return trigger.selectedItems;\n                }\n\n                return [];\n            });\n        }\n\n        return () =>\n        {\n            setNeedsSave(false);\n            setIntParams([]);\n            setStringParam(null);\n            setFurniIds(prevValue =>\n            {\n                if(prevValue && prevValue.length) WiredSelectionVisualizer.clearSelectionShaderFromFurni(prevValue);\n\n                return [];\n            });\n        }\n    }, [ trigger, hasSpecialInput, requiresFurni, setIntParams, setStringParam, setFurniIds ]);\n\n    return (\n        <NitroCardView uniqueKey=\"nitro-wired\" className=\"nitro-wired\" theme=\"wired\">\n            <NitroCardHeaderView headerText={ LocalizeText('wiredfurni.title') } onCloseClick={ close } />\n            <NitroCardContentView>\n                <Column gap={ 1 }>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <i className={ `icon icon-wired-${ wiredType }` } />\n                        <Text gfbold>{ wiredName }</Text>\n                    </Flex>\n                    <Text>{ wiredDescription }</Text>\n                </Column>\n                { !!children && <hr className=\"m-0 bg-dark\" /> }\n                { children }\n                { (requiresFurni > WiredFurniType.STUFF_SELECTION_OPTION_NONE) &&\n                    <>\n                        <hr className=\"m-0 bg-dark\" />\n                        <WiredFurniSelectorView />\n                    </> }\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <button type=\"button\" className=\"btn btn-primary notification-buttons w-100\" onClick={ onSave }>{ LocalizeText('wiredfurni.ready') }</button>\n                    <button type=\"button\" className=\"btn btn-primary notification-buttons w-100\" onClick={ close }>{ LocalizeText('cancel') }</button>\n                </Flex>\n            </NitroCardContentView>\n        </NitroCardView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}