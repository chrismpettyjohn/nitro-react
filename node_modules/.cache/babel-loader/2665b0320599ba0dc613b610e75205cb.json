{"ast":null,"code":"export class RoomObjectUserType {\n  static getTypeNumber(type) {\n    return RoomObjectUserType.AVATAR_TYPES[type];\n  }\n\n  static getTypeString(type) {\n    for (const key in RoomObjectUserType.AVATAR_TYPES) {\n      if (!key) continue;\n      if (RoomObjectUserType.AVATAR_TYPES[key] !== type) continue;\n      return key;\n    }\n\n    return null;\n  }\n\n  static getRealType(type) {\n    switch (type) {\n      case RoomObjectUserType.BOT:\n      case RoomObjectUserType.RENTABLE_BOT:\n        return RoomObjectUserType.USER;\n\n      default:\n        return type;\n    }\n  }\n\n}\nRoomObjectUserType.USER = 'user';\nRoomObjectUserType.PET = 'pet';\nRoomObjectUserType.BOT = 'bot';\nRoomObjectUserType.RENTABLE_BOT = 'rentable_bot';\nRoomObjectUserType.MONSTER_PLANT = 'monsterplant';\nRoomObjectUserType.AVATAR_TYPES = {\n  'user': 1,\n  'pet': 2,\n  'bot': 3,\n  'rentable_bot': 4\n};","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/RoomObjectUserType.ts"],"names":["RoomObjectUserType","getTypeNumber","type","AVATAR_TYPES","getTypeString","key","getRealType","BOT","RENTABLE_BOT","USER","PET","MONSTER_PLANT"],"mappings":"AAAA,OAAO,MAAMA,kBAAN,CACP;AAQ+B,SAAbC,aAAa,CAACC,IAAD,EAC3B;AACI,WAAOF,kBAAkB,CAACG,YAAnB,CAAgCD,IAAhC,CAAP;AACH;;AAE0B,SAAbE,aAAa,CAACF,IAAD,EAC3B;AACI,SAAI,MAAMG,GAAV,IAAiBL,kBAAkB,CAACG,YAApC,EACA;AACI,UAAG,CAACE,GAAJ,EAAS;AAET,UAAGL,kBAAkB,CAACG,YAAnB,CAAgCE,GAAhC,MAAyCH,IAA5C,EAAkD;AAElD,aAAOG,GAAP;AACH;;AAED,WAAO,IAAP;AACH;;AAEwB,SAAXC,WAAW,CAACJ,IAAD,EACzB;AACI,YAAOA,IAAP;AAEI,WAAKF,kBAAkB,CAACO,GAAxB;AACA,WAAKP,kBAAkB,CAACQ,YAAxB;AACI,eAAOR,kBAAkB,CAACS,IAA1B;;AACJ;AACI,eAAOP,IAAP;AANR;AAQH;;AArCL;AADaF,kB,CAEKS,I,GAAe,M;AAFpBT,kB,CAGKU,G,GAAc,K;AAHnBV,kB,CAIKO,G,GAAc,K;AAJnBP,kB,CAKKQ,Y,GAAuB,c;AAL5BR,kB,CAMKW,a,GAAwB,c;AAN7BX,kB,CAOKG,Y,GAA0C;AAAE,UAAQ,CAAV;AAAa,SAAO,CAApB;AAAuB,SAAO,CAA9B;AAAiC,kBAAgB;AAAjD,C","sourcesContent":["export class RoomObjectUserType\r\n{\r\n    public static USER: string = 'user';\r\n    public static PET: string = 'pet';\r\n    public static BOT: string = 'bot';\r\n    public static RENTABLE_BOT: string = 'rentable_bot';\r\n    public static MONSTER_PLANT: string = 'monsterplant';\r\n    public static AVATAR_TYPES: { [key: string]: number } = { 'user': 1, 'pet': 2, 'bot': 3, 'rentable_bot': 4 };\r\n\r\n    public static getTypeNumber(type: string): number\r\n    {\r\n        return RoomObjectUserType.AVATAR_TYPES[type];\r\n    }\r\n\r\n    public static getTypeString(type: number): string\r\n    {\r\n        for(const key in RoomObjectUserType.AVATAR_TYPES)\r\n        {\r\n            if(!key) continue;\r\n\r\n            if(RoomObjectUserType.AVATAR_TYPES[key] !== type) continue;\r\n\r\n            return key;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static getRealType(type: string): string\r\n    {\r\n        switch(type)\r\n        {\r\n            case RoomObjectUserType.BOT:\r\n            case RoomObjectUserType.RENTABLE_BOT:\r\n                return RoomObjectUserType.USER;\r\n            default:\r\n                return type;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}