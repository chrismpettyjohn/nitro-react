{"ast":null,"code":"import { RoomDataParser } from '../../room/data/RoomDataParser';\nexport class NavigatorSearchResultList {\n  constructor(wrapper) {\n    this._code = void 0;\n    this._data = void 0;\n    this._action = void 0;\n    this._closed = void 0;\n    this._mode = void 0;\n    this._rooms = void 0;\n    if (!wrapper) throw new Error('invalid_wrapper');\n    this.flush();\n    this.parse(wrapper);\n  }\n\n  flush() {\n    this._code = null;\n    this._data = null;\n    this._action = -1;\n    this._closed = false;\n    this._mode = -1;\n    this._rooms = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._code = wrapper.readString();\n    this._data = wrapper.readString();\n    this._action = wrapper.readInt();\n    this._closed = wrapper.readBoolean();\n    this._mode = wrapper.readInt();\n    let totalRooms = wrapper.readInt();\n\n    while (totalRooms > 0) {\n      this._rooms.push(new RoomDataParser(wrapper));\n\n      totalRooms--;\n    }\n\n    return true;\n  }\n\n  get code() {\n    return this._code;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get action() {\n    return this._action;\n  }\n\n  get closed() {\n    return this._closed;\n  }\n\n  get mode() {\n    return this._mode;\n  }\n\n  get rooms() {\n    return this._rooms;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/navigator/utils/NavigatorSearchResultList.ts"],"names":["RoomDataParser","NavigatorSearchResultList","constructor","wrapper","_code","_data","_action","_closed","_mode","_rooms","Error","flush","parse","readString","readInt","readBoolean","totalRooms","push","code","data","action","closed","mode","rooms"],"mappings":"AACA,SAASA,cAAT,QAA+B,gCAA/B;AAEA,OAAO,MAAMC,yBAAN,CACP;AAQIC,EAAAA,WAAW,CAACC,OAAD,EACX;AAAA,SARQC,KAQR;AAAA,SAPQC,KAOR;AAAA,SANQC,OAMR;AAAA,SALQC,OAKR;AAAA,SAJQC,KAIR;AAAA,SAHQC,MAGR;AACI,QAAG,CAACN,OAAJ,EAAa,MAAM,IAAIO,KAAJ,CAAU,iBAAV,CAAN;AAEb,SAAKC,KAAL;AACA,SAAKC,KAAL,CAAWT,OAAX;AACH;;AAEMQ,EAAAA,KAAK,GACZ;AACI,SAAKP,KAAL,GAAa,IAAb;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAe,CAAC,CAAhB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,KAAL,GAAa,CAAC,CAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AAEA,WAAO,IAAP;AACH;;AAEMG,EAAAA,KAAK,CAACT,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKC,KAAL,GAAaD,OAAO,CAACU,UAAR,EAAb;AACA,SAAKR,KAAL,GAAaF,OAAO,CAACU,UAAR,EAAb;AACA,SAAKP,OAAL,GAAeH,OAAO,CAACW,OAAR,EAAf;AACA,SAAKP,OAAL,GAAeJ,OAAO,CAACY,WAAR,EAAf;AACA,SAAKP,KAAL,GAAaL,OAAO,CAACW,OAAR,EAAb;AAEA,QAAIE,UAAU,GAAGb,OAAO,CAACW,OAAR,EAAjB;;AAEA,WAAME,UAAU,GAAG,CAAnB,EACA;AACI,WAAKP,MAAL,CAAYQ,IAAZ,CAAiB,IAAIjB,cAAJ,CAAmBG,OAAnB,CAAjB;;AAEAa,MAAAA,UAAU;AACb;;AAED,WAAO,IAAP;AACH;;AAEc,MAAJE,IAAI,GACf;AACI,WAAO,KAAKd,KAAZ;AACH;;AAEc,MAAJe,IAAI,GACf;AACI,WAAO,KAAKd,KAAZ;AACH;;AAEgB,MAANe,MAAM,GACjB;AACI,WAAO,KAAKd,OAAZ;AACH;;AAEgB,MAANe,MAAM,GACjB;AACI,WAAO,KAAKd,OAAZ;AACH;;AAEc,MAAJe,IAAI,GACf;AACI,WAAO,KAAKd,KAAZ;AACH;;AAEe,MAALe,KAAK,GAChB;AACI,WAAO,KAAKd,MAAZ;AACH;;AA9EL","sourcesContent":["import { IMessageDataWrapper } from '../../../../../../core';\r\nimport { RoomDataParser } from '../../room/data/RoomDataParser';\r\n\r\nexport class NavigatorSearchResultList\r\n{\r\n    private _code: string;\r\n    private _data: string;\r\n    private _action: number;\r\n    private _closed: boolean;\r\n    private _mode: number;\r\n    private _rooms: RoomDataParser[];\r\n\r\n    constructor(wrapper: IMessageDataWrapper)\r\n    {\r\n        if(!wrapper) throw new Error('invalid_wrapper');\r\n\r\n        this.flush();\r\n        this.parse(wrapper);\r\n    }\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._code = null;\r\n        this._data = null;\r\n        this._action = -1;\r\n        this._closed = false;\r\n        this._mode = -1;\r\n        this._rooms = [];\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._code = wrapper.readString();\r\n        this._data = wrapper.readString();\r\n        this._action = wrapper.readInt();\r\n        this._closed = wrapper.readBoolean();\r\n        this._mode = wrapper.readInt();\r\n\r\n        let totalRooms = wrapper.readInt();\r\n\r\n        while(totalRooms > 0)\r\n        {\r\n            this._rooms.push(new RoomDataParser(wrapper));\r\n\r\n            totalRooms--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get code(): string\r\n    {\r\n        return this._code;\r\n    }\r\n\r\n    public get data(): string\r\n    {\r\n        return this._data;\r\n    }\r\n\r\n    public get action(): number\r\n    {\r\n        return this._action;\r\n    }\r\n\r\n    public get closed(): boolean\r\n    {\r\n        return this._closed;\r\n    }\r\n\r\n    public get mode(): number\r\n    {\r\n        return this._mode;\r\n    }\r\n\r\n    public get rooms(): RoomDataParser[]\r\n    {\r\n        return this._rooms;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}