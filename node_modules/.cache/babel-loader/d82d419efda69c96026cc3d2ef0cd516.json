{"ast":null,"code":"import { Nitro } from '../../../../../../Nitro';\nimport { FurnitureDataParser } from '../../../room/furniture/FurnitureDataParser';\nexport class FurnitureListItemParser {\n  constructor(wrapper) {\n    this._rentable = void 0;\n    this._itemId = void 0;\n    this._furniType = void 0;\n    this._ref = void 0;\n    this._spriteId = void 0;\n    this._category = void 0;\n    this._stuffData = void 0;\n    this._isGroupable = void 0;\n    this._isRecyclable = void 0;\n    this._tradable = void 0;\n    this._sellable = void 0;\n    this._secondsToExpiration = void 0;\n    this._extra = void 0;\n    this._flatId = void 0;\n    this._isWallItem = void 0;\n    this._hasRentPeriodStarted = void 0;\n    this._expirationTimeStamp = void 0;\n    this._slotId = void 0;\n    this._songId = void 0;\n    if (!wrapper) throw new Error('invalid_wrapper');\n    this.flush();\n    this.parse(wrapper);\n  }\n\n  flush() {\n    this._rentable = false;\n    this._itemId = 0;\n    this._furniType = null;\n    this._ref = 0;\n    this._spriteId = 0;\n    this._category = 0;\n    this._stuffData = null;\n    this._isGroupable = false;\n    this._isRecyclable = false;\n    this._tradable = false;\n    this._sellable = false;\n    this._secondsToExpiration = 0;\n    this._extra = 0;\n    this._flatId = 0;\n    this._isWallItem = false;\n    this._hasRentPeriodStarted = false;\n    this._expirationTimeStamp = 0;\n    this._slotId = '';\n    this._songId = -1;\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._itemId = wrapper.readInt();\n    this._furniType = wrapper.readString();\n    this._ref = wrapper.readInt();\n    this._spriteId = wrapper.readInt();\n    this._category = wrapper.readInt();\n    this._stuffData = FurnitureDataParser.parseObjectData(wrapper);\n    this._isRecyclable = wrapper.readBoolean();\n    this._tradable = wrapper.readBoolean();\n    this._isGroupable = wrapper.readBoolean();\n    this._sellable = wrapper.readBoolean();\n    this._secondsToExpiration = wrapper.readInt();\n    this._expirationTimeStamp = Nitro.instance.time;\n\n    if (this.secondsToExpiration > -1) {\n      this._rentable = true;\n    } else {\n      this._rentable = false;\n      this._secondsToExpiration = -1;\n    }\n\n    this._hasRentPeriodStarted = wrapper.readBoolean();\n    this._flatId = wrapper.readInt();\n    this._isWallItem = this._furniType === FurnitureListItemParser.WALL_ITEM;\n\n    if (this._furniType === FurnitureListItemParser.FLOOR_ITEM) {\n      this._slotId = wrapper.readString();\n      this._extra = wrapper.readInt();\n    }\n\n    return true;\n  }\n\n  get itemId() {\n    return this._itemId;\n  }\n\n  get furniType() {\n    return this._furniType;\n  }\n\n  get ref() {\n    return this._ref;\n  }\n\n  get spriteId() {\n    return this._spriteId;\n  }\n\n  get category() {\n    return this._category;\n  }\n\n  get stuffData() {\n    return this._stuffData;\n  }\n\n  get isGroupable() {\n    return this._isGroupable;\n  }\n\n  get isRecycleable() {\n    return this._isRecyclable;\n  }\n\n  get tradable() {\n    return this._tradable;\n  }\n\n  get sellable() {\n    return this._sellable;\n  }\n\n  get secondsToExpiration() {\n    return this._secondsToExpiration;\n  }\n\n  get flatId() {\n    return this._flatId;\n  }\n\n  get slotId() {\n    return this._slotId;\n  }\n\n  get songId() {\n    return this._songId;\n  }\n\n  get extra() {\n    return this._extra;\n  }\n\n  get rentable() {\n    return this._rentable;\n  }\n\n  get isWallItem() {\n    return this._isWallItem;\n  }\n\n  get hasRentPeriodStarted() {\n    return this._hasRentPeriodStarted;\n  }\n\n  get expirationTimeStamp() {\n    return this._expirationTimeStamp;\n  }\n\n  get creationDay() {\n    return 0;\n  }\n\n  get creationMonth() {\n    return 0;\n  }\n\n  get creationYear() {\n    return 0;\n  }\n\n  get isExternalImageFurni() {\n    return !(this._furniType.indexOf('external_image') === -1);\n  }\n\n}\nFurnitureListItemParser.WALL_ITEM = 'I';\nFurnitureListItemParser.FLOOR_ITEM = 'S';","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/inventory/furniture/utils/FurnitureListItemParser.ts"],"names":["Nitro","FurnitureDataParser","FurnitureListItemParser","constructor","wrapper","_rentable","_itemId","_furniType","_ref","_spriteId","_category","_stuffData","_isGroupable","_isRecyclable","_tradable","_sellable","_secondsToExpiration","_extra","_flatId","_isWallItem","_hasRentPeriodStarted","_expirationTimeStamp","_slotId","_songId","Error","flush","parse","readInt","readString","parseObjectData","readBoolean","instance","time","secondsToExpiration","WALL_ITEM","FLOOR_ITEM","itemId","furniType","ref","spriteId","category","stuffData","isGroupable","isRecycleable","tradable","sellable","flatId","slotId","songId","extra","rentable","isWallItem","hasRentPeriodStarted","expirationTimeStamp","creationDay","creationMonth","creationYear","isExternalImageFurni","indexOf"],"mappings":"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","sourcesContent":["import { IMessageDataWrapper } from '../../../../../../../core';\r\nimport { Nitro } from '../../../../../../Nitro';\r\nimport { IObjectData } from '../../../../../../room/object/data/IObjectData';\r\nimport { IFurnitureItemData } from '../../../../incoming/inventory/furni/IFurnitureItemData';\r\nimport { FurnitureDataParser } from '../../../room/furniture/FurnitureDataParser';\r\n\r\nexport class FurnitureListItemParser implements IFurnitureItemData\r\n{\r\n    private static WALL_ITEM: string = 'I';\r\n    private static FLOOR_ITEM: string = 'S';\r\n\r\n    private _rentable: boolean;\r\n    private _itemId: number;\r\n    private _furniType: string;\r\n    private _ref: number;\r\n    private _spriteId: number;\r\n    private _category: number;\r\n    private _stuffData: IObjectData;\r\n    private _isGroupable: boolean;\r\n    private _isRecyclable: boolean;\r\n    private _tradable: boolean;\r\n    private _sellable: boolean;\r\n    private _secondsToExpiration: number;\r\n    private _extra: number;\r\n    private _flatId: number;\r\n    private _isWallItem: boolean;\r\n    private _hasRentPeriodStarted: boolean;\r\n    private _expirationTimeStamp: number;\r\n    private _slotId: string;\r\n    private _songId: number;\r\n\r\n    constructor(wrapper: IMessageDataWrapper)\r\n    {\r\n        if(!wrapper) throw new Error('invalid_wrapper');\r\n\r\n        this.flush();\r\n        this.parse(wrapper);\r\n    }\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._rentable = false;\r\n        this._itemId = 0;\r\n        this._furniType = null;\r\n        this._ref = 0;\r\n        this._spriteId = 0;\r\n        this._category = 0;\r\n        this._stuffData = null;\r\n        this._isGroupable = false;\r\n        this._isRecyclable = false;\r\n        this._tradable = false;\r\n        this._sellable = false;\r\n        this._secondsToExpiration = 0;\r\n        this._extra = 0;\r\n        this._flatId = 0;\r\n        this._isWallItem = false;\r\n        this._hasRentPeriodStarted = false;\r\n        this._expirationTimeStamp = 0;\r\n        this._slotId = '';\r\n        this._songId = -1;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._itemId = wrapper.readInt();\r\n        this._furniType = wrapper.readString();\r\n        this._ref = wrapper.readInt();\r\n        this._spriteId = wrapper.readInt();\r\n        this._category = wrapper.readInt();\r\n        this._stuffData = FurnitureDataParser.parseObjectData(wrapper);\r\n        this._isRecyclable = wrapper.readBoolean();\r\n        this._tradable = wrapper.readBoolean();\r\n        this._isGroupable = wrapper.readBoolean();\r\n        this._sellable = wrapper.readBoolean();\r\n        this._secondsToExpiration = wrapper.readInt();\r\n        this._expirationTimeStamp = Nitro.instance.time;\r\n\r\n        if(this.secondsToExpiration > -1)\r\n        {\r\n            this._rentable = true;\r\n        }\r\n        else\r\n        {\r\n            this._rentable = false;\r\n            this._secondsToExpiration = -1;\r\n        }\r\n\r\n        this._hasRentPeriodStarted = wrapper.readBoolean();\r\n        this._flatId = wrapper.readInt();\r\n        this._isWallItem = (this._furniType === FurnitureListItemParser.WALL_ITEM);\r\n\r\n        if(this._furniType === FurnitureListItemParser.FLOOR_ITEM)\r\n        {\r\n            this._slotId = wrapper.readString();\r\n            this._extra = wrapper.readInt();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get itemId(): number\r\n    {\r\n        return this._itemId;\r\n    }\r\n\r\n    public get furniType(): string\r\n    {\r\n        return this._furniType;\r\n    }\r\n\r\n    public get ref(): number\r\n    {\r\n        return this._ref;\r\n    }\r\n\r\n    public get spriteId(): number\r\n    {\r\n        return this._spriteId;\r\n    }\r\n\r\n    public get category(): number\r\n    {\r\n        return this._category;\r\n    }\r\n\r\n    public get stuffData(): IObjectData\r\n    {\r\n        return this._stuffData;\r\n    }\r\n\r\n    public get isGroupable(): boolean\r\n    {\r\n        return this._isGroupable;\r\n    }\r\n\r\n    public get isRecycleable(): boolean\r\n    {\r\n        return this._isRecyclable;\r\n    }\r\n\r\n    public get tradable(): boolean\r\n    {\r\n        return this._tradable;\r\n    }\r\n\r\n    public get sellable(): boolean\r\n    {\r\n        return this._sellable;\r\n    }\r\n\r\n    public get secondsToExpiration(): number\r\n    {\r\n        return this._secondsToExpiration;\r\n    }\r\n\r\n    public get flatId(): number\r\n    {\r\n        return this._flatId;\r\n    }\r\n\r\n    public get slotId(): string\r\n    {\r\n        return this._slotId;\r\n    }\r\n\r\n    public get songId(): number\r\n    {\r\n        return this._songId;\r\n    }\r\n\r\n    public get extra(): number\r\n    {\r\n        return this._extra;\r\n    }\r\n\r\n    public get rentable(): boolean\r\n    {\r\n        return this._rentable;\r\n    }\r\n\r\n    public get isWallItem(): boolean\r\n    {\r\n        return this._isWallItem;\r\n    }\r\n\r\n    public get hasRentPeriodStarted(): boolean\r\n    {\r\n        return this._hasRentPeriodStarted;\r\n    }\r\n\r\n    public get expirationTimeStamp(): number\r\n    {\r\n        return this._expirationTimeStamp;\r\n    }\r\n\r\n    public get creationDay(): number\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    public get creationMonth(): number\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    public get creationYear(): number\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    public get isExternalImageFurni(): boolean\r\n    {\r\n        return !(this._furniType.indexOf('external_image') === -1);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}