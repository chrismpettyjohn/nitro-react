{"ast":null,"code":"import{ConfigurationEvent,HabboWebTools,LegacyExternalInterface,Nitro,NitroCommunicationDemoEvent,NitroEvent,NitroLocalizationEvent,NitroVersion,RoomEngineEvent,WebGL}from'@nitrots/nitro-renderer';import{useCallback,useEffect,useState}from'react';import{GetCommunication,GetConfiguration,GetNitroInstance,GetUIVersion}from'./api';import{Base,TransitionAnimation,TransitionAnimationTypes}from'./common';import{LoadingView}from'./components/loading/LoadingView';import{MainView}from'./components/main/MainView';import{DispatchUiEvent,UseConfigurationEvent,UseLocalizationEvent,UseMainEvent,UseRoomEngineEvent}from'./hooks';import IntervalWebWorker from'./workers/IntervalWebWorker';import{WorkerBuilder}from'./workers/WorkerBuilder';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";NitroVersion.UI_VERSION=GetUIVersion();export const App=props=>{const[isReady,setIsReady]=useState(false);const[isError,setIsError]=useState(false);const[message,setMessage]=useState('Getting Ready');const[percent,setPercent]=useState(0);const[imageRendering,setImageRendering]=useState(true);if(!GetNitroInstance()){//@ts-ignore\nif(!NitroConfig)throw new Error('NitroConfig is not defined!');Nitro.bootstrap();const worker=new WorkerBuilder(IntervalWebWorker);Nitro.instance.setWorker(worker);}const handler=useCallback(event=>{switch(event.type){case ConfigurationEvent.LOADED:GetNitroInstance().localization.init();setPercent(prevValue=>prevValue+20);console.log(\"\\n%c                                                          \\n  Nitro V2 - FLASH UI EDIT!                               \\n  This UI-edit is created by robbis                       \\n  Do you want this UI for your hotel?                     \\n  Join our Discord                                        \\n  https://discord.gg/j3bqtZKAF3                           \\n                                                          \\n\",\"color: #FFFFFF; background: #eab9d0; padding:0px 0\");return;case ConfigurationEvent.FAILED:setIsError(true);setMessage('Configuration Failed');return;case Nitro.WEBGL_UNAVAILABLE:setIsError(true);setMessage('WebGL Required');return;case Nitro.WEBGL_CONTEXT_LOST:setIsError(true);setMessage('WebGL Context Lost - Reloading');setTimeout(()=>window.location.reload(),1500);return;case NitroCommunicationDemoEvent.CONNECTION_HANDSHAKING:setPercent(prevValue=>prevValue+20);return;case NitroCommunicationDemoEvent.CONNECTION_HANDSHAKE_FAILED:setIsError(true);setMessage('Handshake Failed');return;case NitroCommunicationDemoEvent.CONNECTION_AUTHENTICATED:setPercent(prevValue=>prevValue+20);GetNitroInstance().init();if(LegacyExternalInterface.available)LegacyExternalInterface.call('legacyTrack','authentication','authok',[]);return;case NitroCommunicationDemoEvent.CONNECTION_ERROR:setIsError(true);setMessage('Connection Error');return;case NitroCommunicationDemoEvent.CONNECTION_CLOSED://if(GetNitroInstance().roomEngine) GetNitroInstance().roomEngine.dispose();\n//setIsError(true);\nsetMessage('Connection Error');HabboWebTools.send(-1,'client.init.handshake.fail');return;case RoomEngineEvent.ENGINE_INITIALIZED:setPercent(prevValue=>prevValue+20);setTimeout(()=>setIsReady(true),300);return;case NitroLocalizationEvent.LOADED:{const assetUrls=GetConfiguration('preload.assets.urls');const urls=[];if(assetUrls&&assetUrls.length)for(const url of assetUrls)urls.push(GetNitroInstance().core.configuration.interpolate(url));GetNitroInstance().core.asset.downloadAssets(urls,status=>{if(status){GetCommunication().init();setPercent(prevValue=>prevValue+20);}else{setIsError(true);setMessage('Assets Failed');}});return;}}},[]);UseMainEvent(Nitro.WEBGL_UNAVAILABLE,handler);UseMainEvent(Nitro.WEBGL_CONTEXT_LOST,handler);UseMainEvent(NitroCommunicationDemoEvent.CONNECTION_HANDSHAKING,handler);UseMainEvent(NitroCommunicationDemoEvent.CONNECTION_HANDSHAKE_FAILED,handler);UseMainEvent(NitroCommunicationDemoEvent.CONNECTION_AUTHENTICATED,handler);UseMainEvent(NitroCommunicationDemoEvent.CONNECTION_ERROR,handler);UseMainEvent(NitroCommunicationDemoEvent.CONNECTION_CLOSED,handler);UseRoomEngineEvent(RoomEngineEvent.ENGINE_INITIALIZED,handler);UseLocalizationEvent(NitroLocalizationEvent.LOADED,handler);UseConfigurationEvent(ConfigurationEvent.LOADED,handler);UseConfigurationEvent(ConfigurationEvent.FAILED,handler);useEffect(()=>{if(!WebGL.isWebGLAvailable()){DispatchUiEvent(new NitroEvent(Nitro.WEBGL_UNAVAILABLE));}else{GetNitroInstance().core.configuration.init();}const resize=event=>setImageRendering(!(window.devicePixelRatio%1));window.addEventListener('resize',resize);resize(null);return()=>{window.removeEventListener('resize',resize);};},[]);return/*#__PURE__*/_jsxs(Base,{fit:true,overflow:\"hidden\",className:imageRendering&&'image-rendering-pixelated',children:[(!isReady||isError)&&/*#__PURE__*/_jsx(LoadingView,{isError:isError,message:message,percent:percent}),/*#__PURE__*/_jsx(TransitionAnimation,{type:TransitionAnimationTypes.FADE_IN,inProp:isReady,children:/*#__PURE__*/_jsx(MainView,{})}),/*#__PURE__*/_jsx(Base,{id:\"draggable-windows-container\"})]});};","map":null,"metadata":{},"sourceType":"module"}