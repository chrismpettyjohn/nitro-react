{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/room/widgets/infostand/InfoStandWidgetRentableBotView.tsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { BotRemoveComposer } from '@nitrots/nitro-renderer';\nimport { useMemo } from 'react';\nimport { LocalizeText, SendMessageComposer } from '../../../../api';\nimport { Button, Column, Flex, LayoutAvatarImageView, LayoutBadgeImageView, Text, UserProfileIconView } from '../../../../common';\nimport { BotSkillsEnum } from '../avatar-info/common/BotSkillsEnum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InfoStandWidgetRentableBotView = props => {\n  _s();\n\n  const {\n    rentableBotData = null,\n    close = null\n  } = props;\n  const canPickup = useMemo(() => {\n    if (rentableBotData.botSkills.indexOf(BotSkillsEnum.NO_PICK_UP) >= 0) return false;\n    if (!rentableBotData.amIOwner && !rentableBotData.amIAnyRoomController) return false;\n    return true;\n  }, [rentableBotData]);\n\n  const pickupBot = () => SendMessageComposer(new BotRemoveComposer(rentableBotData.webID));\n\n  if (!rentableBotData) return;\n  return /*#__PURE__*/_jsxDEV(Column, {\n    gap: 1,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      className: \"nitro-infostand rounded\",\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        overflow: \"visible\",\n        className: \"container-fluid content-area\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            justifyContent: \"between\",\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              variant: \"white\",\n              gfbold: true,\n              wrap: true,\n              children: rentableBotData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"times\",\n              className: \"cursor-pointer\",\n              onClick: close\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              fullWidth: true,\n              className: \"body-image bot\",\n              children: /*#__PURE__*/_jsxDEV(LayoutAvatarImageView, {\n                figure: rentableBotData.figure,\n                direction: 4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              grow: true,\n              center: true,\n              gap: 0,\n              children: rentableBotData.badges.length > 0 && rentableBotData.badges.map(result => {\n                return /*#__PURE__*/_jsxDEV(LayoutBadgeImageView, {\n                  badgeCode: result,\n                  showInfo: true\n                }, result, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            className: \"py-1 px-2\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fullWidth: true,\n              wrap: true,\n              textBreak: true,\n              variant: \"white\",\n              className: \"motto-content\",\n              children: rentableBotData.motto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(UserProfileIconView, {\n              userId: rentableBotData.ownerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              variant: \"white\",\n              wrap: true,\n              children: LocalizeText('infostand.text.botowner', ['name'], [rentableBotData.ownerName])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), rentableBotData.carryItem > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"m-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              variant: \"white\",\n              wrap: true,\n              children: LocalizeText('infostand.text.handitem', ['item'], [LocalizeText('handitem' + rentableBotData.carryItem)])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), canPickup && /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"end\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"infostand-buttons\",\n        onClick: pickupBot,\n        children: LocalizeText('infostand.button.pickup')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfoStandWidgetRentableBotView, \"6K6M/icdIH4SJDMfsun1rkpZC00=\");\n\n_c = InfoStandWidgetRentableBotView;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoStandWidgetRentableBotView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/room/widgets/infostand/InfoStandWidgetRentableBotView.tsx"],"names":["FontAwesomeIcon","BotRemoveComposer","useMemo","LocalizeText","SendMessageComposer","Button","Column","Flex","LayoutAvatarImageView","LayoutBadgeImageView","Text","UserProfileIconView","BotSkillsEnum","InfoStandWidgetRentableBotView","props","rentableBotData","close","canPickup","botSkills","indexOf","NO_PICK_UP","amIOwner","amIAnyRoomController","pickupBot","webID","name","figure","badges","length","map","result","motto","ownerId","ownerName","carryItem"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { BotRemoveComposer } from '@nitrots/nitro-renderer';\nimport { FC, useMemo } from 'react';\nimport { LocalizeText, RoomWidgetUpdateInfostandRentableBotEvent, SendMessageComposer } from '../../../../api';\nimport { Button, Column, Flex, LayoutAvatarImageView, LayoutBadgeImageView, Text, UserProfileIconView } from '../../../../common';\nimport { BotSkillsEnum } from '../avatar-info/common/BotSkillsEnum';\n\ninterface InfoStandWidgetRentableBotViewProps\n{\n    rentableBotData: RoomWidgetUpdateInfostandRentableBotEvent;\n    close: () => void;\n}\n\nexport const InfoStandWidgetRentableBotView: FC<InfoStandWidgetRentableBotViewProps> = props =>\n{\n    const { rentableBotData = null, close = null } = props;\n\n    const canPickup = useMemo(() =>\n    {\n        if(rentableBotData.botSkills.indexOf(BotSkillsEnum.NO_PICK_UP) >= 0) return false;\n\n        if(!rentableBotData.amIOwner && !rentableBotData.amIAnyRoomController) return false;\n\n        return true;\n    }, [ rentableBotData ]);\n\n    const pickupBot = () => SendMessageComposer(new BotRemoveComposer(rentableBotData.webID));\n    \n    if(!rentableBotData) return;\n\n    return (\n        <Column gap={ 1 }>\n            <Column className=\"nitro-infostand rounded\">\n                <Column overflow=\"visible\" className=\"container-fluid content-area\" gap={ 1 }>\n                    <Column gap={ 1 }>\n                        <Flex alignItems=\"center\" justifyContent=\"between\" gap={ 1 }>\n                            <Text variant=\"white\" gfbold wrap>{ rentableBotData.name }</Text>\n                            <FontAwesomeIcon icon=\"times\" className=\"cursor-pointer\" onClick={ close } />\n                        </Flex>\n                        <hr className=\"m-0\" />\n                    </Column>\n                    <Column gap={ 1 }>\n                        <Flex gap={ 1 }>\n                            <Column fullWidth className=\"body-image bot\">\n                                <LayoutAvatarImageView figure={ rentableBotData.figure } direction={ 4 } />\n                            </Column>\n                            <Column grow center gap={ 0 }>\n                                { (rentableBotData.badges.length > 0) && rentableBotData.badges.map(result =>\n                                {\n                                    return <LayoutBadgeImageView key={ result } badgeCode={ result } showInfo={ true } />;\n                                }) }\n                            </Column>\n                        </Flex>\n                        <hr className=\"m-0\" />\n                    </Column>\n                    <Column gap={ 1 }>\n                        <Flex alignItems=\"center\" className=\"py-1 px-2\">\n                            <Text fullWidth wrap textBreak variant=\"white\" className=\"motto-content\">{ rentableBotData.motto }</Text>\n                        </Flex>\n                        <hr className=\"m-0\" />\n                    </Column>\n                    <Column gap={ 1 }>\n                        <Flex alignItems=\"center\" gap={ 1 }>\n                            <UserProfileIconView userId={ rentableBotData.ownerId } />\n                            <Text variant=\"white\" wrap>\n                                { LocalizeText('infostand.text.botowner', [ 'name' ], [ rentableBotData.ownerName ]) }\n                            </Text>\n                        </Flex>\n                        { (rentableBotData.carryItem > 0) &&\n                            <>\n                                <hr className=\"m-0\" />\n                                <Text variant=\"white\" wrap>\n                                    { LocalizeText('infostand.text.handitem', [ 'item' ], [ LocalizeText('handitem' + rentableBotData.carryItem) ]) }\n                                </Text>\n                            </> }\n                    </Column>\n                </Column>\n            </Column>\n            { canPickup &&\n                <Flex justifyContent=\"end\">\n                    <Button className=\"infostand-buttons\" onClick={ pickupBot }>{ LocalizeText('infostand.button.pickup') }</Button>\n                </Flex> }\n        </Column>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}