{"ast":null,"code":"import { RoomHeightMapParser } from './RoomHeightMapParser';\nexport class RoomHeightMapUpdateParser {\n  constructor() {\n    this._wrapper = void 0;\n    this._count = void 0;\n    this._x = void 0;\n    this._y = void 0;\n    this._value = void 0;\n  }\n\n  flush() {\n    this._wrapper = null;\n    this._count = 0;\n    this._x = 0;\n    this._y = 0;\n    this._value = 0;\n    return true;\n  }\n\n  tileHeight() {\n    return RoomHeightMapParser.decodeTileHeight(this._value);\n  }\n\n  isStackingBlocked() {\n    return RoomHeightMapParser.decodeIsStackingBlocked(this._value);\n  }\n\n  isRoomTile() {\n    return RoomHeightMapParser.decodeIsRoomTile(this._value);\n  }\n\n  next() {\n    if (!this._count) return false;\n    this._count--;\n    this._x = this._wrapper.readByte();\n    this._y = this._wrapper.readByte();\n    this._value = this._wrapper.readShort();\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._wrapper = wrapper;\n    this._count = wrapper.readByte();\n    return true;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get height() {\n    return this._value;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/room/mapping/RoomHeightMapUpdateParser.ts"],"names":["RoomHeightMapParser","RoomHeightMapUpdateParser","_wrapper","_count","_x","_y","_value","flush","tileHeight","decodeTileHeight","isStackingBlocked","decodeIsStackingBlocked","isRoomTile","decodeIsRoomTile","next","readByte","readShort","parse","wrapper","x","y","height"],"mappings":"AACA,SAASA,mBAAT,QAAoC,uBAApC;AAEA,OAAO,MAAMC,yBAAN,CACP;AAAA;AAAA,SACYC,QADZ;AAAA,SAEYC,MAFZ;AAAA,SAGYC,EAHZ;AAAA,SAIYC,EAJZ;AAAA,SAKYC,MALZ;AAAA;;AAOWC,EAAAA,KAAK,GACZ;AACI,SAAKL,QAAL,GAAgB,IAAhB;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,MAAL,GAAc,CAAd;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,UAAU,GACjB;AACI,WAAOR,mBAAmB,CAACS,gBAApB,CAAqC,KAAKH,MAA1C,CAAP;AACH;;AAEMI,EAAAA,iBAAiB,GACxB;AACI,WAAOV,mBAAmB,CAACW,uBAApB,CAA4C,KAAKL,MAAjD,CAAP;AACH;;AAEMM,EAAAA,UAAU,GACjB;AACI,WAAOZ,mBAAmB,CAACa,gBAApB,CAAqC,KAAKP,MAA1C,CAAP;AACH;;AAEMQ,EAAAA,IAAI,GACX;AACI,QAAG,CAAC,KAAKX,MAAT,EAAiB,OAAO,KAAP;AAEjB,SAAKA,MAAL;AAEA,SAAKC,EAAL,GAAU,KAAKF,QAAL,CAAca,QAAd,EAAV;AACA,SAAKV,EAAL,GAAU,KAAKH,QAAL,CAAca,QAAd,EAAV;AACA,SAAKT,MAAL,GAAc,KAAKJ,QAAL,CAAcc,SAAd,EAAd;AAEA,WAAO,IAAP;AACH;;AAEMC,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKhB,QAAL,GAAgBgB,OAAhB;AACA,SAAKf,MAAL,GAAce,OAAO,CAACH,QAAR,EAAd;AAEA,WAAO,IAAP;AACH;;AAEW,MAADI,CAAC,GACZ;AACI,WAAO,KAAKf,EAAZ;AACH;;AAEW,MAADgB,CAAC,GACZ;AACI,WAAO,KAAKf,EAAZ;AACH;;AAEgB,MAANgB,MAAM,GACjB;AACI,WAAO,KAAKf,MAAZ;AACH;;AArEL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\nimport { RoomHeightMapParser } from './RoomHeightMapParser';\r\n\r\nexport class RoomHeightMapUpdateParser implements IMessageParser\r\n{\r\n    private _wrapper: IMessageDataWrapper;\r\n    private _count: number;\r\n    private _x: number;\r\n    private _y: number;\r\n    private _value: number;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._wrapper = null;\r\n        this._count = 0;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._value = 0;\r\n\r\n        return true;\r\n    }\r\n\r\n    public tileHeight(): number\r\n    {\r\n        return RoomHeightMapParser.decodeTileHeight(this._value);\r\n    }\r\n\r\n    public isStackingBlocked(): boolean\r\n    {\r\n        return RoomHeightMapParser.decodeIsStackingBlocked(this._value);\r\n    }\r\n\r\n    public isRoomTile(): boolean\r\n    {\r\n        return RoomHeightMapParser.decodeIsRoomTile(this._value);\r\n    }\r\n\r\n    public next(): boolean\r\n    {\r\n        if(!this._count) return false;\r\n\r\n        this._count--;\r\n\r\n        this._x = this._wrapper.readByte();\r\n        this._y = this._wrapper.readByte();\r\n        this._value = this._wrapper.readShort();\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._wrapper = wrapper;\r\n        this._count = wrapper.readByte();\r\n\r\n        return true;\r\n    }\r\n\r\n    public get x(): number\r\n    {\r\n        return this._x;\r\n    }\r\n\r\n    public get y(): number\r\n    {\r\n        return this._y;\r\n    }\r\n\r\n    public get height(): number\r\n    {\r\n        return this._value;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}