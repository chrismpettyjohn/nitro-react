{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/room/widgets/infostand/InfoStandWidgetFurniView.tsx\",\n    _s = $RefreshSig$();\n\nimport { GroupInformationComposer, GroupInformationEvent, RoomControllerLevel, RoomObjectCategory, RoomObjectVariable, RoomWidgetEnumItemExtradataParameter, RoomWidgetFurniInfoUsagePolicyEnum, SetObjectDataMessageComposer, StringDataType } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useState } from 'react';\nimport { CreateLinkEvent, GetGroupInformation, GetRoomEngine, LocalizeText, RoomWidgetFurniActionMessage, SendMessageComposer } from '../../../../api';\nimport { Button, Column, Flex, LayoutBadgeImageView, LayoutLimitedEditionCompactPlateView, LayoutRarityLevelView, Text, UserProfileIconView } from '../../../../common';\nimport { UseMessageEventHook } from '../../../../hooks';\nimport { useRoomContext } from '../../RoomContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PICKUP_MODE_NONE = 0;\nconst PICKUP_MODE_EJECT = 1;\nconst PICKUP_MODE_FULL = 2;\nexport const InfoStandWidgetFurniView = props => {\n  _s();\n\n  const {\n    furniData = null,\n    close = null\n  } = props;\n  const {\n    roomSession = null,\n    eventDispatcher = null,\n    widgetHandler = null\n  } = useRoomContext();\n  const [pickupMode, setPickupMode] = useState(0);\n  const [canMove, setCanMove] = useState(false);\n  const [canRotate, setCanRotate] = useState(false);\n  const [canUse, setCanUse] = useState(false);\n  const [furniKeys, setFurniKeys] = useState([]);\n  const [furniValues, setFurniValues] = useState([]);\n  const [customKeys, setCustomKeys] = useState([]);\n  const [customValues, setCustomValues] = useState([]);\n  const [isCrackable, setIsCrackable] = useState(false);\n  const [crackableHits, setCrackableHits] = useState(0);\n  const [crackableTarget, setCrackableTarget] = useState(0);\n  const [godMode, setGodMode] = useState(false);\n  const [canSeeFurniId, setCanSeeFurniId] = useState(false);\n  const [groupName, setGroupName] = useState(null);\n  useEffect(() => {\n    let pickupMode = PICKUP_MODE_NONE;\n    let canMove = false;\n    let canRotate = false;\n    let canUse = false;\n    let furniKeyss = [];\n    let furniValuess = [];\n    let customKeyss = [];\n    let customValuess = [];\n    let isCrackable = false;\n    let crackableHits = 0;\n    let crackableTarget = 0;\n    let godMode = false;\n    let canSeeFurniId = false;\n    const isValidController = furniData.roomControllerLevel >= RoomControllerLevel.GUEST;\n\n    if (isValidController || furniData.isOwner || furniData.isRoomOwner || furniData.isAnyRoomController) {\n      canMove = true;\n      canRotate = !furniData.isWallItem;\n      if (furniData.roomControllerLevel >= RoomControllerLevel.MODERATOR) godMode = true;\n    }\n\n    if (furniData.isAnyRoomController) {\n      canSeeFurniId = true;\n    }\n\n    if (furniData.usagePolicy === RoomWidgetFurniInfoUsagePolicyEnum.EVERYBODY || furniData.usagePolicy === RoomWidgetFurniInfoUsagePolicyEnum.CONTROLLER && isValidController || furniData.extraParam === RoomWidgetEnumItemExtradataParameter.JUKEBOX && isValidController || furniData.extraParam === RoomWidgetEnumItemExtradataParameter.USABLE_PRODUCT && isValidController) canUse = true;\n\n    if (furniData.extraParam) {\n      if (furniData.extraParam === RoomWidgetEnumItemExtradataParameter.CRACKABLE_FURNI) {\n        const stuffData = furniData.stuffData;\n        canUse = true;\n        isCrackable = true;\n        crackableHits = stuffData.hits;\n        crackableTarget = stuffData.target;\n      }\n\n      if (godMode) {\n        const extraParam = furniData.extraParam.substr(RoomWidgetEnumItemExtradataParameter.BRANDING_OPTIONS.length);\n\n        if (extraParam) {\n          const parts = extraParam.split('\\t');\n\n          for (const part of parts) {\n            const value = part.split('=');\n\n            if (value && value.length === 2) {\n              furniKeyss.push(value[0]);\n              furniValuess.push(value[1]);\n            }\n          }\n        }\n      }\n    }\n\n    if (godMode) {\n      const roomObject = GetRoomEngine().getRoomObject(roomSession.roomId, furniData.id, furniData.isWallItem ? RoomObjectCategory.WALL : RoomObjectCategory.FLOOR);\n\n      if (roomObject) {\n        const customVariables = roomObject.model.getValue(RoomObjectVariable.FURNITURE_CUSTOM_VARIABLES);\n        const furnitureData = roomObject.model.getValue(RoomObjectVariable.FURNITURE_DATA);\n\n        if (customVariables && customVariables.length) {\n          for (const customVariable of customVariables) {\n            customKeyss.push(customVariable);\n            customValuess.push(furnitureData[customVariable] || '');\n          }\n        }\n      }\n    }\n\n    if (furniData.isOwner || furniData.isAnyRoomController) pickupMode = PICKUP_MODE_FULL;else if (furniData.isRoomOwner || furniData.roomControllerLevel >= RoomControllerLevel.GUILD_ADMIN) pickupMode = PICKUP_MODE_EJECT;\n    if (furniData.isStickie) pickupMode = PICKUP_MODE_NONE;\n    setPickupMode(pickupMode);\n    setCanMove(canMove);\n    setCanRotate(canRotate);\n    setCanUse(canUse);\n    setFurniKeys(furniKeyss);\n    setFurniValues(furniValuess);\n    setCustomKeys(customKeyss);\n    setCustomValues(customValuess);\n    setIsCrackable(isCrackable);\n    setCrackableHits(crackableHits);\n    setCrackableTarget(crackableTarget);\n    setGodMode(godMode);\n    setCanSeeFurniId(canSeeFurniId);\n    setGroupName(null);\n    if (furniData.groupId) SendMessageComposer(new GroupInformationComposer(furniData.groupId, false));\n  }, [roomSession, furniData]);\n  const onGroupInformationEvent = useCallback(event => {\n    const parser = event.getParser();\n    if (!furniData || furniData.groupId !== parser.id || parser.flag) return;\n    if (groupName) setGroupName(null);\n    setGroupName(parser.title);\n  }, [furniData, groupName]);\n  UseMessageEventHook(GroupInformationEvent, onGroupInformationEvent);\n  const onFurniSettingChange = useCallback((index, value) => {\n    const clone = Array.from(furniValues);\n    clone[index] = value;\n    setFurniValues(clone);\n  }, [furniValues]);\n  const onCustomVariableChange = useCallback((index, value) => {\n    const clone = Array.from(customValues);\n    clone[index] = value;\n    setCustomValues(clone);\n  }, [customValues]);\n  const getFurniSettingsAsString = useCallback(() => {\n    if (furniKeys.length === 0 || furniValues.length === 0) return '';\n    let data = '';\n    let i = 0;\n\n    while (i < furniKeys.length) {\n      const key = furniKeys[i];\n      const value = furniValues[i];\n      data = data + (key + '=' + value + '\\t');\n      i++;\n    }\n\n    return data;\n  }, [furniKeys, furniValues]);\n  const processButtonAction = useCallback(action => {\n    if (!action || action === '') return;\n    let messageType = null;\n    let objectData = null;\n\n    switch (action) {\n      case 'buy_one':\n        CreateLinkEvent(`catalog/open/offerId/${furniData.purchaseOfferId}`);\n        return;\n\n      case 'move':\n        messageType = RoomWidgetFurniActionMessage.MOVE;\n        break;\n\n      case 'rotate':\n        messageType = RoomWidgetFurniActionMessage.ROTATE;\n        break;\n\n      case 'pickup':\n        if (pickupMode === PICKUP_MODE_FULL) messageType = RoomWidgetFurniActionMessage.PICKUP;else messageType = RoomWidgetFurniActionMessage.EJECT;\n        break;\n\n      case 'use':\n        messageType = RoomWidgetFurniActionMessage.USE;\n        break;\n\n      case 'save_branding_configuration':\n        messageType = RoomWidgetFurniActionMessage.SAVE_STUFF_DATA;\n        objectData = getFurniSettingsAsString();\n        break;\n\n      case 'save_custom_variables':\n        const map = new Map();\n\n        for (let i = 0; i < customKeys.length; i++) {\n          const key = customKeys[i];\n          const value = customValues[i];\n          if (key && key.length && value && value.length) map.set(key, value);\n        }\n\n        SendMessageComposer(new SetObjectDataMessageComposer(furniData.id, map));\n        break;\n    }\n\n    if (!messageType) return;\n    widgetHandler.processWidgetMessage(new RoomWidgetFurniActionMessage(messageType, furniData.id, furniData.category, furniData.purchaseOfferId, objectData));\n  }, [widgetHandler, furniData, pickupMode, customKeys, customValues, getFurniSettingsAsString]);\n  const getGroupBadgeCode = useCallback(() => {\n    const stringDataType = furniData.stuffData;\n    if (!stringDataType || !(stringDataType instanceof StringDataType)) return null;\n    return stringDataType.getValue(2);\n  }, [furniData]);\n  if (!furniData) return null;\n  return /*#__PURE__*/_jsxDEV(Column, {\n    gap: 1,\n    alignItems: \"end\",\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      className: \"nitro-infostand\",\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        overflow: \"visible\",\n        className: \"container-fluid content-area\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            justifyContent: \"between\",\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              gfbold: true,\n              variant: \"white\",\n              wrap: true,\n              children: furniData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"infostand-close\",\n              onClick: close\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            position: \"relative\",\n            gap: 1,\n            children: [furniData.stuffData.isUnique && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"position-absolute end-0\",\n              children: /*#__PURE__*/_jsxDEV(LayoutLimitedEditionCompactPlateView, {\n                uniqueNumber: furniData.stuffData.uniqueNumber,\n                uniqueSeries: furniData.stuffData.uniqueSeries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this), furniData.stuffData.rarityLevel > -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"position-absolute end-0\",\n              children: /*#__PURE__*/_jsxDEV(LayoutRarityLevelView, {\n                level: furniData.stuffData.rarityLevel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), furniData.image && furniData.image.src.length && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"d-block mx-auto\",\n              src: furniData.image.src,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fullWidth: true,\n            wrap: true,\n            textBreak: true,\n            variant: \"white\",\n            children: furniData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(UserProfileIconView, {\n              userId: furniData.ownerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              variant: \"white\",\n              wrap: true,\n              children: [furniData.ownerName]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), furniData.purchaseOfferId > 0 && /*#__PURE__*/_jsxDEV(Flex, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"volter-button\",\n              onClick: event => processButtonAction('buy_one'),\n              children: LocalizeText('infostand.button.buy')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [isCrackable && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"m-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              variant: \"white\",\n              wrap: true,\n              children: LocalizeText('infostand.crackable_furni.hits_remaining', ['hits', 'target'], [crackableHits.toString(), crackableTarget.toString()])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), furniData.groupId > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"m-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              pointer: true,\n              alignItems: \"center\",\n              gap: 2,\n              onClick: () => GetGroupInformation(furniData.groupId),\n              children: [/*#__PURE__*/_jsxDEV(LayoutBadgeImageView, {\n                badgeCode: getGroupBadgeCode(),\n                isGroup: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                variant: \"white\",\n                underline: true,\n                children: groupName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), godMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"m-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this), canSeeFurniId && /*#__PURE__*/_jsxDEV(Text, {\n              wrap: true,\n              variant: \"white\",\n              children: [\"ID: \", furniData.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 52\n            }, this), furniKeys.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"m-0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                gap: 1,\n                children: furniKeys.map((key, index) => {\n                  return /*#__PURE__*/_jsxDEV(Flex, {\n                    alignItems: \"center\",\n                    gap: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      wrap: true,\n                      align: \"end\",\n                      variant: \"white\",\n                      className: \"col-4\",\n                      children: key\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control form-control-sm\",\n                      value: furniValues[index],\n                      onChange: event => onFurniSettingChange(index, event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 57\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 53\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true), customKeys.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"m-0 my-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              gap: 1,\n              children: customKeys.map((key, index) => {\n                return /*#__PURE__*/_jsxDEV(Flex, {\n                  alignItems: \"center\",\n                  gap: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    small: true,\n                    wrap: true,\n                    align: \"end\",\n                    variant: \"white\",\n                    className: \"col-4\",\n                    children: key\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control form-control-sm\",\n                    value: customValues[index],\n                    onChange: event => onCustomVariableChange(index, event.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 49\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      gap: 2,\n      justifyContent: \"end\",\n      children: [canMove && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"infostand-buttons px-2\",\n        onClick: event => processButtonAction('move'),\n        children: LocalizeText('infostand.button.move')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, this), canRotate && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"infostand-buttons px-2\",\n        onClick: event => processButtonAction('rotate'),\n        children: LocalizeText('infostand.button.rotate')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }, this), pickupMode !== PICKUP_MODE_NONE && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"infostand-buttons px-2\",\n        onClick: event => processButtonAction('pickup'),\n        children: LocalizeText(pickupMode === PICKUP_MODE_EJECT ? 'infostand.button.eject' : 'infostand.button.pickup')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }, this), canUse && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"infostand-buttons px-2\",\n        onClick: event => processButtonAction('use'),\n        children: LocalizeText('infostand.button.use')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }, this), furniKeys.length > 0 && furniValues.length > 0 && furniKeys.length === furniValues.length && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"infostand-buttons px-2\",\n        onClick: () => processButtonAction('save_branding_configuration'),\n        children: LocalizeText('save')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }, this), customKeys.length > 0 && customValues.length > 0 && customKeys.length === customValues.length && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"infostand-buttons px-2\",\n        onClick: () => processButtonAction('save_custom_variables'),\n        children: LocalizeText('save')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfoStandWidgetFurniView, \"sXjxBrzjuCa0xITptK7NPaLNXE4=\", false, function () {\n  return [useRoomContext];\n});\n\n_c = InfoStandWidgetFurniView;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoStandWidgetFurniView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/room/widgets/infostand/InfoStandWidgetFurniView.tsx"],"names":["GroupInformationComposer","GroupInformationEvent","RoomControllerLevel","RoomObjectCategory","RoomObjectVariable","RoomWidgetEnumItemExtradataParameter","RoomWidgetFurniInfoUsagePolicyEnum","SetObjectDataMessageComposer","StringDataType","useCallback","useEffect","useState","CreateLinkEvent","GetGroupInformation","GetRoomEngine","LocalizeText","RoomWidgetFurniActionMessage","SendMessageComposer","Button","Column","Flex","LayoutBadgeImageView","LayoutLimitedEditionCompactPlateView","LayoutRarityLevelView","Text","UserProfileIconView","UseMessageEventHook","useRoomContext","PICKUP_MODE_NONE","PICKUP_MODE_EJECT","PICKUP_MODE_FULL","InfoStandWidgetFurniView","props","furniData","close","roomSession","eventDispatcher","widgetHandler","pickupMode","setPickupMode","canMove","setCanMove","canRotate","setCanRotate","canUse","setCanUse","furniKeys","setFurniKeys","furniValues","setFurniValues","customKeys","setCustomKeys","customValues","setCustomValues","isCrackable","setIsCrackable","crackableHits","setCrackableHits","crackableTarget","setCrackableTarget","godMode","setGodMode","canSeeFurniId","setCanSeeFurniId","groupName","setGroupName","furniKeyss","furniValuess","customKeyss","customValuess","isValidController","roomControllerLevel","GUEST","isOwner","isRoomOwner","isAnyRoomController","isWallItem","MODERATOR","usagePolicy","EVERYBODY","CONTROLLER","extraParam","JUKEBOX","USABLE_PRODUCT","CRACKABLE_FURNI","stuffData","hits","target","substr","BRANDING_OPTIONS","length","parts","split","part","value","push","roomObject","getRoomObject","roomId","id","WALL","FLOOR","customVariables","model","getValue","FURNITURE_CUSTOM_VARIABLES","furnitureData","FURNITURE_DATA","customVariable","GUILD_ADMIN","isStickie","groupId","onGroupInformationEvent","event","parser","getParser","flag","title","onFurniSettingChange","index","clone","Array","from","onCustomVariableChange","getFurniSettingsAsString","data","i","key","processButtonAction","action","messageType","objectData","purchaseOfferId","MOVE","ROTATE","PICKUP","EJECT","USE","SAVE_STUFF_DATA","map","Map","set","processWidgetMessage","category","getGroupBadgeCode","stringDataType","name","isUnique","uniqueNumber","uniqueSeries","rarityLevel","image","src","description","ownerId","ownerName","toString"],"mappings":";;;AACA,SAA4BA,wBAA5B,EAAsDC,qBAAtD,EAA6EC,mBAA7E,EAAkGC,kBAAlG,EAAsHC,kBAAtH,EAA0IC,oCAA1I,EAAgLC,kCAAhL,EAAoNC,4BAApN,EAAkPC,cAAlP,QAAwQ,yBAAxQ;AACA,SAAaC,WAAb,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,aAA/C,EAA8DC,YAA9D,EAA4EC,4BAA5E,EAA+IC,mBAA/I,QAA0K,iBAA1K;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,oBAA/B,EAAqDC,oCAArD,EAA2FC,qBAA3F,EAAkHC,IAAlH,EAAwHC,mBAAxH,QAAmJ,oBAAnJ;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;AAQA,MAAMC,gBAAwB,GAAG,CAAjC;AACA,MAAMC,iBAAyB,GAAG,CAAlC;AACA,MAAMC,gBAAwB,GAAG,CAAjC;AAEA,OAAO,MAAMC,wBAA2D,GAAGC,KAAK,IAChF;AAAA;;AACI,QAAM;AAAEC,IAAAA,SAAS,GAAG,IAAd;AAAoBC,IAAAA,KAAK,GAAG;AAA5B,MAAqCF,KAA3C;AACA,QAAM;AAAEG,IAAAA,WAAW,GAAG,IAAhB;AAAsBC,IAAAA,eAAe,GAAG,IAAxC;AAA8CC,IAAAA,aAAa,GAAG;AAA9D,MAAuEV,cAAc,EAA3F;AAEA,QAAM,CAAEW,UAAF,EAAcC,aAAd,IAAgC5B,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAAE6B,OAAF,EAAWC,UAAX,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAE+B,SAAF,EAAaC,YAAb,IAA8BhC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAEiC,MAAF,EAAUC,SAAV,IAAwBlC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAEmC,SAAF,EAAaC,YAAb,IAA8BpC,QAAQ,CAAW,EAAX,CAA5C;AACA,QAAM,CAAEqC,WAAF,EAAeC,cAAf,IAAkCtC,QAAQ,CAAW,EAAX,CAAhD;AACA,QAAM,CAAEuC,UAAF,EAAcC,aAAd,IAAgCxC,QAAQ,CAAW,EAAX,CAA9C;AACA,QAAM,CAAEyC,YAAF,EAAgBC,eAAhB,IAAoC1C,QAAQ,CAAW,EAAX,CAAlD;AACA,QAAM,CAAE2C,WAAF,EAAeC,cAAf,IAAkC5C,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAE6C,aAAF,EAAiBC,gBAAjB,IAAsC9C,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAAE+C,eAAF,EAAmBC,kBAAnB,IAA0ChD,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAAEiD,OAAF,EAAWC,UAAX,IAA0BlD,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAEmD,aAAF,EAAiBC,gBAAjB,IAAsCpD,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAEqD,SAAF,EAAaC,YAAb,IAA8BtD,QAAQ,CAAS,IAAT,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MACV;AACI,QAAI4B,UAAU,GAAGV,gBAAjB;AACA,QAAIY,OAAO,GAAG,KAAd;AACA,QAAIE,SAAS,GAAG,KAAhB;AACA,QAAIE,MAAM,GAAG,KAAb;AACA,QAAIsB,UAAoB,GAAG,EAA3B;AACA,QAAIC,YAAsB,GAAG,EAA7B;AACA,QAAIC,WAAqB,GAAG,EAA5B;AACA,QAAIC,aAAuB,GAAG,EAA9B;AACA,QAAIf,WAAW,GAAG,KAAlB;AACA,QAAIE,aAAa,GAAG,CAApB;AACA,QAAIE,eAAe,GAAG,CAAtB;AACA,QAAIE,OAAO,GAAG,KAAd;AACA,QAAIE,aAAa,GAAG,KAApB;AAEA,UAAMQ,iBAAiB,GAAIrC,SAAS,CAACsC,mBAAV,IAAiCrE,mBAAmB,CAACsE,KAAhF;;AAEA,QAAGF,iBAAiB,IAAIrC,SAAS,CAACwC,OAA/B,IAA0CxC,SAAS,CAACyC,WAApD,IAAmEzC,SAAS,CAAC0C,mBAAhF,EACA;AACInC,MAAAA,OAAO,GAAG,IAAV;AACAE,MAAAA,SAAS,GAAG,CAACT,SAAS,CAAC2C,UAAvB;AAEA,UAAG3C,SAAS,CAACsC,mBAAV,IAAiCrE,mBAAmB,CAAC2E,SAAxD,EAAmEjB,OAAO,GAAG,IAAV;AACtE;;AAED,QAAG3B,SAAS,CAAC0C,mBAAb,EACA;AACIb,MAAAA,aAAa,GAAG,IAAhB;AACH;;AAED,QAAM7B,SAAS,CAAC6C,WAAV,KAA0BxE,kCAAkC,CAACyE,SAA9D,IAA8E9C,SAAS,CAAC6C,WAAV,KAA0BxE,kCAAkC,CAAC0E,UAA9D,IAA6EV,iBAA3J,IAAoLrC,SAAS,CAACgD,UAAV,KAAyB5E,oCAAoC,CAAC6E,OAA/D,IAA2EZ,iBAA/P,IAAwRrC,SAAS,CAACgD,UAAV,KAAyB5E,oCAAoC,CAAC8E,cAA/D,IAAkFb,iBAA5W,EAAgY1B,MAAM,GAAG,IAAT;;AAEhY,QAAGX,SAAS,CAACgD,UAAb,EACA;AACI,UAAGhD,SAAS,CAACgD,UAAV,KAAyB5E,oCAAoC,CAAC+E,eAAjE,EACA;AACI,cAAMC,SAAS,GAAIpD,SAAS,CAACoD,SAA7B;AAEAzC,QAAAA,MAAM,GAAG,IAAT;AACAU,QAAAA,WAAW,GAAG,IAAd;AACAE,QAAAA,aAAa,GAAG6B,SAAS,CAACC,IAA1B;AACA5B,QAAAA,eAAe,GAAG2B,SAAS,CAACE,MAA5B;AACH;;AAED,UAAG3B,OAAH,EACA;AACI,cAAMqB,UAAU,GAAGhD,SAAS,CAACgD,UAAV,CAAqBO,MAArB,CAA4BnF,oCAAoC,CAACoF,gBAArC,CAAsDC,MAAlF,CAAnB;;AAEA,YAAGT,UAAH,EACA;AACI,gBAAMU,KAAK,GAAGV,UAAU,CAACW,KAAX,CAAiB,IAAjB,CAAd;;AAEA,eAAI,MAAMC,IAAV,IAAkBF,KAAlB,EACA;AACI,kBAAMG,KAAK,GAAGD,IAAI,CAACD,KAAL,CAAW,GAAX,CAAd;;AAEA,gBAAGE,KAAK,IAAKA,KAAK,CAACJ,MAAN,KAAiB,CAA9B,EACA;AACIxB,cAAAA,UAAU,CAAC6B,IAAX,CAAgBD,KAAK,CAAC,CAAD,CAArB;AACA3B,cAAAA,YAAY,CAAC4B,IAAb,CAAkBD,KAAK,CAAC,CAAD,CAAvB;AACH;AACJ;AACJ;AACJ;AACJ;;AAED,QAAGlC,OAAH,EACA;AACI,YAAMoC,UAAU,GAAGlF,aAAa,GAAGmF,aAAhB,CAA8B9D,WAAW,CAAC+D,MAA1C,EAAkDjE,SAAS,CAACkE,EAA5D,EAAiElE,SAAS,CAAC2C,UAAX,GAAyBzE,kBAAkB,CAACiG,IAA5C,GAAmDjG,kBAAkB,CAACkG,KAAtI,CAAnB;;AAEA,UAAGL,UAAH,EACA;AACI,cAAMM,eAAe,GAAGN,UAAU,CAACO,KAAX,CAAiBC,QAAjB,CAAoCpG,kBAAkB,CAACqG,0BAAvD,CAAxB;AACA,cAAMC,aAAa,GAAGV,UAAU,CAACO,KAAX,CAAiBC,QAAjB,CAAuDpG,kBAAkB,CAACuG,cAA1E,CAAtB;;AAEA,YAAGL,eAAe,IAAIA,eAAe,CAACZ,MAAtC,EACA;AACI,eAAI,MAAMkB,cAAV,IAA4BN,eAA5B,EACA;AACIlC,YAAAA,WAAW,CAAC2B,IAAZ,CAAiBa,cAAjB;AACAvC,YAAAA,aAAa,CAAC0B,IAAd,CAAoBW,aAAa,CAACE,cAAD,CAAd,IAAmC,EAAtD;AACH;AACJ;AACJ;AACJ;;AAED,QAAG3E,SAAS,CAACwC,OAAV,IAAqBxC,SAAS,CAAC0C,mBAAlC,EAAuDrC,UAAU,GAAGR,gBAAb,CAAvD,KAEK,IAAGG,SAAS,CAACyC,WAAV,IAA0BzC,SAAS,CAACsC,mBAAV,IAAiCrE,mBAAmB,CAAC2G,WAAlF,EAAgGvE,UAAU,GAAGT,iBAAb;AAErG,QAAGI,SAAS,CAAC6E,SAAb,EAAwBxE,UAAU,GAAGV,gBAAb;AAExBW,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,IAAAA,YAAY,CAACmB,UAAD,CAAZ;AACAjB,IAAAA,cAAc,CAACkB,YAAD,CAAd;AACAhB,IAAAA,aAAa,CAACiB,WAAD,CAAb;AACAf,IAAAA,eAAe,CAACgB,aAAD,CAAf;AACAd,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAG,IAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAG,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,QAAGhC,SAAS,CAAC8E,OAAb,EAAsB9F,mBAAmB,CAAC,IAAIjB,wBAAJ,CAA6BiC,SAAS,CAAC8E,OAAvC,EAAgD,KAAhD,CAAD,CAAnB;AACzB,GA7GQ,EA6GN,CAAE5E,WAAF,EAAeF,SAAf,CA7GM,CAAT;AA+GA,QAAM+E,uBAAuB,GAAGvG,WAAW,CAAEwG,KAAD,IAC5C;AACI,UAAMC,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;AAEA,QAAG,CAAClF,SAAD,IAAcA,SAAS,CAAC8E,OAAV,KAAsBG,MAAM,CAACf,EAA3C,IAAiDe,MAAM,CAACE,IAA3D,EAAiE;AAEjE,QAAGpD,SAAH,EAAcC,YAAY,CAAC,IAAD,CAAZ;AAEdA,IAAAA,YAAY,CAACiD,MAAM,CAACG,KAAR,CAAZ;AACH,GAT0C,EASxC,CAAEpF,SAAF,EAAa+B,SAAb,CATwC,CAA3C;AAWAtC,EAAAA,mBAAmB,CAACzB,qBAAD,EAAwB+G,uBAAxB,CAAnB;AAEA,QAAMM,oBAAoB,GAAG7G,WAAW,CAAC,CAAC8G,KAAD,EAAgBzB,KAAhB,KACzC;AACI,UAAM0B,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAW1E,WAAX,CAAd;AAEAwE,IAAAA,KAAK,CAACD,KAAD,CAAL,GAAezB,KAAf;AAEA7C,IAAAA,cAAc,CAACuE,KAAD,CAAd;AACH,GAPuC,EAOrC,CAAExE,WAAF,CAPqC,CAAxC;AASA,QAAM2E,sBAAsB,GAAGlH,WAAW,CAAC,CAAC8G,KAAD,EAAgBzB,KAAhB,KAC3C;AACI,UAAM0B,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWtE,YAAX,CAAd;AAEAoE,IAAAA,KAAK,CAACD,KAAD,CAAL,GAAezB,KAAf;AAEAzC,IAAAA,eAAe,CAACmE,KAAD,CAAf;AACH,GAPyC,EAOvC,CAAEpE,YAAF,CAPuC,CAA1C;AASA,QAAMwE,wBAAwB,GAAGnH,WAAW,CAAC,MAC7C;AACI,QAAGqC,SAAS,CAAC4C,MAAV,KAAqB,CAArB,IAA0B1C,WAAW,CAAC0C,MAAZ,KAAuB,CAApD,EAAuD,OAAO,EAAP;AAEvD,QAAImC,IAAI,GAAG,EAAX;AAEA,QAAIC,CAAC,GAAG,CAAR;;AAEA,WAAMA,CAAC,GAAGhF,SAAS,CAAC4C,MAApB,EACA;AACI,YAAMqC,GAAG,GAAGjF,SAAS,CAACgF,CAAD,CAArB;AACA,YAAMhC,KAAK,GAAG9C,WAAW,CAAC8E,CAAD,CAAzB;AAEAD,MAAAA,IAAI,GAAIA,IAAI,IAAIE,GAAG,GAAG,GAAN,GAAYjC,KAAZ,GAAoB,IAAxB,CAAZ;AAEAgC,MAAAA,CAAC;AACJ;;AAED,WAAOD,IAAP;AACH,GAnB2C,EAmBzC,CAAE/E,SAAF,EAAaE,WAAb,CAnByC,CAA5C;AAqBA,QAAMgF,mBAAmB,GAAGvH,WAAW,CAAEwH,MAAD,IACxC;AACI,QAAG,CAACA,MAAD,IAAYA,MAAM,KAAK,EAA1B,EAA+B;AAE/B,QAAIC,WAAmB,GAAG,IAA1B;AACA,QAAIC,UAAkB,GAAG,IAAzB;;AAEA,YAAOF,MAAP;AAEI,WAAK,SAAL;AACIrH,QAAAA,eAAe,CAAE,wBAAwBqB,SAAS,CAACmG,eAAiB,EAArD,CAAf;AACA;;AACJ,WAAK,MAAL;AACIF,QAAAA,WAAW,GAAGlH,4BAA4B,CAACqH,IAA3C;AACA;;AACJ,WAAK,QAAL;AACIH,QAAAA,WAAW,GAAGlH,4BAA4B,CAACsH,MAA3C;AACA;;AACJ,WAAK,QAAL;AACI,YAAGhG,UAAU,KAAKR,gBAAlB,EAAoCoG,WAAW,GAAGlH,4BAA4B,CAACuH,MAA3C,CAApC,KACKL,WAAW,GAAGlH,4BAA4B,CAACwH,KAA3C;AACL;;AACJ,WAAK,KAAL;AACIN,QAAAA,WAAW,GAAGlH,4BAA4B,CAACyH,GAA3C;AACA;;AACJ,WAAK,6BAAL;AACIP,QAAAA,WAAW,GAAGlH,4BAA4B,CAAC0H,eAA3C;AACAP,QAAAA,UAAU,GAAGP,wBAAwB,EAArC;AACA;;AACJ,WAAK,uBAAL;AACI,cAAMe,GAAG,GAAG,IAAIC,GAAJ,EAAZ;;AAEA,aAAI,IAAId,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG5E,UAAU,CAACwC,MAA9B,EAAsCoC,CAAC,EAAvC,EACA;AACI,gBAAMC,GAAG,GAAG7E,UAAU,CAAC4E,CAAD,CAAtB;AACA,gBAAMhC,KAAK,GAAG1C,YAAY,CAAC0E,CAAD,CAA1B;AAEA,cAAIC,GAAG,IAAIA,GAAG,CAACrC,MAAZ,IAAwBI,KAAK,IAAIA,KAAK,CAACJ,MAA1C,EAAmDiD,GAAG,CAACE,GAAJ,CAAQd,GAAR,EAAajC,KAAb;AACtD;;AAED7E,QAAAA,mBAAmB,CAAC,IAAIV,4BAAJ,CAAiC0B,SAAS,CAACkE,EAA3C,EAA+CwC,GAA/C,CAAD,CAAnB;AACA;AAlCR;;AAqCA,QAAG,CAACT,WAAJ,EAAiB;AAEjB7F,IAAAA,aAAa,CAACyG,oBAAd,CAAmC,IAAI9H,4BAAJ,CAAiCkH,WAAjC,EAA8CjG,SAAS,CAACkE,EAAxD,EAA4DlE,SAAS,CAAC8G,QAAtE,EAAgF9G,SAAS,CAACmG,eAA1F,EAA2GD,UAA3G,CAAnC;AACH,GA/CsC,EA+CpC,CAAE9F,aAAF,EAAiBJ,SAAjB,EAA4BK,UAA5B,EAAwCY,UAAxC,EAAoDE,YAApD,EAAkEwE,wBAAlE,CA/CoC,CAAvC;AAiDA,QAAMoB,iBAAiB,GAAGvI,WAAW,CAAC,MACtC;AACI,UAAMwI,cAAc,GAAIhH,SAAS,CAACoD,SAAlC;AAEA,QAAG,CAAC4D,cAAD,IAAmB,EAAEA,cAAc,YAAYzI,cAA5B,CAAtB,EAAmE,OAAO,IAAP;AAEnE,WAAOyI,cAAc,CAACzC,QAAf,CAAwB,CAAxB,CAAP;AACH,GAPoC,EAOlC,CAAEvE,SAAF,CAPkC,CAArC;AASA,MAAG,CAACA,SAAJ,EAAe,OAAO,IAAP;AAEf,sBACI,QAAC,MAAD;AAAQ,IAAA,GAAG,EAAG,CAAd;AAAkB,IAAA,UAAU,EAAC,KAA7B;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,SAAjB;AAA2B,QAAA,SAAS,EAAC,8BAArC;AAAoE,QAAA,GAAG,EAAG,CAA1E;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAG,CAAd;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,UAAU,EAAC,QAAjB;AAA0B,YAAA,cAAc,EAAC,SAAzC;AAAmD,YAAA,GAAG,EAAG,CAAzD;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,MAAM,MAAZ;AAAa,cAAA,OAAO,EAAC,OAArB;AAA6B,cAAA,IAAI,MAAjC;AAAA,wBAAoCA,SAAS,CAACiH;AAA9C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,iBAAb;AAA+B,cAAA,OAAO,EAAGhH;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAG,CAAd;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,UAAf;AAA0B,YAAA,GAAG,EAAG,CAAhC;AAAA,uBACMD,SAAS,CAACoD,SAAV,CAAoB8D,QAApB,iBACE;AAAK,cAAA,SAAS,EAAC,yBAAf;AAAA,qCACI,QAAC,oCAAD;AAAsC,gBAAA,YAAY,EAAGlH,SAAS,CAACoD,SAAV,CAAoB+D,YAAzE;AAAwF,gBAAA,YAAY,EAAGnH,SAAS,CAACoD,SAAV,CAAoBgE;AAA3H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFR,EAKOpH,SAAS,CAACoD,SAAV,CAAoBiE,WAApB,GAAkC,CAAC,CAApC,iBACE;AAAK,cAAA,SAAS,EAAC,yBAAf;AAAA,qCACI,QAAC,qBAAD;AAAuB,gBAAA,KAAK,EAAGrH,SAAS,CAACoD,SAAV,CAAoBiE;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANR,EASMrH,SAAS,CAACsH,KAAV,IAAmBtH,SAAS,CAACsH,KAAV,CAAgBC,GAAhB,CAAoB9D,MAAvC,iBACE;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAiC,cAAA,GAAG,EAAGzD,SAAS,CAACsH,KAAV,CAAgBC,GAAvD;AAA6D,cAAA,GAAG,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,oBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAaI;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAuBI,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAG,CAAd;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,IAAI,MAApB;AAAqB,YAAA,SAAS,MAA9B;AAA+B,YAAA,OAAO,EAAC,OAAvC;AAAA,sBAAiDvH,SAAS,CAACwH;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eA2BI,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAG,CAAd;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,UAAU,EAAC,QAAjB;AAA0B,YAAA,GAAG,EAAG,CAAhC;AAAA,oCACI,QAAC,mBAAD;AAAqB,cAAA,MAAM,EAAGxH,SAAS,CAACyH;AAAxC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD;AAAM,cAAA,OAAO,EAAC,OAAd;AAAsB,cAAA,IAAI,MAA1B;AAAA,wBACM,CAAEzH,SAAS,CAAC0H,SAAZ;AADN;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAOO1H,SAAS,CAACmG,eAAV,GAA4B,CAA7B,iBACE,QAAC,IAAD;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,eAAlB;AAAkC,cAAA,OAAO,EAAGnB,KAAK,IAAIe,mBAAmB,CAAC,SAAD,CAAxE;AAAA,wBACMjH,YAAY,CAAC,sBAAD;AADlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBARR;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BJ,eAyCI,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAG,CAAd;AAAA,qBACMuC,WAAW,iBACT;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD;AAAM,cAAA,OAAO,EAAC,OAAd;AAAsB,cAAA,IAAI,MAA1B;AAAA,wBAA6BvC,YAAY,CAAC,0CAAD,EAA6C,CAAE,MAAF,EAAU,QAAV,CAA7C,EAAmE,CAAEyC,aAAa,CAACoG,QAAd,EAAF,EAA4BlG,eAAe,CAACkG,QAAhB,EAA5B,CAAnE;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BAFR,EAMM3H,SAAS,CAAC8E,OAAV,GAAoB,CAApB,iBACE;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD;AAAM,cAAA,OAAO,MAAb;AAAc,cAAA,UAAU,EAAC,QAAzB;AAAkC,cAAA,GAAG,EAAG,CAAxC;AAA4C,cAAA,OAAO,EAAG,MAAMlG,mBAAmB,CAACoB,SAAS,CAAC8E,OAAX,CAA/E;AAAA,sCACI,QAAC,oBAAD;AAAsB,gBAAA,SAAS,EAAGiC,iBAAiB,EAAnD;AAAwD,gBAAA,OAAO,EAAG;AAAlE;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD;AAAM,gBAAA,OAAO,EAAC,OAAd;AAAsB,gBAAA,SAAS,MAA/B;AAAA,0BAAkChF;AAAlC;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BAPR,EAcMJ,OAAO,iBACL;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEME,aAAa,iBAAI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,OAAO,EAAC,OAAnB;AAAA,iCAAiC7B,SAAS,CAACkE,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFvB,EAGOrD,SAAS,CAAC4C,MAAV,GAAmB,CAApB,iBACE;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AAAQ,gBAAA,GAAG,EAAG,CAAd;AAAA,0BACM5C,SAAS,CAAC6F,GAAV,CAAc,CAACZ,GAAD,EAAMR,KAAN,KAChB;AACI,sCACI,QAAC,IAAD;AAAoB,oBAAA,UAAU,EAAC,QAA/B;AAAwC,oBAAA,GAAG,EAAG,CAA9C;AAAA,4CACI,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAW,sBAAA,KAAK,EAAC,KAAjB;AAAuB,sBAAA,OAAO,EAAC,OAA/B;AAAuC,sBAAA,SAAS,EAAC,OAAjD;AAAA,gCAA2DQ;AAA3D;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAO,sBAAA,IAAI,EAAC,MAAZ;AAAmB,sBAAA,SAAS,EAAC,8BAA7B;AAA4D,sBAAA,KAAK,EAAG/E,WAAW,CAACuE,KAAD,CAA/E;AAAyF,sBAAA,QAAQ,EAAGN,KAAK,IAAIK,oBAAoB,CAACC,KAAD,EAAQN,KAAK,CAAC1B,MAAN,CAAaO,KAArB;AAAjI;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA,qBAAYyB,KAAZ;AAAA;AAAA;AAAA;AAAA,0BADJ;AAKH,iBAPC;AADN;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,4BAJR;AAAA,0BAfR,EAiCOrE,UAAU,CAACwC,MAAX,GAAoB,CAArB,iBACE;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,GAAG,EAAG,CAAd;AAAA,wBACMxC,UAAU,CAACyF,GAAX,CAAe,CAACZ,GAAD,EAAMR,KAAN,KACjB;AACI,oCACI,QAAC,IAAD;AAAoB,kBAAA,UAAU,EAAC,QAA/B;AAAwC,kBAAA,GAAG,EAAG,CAA9C;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,KAAK,MAAX;AAAY,oBAAA,IAAI,MAAhB;AAAiB,oBAAA,KAAK,EAAC,KAAvB;AAA6B,oBAAA,OAAO,EAAC,OAArC;AAA6C,oBAAA,SAAS,EAAC,OAAvD;AAAA,8BAAiEQ;AAAjE;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAO,oBAAA,IAAI,EAAC,MAAZ;AAAmB,oBAAA,SAAS,EAAC,8BAA7B;AAA4D,oBAAA,KAAK,EAAG3E,YAAY,CAACmE,KAAD,CAAhF;AAA0F,oBAAA,QAAQ,EAAGN,KAAK,IAAIU,sBAAsB,CAACJ,KAAD,EAAQN,KAAK,CAAC1B,MAAN,CAAaO,KAArB;AAApI;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA,mBAAYyB,KAAZ;AAAA;AAAA;AAAA;AAAA,wBADJ;AAKH,eAPC;AADN;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BAlCR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eA6FI,QAAC,IAAD;AAAM,MAAA,GAAG,EAAG,CAAZ;AAAgB,MAAA,cAAc,EAAC,KAA/B;AAAA,iBACM/E,OAAO,iBACL,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAGyE,KAAK,IAAIe,mBAAmB,CAAC,MAAD,CAAjF;AAAA,kBACMjH,YAAY,CAAC,uBAAD;AADlB;AAAA;AAAA;AAAA;AAAA,cAFR,EAKM2B,SAAS,iBACP,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAGuE,KAAK,IAAIe,mBAAmB,CAAC,QAAD,CAAjF;AAAA,kBACMjH,YAAY,CAAC,yBAAD;AADlB;AAAA;AAAA;AAAA;AAAA,cANR,EASOuB,UAAU,KAAKV,gBAAhB,iBACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAGqF,KAAK,IAAIe,mBAAmB,CAAC,QAAD,CAAjF;AAAA,kBACMjH,YAAY,CAAEuB,UAAU,KAAKT,iBAAhB,GAAqC,wBAArC,GAAgE,yBAAjE;AADlB;AAAA;AAAA;AAAA;AAAA,cAVR,EAaMe,MAAM,iBACJ,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAGqE,KAAK,IAAIe,mBAAmB,CAAC,KAAD,CAAjF;AAAA,kBACMjH,YAAY,CAAC,sBAAD;AADlB;AAAA;AAAA;AAAA;AAAA,cAdR,EAiBQ+B,SAAS,CAAC4C,MAAV,GAAmB,CAAnB,IAAwB1C,WAAW,CAAC0C,MAAZ,GAAqB,CAA9C,IAAqD5C,SAAS,CAAC4C,MAAV,KAAqB1C,WAAW,CAAC0C,MAAvF,iBACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAG,MAAMsC,mBAAmB,CAAC,6BAAD,CAA9E;AAAA,kBACMjH,YAAY,CAAC,MAAD;AADlB;AAAA;AAAA;AAAA;AAAA,cAlBR,EAqBQmC,UAAU,CAACwC,MAAX,GAAoB,CAApB,IAAyBtC,YAAY,CAACsC,MAAb,GAAsB,CAAhD,IAAuDxC,UAAU,CAACwC,MAAX,KAAsBtC,YAAY,CAACsC,MAA3F,iBACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAG,MAAMsC,mBAAmB,CAAC,uBAAD,CAA9E;AAAA,kBACMjH,YAAY,CAAC,MAAD;AADlB;AAAA;AAAA;AAAA;AAAA,cAtBR;AAAA;AAAA;AAAA;AAAA;AAAA,YA7FJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0HH,CA7WM;;GAAMgB,wB;UAGoEJ,c;;;KAHpEI,wB","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CrackableDataType, GroupInformationComposer, GroupInformationEvent, RoomControllerLevel, RoomObjectCategory, RoomObjectVariable, RoomWidgetEnumItemExtradataParameter, RoomWidgetFurniInfoUsagePolicyEnum, SetObjectDataMessageComposer, StringDataType } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { CreateLinkEvent, GetGroupInformation, GetRoomEngine, LocalizeText, RoomWidgetFurniActionMessage, RoomWidgetUpdateInfostandFurniEvent, SendMessageComposer } from '../../../../api';\nimport { Button, Column, Flex, LayoutBadgeImageView, LayoutLimitedEditionCompactPlateView, LayoutRarityLevelView, Text, UserProfileIconView } from '../../../../common';\nimport { UseMessageEventHook } from '../../../../hooks';\nimport { useRoomContext } from '../../RoomContext';\n\ninterface InfoStandWidgetFurniViewProps\n{\n    furniData: RoomWidgetUpdateInfostandFurniEvent;\n    close: () => void;\n}\n\nconst PICKUP_MODE_NONE: number = 0;\nconst PICKUP_MODE_EJECT: number = 1;\nconst PICKUP_MODE_FULL: number = 2;\n\nexport const InfoStandWidgetFurniView: FC<InfoStandWidgetFurniViewProps> = props =>\n{\n    const { furniData = null, close = null } = props;\n    const { roomSession = null, eventDispatcher = null, widgetHandler = null } = useRoomContext();\n    \n    const [ pickupMode, setPickupMode ] = useState(0);\n    const [ canMove, setCanMove ] = useState(false);\n    const [ canRotate, setCanRotate ] = useState(false);\n    const [ canUse, setCanUse ] = useState(false);\n    const [ furniKeys, setFurniKeys ] = useState<string[]>([]);\n    const [ furniValues, setFurniValues ] = useState<string[]>([]);\n    const [ customKeys, setCustomKeys ] = useState<string[]>([]);\n    const [ customValues, setCustomValues ] = useState<string[]>([]);\n    const [ isCrackable, setIsCrackable ] = useState(false);\n    const [ crackableHits, setCrackableHits ] = useState(0);\n    const [ crackableTarget, setCrackableTarget ] = useState(0);\n    const [ godMode, setGodMode ] = useState(false);\n    const [ canSeeFurniId, setCanSeeFurniId ] = useState(false);\n    const [ groupName, setGroupName ] = useState<string>(null);\n\n    useEffect(() =>\n    {\n        let pickupMode = PICKUP_MODE_NONE;\n        let canMove = false;\n        let canRotate = false;\n        let canUse = false;\n        let furniKeyss: string[] = [];\n        let furniValuess: string[] = [];\n        let customKeyss: string[] = [];\n        let customValuess: string[] = [];\n        let isCrackable = false;\n        let crackableHits = 0;\n        let crackableTarget = 0;\n        let godMode = false;\n        let canSeeFurniId = false;\n        \n        const isValidController = (furniData.roomControllerLevel >= RoomControllerLevel.GUEST);\n\n        if(isValidController || furniData.isOwner || furniData.isRoomOwner || furniData.isAnyRoomController)\n        {\n            canMove = true;\n            canRotate = !furniData.isWallItem;\n\n            if(furniData.roomControllerLevel >= RoomControllerLevel.MODERATOR) godMode = true;\n        }\n\n        if(furniData.isAnyRoomController)\n        {\n            canSeeFurniId = true;\n        }\n        \n        if((((furniData.usagePolicy === RoomWidgetFurniInfoUsagePolicyEnum.EVERYBODY) || ((furniData.usagePolicy === RoomWidgetFurniInfoUsagePolicyEnum.CONTROLLER) && isValidController)) || ((furniData.extraParam === RoomWidgetEnumItemExtradataParameter.JUKEBOX) && isValidController)) || ((furniData.extraParam === RoomWidgetEnumItemExtradataParameter.USABLE_PRODUCT) && isValidController)) canUse = true;\n\n        if(furniData.extraParam)\n        {\n            if(furniData.extraParam === RoomWidgetEnumItemExtradataParameter.CRACKABLE_FURNI)\n            {\n                const stuffData = (furniData.stuffData as CrackableDataType);\n\n                canUse = true;\n                isCrackable = true;\n                crackableHits = stuffData.hits;\n                crackableTarget = stuffData.target;\n            }\n\n            if(godMode)\n            {\n                const extraParam = furniData.extraParam.substr(RoomWidgetEnumItemExtradataParameter.BRANDING_OPTIONS.length);\n\n                if(extraParam)\n                {\n                    const parts = extraParam.split('\\t');\n\n                    for(const part of parts)\n                    {\n                        const value = part.split('=');\n\n                        if(value && (value.length === 2))\n                        {\n                            furniKeyss.push(value[0]);\n                            furniValuess.push(value[1]);\n                        }\n                    }\n                }\n            }\n        }\n\n        if(godMode)\n        {\n            const roomObject = GetRoomEngine().getRoomObject(roomSession.roomId, furniData.id, (furniData.isWallItem) ? RoomObjectCategory.WALL : RoomObjectCategory.FLOOR);\n\n            if(roomObject)\n            {\n                const customVariables = roomObject.model.getValue<string[]>(RoomObjectVariable.FURNITURE_CUSTOM_VARIABLES);\n                const furnitureData = roomObject.model.getValue<{ [index: string]: string }>(RoomObjectVariable.FURNITURE_DATA);\n\n                if(customVariables && customVariables.length)\n                {\n                    for(const customVariable of customVariables)\n                    {\n                        customKeyss.push(customVariable);\n                        customValuess.push((furnitureData[customVariable]) || '');\n                    }\n                }\n            }\n        }\n\n        if(furniData.isOwner || furniData.isAnyRoomController) pickupMode = PICKUP_MODE_FULL;\n\n        else if(furniData.isRoomOwner || (furniData.roomControllerLevel >= RoomControllerLevel.GUILD_ADMIN)) pickupMode = PICKUP_MODE_EJECT;\n\n        if(furniData.isStickie) pickupMode = PICKUP_MODE_NONE;\n\n        setPickupMode(pickupMode);\n        setCanMove(canMove);\n        setCanRotate(canRotate);\n        setCanUse(canUse);\n        setFurniKeys(furniKeyss);\n        setFurniValues(furniValuess);\n        setCustomKeys(customKeyss);\n        setCustomValues(customValuess);\n        setIsCrackable(isCrackable);\n        setCrackableHits(crackableHits);\n        setCrackableTarget(crackableTarget);\n        setGodMode(godMode);\n        setCanSeeFurniId(canSeeFurniId);\n        setGroupName(null);\n        \n        if(furniData.groupId) SendMessageComposer(new GroupInformationComposer(furniData.groupId, false));\n    }, [ roomSession, furniData ]);\n\n    const onGroupInformationEvent = useCallback((event: GroupInformationEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(!furniData || furniData.groupId !== parser.id || parser.flag) return;\n\n        if(groupName) setGroupName(null);\n\n        setGroupName(parser.title);\n    }, [ furniData, groupName ]);\n\n    UseMessageEventHook(GroupInformationEvent, onGroupInformationEvent);\n\n    const onFurniSettingChange = useCallback((index: number, value: string) =>\n    {\n        const clone = Array.from(furniValues);\n\n        clone[index] = value;\n\n        setFurniValues(clone);\n    }, [ furniValues ]);\n\n    const onCustomVariableChange = useCallback((index: number, value: string) =>\n    {\n        const clone = Array.from(customValues);\n\n        clone[index] = value;\n\n        setCustomValues(clone);\n    }, [ customValues ]);\n\n    const getFurniSettingsAsString = useCallback(() =>\n    {\n        if(furniKeys.length === 0 || furniValues.length === 0) return '';\n\n        let data = '';\n\n        let i = 0;\n\n        while(i < furniKeys.length)\n        {\n            const key = furniKeys[i];\n            const value = furniValues[i];\n\n            data = (data + (key + '=' + value + '\\t'));\n\n            i++;\n        }\n\n        return data;\n    }, [ furniKeys, furniValues ]);\n\n    const processButtonAction = useCallback((action: string) =>\n    {\n        if(!action || (action === '')) return;\n\n        let messageType: string = null;\n        let objectData: string = null;\n\n        switch(action)\n        {\n            case 'buy_one':\n                CreateLinkEvent(`catalog/open/offerId/${ furniData.purchaseOfferId }`);\n                return;\n            case 'move':\n                messageType = RoomWidgetFurniActionMessage.MOVE;\n                break;\n            case 'rotate':\n                messageType = RoomWidgetFurniActionMessage.ROTATE;\n                break;\n            case 'pickup':\n                if(pickupMode === PICKUP_MODE_FULL) messageType = RoomWidgetFurniActionMessage.PICKUP;\n                else messageType = RoomWidgetFurniActionMessage.EJECT;\n                break;\n            case 'use':\n                messageType = RoomWidgetFurniActionMessage.USE;\n                break;\n            case 'save_branding_configuration':\n                messageType = RoomWidgetFurniActionMessage.SAVE_STUFF_DATA;\n                objectData = getFurniSettingsAsString();\n                break;\n            case 'save_custom_variables':\n                const map = new Map();\n\n                for(let i = 0; i < customKeys.length; i++)\n                {\n                    const key = customKeys[i];\n                    const value = customValues[i];\n\n                    if((key && key.length) && (value && value.length)) map.set(key, value);\n                }\n\n                SendMessageComposer(new SetObjectDataMessageComposer(furniData.id, map));\n                break;\n        }\n\n        if(!messageType) return;\n\n        widgetHandler.processWidgetMessage(new RoomWidgetFurniActionMessage(messageType, furniData.id, furniData.category, furniData.purchaseOfferId, objectData));\n    }, [ widgetHandler, furniData, pickupMode, customKeys, customValues, getFurniSettingsAsString ]);\n\n    const getGroupBadgeCode = useCallback(() =>\n    {\n        const stringDataType = (furniData.stuffData as StringDataType);\n\n        if(!stringDataType || !(stringDataType instanceof StringDataType)) return null;\n\n        return stringDataType.getValue(2);\n    }, [ furniData ]);\n\n    if(!furniData) return null;\n\n    return (\n        <Column gap={ 1 } alignItems=\"end\">\n            <Column className=\"nitro-infostand\">\n                <Column overflow=\"visible\" className=\"container-fluid content-area\" gap={ 1 }>\n                    <Column gap={ 1 }>\n                        <Flex alignItems=\"center\" justifyContent=\"between\" gap={ 1 }>\n                            <Text gfbold variant=\"white\" wrap>{ furniData.name }</Text>\n                            <i className=\"infostand-close\" onClick={ close } />\n                        </Flex>\n                        <hr className=\"m-0\" />\n                    </Column>\n                    <Column gap={ 1 }>\n                        <Flex position=\"relative\" gap={ 1 }>\n                            { furniData.stuffData.isUnique &&\n                                <div className=\"position-absolute end-0\">\n                                    <LayoutLimitedEditionCompactPlateView uniqueNumber={ furniData.stuffData.uniqueNumber } uniqueSeries={ furniData.stuffData.uniqueSeries } />\n                                </div> }\n                            { (furniData.stuffData.rarityLevel > -1) &&\n                                <div className=\"position-absolute end-0\">\n                                    <LayoutRarityLevelView level={ furniData.stuffData.rarityLevel } />\n                                </div> }\n                            { furniData.image && furniData.image.src.length && \n                                <img className=\"d-block mx-auto\" src={ furniData.image.src } alt=\"\" /> }\n                        </Flex>\n                        <hr className=\"m-0\" />\n                    </Column>\n                    <Column gap={ 1 }>\n                        <Text fullWidth wrap textBreak variant=\"white\">{ furniData.description }</Text>\n                        <hr className=\"m-0\" />\n                    </Column>\n                    <Column gap={ 1 }>\n                        <Flex alignItems=\"center\" gap={ 1 }>\n                            <UserProfileIconView userId={ furniData.ownerId } />\n                            <Text variant=\"white\" wrap>\n                                { [ furniData.ownerName ] }\n                            </Text>\n                        </Flex>\n                        { (furniData.purchaseOfferId > 0) &&\n                            <Flex>\n                                <Button className=\"volter-button\" onClick={ event => processButtonAction('buy_one') }>\n                                    { LocalizeText('infostand.button.buy') }\n                                </Button>\n                            </Flex> }\n                    </Column>\n                    <Column gap={ 1 }>\n                        { isCrackable &&\n                            <>\n                                <hr className=\"m-0\" />\n                                <Text variant=\"white\" wrap>{ LocalizeText('infostand.crackable_furni.hits_remaining', [ 'hits', 'target' ], [ crackableHits.toString(), crackableTarget.toString() ]) }</Text>\n                            </> }\n                        { furniData.groupId > 0 &&\n                            <>\n                                <hr className=\"m-0\" />\n                                <Flex pointer alignItems=\"center\" gap={ 2 } onClick={ () => GetGroupInformation(furniData.groupId) }>\n                                    <LayoutBadgeImageView badgeCode={ getGroupBadgeCode() } isGroup={ true } />\n                                    <Text variant=\"white\" underline>{ groupName }</Text>\n                                </Flex>\n                            </> }\n                        { godMode &&\n                            <>\n                                <hr className=\"m-0\" />\n                                { canSeeFurniId && <Text wrap variant=\"white\">ID: { furniData.id }</Text> }\n                                { (furniKeys.length > 0) &&\n                                    <>\n                                        <hr className=\"m-0\"/>\n                                        <Column gap={ 1 }>\n                                            { furniKeys.map((key, index) =>\n                                            {\n                                                return (\n                                                    <Flex key={ index } alignItems=\"center\" gap={ 1 }>\n                                                        <Text wrap align=\"end\" variant=\"white\" className=\"col-4\">{ key }</Text>\n                                                        <input type=\"text\" className=\"form-control form-control-sm\" value={ furniValues[index] } onChange={ event => onFurniSettingChange(index, event.target.value) }/>\n                                                    </Flex>);\n                                            }) }\n                                        </Column>\n                                    </> }\n                            </> }\n                        { (customKeys.length > 0) &&\n                            <>\n                                <hr className=\"m-0 my-1\"/>\n                                <Column gap={ 1 }>\n                                    { customKeys.map((key, index) =>\n                                    {\n                                        return (\n                                            <Flex key={ index } alignItems=\"center\" gap={ 1 }>\n                                                <Text small wrap align=\"end\" variant=\"white\" className=\"col-4\">{ key }</Text>\n                                                <input type=\"text\" className=\"form-control form-control-sm\" value={ customValues[index] } onChange={ event => onCustomVariableChange(index, event.target.value) }/>\n                                            </Flex>);\n                                    }) }\n                                </Column>\n                            </> }\n                    </Column>\n                </Column>\n            </Column>\n            <Flex gap={ 2 } justifyContent=\"end\">\n                { canMove &&\n                    <Button className=\"infostand-buttons px-2\" onClick={ event => processButtonAction('move') }>\n                        { LocalizeText('infostand.button.move') }\n                    </Button> }\n                { canRotate &&\n                    <Button className=\"infostand-buttons px-2\" onClick={ event => processButtonAction('rotate') }>\n                        { LocalizeText('infostand.button.rotate') }\n                    </Button> }\n                { (pickupMode !== PICKUP_MODE_NONE) &&\n                    <Button className=\"infostand-buttons px-2\" onClick={ event => processButtonAction('pickup') }>\n                        { LocalizeText((pickupMode === PICKUP_MODE_EJECT) ? 'infostand.button.eject' : 'infostand.button.pickup') }\n                    </Button> }\n                { canUse &&\n                    <Button className=\"infostand-buttons px-2\" onClick={ event => processButtonAction('use') }>\n                        { LocalizeText('infostand.button.use') }\n                    </Button> }\n                { ((furniKeys.length > 0 && furniValues.length > 0) && (furniKeys.length === furniValues.length)) &&\n                    <Button className=\"infostand-buttons px-2\" onClick={ () => processButtonAction('save_branding_configuration') }>\n                        { LocalizeText('save') }\n                    </Button> }\n                { ((customKeys.length > 0 && customValues.length > 0) && (customKeys.length === customValues.length)) &&\n                    <Button className=\"infostand-buttons px-2\" onClick={ () => processButtonAction('save_custom_variables') }>\n                        { LocalizeText('save') }\n                    </Button> }\n            </Flex>\n        </Column>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}