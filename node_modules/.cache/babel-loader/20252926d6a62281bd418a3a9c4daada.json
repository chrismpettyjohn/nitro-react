{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/layout/LayoutNotificationAlertView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { NotificationAlertType } from '../../api';\nimport { NitroCardContentView, NitroCardHeaderView, NitroCardView } from '../card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LayoutNotificationAlertView = props => {\n  _s();\n\n  const {\n    title = '',\n    close = null,\n    classNames = [],\n    children = null,\n    type = NotificationAlertType.DEFAULT,\n    ...rest\n  } = props;\n  const getClassNames = useMemo(() => {\n    const newClassNames = ['nitro-alert'];\n    newClassNames.push('nitro-alert-' + type);\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [classNames, type]);\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    classNames: getClassNames,\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: title,\n      onCloseClick: close\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      grow: true,\n      justifyContent: \"between\",\n      overflow: \"hidden\",\n      className: \"text-black\",\n      gap: 0,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LayoutNotificationAlertView, \"dyksOB5DadzwRcuUMLdvWwPn8K8=\");\n\n_c = LayoutNotificationAlertView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutNotificationAlertView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/layout/LayoutNotificationAlertView.tsx"],"names":["useMemo","NotificationAlertType","NitroCardContentView","NitroCardHeaderView","NitroCardView","LayoutNotificationAlertView","props","title","close","classNames","children","type","DEFAULT","rest","getClassNames","newClassNames","push","length"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AACA,SAASC,qBAAT,QAAsC,WAAtC;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,EAAoDC,aAApD,QAA6F,SAA7F;;AASA,OAAO,MAAMC,2BAAiE,GAAGC,KAAK,IACtF;AAAA;;AACI,QAAM;AAAEC,IAAAA,KAAK,GAAG,EAAV;AAAcC,IAAAA,KAAK,GAAG,IAAtB;AAA4BC,IAAAA,UAAU,GAAG,EAAzC;AAA6CC,IAAAA,QAAQ,GAAG,IAAxD;AAA6DC,IAAAA,IAAI,GAAGV,qBAAqB,CAACW,OAA1F;AAAmG,OAAGC;AAAtG,MAA+GP,KAArH;AAEA,QAAMQ,aAAa,GAAGd,OAAO,CAAC,MAC9B;AACI,UAAMe,aAAuB,GAAG,CAAE,aAAF,CAAhC;AAEAA,IAAAA,aAAa,CAACC,IAAd,CAAmB,iBAAiBL,IAApC;AAEA,QAAGF,UAAU,CAACQ,MAAd,EAAsBF,aAAa,CAACC,IAAd,CAAmB,GAAGP,UAAtB;AAEtB,WAAOM,aAAP;AACH,GAT4B,EAS1B,CAAEN,UAAF,EAAcE,IAAd,CAT0B,CAA7B;AAWA,sBACI,QAAC,aAAD;AAAe,IAAA,UAAU,EAAGG,aAA5B;AAAA,OAAiDD,IAAjD;AAAA,4BACI,QAAC,mBAAD;AAAqB,MAAA,UAAU,EAAGN,KAAlC;AAA0C,MAAA,YAAY,EAAGC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,oBAAD;AAAsB,MAAA,IAAI,MAA1B;AAA2B,MAAA,cAAc,EAAC,SAA1C;AAAoD,MAAA,QAAQ,EAAC,QAA7D;AAAsE,MAAA,SAAS,EAAC,YAAhF;AAA6F,MAAA,GAAG,EAAG,CAAnG;AAAA,gBACME;AADN;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAvBM;;GAAML,2B;;KAAAA,2B","sourcesContent":["import { FC, useMemo } from 'react';\nimport { NotificationAlertType } from '../../api';\nimport { NitroCardContentView, NitroCardHeaderView, NitroCardView, NitroCardViewProps } from '../card';\n\nexport interface LayoutNotificationAlertViewProps extends NitroCardViewProps\n{\n    title?: string;\n    type?: string;\n    close: () => void;\n}\n\nexport const LayoutNotificationAlertView: FC<LayoutNotificationAlertViewProps> = props =>\n{\n    const { title = '', close = null, classNames = [], children = null,type = NotificationAlertType.DEFAULT, ...rest } = props;\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [ 'nitro-alert' ];\n        \n        newClassNames.push('nitro-alert-' + type);\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ classNames, type ]);\n\n    return (\n        <NitroCardView classNames={ getClassNames } { ...rest }>\n            <NitroCardHeaderView headerText={ title } onCloseClick={ close } />\n            <NitroCardContentView grow justifyContent=\"between\" overflow=\"hidden\" className=\"text-black\" gap={ 0 }>\n                { children }\n            </NitroCardContentView>\n        </NitroCardView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}