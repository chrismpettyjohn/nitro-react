{"ast":null,"code":"import { Disposable } from '../../core/common/disposable/Disposable';\nimport { Vector3d } from '../utils/Vector3d';\nimport { RoomObjectModel } from './RoomObjectModel';\nexport class RoomObject extends Disposable {\n  constructor(id, stateCount, type) {\n    super();\n    this._id = void 0;\n    this._instanceId = void 0;\n    this._type = void 0;\n    this._model = void 0;\n    this._location = void 0;\n    this._direction = void 0;\n    this._states = void 0;\n    this._visualization = void 0;\n    this._logic = void 0;\n    this._pendingLogicMessages = void 0;\n    this._updateCounter = void 0;\n    this._isReady = void 0;\n    this._id = id;\n    this._instanceId = RoomObject.OBJECT_COUNTER++;\n    this._type = type;\n    this._model = new RoomObjectModel();\n    this._location = new Vector3d();\n    this._direction = new Vector3d();\n    this._states = [];\n    this._visualization = null;\n    this._logic = null;\n    this._pendingLogicMessages = [];\n    this._updateCounter = 0;\n    this._isReady = false;\n    let i = stateCount - 1;\n\n    while (i >= 0) {\n      this._states[i] = 0;\n      i--;\n    }\n  }\n\n  onDispose() {\n    this._pendingLogicMessages = [];\n    this.setVisualization(null);\n    this.setLogic(null);\n    if (this._model) this._model.dispose();\n    super.onDispose();\n  }\n\n  getLocation() {\n    return this._location;\n  }\n\n  setLocation(vector) {\n    if (!vector) return;\n    if (vector.x === this._location.x && vector.y === this._location.y && vector.z === this._location.z) return;\n    this._location.x = vector.x;\n    this._location.y = vector.y;\n    this._location.z = vector.z;\n    this._updateCounter++;\n  }\n\n  getDirection() {\n    return this._direction;\n  }\n\n  setDirection(vector) {\n    if (!vector) return;\n    if (vector.x === this._direction.x && vector.y === this._direction.y && vector.z === this._direction.z) return;\n    this._direction.x = (vector.x % 360 + 360) % 360;\n    this._direction.y = (vector.y % 360 + 360) % 360;\n    this._direction.z = (vector.z % 360 + 360) % 360;\n    this._updateCounter++;\n  }\n\n  getState() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (index >= 0 && index < this._states.length) {\n      return this._states[index];\n    }\n\n    return -1;\n  }\n\n  setState(state) {\n    let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (index >= 0 && index < this._states.length) {\n      if (this._states[index] !== state) {\n        this._states[index] = state;\n        this._updateCounter++;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  setVisualization(visualization) {\n    if (this._visualization === visualization) return;\n    if (this._visualization) this._visualization.dispose();\n    this._visualization = visualization;\n    if (this._visualization) this._visualization.object = this;\n  }\n\n  setLogic(logic) {\n    if (this._logic === logic) return;\n    const eventHandler = this._logic;\n\n    if (eventHandler) {\n      this._logic = null;\n      eventHandler.setObject(null);\n    }\n\n    this._logic = logic;\n\n    if (this._logic) {\n      this._logic.setObject(this);\n\n      while (this._pendingLogicMessages.length) {\n        const message = this._pendingLogicMessages.shift();\n\n        this._logic.processUpdateMessage(message);\n      }\n    }\n  }\n\n  processUpdateMessage(message) {\n    if (this._logic) return this._logic.processUpdateMessage(message);\n\n    this._pendingLogicMessages.push(message);\n  }\n\n  tearDown() {\n    if (this._logic) this._logic.tearDown();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get instanceId() {\n    return this._instanceId;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get model() {\n    return this._model;\n  }\n\n  get visualization() {\n    return this._visualization;\n  }\n\n  get mouseHandler() {\n    return this._logic;\n  }\n\n  get logic() {\n    return this._logic;\n  }\n\n  get location() {\n    return this._location;\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  get updateCounter() {\n    return this._updateCounter;\n  }\n\n  set updateCounter(count) {\n    this._updateCounter = count;\n  }\n\n  get isReady() {\n    return this._isReady;\n  }\n\n  set isReady(flag) {\n    this._isReady = flag;\n  }\n\n}\nRoomObject.OBJECT_COUNTER = 0;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/room/object/RoomObject.ts"],"names":["Disposable","Vector3d","RoomObjectModel","RoomObject","constructor","id","stateCount","type","_id","_instanceId","_type","_model","_location","_direction","_states","_visualization","_logic","_pendingLogicMessages","_updateCounter","_isReady","OBJECT_COUNTER","i","onDispose","setVisualization","setLogic","dispose","getLocation","setLocation","vector","x","y","z","getDirection","setDirection","getState","index","length","setState","state","visualization","object","logic","eventHandler","setObject","message","shift","processUpdateMessage","push","tearDown","instanceId","model","mouseHandler","location","direction","updateCounter","count","isReady","flag"],"mappings":"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","sourcesContent":["import { Disposable } from '../../core/common/disposable/Disposable';\r\nimport { RoomObjectUpdateMessage } from '../messages/RoomObjectUpdateMessage';\r\nimport { IVector3D } from '../utils/IVector3D';\r\nimport { Vector3d } from '../utils/Vector3d';\r\nimport { IRoomObjectController } from './IRoomObjectController';\r\nimport { IRoomObjectModel } from './IRoomObjectModel';\r\nimport { IRoomObjectEventHandler } from './logic/IRoomObjectEventHandler';\r\nimport { IRoomObjectMouseHandler } from './logic/IRoomObjectMouseHandler';\r\nimport { RoomObjectModel } from './RoomObjectModel';\r\nimport { IRoomObjectVisualization } from './visualization/IRoomObjectVisualization';\r\n\r\nexport class RoomObject extends Disposable implements IRoomObjectController\r\n{\r\n    private static OBJECT_COUNTER: number = 0;\r\n\r\n    private _id: number;\r\n    private _instanceId: number;\r\n    private _type: string;\r\n    private _model: IRoomObjectModel;\r\n\r\n    private _location: IVector3D;\r\n    private _direction: IVector3D;\r\n    private _states: number[];\r\n\r\n    private _visualization: IRoomObjectVisualization;\r\n    private _logic: IRoomObjectEventHandler;\r\n    private _pendingLogicMessages: RoomObjectUpdateMessage[];\r\n\r\n    private _updateCounter: number;\r\n    private _isReady: boolean;\r\n\r\n    constructor(id: number, stateCount: number, type: string)\r\n    {\r\n        super();\r\n\r\n        this._id = id;\r\n        this._instanceId = RoomObject.OBJECT_COUNTER++;\r\n        this._type = type;\r\n        this._model = new RoomObjectModel();\r\n\r\n        this._location = new Vector3d();\r\n        this._direction = new Vector3d();\r\n        this._states = [];\r\n\r\n        this._visualization = null;\r\n        this._logic = null;\r\n        this._pendingLogicMessages = [];\r\n\r\n        this._updateCounter = 0;\r\n        this._isReady = false;\r\n\r\n        let i = (stateCount - 1);\r\n\r\n        while(i >= 0)\r\n        {\r\n            this._states[i] = 0;\r\n\r\n            i--;\r\n        }\r\n    }\r\n\r\n    protected onDispose(): void\r\n    {\r\n        this._pendingLogicMessages = [];\r\n\r\n        this.setVisualization(null);\r\n        this.setLogic(null);\r\n\r\n        if(this._model) this._model.dispose();\r\n\r\n        super.onDispose();\r\n    }\r\n\r\n    public getLocation(): IVector3D\r\n    {\r\n        return this._location;\r\n    }\r\n\r\n    public setLocation(vector: IVector3D): void\r\n    {\r\n        if(!vector) return;\r\n\r\n        if((vector.x === this._location.x) && (vector.y === this._location.y) && (vector.z === this._location.z)) return;\r\n\r\n        this._location.x = vector.x;\r\n        this._location.y = vector.y;\r\n        this._location.z = vector.z;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public getDirection(): IVector3D\r\n    {\r\n        return this._direction;\r\n    }\r\n\r\n    public setDirection(vector: IVector3D): void\r\n    {\r\n        if(!vector) return;\r\n\r\n        if((vector.x === this._direction.x) && (vector.y === this._direction.y) && (vector.z === this._direction.z)) return;\r\n\r\n        this._direction.x = (((vector.x % 360) + 360) % 360);\r\n        this._direction.y = (((vector.y % 360) + 360) % 360);\r\n        this._direction.z = (((vector.z % 360) + 360) % 360);\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public getState(index: number = 0): number\r\n    {\r\n        if((index >= 0) && (index < this._states.length))\r\n        {\r\n            return this._states[index];\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    public setState(state: number, index: number = 0): boolean\r\n    {\r\n        if((index >= 0) && (index < this._states.length))\r\n        {\r\n            if(this._states[index] !== state)\r\n            {\r\n                this._states[index] = state;\r\n\r\n                this._updateCounter++;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public setVisualization(visualization: IRoomObjectVisualization): void\r\n    {\r\n        if(this._visualization === visualization) return;\r\n\r\n        if(this._visualization) this._visualization.dispose();\r\n\r\n        this._visualization = visualization;\r\n\r\n        if(this._visualization) this._visualization.object = this;\r\n    }\r\n\r\n    public setLogic(logic: IRoomObjectEventHandler): void\r\n    {\r\n        if(this._logic === logic) return;\r\n\r\n        const eventHandler = this._logic;\r\n\r\n        if(eventHandler)\r\n        {\r\n            this._logic = null;\r\n\r\n            eventHandler.setObject(null);\r\n        }\r\n\r\n        this._logic = logic;\r\n\r\n        if(this._logic)\r\n        {\r\n            this._logic.setObject(this);\r\n\r\n            while(this._pendingLogicMessages.length)\r\n            {\r\n                const message = this._pendingLogicMessages.shift();\r\n\r\n                this._logic.processUpdateMessage(message);\r\n            }\r\n        }\r\n    }\r\n\r\n    public processUpdateMessage(message: RoomObjectUpdateMessage): void\r\n    {\r\n        if(this._logic) return this._logic.processUpdateMessage(message);\r\n\r\n        this._pendingLogicMessages.push(message);\r\n    }\r\n\r\n    public tearDown(): void\r\n    {\r\n        if(this._logic) this._logic.tearDown();\r\n    }\r\n\r\n    public get id(): number\r\n    {\r\n        return this._id;\r\n    }\r\n\r\n    public get instanceId(): number\r\n    {\r\n        return this._instanceId;\r\n    }\r\n\r\n    public get type(): string\r\n    {\r\n        return this._type;\r\n    }\r\n\r\n    public get model(): IRoomObjectModel\r\n    {\r\n        return this._model;\r\n    }\r\n\r\n    public get visualization(): IRoomObjectVisualization\r\n    {\r\n        return this._visualization;\r\n    }\r\n\r\n    public get mouseHandler(): IRoomObjectMouseHandler\r\n    {\r\n        return this._logic as IRoomObjectMouseHandler;\r\n    }\r\n\r\n    public get logic(): IRoomObjectEventHandler\r\n    {\r\n        return this._logic;\r\n    }\r\n\r\n    public get location(): IVector3D\r\n    {\r\n        return this._location;\r\n    }\r\n\r\n    public get direction(): IVector3D\r\n    {\r\n        return this._direction;\r\n    }\r\n\r\n    public get updateCounter(): number\r\n    {\r\n        return this._updateCounter;\r\n    }\r\n\r\n    public set updateCounter(count: number)\r\n    {\r\n        this._updateCounter = count;\r\n    }\r\n\r\n    public get isReady(): boolean\r\n    {\r\n        return this._isReady;\r\n    }\r\n\r\n    public set isReady(flag: boolean)\r\n    {\r\n        this._isReady = flag;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}