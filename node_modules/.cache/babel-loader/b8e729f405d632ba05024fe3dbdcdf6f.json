{"ast":null,"code":"import { AvatarAction } from '../../../../../avatar/enum/AvatarAction';\nexport class MutedBubbleAddition {\n  constructor(id, visualization) {\n    this._id = void 0;\n    this._visualization = void 0;\n    this._asset = void 0;\n    this._id = id;\n    this._visualization = visualization;\n    this._asset = null;\n  }\n\n  dispose() {\n    this._visualization = null;\n    this._asset = null;\n  }\n\n  update(sprite, scale) {\n    if (!sprite) return;\n    let additionScale = 64;\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (scale < 48) {\n      this._asset = this._visualization.getAvatarRenderAsset('avatar_addition_user_muted_small');\n      additionScale = 32;\n      offsetX = -12;\n      offsetY = -66;\n    } else {\n      this._asset = this._visualization.getAvatarRenderAsset('avatar_addition_user_muted');\n      offsetX = -15;\n      offsetY = -110;\n    }\n\n    if (this._visualization.posture === AvatarAction.POSTURE_SIT) offsetY += additionScale / 2;else if (this._visualization.posture === AvatarAction.POSTURE_LAY) offsetY += scale;\n\n    if (this._asset) {\n      sprite.visible = true;\n      sprite.texture = this._asset;\n      sprite.offsetX = offsetX;\n      sprite.offsetY = offsetY;\n      sprite.relativeDepth = -0.02;\n    } else {\n      sprite.visible = false;\n    }\n  }\n\n  animate(sprite) {\n    if (this._asset && sprite) {\n      sprite.texture = this._asset;\n    }\n\n    return false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/avatar/additions/MutedBubbleAddition.ts"],"names":["AvatarAction","MutedBubbleAddition","constructor","id","visualization","_id","_visualization","_asset","dispose","update","sprite","scale","additionScale","offsetX","offsetY","getAvatarRenderAsset","posture","POSTURE_SIT","POSTURE_LAY","visible","texture","relativeDepth","animate"],"mappings":"AAEA,SAASA,YAAT,QAA6B,yCAA7B;AAIA,OAAO,MAAMC,mBAAN,CACP;AAKIC,EAAAA,WAAW,CAACC,EAAD,EAAaC,aAAb,EACX;AAAA,SALQC,GAKR;AAAA,SAJQC,cAIR;AAAA,SAHQC,MAGR;AACI,SAAKF,GAAL,GAAWF,EAAX;AACA,SAAKG,cAAL,GAAsBF,aAAtB;AACA,SAAKG,MAAL,GAAc,IAAd;AACH;;AAEMC,EAAAA,OAAO,GACd;AACI,SAAKF,cAAL,GAAsB,IAAtB;AACA,SAAKC,MAAL,GAAc,IAAd;AACH;;AAEME,EAAAA,MAAM,CAACC,MAAD,EAA4BC,KAA5B,EACb;AACI,QAAG,CAACD,MAAJ,EAAY;AAEZ,QAAIE,aAAa,GAAG,EAApB;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,CAAd;;AAEA,QAAGH,KAAK,GAAG,EAAX,EACA;AACI,WAAKJ,MAAL,GAAc,KAAKD,cAAL,CAAoBS,oBAApB,CAAyC,kCAAzC,CAAd;AAEAH,MAAAA,aAAa,GAAG,EAAhB;AACAC,MAAAA,OAAO,GAAG,CAAC,EAAX;AACAC,MAAAA,OAAO,GAAG,CAAC,EAAX;AACH,KAPD,MASA;AACI,WAAKP,MAAL,GAAc,KAAKD,cAAL,CAAoBS,oBAApB,CAAyC,4BAAzC,CAAd;AAEAF,MAAAA,OAAO,GAAG,CAAC,EAAX;AACAC,MAAAA,OAAO,GAAG,CAAC,GAAX;AACH;;AAED,QAAG,KAAKR,cAAL,CAAoBU,OAApB,KAAgChB,YAAY,CAACiB,WAAhD,EAA6DH,OAAO,IAAKF,aAAa,GAAG,CAA5B,CAA7D,KACK,IAAG,KAAKN,cAAL,CAAoBU,OAApB,KAAgChB,YAAY,CAACkB,WAAhD,EAA6DJ,OAAO,IAAIH,KAAX;;AAElE,QAAG,KAAKJ,MAAR,EACA;AACIG,MAAAA,MAAM,CAACS,OAAP,GAAiB,IAAjB;AACAT,MAAAA,MAAM,CAACU,OAAP,GAAiB,KAAKb,MAAtB;AACAG,MAAAA,MAAM,CAACG,OAAP,GAAiBA,OAAjB;AACAH,MAAAA,MAAM,CAACI,OAAP,GAAiBA,OAAjB;AACAJ,MAAAA,MAAM,CAACW,aAAP,GAAuB,CAAC,IAAxB;AACH,KAPD,MASA;AACIX,MAAAA,MAAM,CAACS,OAAP,GAAiB,KAAjB;AACH;AACJ;;AAEMG,EAAAA,OAAO,CAACZ,MAAD,EACd;AACI,QAAG,KAAKH,MAAL,IAAeG,MAAlB,EACA;AACIA,MAAAA,MAAM,CAACU,OAAP,GAAiB,KAAKb,MAAtB;AACH;;AAED,WAAO,KAAP;AACH;;AAEY,MAAFJ,EAAE,GACb;AACI,WAAO,KAAKE,GAAZ;AACH;;AAxEL","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { IRoomObjectSprite } from '../../../../../../room/object/visualization/IRoomObjectSprite';\r\nimport { AvatarAction } from '../../../../../avatar/enum/AvatarAction';\r\nimport { AvatarVisualization } from '../AvatarVisualization';\r\nimport { IAvatarAddition } from './IAvatarAddition';\r\n\r\nexport class MutedBubbleAddition implements IAvatarAddition\r\n{\r\n    private _id: number;\r\n    private _visualization: AvatarVisualization;\r\n    private _asset: Texture<Resource>;\r\n\r\n    constructor(id: number, visualization: AvatarVisualization)\r\n    {\r\n        this._id = id;\r\n        this._visualization = visualization;\r\n        this._asset = null;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._visualization = null;\r\n        this._asset = null;\r\n    }\r\n\r\n    public update(sprite: IRoomObjectSprite, scale: number): void\r\n    {\r\n        if(!sprite) return;\r\n\r\n        let additionScale = 64;\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n\r\n        if(scale < 48)\r\n        {\r\n            this._asset = this._visualization.getAvatarRenderAsset('avatar_addition_user_muted_small');\r\n\r\n            additionScale = 32;\r\n            offsetX = -12;\r\n            offsetY = -66;\r\n        }\r\n        else\r\n        {\r\n            this._asset = this._visualization.getAvatarRenderAsset('avatar_addition_user_muted');\r\n\r\n            offsetX = -15;\r\n            offsetY = -110;\r\n        }\r\n\r\n        if(this._visualization.posture === AvatarAction.POSTURE_SIT) offsetY += (additionScale / 2);\r\n        else if(this._visualization.posture === AvatarAction.POSTURE_LAY) offsetY += scale;\r\n\r\n        if(this._asset)\r\n        {\r\n            sprite.visible = true;\r\n            sprite.texture = this._asset;\r\n            sprite.offsetX = offsetX;\r\n            sprite.offsetY = offsetY;\r\n            sprite.relativeDepth = -0.02;\r\n        }\r\n        else\r\n        {\r\n            sprite.visible = false;\r\n        }\r\n    }\r\n\r\n    public animate(sprite: IRoomObjectSprite): boolean\r\n    {\r\n        if(this._asset && sprite)\r\n        {\r\n            sprite.texture = this._asset;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public get id(): number\r\n    {\r\n        return this._id;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}