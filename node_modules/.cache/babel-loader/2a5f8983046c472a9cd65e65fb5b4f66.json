{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/navigator/views/room-settings/NavigatorRoomSettingsRightsTabView.tsx\",\n    _s = $RefreshSig$();\n\nimport { FlatControllerAddedEvent, FlatControllerRemovedEvent, FlatControllersEvent, RemoveAllRightsMessageComposer, RoomTakeRightsComposer, RoomUsersWithRightsComposer } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useState } from 'react';\nimport { LocalizeText, SendMessageComposer } from '../../../../api';\nimport { Button, Column, Flex, Grid, Text, UserProfileIconView } from '../../../../common';\nimport { UseMessageEventHook } from '../../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavigatorRoomSettingsRightsTabView = props => {\n  _s();\n\n  const {\n    roomData = null\n  } = props;\n  const [usersWithRights, setUsersWithRights] = useState(new Map());\n  const onFlatControllersEvent = useCallback(event => {\n    const parser = event.getParser();\n    if (!roomData || roomData.roomId !== parser.roomId) return;\n    setUsersWithRights(parser.users);\n  }, [roomData]);\n  UseMessageEventHook(FlatControllersEvent, onFlatControllersEvent);\n  const onFlatControllerAddedEvent = useCallback(event => {\n    const parser = event.getParser();\n    if (!roomData || roomData.roomId !== parser.roomId) return;\n    setUsersWithRights(prevValue => {\n      const newValue = new Map(prevValue);\n      newValue.set(parser.data.userId, parser.data.userName);\n      return newValue;\n    });\n  }, [roomData]);\n  UseMessageEventHook(FlatControllerAddedEvent, onFlatControllerAddedEvent);\n  const onFlatControllerRemovedEvent = useCallback(event => {\n    const parser = event.getParser();\n    if (!roomData || roomData.roomId !== parser.roomId) return;\n    setUsersWithRights(prevValue => {\n      const newValue = new Map(prevValue);\n      newValue.delete(parser.userId);\n      return newValue;\n    });\n  }, [roomData]);\n  UseMessageEventHook(FlatControllerRemovedEvent, onFlatControllerRemovedEvent);\n  useEffect(() => {\n    SendMessageComposer(new RoomUsersWithRightsComposer(roomData.roomId));\n  }, [roomData.roomId]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      size: 6,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: LocalizeText('navigator.flatctrls.userswithrights', ['displayed', 'total'], [usersWithRights.size.toString(), usersWithRights.size.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        overflow: \"hidden\",\n        className: \"bg-white rounded list-container p-2\",\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          fullWidth: true,\n          overflow: \"auto\",\n          gap: 1,\n          children: Array.from(usersWithRights.entries()).map((_ref, index) => {\n            let [id, name] = _ref;\n            return /*#__PURE__*/_jsxDEV(Flex, {\n              shrink: true,\n              alignItems: \"center\",\n              gap: 1,\n              overflow: \"hidden\",\n              children: [/*#__PURE__*/_jsxDEV(UserProfileIconView, {\n                userName: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                pointer: true,\n                grow: true,\n                onClick: event => SendMessageComposer(new RoomTakeRightsComposer(id)),\n                children: [\" \", name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      size: 6,\n      justifyContent: \"end\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        disabled: !usersWithRights.size,\n        onClick: event => SendMessageComposer(new RemoveAllRightsMessageComposer(roomData.roomId)),\n        children: LocalizeText('navigator.flatctrls.clear')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavigatorRoomSettingsRightsTabView, \"u1JjJn9zRB9r2bboD6Yn3jAnUSc=\");\n\n_c = NavigatorRoomSettingsRightsTabView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigatorRoomSettingsRightsTabView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/navigator/views/room-settings/NavigatorRoomSettingsRightsTabView.tsx"],"names":["FlatControllerAddedEvent","FlatControllerRemovedEvent","FlatControllersEvent","RemoveAllRightsMessageComposer","RoomTakeRightsComposer","RoomUsersWithRightsComposer","useCallback","useEffect","useState","LocalizeText","SendMessageComposer","Button","Column","Flex","Grid","Text","UserProfileIconView","UseMessageEventHook","NavigatorRoomSettingsRightsTabView","props","roomData","usersWithRights","setUsersWithRights","Map","onFlatControllersEvent","event","parser","getParser","roomId","users","onFlatControllerAddedEvent","prevValue","newValue","set","data","userId","userName","onFlatControllerRemovedEvent","delete","size","toString","Array","from","entries","map","index","id","name"],"mappings":"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","sourcesContent":["import { FlatControllerAddedEvent, FlatControllerRemovedEvent, FlatControllersEvent, RemoveAllRightsMessageComposer, RoomTakeRightsComposer, RoomUsersWithRightsComposer } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { IRoomData, LocalizeText, SendMessageComposer } from '../../../../api';\nimport { Button, Column, Flex, Grid, Text, UserProfileIconView } from '../../../../common';\nimport { UseMessageEventHook } from '../../../../hooks';\n\ninterface NavigatorRoomSettingsTabViewProps\n{\n    roomData: IRoomData;\n    handleChange: (field: string, value: string | number | boolean) => void;\n}\n\nexport const NavigatorRoomSettingsRightsTabView: FC<NavigatorRoomSettingsTabViewProps> = props =>\n{\n    const { roomData = null } = props;\n    const [ usersWithRights, setUsersWithRights ] = useState<Map<number, string>>(new Map());\n\n    const onFlatControllersEvent = useCallback((event: FlatControllersEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(!roomData || (roomData.roomId !== parser.roomId)) return;\n\n        setUsersWithRights(parser.users);\n    }, [ roomData ]);\n\n    UseMessageEventHook(FlatControllersEvent, onFlatControllersEvent);\n\n    const onFlatControllerAddedEvent = useCallback((event: FlatControllerAddedEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(!roomData || (roomData.roomId !== parser.roomId)) return;\n\n        setUsersWithRights(prevValue =>\n        {\n            const newValue = new Map(prevValue);\n\n            newValue.set(parser.data.userId, parser.data.userName);\n\n            return newValue;\n        });\n    }, [ roomData ]);\n\n    UseMessageEventHook(FlatControllerAddedEvent, onFlatControllerAddedEvent);\n\n    const onFlatControllerRemovedEvent = useCallback((event: FlatControllerRemovedEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(!roomData || (roomData.roomId !== parser.roomId)) return;\n\n        setUsersWithRights(prevValue =>\n        {\n            const newValue = new Map(prevValue);\n\n            newValue.delete(parser.userId);\n\n            return newValue;\n        });\n    }, [ roomData ]);\n\n    UseMessageEventHook(FlatControllerRemovedEvent, onFlatControllerRemovedEvent);\n\n    useEffect(() =>\n    {\n        SendMessageComposer(new RoomUsersWithRightsComposer(roomData.roomId));\n    }, [ roomData.roomId ]);\n\n    return (\n        <Grid>\n            <Column size={ 6 }>\n                <Text bold>\n                    { LocalizeText('navigator.flatctrls.userswithrights', [ 'displayed', 'total' ], [ usersWithRights.size.toString(), usersWithRights.size.toString() ]) }\n                </Text>\n                <Flex overflow=\"hidden\" className=\"bg-white rounded list-container p-2\">\n                    <Column fullWidth overflow=\"auto\" gap={ 1 }>\n                        { Array.from(usersWithRights.entries()).map(([ id, name ], index) =>\n                        {\n                            return (\n                                <Flex key={ index } shrink alignItems=\"center\" gap={ 1 } overflow=\"hidden\">\n                                    <UserProfileIconView userName={ name } />\n                                    <Text pointer grow onClick={ event => SendMessageComposer(new RoomTakeRightsComposer(id)) }> { name }</Text>\n                                </Flex>\n                            );\n                        }) }\n                    </Column>\n                </Flex>\n            </Column>\n            <Column size={ 6 } justifyContent=\"end\">\n                <Button variant=\"danger\" disabled={ !usersWithRights.size } onClick={ event => SendMessageComposer(new RemoveAllRightsMessageComposer(roomData.roomId)) } >\n                    { LocalizeText('navigator.flatctrls.clear') }\n                </Button>\n            </Column>\n        </Grid>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}