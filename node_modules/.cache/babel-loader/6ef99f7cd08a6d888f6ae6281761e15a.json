{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionGiveScoreView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredActionGiveScoreView = props => {\n  _s();\n\n  const [points, setPoints] = useState(1);\n  const [time, setTime] = useState(1);\n  const {\n    trigger = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => setIntParams([points, time]);\n\n  useEffect(() => {\n    if (trigger.intData.length >= 2) {\n      setPoints(trigger.intData[0]);\n      setTime(trigger.intData[1]);\n    } else {\n      setPoints(1);\n      setTime(1);\n    }\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredActionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.setpoints', ['points'], [points.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: 'wired-slider',\n        min: 1,\n        max: 100,\n        value: points,\n        onChange: event => setPoints(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.settimesingame', ['times'], [time.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: 'wired-slider',\n        min: 1,\n        max: 10,\n        value: time,\n        onChange: event => setTime(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredActionGiveScoreView, \"47/aocNpIUHQFTigNbf0k+AGRKU=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredActionGiveScoreView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredActionGiveScoreView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionGiveScoreView.tsx"],"names":["useEffect","useState","ReactSlider","LocalizeText","WiredFurniType","Column","Text","useWiredContext","WiredActionBaseView","WiredActionGiveScoreView","props","points","setPoints","time","setTime","trigger","setIntParams","save","intData","length","STUFF_SELECTION_OPTION_NONE","toString","event"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,oBAA7B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAEA,OAAO,MAAMC,wBAAgC,GAAGC,KAAK,IACrD;AAAA;;AACI,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAAEY,IAAF,EAAQC,OAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,YAAY,GAAG;AAAjC,MAA0CT,eAAe,EAA/D;;AAEA,QAAMU,IAAI,GAAG,MAAMD,YAAY,CAAC,CAAEL,MAAF,EAAUE,IAAV,CAAD,CAA/B;;AAEAb,EAAAA,SAAS,CAAC,MACV;AACI,QAAGe,OAAO,CAACG,OAAR,CAAgBC,MAAhB,IAA0B,CAA7B,EACA;AACIP,MAAAA,SAAS,CAACG,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAD,CAAT;AACAJ,MAAAA,OAAO,CAACC,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAD,CAAP;AACH,KAJD,MAMA;AACIN,MAAAA,SAAS,CAAC,CAAD,CAAT;AACAE,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH;AACJ,GAZQ,EAYN,CAAEC,OAAF,CAZM,CAAT;AAcA,sBACI,QAAC,mBAAD;AAAqB,IAAA,aAAa,EAAGX,cAAc,CAACgB,2BAApD;AAAkF,IAAA,eAAe,EAAG,IAApG;AAA2G,IAAA,IAAI,EAAGH,IAAlH;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAed,YAAY,CAAC,6BAAD,EAAgC,CAAE,QAAF,CAAhC,EAA8C,CAAEQ,MAAM,CAACU,QAAP,EAAF,CAA9C;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AACI,QAAA,SAAS,EAAG,cADhB;AAEI,QAAA,GAAG,EAAG,CAFV;AAGI,QAAA,GAAG,EAAG,GAHV;AAII,QAAA,KAAK,EAAGV,MAJZ;AAKI,QAAA,QAAQ,EAAGW,KAAK,IAAIV,SAAS,CAACU,KAAD;AALjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAenB,YAAY,CAAC,kCAAD,EAAqC,CAAE,OAAF,CAArC,EAAkD,CAAEU,IAAI,CAACQ,QAAL,EAAF,CAAlD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AACI,QAAA,SAAS,EAAG,cADhB;AAEI,QAAA,GAAG,EAAG,CAFV;AAGI,QAAA,GAAG,EAAG,EAHV;AAII,QAAA,KAAK,EAAGR,IAJZ;AAKI,QAAA,QAAQ,EAAGS,KAAK,IAAIR,OAAO,CAACQ,KAAD;AAL/B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA5CM;;GAAMb,wB;UAIuCF,e;;;KAJvCE,wB","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\n\nexport const WiredActionGiveScoreView: FC<{}> = props =>\n{\n    const [ points, setPoints ] = useState(1);\n    const [ time, setTime ] = useState(1);\n    const { trigger = null, setIntParams = null } = useWiredContext();\n\n    const save = () => setIntParams([ points, time ]);\n\n    useEffect(() =>\n    {\n        if(trigger.intData.length >= 2)\n        {\n            setPoints(trigger.intData[0]);\n            setTime(trigger.intData[1]);\n        }\n        else\n        {\n            setPoints(1);\n            setTime(1);\n        }\n    }, [ trigger ]);\n\n    return (\n        <WiredActionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.setpoints', [ 'points' ], [ points.toString() ]) }</Text>\n                <ReactSlider\n                    className={ 'wired-slider' }\n                    min={ 1 }\n                    max={ 100 }\n                    value={ points }\n                    onChange={ event => setPoints(event) } />\n            </Column>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.settimesingame', [ 'times' ], [ time.toString() ]) }</Text>\n                <ReactSlider\n                    className={ 'wired-slider' }\n                    min={ 1 }\n                    max={ 10 }\n                    value={ time }\n                    onChange={ event => setTime(event) } />\n            </Column>\n        </WiredActionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}