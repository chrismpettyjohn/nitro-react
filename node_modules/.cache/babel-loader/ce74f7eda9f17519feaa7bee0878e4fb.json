{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/Flex.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Base } from './Base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Flex = props => {\n  _s();\n\n  const {\n    display = 'flex',\n    column = undefined,\n    reverse = false,\n    gap = null,\n    center = false,\n    alignSelf = null,\n    alignItems = null,\n    justifyContent = null,\n    classNames = [],\n    ...rest\n  } = props;\n  const getClassNames = useMemo(() => {\n    const newClassNames = [];\n\n    if (column) {\n      if (reverse) newClassNames.push('flex-column-reverse');else newClassNames.push('flex-column');\n    } else {\n      if (reverse) newClassNames.push('flex-row-reverse');\n    }\n\n    if (gap) newClassNames.push('gap-' + gap);\n    if (alignSelf) newClassNames.push('align-self-' + alignSelf);\n    if (alignItems) newClassNames.push('align-items-' + alignItems);\n    if (justifyContent) newClassNames.push('justify-content-' + justifyContent);\n    if (!alignItems && !justifyContent && center) newClassNames.push('align-items-center', 'justify-content-center');\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [column, reverse, gap, center, alignSelf, alignItems, justifyContent, classNames]);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    display: display,\n    classNames: getClassNames,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Flex, \"dyksOB5DadzwRcuUMLdvWwPn8K8=\");\n\n_c = Flex;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flex\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/Flex.tsx"],"names":["useMemo","Base","Flex","props","display","column","undefined","reverse","gap","center","alignSelf","alignItems","justifyContent","classNames","rest","getClassNames","newClassNames","push","length"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AACA,SAASC,IAAT,QAAgC,QAAhC;;AAcA,OAAO,MAAMC,IAAmB,GAAGC,KAAK,IACxC;AAAA;;AACI,QAAM;AAAEC,IAAAA,OAAO,GAAG,MAAZ;AAAoBC,IAAAA,MAAM,GAAGC,SAA7B;AAAwCC,IAAAA,OAAO,GAAG,KAAlD;AAAyDC,IAAAA,GAAG,GAAG,IAA/D;AAAqEC,IAAAA,MAAM,GAAG,KAA9E;AAAqFC,IAAAA,SAAS,GAAG,IAAjG;AAAuGC,IAAAA,UAAU,GAAG,IAApH;AAA0HC,IAAAA,cAAc,GAAG,IAA3I;AAAiJC,IAAAA,UAAU,GAAG,EAA9J;AAAkK,OAAGC;AAArK,MAA8KX,KAApL;AAEA,QAAMY,aAAa,GAAGf,OAAO,CAAC,MAC9B;AACI,UAAMgB,aAAuB,GAAG,EAAhC;;AAEA,QAAGX,MAAH,EACA;AACI,UAAGE,OAAH,EAAYS,aAAa,CAACC,IAAd,CAAmB,qBAAnB,EAAZ,KACKD,aAAa,CAACC,IAAd,CAAmB,aAAnB;AACR,KAJD,MAMA;AACI,UAAGV,OAAH,EAAYS,aAAa,CAACC,IAAd,CAAmB,kBAAnB;AACf;;AAED,QAAGT,GAAH,EAAQQ,aAAa,CAACC,IAAd,CAAmB,SAAST,GAA5B;AAER,QAAGE,SAAH,EAAcM,aAAa,CAACC,IAAd,CAAmB,gBAAgBP,SAAnC;AAEd,QAAGC,UAAH,EAAeK,aAAa,CAACC,IAAd,CAAmB,iBAAiBN,UAApC;AAEf,QAAGC,cAAH,EAAmBI,aAAa,CAACC,IAAd,CAAmB,qBAAqBL,cAAxC;AAEnB,QAAG,CAACD,UAAD,IAAe,CAACC,cAAhB,IAAkCH,MAArC,EAA6CO,aAAa,CAACC,IAAd,CAAmB,oBAAnB,EAAyC,wBAAzC;AAE7C,QAAGJ,UAAU,CAACK,MAAd,EAAsBF,aAAa,CAACC,IAAd,CAAmB,GAAGJ,UAAtB;AAEtB,WAAOG,aAAP;AACH,GA3B4B,EA2B1B,CAAEX,MAAF,EAAUE,OAAV,EAAmBC,GAAnB,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,cAAvD,EAAuEC,UAAvE,CA3B0B,CAA7B;AA6BA,sBAAO,QAAC,IAAD;AAAM,IAAA,OAAO,EAAGT,OAAhB;AAA0B,IAAA,UAAU,EAAGW,aAAvC;AAAA,OAA4DD;AAA5D;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAlCM;;GAAMZ,I;;KAAAA,I","sourcesContent":["import { FC, useMemo } from 'react';\nimport { Base, BaseProps } from './Base';\nimport { AlignItemType, AlignSelfType, JustifyContentType, SpacingType } from './types';\n\nexport interface FlexProps extends BaseProps<HTMLDivElement>\n{\n    column?: boolean;\n    reverse?: boolean;\n    gap?: SpacingType;\n    center?: boolean;\n    alignSelf?: AlignSelfType;\n    alignItems?: AlignItemType;\n    justifyContent?: JustifyContentType;\n}\n\nexport const Flex: FC<FlexProps> = props =>\n{\n    const { display = 'flex', column = undefined, reverse = false, gap = null, center = false, alignSelf = null, alignItems = null, justifyContent = null, classNames = [], ...rest } = props;\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [];\n\n        if(column)\n        {\n            if(reverse) newClassNames.push('flex-column-reverse');\n            else newClassNames.push('flex-column');\n        }\n        else\n        {\n            if(reverse) newClassNames.push('flex-row-reverse');\n        }\n\n        if(gap) newClassNames.push('gap-' + gap);\n\n        if(alignSelf) newClassNames.push('align-self-' + alignSelf);\n\n        if(alignItems) newClassNames.push('align-items-' + alignItems);\n\n        if(justifyContent) newClassNames.push('justify-content-' + justifyContent);\n\n        if(!alignItems && !justifyContent && center) newClassNames.push('align-items-center', 'justify-content-center');\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ column, reverse, gap, center, alignSelf, alignItems, justifyContent, classNames ]);\n\n    return <Base display={ display } classNames={ getClassNames } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}