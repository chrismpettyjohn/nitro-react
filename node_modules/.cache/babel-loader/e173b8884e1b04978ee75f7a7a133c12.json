{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/conditions/WiredConditionDateRangeView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { LocalizeText, WiredDateToString, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredConditionBaseView } from './WiredConditionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredConditionDateRangeView = props => {\n  _s();\n\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const {\n    trigger = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => {\n    let startDateMili = 0;\n    let endDateMili = 0;\n    const startDateInstance = new Date(startDate);\n    const endDateInstance = new Date(endDate);\n\n    if (startDateInstance && endDateInstance) {\n      startDateMili = startDateInstance.getTime() / 1000;\n      endDateMili = endDateInstance.getTime() / 1000;\n    }\n\n    setIntParams([startDateMili, endDateMili]);\n  };\n\n  useEffect(() => {\n    if (trigger.intData.length >= 2) {\n      let startDate = new Date();\n      let endDate = new Date();\n      if (trigger.intData[0] > 0) startDate = new Date(trigger.intData[0] * 1000);\n      if (trigger.intData[1] > 0) endDate = new Date(trigger.intData[1] * 1000);\n      setStartDate(WiredDateToString(startDate));\n      setEndDate(WiredDateToString(endDate));\n    }\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredConditionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.startdate')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.enddate')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-sm\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredConditionDateRangeView, \"h2sk3NVW40hmsJXj17Uu744sSb0=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredConditionDateRangeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredConditionDateRangeView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/conditions/WiredConditionDateRangeView.tsx"],"names":["useEffect","useState","LocalizeText","WiredDateToString","WiredFurniType","Column","Text","useWiredContext","WiredConditionBaseView","WiredConditionDateRangeView","props","startDate","setStartDate","endDate","setEndDate","trigger","setIntParams","save","startDateMili","endDateMili","startDateInstance","Date","endDateInstance","getTime","intData","length","STUFF_SELECTION_OPTION_NONE","e","target","value"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { LocalizeText, WiredDateToString, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredConditionBaseView } from './WiredConditionBaseView';\n\nexport const WiredConditionDateRangeView: FC<{}> = props =>\n{\n    const [ startDate, setStartDate ] = useState('');\n    const [ endDate, setEndDate ] = useState('');\n    const { trigger = null, setIntParams = null } = useWiredContext();\n\n    const save = () =>\n    {\n        let startDateMili = 0;\n        let endDateMili = 0;\n\n        const startDateInstance = new Date(startDate);\n        const endDateInstance = new Date(endDate);\n\n        if(startDateInstance && endDateInstance)\n        {\n            startDateMili = startDateInstance.getTime() / 1000;\n            endDateMili = endDateInstance.getTime() / 1000;\n        }\n\n        setIntParams([ startDateMili, endDateMili ]);\n    }\n\n    useEffect(() =>\n    {\n        if(trigger.intData.length >= 2)\n        {\n            let startDate = new Date();\n            let endDate = new Date();\n\n            if(trigger.intData[0] > 0) startDate = new Date((trigger.intData[0] * 1000));\n\n            if(trigger.intData[1] > 0) endDate = new Date((trigger.intData[1] * 1000));\n\n            setStartDate(WiredDateToString(startDate));\n            setEndDate(WiredDateToString(endDate));\n        }\n    }, [ trigger ]);\n    \n    return (\n        <WiredConditionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.startdate') }</Text>\n                <input type=\"text\" className=\"form-control form-control-sm\" value={ startDate } onChange={ (e) => setStartDate(e.target.value) } />\n            </Column>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.enddate') }</Text>\n                <input type=\"text\" className=\"form-control form-control-sm\" value={ endDate } onChange={ (e) => setEndDate(e.target.value) } />\n            </Column>\n        </WiredConditionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}