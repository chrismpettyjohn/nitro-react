{"ast":null,"code":"import { Point } from '@pixi/math';\nimport { Vector3d } from './Vector3d';\nexport class RoomGeometry {\n  constructor(scale, direction, location) {\n    let _arg_4 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    this._updateId = 0;\n    this._x = void 0;\n    this._y = void 0;\n    this._z = void 0;\n    this._directionAxis = void 0;\n    this._location = void 0;\n    this._direction = void 0;\n    this._depth = void 0;\n    this._scale = 1;\n    this._x_scale = 1;\n    this._y_scale = 1;\n    this._z_scale = 1;\n    this._x_scale_internal = 1;\n    this._y_scale_internal = 1;\n    this._z_scale_internal = 1;\n    this._loc = void 0;\n    this._dir = void 0;\n    this._clipNear = -500;\n    this._clipFar = 500;\n    this._displacements = null;\n    this.scale = scale;\n    this._x = new Vector3d();\n    this._y = new Vector3d();\n    this._z = new Vector3d();\n    this._directionAxis = new Vector3d();\n    this._location = new Vector3d();\n    this._direction = new Vector3d();\n    this._depth = new Vector3d();\n    this._x_scale_internal = 1;\n    this._y_scale_internal = 1;\n    this.x_scale = 1;\n    this.y_scale = 1;\n    this._z_scale_internal = Math.sqrt(1 / 2) / Math.sqrt(3 / 4);\n    this.z_scale = 1;\n    this.location = new Vector3d(location.x, location.y, location.z);\n    this.direction = new Vector3d(direction.x, direction.y, direction.z);\n\n    if (_arg_4 != null) {\n      this.setDepthVector(_arg_4);\n    } else {\n      this.setDepthVector(direction);\n    }\n\n    this._displacements = new Map();\n  }\n\n  static getIntersectionVector(k, _arg_2, _arg_3, _arg_4) {\n    const _local_5 = Vector3d.dotProduct(_arg_2, _arg_4);\n\n    if (Math.abs(_local_5) < 1E-5) {\n      return null;\n    }\n\n    const _local_6 = Vector3d.dif(k, _arg_3);\n\n    const _local_7 = -Vector3d.dotProduct(_arg_4, _local_6) / _local_5;\n\n    const _local_8 = Vector3d.sum(k, Vector3d.product(_arg_2, _local_7));\n\n    return _local_8;\n  }\n\n  get updateId() {\n    return this._updateId;\n  }\n\n  get scale() {\n    return this._scale / Math.sqrt(0.5);\n  }\n\n  set scale(k) {\n    if (k <= 1) {\n      k = 1;\n    }\n\n    k = k * Math.sqrt(0.5);\n\n    if (k != this._scale) {\n      this._scale = k;\n      this._updateId++;\n    }\n  }\n\n  get directionAxis() {\n    return this._directionAxis;\n  }\n\n  get location() {\n    this._location.assign(this._loc);\n\n    this._location.x = this._location.x * this._x_scale;\n    this._location.y = this._location.y * this._y_scale;\n    this._location.z = this._location.z * this._z_scale;\n    return this._location;\n  }\n\n  set location(k) {\n    if (k == null) {\n      return;\n    }\n\n    if (this._loc == null) {\n      this._loc = new Vector3d();\n    }\n\n    const _local_2 = this._loc.x;\n    const _local_3 = this._loc.y;\n    const _local_4 = this._loc.z;\n\n    this._loc.assign(k);\n\n    this._loc.x = this._loc.x / this._x_scale;\n    this._loc.y = this._loc.y / this._y_scale;\n    this._loc.z = this._loc.z / this._z_scale;\n\n    if (!(this._loc.x == _local_2) || !(this._loc.y == _local_3) || !(this._loc.z == _local_4)) {\n      this._updateId++;\n    }\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  set direction(k) {\n    let _local_21;\n\n    let _local_22;\n\n    let _local_23;\n\n    let _local_24;\n\n    let _local_25;\n\n    if (k == null) {\n      return;\n    }\n\n    if (this._dir == null) {\n      this._dir = new Vector3d();\n    }\n\n    const _local_2 = this._dir.x;\n    const _local_3 = this._dir.y;\n    const _local_4 = this._dir.z;\n\n    this._dir.assign(k);\n\n    this._direction.assign(k);\n\n    if (!(this._dir.x == _local_2) || !(this._dir.y == _local_3) || !(this._dir.z == _local_4)) {\n      this._updateId++;\n    }\n\n    const _local_5 = new Vector3d(0, 1, 0);\n\n    const _local_6 = new Vector3d(0, 0, 1);\n\n    const _local_7 = new Vector3d(1, 0, 0);\n\n    const _local_8 = k.x / 180 * Math.PI;\n\n    const _local_9 = k.y / 180 * Math.PI;\n\n    const _local_10 = k.z / 180 * Math.PI;\n\n    const _local_11 = Math.cos(_local_8);\n\n    const _local_12 = Math.sin(_local_8);\n\n    const _local_13 = Vector3d.sum(Vector3d.product(_local_5, _local_11), Vector3d.product(_local_7, -_local_12));\n\n    const _local_14 = new Vector3d(_local_6.x, _local_6.y, _local_6.z);\n\n    const _local_15 = Vector3d.sum(Vector3d.product(_local_5, _local_12), Vector3d.product(_local_7, _local_11));\n\n    const _local_16 = Math.cos(_local_9);\n\n    const _local_17 = Math.sin(_local_9);\n\n    const _local_18 = new Vector3d(_local_13.x, _local_13.y, _local_13.z);\n\n    const _local_19 = Vector3d.sum(Vector3d.product(_local_14, _local_16), Vector3d.product(_local_15, _local_17));\n\n    const _local_20 = Vector3d.sum(Vector3d.product(_local_14, -_local_17), Vector3d.product(_local_15, _local_16));\n\n    if (_local_10 != 0) {\n      _local_21 = Math.cos(_local_10);\n      _local_22 = Math.sin(_local_10);\n      _local_23 = Vector3d.sum(Vector3d.product(_local_18, _local_21), Vector3d.product(_local_19, _local_22));\n      _local_24 = Vector3d.sum(Vector3d.product(_local_18, -_local_22), Vector3d.product(_local_19, _local_21));\n      _local_25 = new Vector3d(_local_20.x, _local_20.y, _local_20.z);\n\n      this._x.assign(_local_23);\n\n      this._y.assign(_local_24);\n\n      this._z.assign(_local_25);\n\n      this._directionAxis.assign(this._z);\n    } else {\n      this._x.assign(_local_18);\n\n      this._y.assign(_local_19);\n\n      this._z.assign(_local_20);\n\n      this._directionAxis.assign(this._z);\n    }\n  }\n\n  set x_scale(k) {\n    if (this._x_scale != k * this._x_scale_internal) {\n      this._x_scale = k * this._x_scale_internal;\n      this._updateId++;\n    }\n  }\n\n  set y_scale(k) {\n    if (this._y_scale != k * this._y_scale_internal) {\n      this._y_scale = k * this._y_scale_internal;\n      this._updateId++;\n    }\n  }\n\n  set z_scale(k) {\n    if (this._z_scale != k * this._z_scale_internal) {\n      this._z_scale = k * this._z_scale_internal;\n      this._updateId++;\n    }\n  }\n\n  dispose() {\n    this._x = null;\n    this._y = null;\n    this._z = null;\n    this._loc = null;\n    this._dir = null;\n    this._directionAxis = null;\n    this._location = null;\n\n    if (this._displacements != null) {\n      this._displacements.clear();\n\n      this._displacements = null;\n    }\n  }\n\n  setDisplacement(k, _arg_2) {\n    let _local_3;\n\n    let _local_4;\n\n    if (k == null || _arg_2 == null) {\n      return;\n    }\n\n    if (this._displacements != null) {\n      _local_3 = Math.trunc(Math.round(k.x)) + '_' + Math.trunc(Math.round(k.y)) + '_' + Math.trunc(Math.round(k.z));\n\n      this._displacements.delete(_local_3);\n\n      _local_4 = new Vector3d();\n\n      _local_4.assign(_arg_2);\n\n      this._displacements.set(_local_3, _local_4);\n\n      this._updateId++;\n    }\n  }\n\n  getDisplacenent(k) {\n    let _local_2;\n\n    if (this._displacements != null) {\n      _local_2 = Math.trunc(Math.round(k.x)) + '_' + Math.trunc(Math.round(k.y)) + '_' + Math.trunc(Math.round(k.z));\n      return this._displacements.get(_local_2);\n    }\n\n    return null;\n  }\n\n  setDepthVector(k) {\n    let _local_18;\n\n    let _local_19;\n\n    let _local_20;\n\n    let _local_21;\n\n    let _local_22;\n\n    const _local_2 = new Vector3d(0, 1, 0);\n\n    const _local_3 = new Vector3d(0, 0, 1);\n\n    const _local_4 = new Vector3d(1, 0, 0);\n\n    const _local_5 = k.x / 180 * Math.PI;\n\n    const _local_6 = k.y / 180 * Math.PI;\n\n    const _local_7 = k.z / 180 * Math.PI;\n\n    const _local_8 = Math.cos(_local_5);\n\n    const _local_9 = Math.sin(_local_5);\n\n    const _local_10 = Vector3d.sum(Vector3d.product(_local_2, _local_8), Vector3d.product(_local_4, -_local_9));\n\n    const _local_11 = new Vector3d(_local_3.x, _local_3.y, _local_3.z);\n\n    const _local_12 = Vector3d.sum(Vector3d.product(_local_2, _local_9), Vector3d.product(_local_4, _local_8));\n\n    const _local_13 = Math.cos(_local_6);\n\n    const _local_14 = Math.sin(_local_6);\n\n    const _local_15 = new Vector3d(_local_10.x, _local_10.y, _local_10.z);\n\n    const _local_16 = Vector3d.sum(Vector3d.product(_local_11, _local_13), Vector3d.product(_local_12, _local_14));\n\n    const _local_17 = Vector3d.sum(Vector3d.product(_local_11, -_local_14), Vector3d.product(_local_12, _local_13));\n\n    if (_local_7 != 0) {\n      _local_18 = Math.cos(_local_7);\n      _local_19 = Math.sin(_local_7);\n      _local_20 = Vector3d.sum(Vector3d.product(_local_15, _local_18), Vector3d.product(_local_16, _local_19));\n      _local_21 = Vector3d.sum(Vector3d.product(_local_15, -_local_19), Vector3d.product(_local_16, _local_18));\n      _local_22 = new Vector3d(_local_17.x, _local_17.y, _local_17.z);\n\n      this._depth.assign(_local_22);\n    } else {\n      this._depth.assign(_local_17);\n    }\n\n    this._updateId++;\n  }\n\n  adjustLocation(k, _arg_2) {\n    if (k == null || this._z == null) {\n      return;\n    }\n\n    const _local_3 = Vector3d.product(this._z, -_arg_2);\n\n    const _local_4 = new Vector3d(k.x + _local_3.x, k.y + _local_3.y, k.z + _local_3.z);\n\n    this.location = _local_4;\n  }\n\n  getCoordinatePosition(k) {\n    if (k == null) {\n      return null;\n    }\n\n    const _local_2 = Vector3d.scalarProjection(k, this._x);\n\n    const _local_3 = Vector3d.scalarProjection(k, this._y);\n\n    const _local_4 = Vector3d.scalarProjection(k, this._z);\n\n    const _local_5 = new Vector3d(_local_2, _local_3, _local_4);\n\n    return _local_5;\n  }\n\n  getScreenPosition(k) {\n    let _local_2 = Vector3d.dif(k, this._loc);\n\n    _local_2.x = _local_2.x * this._x_scale;\n    _local_2.y = _local_2.y * this._y_scale;\n    _local_2.z = _local_2.z * this._z_scale;\n\n    let _local_3 = Vector3d.scalarProjection(_local_2, this._depth);\n\n    if (_local_3 < this._clipNear || _local_3 > this._clipFar) {\n      return null;\n    }\n\n    let _local_4 = Vector3d.scalarProjection(_local_2, this._x);\n\n    let _local_5 = -Vector3d.scalarProjection(_local_2, this._y);\n\n    _local_4 = _local_4 * this._scale;\n    _local_5 = _local_5 * this._scale;\n\n    const _local_6 = this.getDisplacenent(k);\n\n    if (_local_6 != null) {\n      _local_2 = Vector3d.dif(k, this._loc);\n\n      _local_2.add(_local_6);\n\n      _local_2.x = _local_2.x * this._x_scale;\n      _local_2.y = _local_2.y * this._y_scale;\n      _local_2.z = _local_2.z * this._z_scale;\n      _local_3 = Vector3d.scalarProjection(_local_2, this._depth);\n    }\n\n    _local_2.x = _local_4;\n    _local_2.y = _local_5;\n    _local_2.z = _local_3;\n    return _local_2;\n  }\n\n  getScreenPoint(k) {\n    const _local_2 = this.getScreenPosition(k);\n\n    if (_local_2 == null) {\n      return null;\n    }\n\n    const _local_3 = new Point(_local_2.x, _local_2.y);\n\n    return _local_3;\n  }\n\n  getPlanePosition(k, _arg_2, _arg_3, _arg_4) {\n    let _local_15;\n\n    let _local_16;\n\n    const _local_5 = k.x / this._scale;\n\n    const _local_6 = -k.y / this._scale;\n\n    const _local_7 = Vector3d.product(this._x, _local_5);\n\n    _local_7.add(Vector3d.product(this._y, _local_6));\n\n    const _local_8 = new Vector3d(this._loc.x * this._x_scale, this._loc.y * this._y_scale, this._loc.z * this._z_scale);\n\n    _local_8.add(_local_7);\n\n    const _local_9 = this._z;\n\n    const _local_10 = new Vector3d(_arg_2.x * this._x_scale, _arg_2.y * this._y_scale, _arg_2.z * this._z_scale);\n\n    const _local_11 = new Vector3d(_arg_3.x * this._x_scale, _arg_3.y * this._y_scale, _arg_3.z * this._z_scale);\n\n    const _local_12 = new Vector3d(_arg_4.x * this._x_scale, _arg_4.y * this._y_scale, _arg_4.z * this._z_scale);\n\n    const _local_13 = Vector3d.crossProduct(_local_11, _local_12);\n\n    const _local_14 = new Vector3d();\n\n    _local_14.assign(RoomGeometry.getIntersectionVector(_local_8, _local_9, _local_10, _local_13));\n\n    if (_local_14 != null) {\n      _local_14.subtract(_local_10);\n\n      _local_15 = Vector3d.scalarProjection(_local_14, _arg_3) / _local_11.length * _arg_3.length;\n      _local_16 = Vector3d.scalarProjection(_local_14, _arg_4) / _local_12.length * _arg_4.length;\n      return new Point(_local_15, _local_16);\n    }\n\n    return null;\n  }\n\n  performZoom() {\n    if (this.isZoomedIn()) {\n      this.scale = RoomGeometry.SCALE_ZOOMED_OUT;\n    } else {\n      this.scale = RoomGeometry.SCALE_ZOOMED_IN;\n    }\n  }\n\n  isZoomedIn() {\n    return this.scale == RoomGeometry.SCALE_ZOOMED_IN;\n  }\n\n  performZoomOut() {\n    this.scale = RoomGeometry.SCALE_ZOOMED_OUT;\n  }\n\n  performZoomIn() {\n    this.scale = RoomGeometry.SCALE_ZOOMED_IN;\n  }\n\n}\nRoomGeometry.SCALE_ZOOMED_IN = 64;\nRoomGeometry.SCALE_ZOOMED_OUT = 32;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/room/utils/RoomGeometry.ts"],"names":["Point","Vector3d","RoomGeometry","constructor","scale","direction","location","_arg_4","_updateId","_x","_y","_z","_directionAxis","_location","_direction","_depth","_scale","_x_scale","_y_scale","_z_scale","_x_scale_internal","_y_scale_internal","_z_scale_internal","_loc","_dir","_clipNear","_clipFar","_displacements","x_scale","y_scale","Math","sqrt","z_scale","x","y","z","setDepthVector","Map","getIntersectionVector","k","_arg_2","_arg_3","_local_5","dotProduct","abs","_local_6","dif","_local_7","_local_8","sum","product","updateId","directionAxis","assign","_local_2","_local_3","_local_4","_local_21","_local_22","_local_23","_local_24","_local_25","PI","_local_9","_local_10","_local_11","cos","_local_12","sin","_local_13","_local_14","_local_15","_local_16","_local_17","_local_18","_local_19","_local_20","dispose","clear","setDisplacement","trunc","round","delete","set","getDisplacenent","get","adjustLocation","getCoordinatePosition","scalarProjection","getScreenPosition","add","getScreenPoint","getPlanePosition","crossProduct","subtract","length","performZoom","isZoomedIn","SCALE_ZOOMED_OUT","SCALE_ZOOMED_IN","performZoomOut","performZoomIn"],"mappings":"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","sourcesContent":["import { Point } from '@pixi/math';\r\nimport { IRoomGeometry } from './IRoomGeometry';\r\nimport { IVector3D } from './IVector3D';\r\nimport { Vector3d } from './Vector3d';\r\n\r\nexport class RoomGeometry implements IRoomGeometry\r\n{\r\n    public static SCALE_ZOOMED_IN: number = 64;\r\n    public static SCALE_ZOOMED_OUT: number = 32;\r\n\r\n    private _updateId: number = 0;\r\n    private _x: Vector3d;\r\n    private _y: Vector3d;\r\n    private _z: Vector3d;\r\n    private _directionAxis: Vector3d;\r\n    private _location: Vector3d;\r\n    private _direction: Vector3d;\r\n    private _depth: Vector3d;\r\n    private _scale: number = 1;\r\n    private _x_scale: number = 1;\r\n    private _y_scale: number = 1;\r\n    private _z_scale: number = 1;\r\n    private _x_scale_internal: number = 1;\r\n    private _y_scale_internal: number = 1;\r\n    private _z_scale_internal: number = 1;\r\n    private _loc: Vector3d;\r\n    private _dir: Vector3d;\r\n    private _clipNear: number = -500;\r\n    private _clipFar: number = 500;\r\n    private _displacements: Map<string, IVector3D> = null;\r\n\r\n    constructor(scale: number, direction: IVector3D, location: IVector3D, _arg_4: IVector3D = null)\r\n    {\r\n        this.scale = scale;\r\n        this._x = new Vector3d();\r\n        this._y = new Vector3d();\r\n        this._z = new Vector3d();\r\n        this._directionAxis = new Vector3d();\r\n        this._location = new Vector3d();\r\n        this._direction = new Vector3d();\r\n        this._depth = new Vector3d();\r\n        this._x_scale_internal = 1;\r\n        this._y_scale_internal = 1;\r\n        this.x_scale = 1;\r\n        this.y_scale = 1;\r\n        this._z_scale_internal = (Math.sqrt((1 / 2)) / Math.sqrt((3 / 4)));\r\n        this.z_scale = 1;\r\n        this.location = new Vector3d(location.x, location.y, location.z);\r\n        this.direction = new Vector3d(direction.x, direction.y, direction.z);\r\n        if(_arg_4 != null)\r\n        {\r\n            this.setDepthVector(_arg_4);\r\n        }\r\n        else\r\n        {\r\n            this.setDepthVector(direction);\r\n        }\r\n        this._displacements = new Map();\r\n    }\r\n\r\n    public static getIntersectionVector(k: IVector3D, _arg_2: IVector3D, _arg_3: IVector3D, _arg_4: IVector3D): IVector3D\r\n    {\r\n        const _local_5: number = Vector3d.dotProduct(_arg_2, _arg_4);\r\n        if(Math.abs(_local_5) < 1E-5)\r\n        {\r\n            return null;\r\n        }\r\n        const _local_6: Vector3d = Vector3d.dif(k, _arg_3);\r\n        const _local_7: number = (-(Vector3d.dotProduct(_arg_4, _local_6)) / _local_5);\r\n        const _local_8: Vector3d = Vector3d.sum(k, Vector3d.product(_arg_2, _local_7));\r\n        return _local_8;\r\n    }\r\n\r\n\r\n    public get updateId(): number\r\n    {\r\n        return this._updateId;\r\n    }\r\n\r\n    public get scale(): number\r\n    {\r\n        return this._scale / Math.sqrt(0.5);\r\n    }\r\n\r\n    public set scale(k: number)\r\n    {\r\n        if(k <= 1)\r\n        {\r\n            k = 1;\r\n        }\r\n        k = (k * Math.sqrt(0.5));\r\n        if(k != this._scale)\r\n        {\r\n            this._scale = k;\r\n            this._updateId++;\r\n        }\r\n    }\r\n\r\n    public get directionAxis(): IVector3D\r\n    {\r\n        return this._directionAxis;\r\n    }\r\n\r\n    public get location(): IVector3D\r\n    {\r\n        this._location.assign(this._loc);\r\n        this._location.x = (this._location.x * this._x_scale);\r\n        this._location.y = (this._location.y * this._y_scale);\r\n        this._location.z = (this._location.z * this._z_scale);\r\n        return this._location;\r\n    }\r\n\r\n    public set location(k: IVector3D)\r\n    {\r\n        if(k == null)\r\n        {\r\n            return;\r\n        }\r\n        if(this._loc == null)\r\n        {\r\n            this._loc = new Vector3d();\r\n        }\r\n        const _local_2: number = this._loc.x;\r\n        const _local_3: number = this._loc.y;\r\n        const _local_4: number = this._loc.z;\r\n        this._loc.assign(k);\r\n        this._loc.x = (this._loc.x / this._x_scale);\r\n        this._loc.y = (this._loc.y / this._y_scale);\r\n        this._loc.z = (this._loc.z / this._z_scale);\r\n        if((((!(this._loc.x == _local_2)) || (!(this._loc.y == _local_3))) || (!(this._loc.z == _local_4))))\r\n        {\r\n            this._updateId++;\r\n        }\r\n    }\r\n\r\n    public get direction(): IVector3D\r\n    {\r\n        return this._direction;\r\n    }\r\n\r\n    public set direction(k: IVector3D)\r\n    {\r\n        let _local_21: number;\r\n        let _local_22: number;\r\n        let _local_23: Vector3d;\r\n        let _local_24: Vector3d;\r\n        let _local_25: Vector3d;\r\n        if(k == null)\r\n        {\r\n            return;\r\n        }\r\n        if(this._dir == null)\r\n        {\r\n            this._dir = new Vector3d();\r\n        }\r\n        const _local_2: number = this._dir.x;\r\n        const _local_3: number = this._dir.y;\r\n        const _local_4: number = this._dir.z;\r\n        this._dir.assign(k);\r\n        this._direction.assign(k);\r\n        if((((!(this._dir.x == _local_2)) || (!(this._dir.y == _local_3))) || (!(this._dir.z == _local_4))))\r\n        {\r\n            this._updateId++;\r\n        }\r\n        const _local_5: Vector3d = new Vector3d(0, 1, 0);\r\n        const _local_6: Vector3d = new Vector3d(0, 0, 1);\r\n        const _local_7: Vector3d = new Vector3d(1, 0, 0);\r\n        const _local_8: number = ((k.x / 180) * Math.PI);\r\n        const _local_9: number = ((k.y / 180) * Math.PI);\r\n        const _local_10: number = ((k.z / 180) * Math.PI);\r\n        const _local_11: number = Math.cos(_local_8);\r\n        const _local_12: number = Math.sin(_local_8);\r\n        const _local_13: Vector3d = Vector3d.sum(Vector3d.product(_local_5, _local_11), Vector3d.product(_local_7, -(_local_12)));\r\n        const _local_14: Vector3d = new Vector3d(_local_6.x, _local_6.y, _local_6.z);\r\n        const _local_15: Vector3d = Vector3d.sum(Vector3d.product(_local_5, _local_12), Vector3d.product(_local_7, _local_11));\r\n        const _local_16: number = Math.cos(_local_9);\r\n        const _local_17: number = Math.sin(_local_9);\r\n        const _local_18: Vector3d = new Vector3d(_local_13.x, _local_13.y, _local_13.z);\r\n        const _local_19: Vector3d = Vector3d.sum(Vector3d.product(_local_14, _local_16), Vector3d.product(_local_15, _local_17));\r\n        const _local_20: Vector3d = Vector3d.sum(Vector3d.product(_local_14, -(_local_17)), Vector3d.product(_local_15, _local_16));\r\n        if(_local_10 != 0)\r\n        {\r\n            _local_21 = Math.cos(_local_10);\r\n            _local_22 = Math.sin(_local_10);\r\n            _local_23 = Vector3d.sum(Vector3d.product(_local_18, _local_21), Vector3d.product(_local_19, _local_22));\r\n            _local_24 = Vector3d.sum(Vector3d.product(_local_18, -(_local_22)), Vector3d.product(_local_19, _local_21));\r\n            _local_25 = new Vector3d(_local_20.x, _local_20.y, _local_20.z);\r\n            this._x.assign(_local_23);\r\n            this._y.assign(_local_24);\r\n            this._z.assign(_local_25);\r\n            this._directionAxis.assign(this._z);\r\n        }\r\n        else\r\n        {\r\n            this._x.assign(_local_18);\r\n            this._y.assign(_local_19);\r\n            this._z.assign(_local_20);\r\n            this._directionAxis.assign(this._z);\r\n        }\r\n    }\r\n\r\n    public set x_scale(k: number)\r\n    {\r\n        if(this._x_scale != (k * this._x_scale_internal))\r\n        {\r\n            this._x_scale = (k * this._x_scale_internal);\r\n            this._updateId++;\r\n        }\r\n    }\r\n\r\n    public set y_scale(k: number)\r\n    {\r\n        if(this._y_scale != (k * this._y_scale_internal))\r\n        {\r\n            this._y_scale = (k * this._y_scale_internal);\r\n            this._updateId++;\r\n        }\r\n    }\r\n\r\n    public set z_scale(k: number)\r\n    {\r\n        if(this._z_scale != (k * this._z_scale_internal))\r\n        {\r\n            this._z_scale = (k * this._z_scale_internal);\r\n            this._updateId++;\r\n        }\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._x = null;\r\n        this._y = null;\r\n        this._z = null;\r\n        this._loc = null;\r\n        this._dir = null;\r\n        this._directionAxis = null;\r\n        this._location = null;\r\n        if(this._displacements != null)\r\n        {\r\n            this._displacements.clear();\r\n            this._displacements = null;\r\n        }\r\n    }\r\n\r\n    public setDisplacement(k: IVector3D, _arg_2: IVector3D): void\r\n    {\r\n        let _local_3: string;\r\n        let _local_4: Vector3d;\r\n        if(((k == null) || (_arg_2 == null)))\r\n        {\r\n            return;\r\n        }\r\n        if(this._displacements != null)\r\n        {\r\n            _local_3 = Math.trunc(Math.round(k.x)) + '_' + Math.trunc(Math.round(k.y)) + '_' + Math.trunc(Math.round(k.z));\r\n            this._displacements.delete(_local_3);\r\n            _local_4 = new Vector3d();\r\n            _local_4.assign(_arg_2);\r\n            this._displacements.set(_local_3, _local_4);\r\n            this._updateId++;\r\n        }\r\n    }\r\n\r\n    private getDisplacenent(k: IVector3D): IVector3D\r\n    {\r\n        let _local_2: string;\r\n        if(this._displacements != null)\r\n        {\r\n            _local_2 = Math.trunc(Math.round(k.x)) + '_' + Math.trunc(Math.round(k.y)) + '_' + Math.trunc(Math.round(k.z));\r\n            return this._displacements.get(_local_2);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public setDepthVector(k: IVector3D): void\r\n    {\r\n        let _local_18: number;\r\n        let _local_19: number;\r\n        let _local_20: Vector3d;\r\n        let _local_21: Vector3d;\r\n        let _local_22: Vector3d;\r\n        const _local_2: Vector3d = new Vector3d(0, 1, 0);\r\n        const _local_3: Vector3d = new Vector3d(0, 0, 1);\r\n        const _local_4: Vector3d = new Vector3d(1, 0, 0);\r\n        const _local_5: number = ((k.x / 180) * Math.PI);\r\n        const _local_6: number = ((k.y / 180) * Math.PI);\r\n        const _local_7: number = ((k.z / 180) * Math.PI);\r\n        const _local_8: number = Math.cos(_local_5);\r\n        const _local_9: number = Math.sin(_local_5);\r\n        const _local_10: Vector3d = Vector3d.sum(Vector3d.product(_local_2, _local_8), Vector3d.product(_local_4, -(_local_9)));\r\n        const _local_11: Vector3d = new Vector3d(_local_3.x, _local_3.y, _local_3.z);\r\n        const _local_12: Vector3d = Vector3d.sum(Vector3d.product(_local_2, _local_9), Vector3d.product(_local_4, _local_8));\r\n        const _local_13: number = Math.cos(_local_6);\r\n        const _local_14: number = Math.sin(_local_6);\r\n        const _local_15: Vector3d = new Vector3d(_local_10.x, _local_10.y, _local_10.z);\r\n        const _local_16: Vector3d = Vector3d.sum(Vector3d.product(_local_11, _local_13), Vector3d.product(_local_12, _local_14));\r\n        const _local_17: Vector3d = Vector3d.sum(Vector3d.product(_local_11, -(_local_14)), Vector3d.product(_local_12, _local_13));\r\n        if(_local_7 != 0)\r\n        {\r\n            _local_18 = Math.cos(_local_7);\r\n            _local_19 = Math.sin(_local_7);\r\n            _local_20 = Vector3d.sum(Vector3d.product(_local_15, _local_18), Vector3d.product(_local_16, _local_19));\r\n            _local_21 = Vector3d.sum(Vector3d.product(_local_15, -(_local_19)), Vector3d.product(_local_16, _local_18));\r\n            _local_22 = new Vector3d(_local_17.x, _local_17.y, _local_17.z);\r\n            this._depth.assign(_local_22);\r\n        }\r\n        else\r\n        {\r\n            this._depth.assign(_local_17);\r\n        }\r\n        this._updateId++;\r\n    }\r\n\r\n    public adjustLocation(k: IVector3D, _arg_2: number): void\r\n    {\r\n        if(((k == null) || (this._z == null)))\r\n        {\r\n            return;\r\n        }\r\n        const _local_3: Vector3d = Vector3d.product(this._z, -(_arg_2));\r\n        const _local_4: Vector3d = new Vector3d((k.x + _local_3.x), (k.y + _local_3.y), (k.z + _local_3.z));\r\n        this.location = _local_4;\r\n    }\r\n\r\n    public getCoordinatePosition(k: IVector3D): IVector3D\r\n    {\r\n        if(k == null)\r\n        {\r\n            return null;\r\n        }\r\n        const _local_2: number = Vector3d.scalarProjection(k, this._x);\r\n        const _local_3: number = Vector3d.scalarProjection(k, this._y);\r\n        const _local_4: number = Vector3d.scalarProjection(k, this._z);\r\n        const _local_5: Vector3d = new Vector3d(_local_2, _local_3, _local_4);\r\n        return _local_5;\r\n    }\r\n\r\n    public getScreenPosition(k: IVector3D): IVector3D\r\n    {\r\n        let _local_2: Vector3d = Vector3d.dif(k, this._loc);\r\n        _local_2.x = (_local_2.x * this._x_scale);\r\n        _local_2.y = (_local_2.y * this._y_scale);\r\n        _local_2.z = (_local_2.z * this._z_scale);\r\n        let _local_3: number = Vector3d.scalarProjection(_local_2, this._depth);\r\n        if(((_local_3 < this._clipNear) || (_local_3 > this._clipFar)))\r\n        {\r\n            return null;\r\n        }\r\n        let _local_4: number = Vector3d.scalarProjection(_local_2, this._x);\r\n        let _local_5: number = -(Vector3d.scalarProjection(_local_2, this._y));\r\n        _local_4 = (_local_4 * this._scale);\r\n        _local_5 = (_local_5 * this._scale);\r\n        const _local_6: IVector3D = this.getDisplacenent(k);\r\n        if(_local_6 != null)\r\n        {\r\n            _local_2 = Vector3d.dif(k, this._loc);\r\n            _local_2.add(_local_6);\r\n            _local_2.x = (_local_2.x * this._x_scale);\r\n            _local_2.y = (_local_2.y * this._y_scale);\r\n            _local_2.z = (_local_2.z * this._z_scale);\r\n            _local_3 = Vector3d.scalarProjection(_local_2, this._depth);\r\n        }\r\n        _local_2.x = _local_4;\r\n        _local_2.y = _local_5;\r\n        _local_2.z = _local_3;\r\n        return _local_2;\r\n    }\r\n\r\n    public getScreenPoint(k: IVector3D): Point\r\n    {\r\n        const _local_2: IVector3D = this.getScreenPosition(k);\r\n        if(_local_2 == null)\r\n        {\r\n            return null;\r\n        }\r\n        const _local_3: Point = new Point(_local_2.x, _local_2.y);\r\n        return _local_3;\r\n    }\r\n\r\n    public getPlanePosition(k: Point, _arg_2: IVector3D, _arg_3: IVector3D, _arg_4: IVector3D): Point\r\n    {\r\n        let _local_15: number;\r\n        let _local_16: number;\r\n        const _local_5: number = (k.x / this._scale);\r\n        const _local_6: number = (-(k.y) / this._scale);\r\n        const _local_7: Vector3d = Vector3d.product(this._x, _local_5);\r\n        _local_7.add(Vector3d.product(this._y, _local_6));\r\n        const _local_8: Vector3d = new Vector3d((this._loc.x * this._x_scale), (this._loc.y * this._y_scale), (this._loc.z * this._z_scale));\r\n        _local_8.add(_local_7);\r\n        const _local_9: IVector3D = this._z;\r\n        const _local_10: Vector3d = new Vector3d((_arg_2.x * this._x_scale), (_arg_2.y * this._y_scale), (_arg_2.z * this._z_scale));\r\n        const _local_11: Vector3d = new Vector3d((_arg_3.x * this._x_scale), (_arg_3.y * this._y_scale), (_arg_3.z * this._z_scale));\r\n        const _local_12: Vector3d = new Vector3d((_arg_4.x * this._x_scale), (_arg_4.y * this._y_scale), (_arg_4.z * this._z_scale));\r\n        const _local_13: IVector3D = Vector3d.crossProduct(_local_11, _local_12);\r\n        const _local_14: Vector3d = new Vector3d();\r\n        _local_14.assign(RoomGeometry.getIntersectionVector(_local_8, _local_9, _local_10, _local_13));\r\n        if(_local_14 != null)\r\n        {\r\n            _local_14.subtract(_local_10);\r\n            _local_15 = ((Vector3d.scalarProjection(_local_14, _arg_3) / _local_11.length) * _arg_3.length);\r\n            _local_16 = ((Vector3d.scalarProjection(_local_14, _arg_4) / _local_12.length) * _arg_4.length);\r\n            return new Point(_local_15, _local_16);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public performZoom(): void\r\n    {\r\n        if(this.isZoomedIn())\r\n        {\r\n            this.scale = RoomGeometry.SCALE_ZOOMED_OUT;\r\n        }\r\n        else\r\n        {\r\n            this.scale = RoomGeometry.SCALE_ZOOMED_IN;\r\n        }\r\n    }\r\n\r\n    public isZoomedIn(): boolean\r\n    {\r\n        return this.scale == RoomGeometry.SCALE_ZOOMED_IN;\r\n    }\r\n\r\n    public performZoomOut(): void\r\n    {\r\n        this.scale = RoomGeometry.SCALE_ZOOMED_OUT;\r\n    }\r\n\r\n    public performZoomIn(): void\r\n    {\r\n        this.scale = RoomGeometry.SCALE_ZOOMED_IN;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}