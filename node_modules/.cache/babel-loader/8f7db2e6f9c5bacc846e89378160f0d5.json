{"ast":null,"code":"import { CraftingRecipeIngredientParser } from './CraftingRecipeIngredientParser';\nexport class CraftingRecipeMessageParser {\n  constructor() {\n    this._ingredients = void 0;\n    this._ingredients = [];\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    const ingredientCount = wrapper.readInt();\n\n    for (let i = 0; i < ingredientCount; i++) {\n      this._ingredients.push(new CraftingRecipeIngredientParser(wrapper));\n    }\n\n    return true;\n  }\n\n  flush() {\n    this._ingredients = [];\n    return true;\n  }\n\n  get ingredients() {\n    return this._ingredients;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/crafting/CraftingRecipeMessageParser.ts"],"names":["CraftingRecipeIngredientParser","CraftingRecipeMessageParser","constructor","_ingredients","parse","wrapper","ingredientCount","readInt","i","push","flush","ingredients"],"mappings":"AAEA,SAASA,8BAAT,QAA+C,kCAA/C;AAEA,OAAO,MAAMC,2BAAN,CACP;AAGIC,EAAAA,WAAW,GACX;AAAA,SAHQC,YAGR;AACI,SAAKA,YAAL,GAAoB,EAApB;AACH;;AAEMC,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AACb,UAAMC,eAAe,GAAGD,OAAO,CAACE,OAAR,EAAxB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,eAAnB,EAAoCE,CAAC,EAArC,EACA;AACI,WAAKL,YAAL,CAAkBM,IAAlB,CAAuB,IAAIT,8BAAJ,CAAmCK,OAAnC,CAAvB;AACH;;AACD,WAAO,IAAP;AACH;;AAEMK,EAAAA,KAAK,GACZ;AACI,SAAKP,YAAL,GAAoB,EAApB;AACA,WAAO,IAAP;AACH;;AAEqB,MAAXQ,WAAW,GACtB;AACI,WAAO,KAAKR,YAAZ;AACH;;AA5BL","sourcesContent":["import { IMessageDataWrapper } from '../../../../../core';\r\nimport { IMessageParser } from './../../../../../core';\r\nimport { CraftingRecipeIngredientParser } from './CraftingRecipeIngredientParser';\r\n\r\nexport class CraftingRecipeMessageParser implements IMessageParser\r\n{\r\n    private _ingredients: CraftingRecipeIngredientParser[];\r\n\r\n    constructor()\r\n    {\r\n        this._ingredients = [];\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n        const ingredientCount = wrapper.readInt();\r\n        for(let i = 0; i < ingredientCount; i++)\r\n        {\r\n            this._ingredients.push(new CraftingRecipeIngredientParser(wrapper));\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._ingredients = [];\r\n        return true;\r\n    }\r\n\r\n    public get ingredients(): CraftingRecipeIngredientParser[]\r\n    {\r\n        return this._ingredients;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}