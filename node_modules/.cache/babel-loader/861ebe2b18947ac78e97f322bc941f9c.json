{"ast":null,"code":"import { Disposable } from '../../core/common/disposable/Disposable';\nimport { NitroLogger } from '../../core/common/logger/NitroLogger';\nimport { RoomObjectMouseEvent } from '../../room/events/RoomObjectMouseEvent';\nimport { RoomObjectUpdateMessage } from '../../room/messages/RoomObjectUpdateMessage';\nimport { RoomEnterEffect } from '../../room/utils/RoomEnterEffect';\nimport { Vector3d } from '../../room/utils/Vector3d';\nimport { FurnitureGroupInfoComposer, SetObjectDataMessageComposer } from '../communication';\nimport { BotPlaceComposer } from '../communication/messages/outgoing/room/engine/BotPlaceComposer';\nimport { GetItemDataComposer } from '../communication/messages/outgoing/room/engine/GetItemDataComposer';\nimport { PetMoveComposer } from '../communication/messages/outgoing/room/engine/PetMoveComposer';\nimport { PetPlaceComposer } from '../communication/messages/outgoing/room/engine/PetPlaceComposer';\nimport { RemoveWallItemComposer } from '../communication/messages/outgoing/room/engine/RemoveWallItemComposer';\nimport { SetItemDataMessageComposer } from '../communication/messages/outgoing/room/engine/SetItemDataMessageComposer';\nimport { FurnitureFloorUpdateComposer } from '../communication/messages/outgoing/room/furniture/floor/FurnitureFloorUpdateComposer';\nimport { FurniturePickupComposer } from '../communication/messages/outgoing/room/furniture/FurniturePickupComposer';\nimport { FurniturePlaceComposer } from '../communication/messages/outgoing/room/furniture/FurniturePlaceComposer';\nimport { FurniturePostItPlaceComposer } from '../communication/messages/outgoing/room/furniture/FurniturePostItPlaceComposer';\nimport { FurnitureColorWheelComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureColorWheelComposer';\nimport { FurnitureDiceActivateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureDiceActivateComposer';\nimport { FurnitureDiceDeactivateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureDiceDeactivateComposer';\nimport { FurnitureMultiStateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureMultiStateComposer';\nimport { FurnitureOneWayDoorComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureOneWayDoorComposer';\nimport { FurnitureRandomStateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureRandomStateComposer';\nimport { FurnitureWallMultiStateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureWallMultiStateComposer';\nimport { FurnitureWallUpdateComposer } from '../communication/messages/outgoing/room/furniture/wall/FurnitureWallUpdateComposer';\nimport { RoomUnitLookComposer } from '../communication/messages/outgoing/room/unit/RoomUnitLookComposer';\nimport { RoomUnitWalkComposer } from '../communication/messages/outgoing/room/unit/RoomUnitWalkComposer';\nimport { Nitro } from '../Nitro';\nimport { MouseEventType } from '../ui/MouseEventType';\nimport { RoomObjectPlacementSource } from './enums/RoomObjectPlacementSource';\nimport { RoomEngineObjectPlaySoundEvent, RoomEngineRoomAdEvent, RoomEngineUseProductEvent, RoomObjectPlaySoundIdEvent, RoomObjectRoomAdEvent, RoomObjectSoundMachineEvent } from './events';\nimport { RoomEngineDimmerStateEvent } from './events/RoomEngineDimmerStateEvent';\nimport { RoomEngineObjectEvent } from './events/RoomEngineObjectEvent';\nimport { RoomEngineObjectPlacedEvent } from './events/RoomEngineObjectPlacedEvent';\nimport { RoomEngineObjectPlacedOnUserEvent } from './events/RoomEngineObjectPlacedOnUserEvent';\nimport { RoomEngineSamplePlaybackEvent } from './events/RoomEngineSamplePlaybackEvent';\nimport { RoomEngineTriggerWidgetEvent } from './events/RoomEngineTriggerWidgetEvent';\nimport { RoomObjectBadgeAssetEvent } from './events/RoomObjectBadgeAssetEvent';\nimport { RoomObjectDataRequestEvent } from './events/RoomObjectDataRequestEvent';\nimport { RoomObjectDimmerStateUpdateEvent } from './events/RoomObjectDimmerStateUpdateEvent';\nimport { RoomObjectFloorHoleEvent } from './events/RoomObjectFloorHoleEvent';\nimport { RoomObjectFurnitureActionEvent } from './events/RoomObjectFurnitureActionEvent';\nimport { RoomObjectHSLColorEnabledEvent } from './events/RoomObjectHSLColorEnabledEvent';\nimport { RoomObjectHSLColorEnableEvent } from './events/RoomObjectHSLColorEnableEvent';\nimport { RoomObjectMoveEvent } from './events/RoomObjectMoveEvent';\nimport { RoomObjectSamplePlaybackEvent } from './events/RoomObjectSamplePlaybackEvent';\nimport { RoomObjectStateChangedEvent } from './events/RoomObjectStateChangedEvent';\nimport { RoomObjectTileMouseEvent } from './events/RoomObjectTileMouseEvent';\nimport { RoomObjectWallMouseEvent } from './events/RoomObjectWallMouseEvent';\nimport { RoomObjectWidgetRequestEvent } from './events/RoomObjectWidgetRequestEvent';\nimport { ObjectAvatarSelectedMessage } from './messages/ObjectAvatarSelectedMessage';\nimport { ObjectDataUpdateMessage } from './messages/ObjectDataUpdateMessage';\nimport { ObjectSelectedMessage } from './messages/ObjectSelectedMessage';\nimport { ObjectTileCursorUpdateMessage } from './messages/ObjectTileCursorUpdateMessage';\nimport { ObjectVisibilityUpdateMessage } from './messages/ObjectVisibilityUpdateMessage';\nimport { RoomObjectCategory } from './object/RoomObjectCategory';\nimport { RoomObjectOperationType } from './object/RoomObjectOperationType';\nimport { RoomObjectType } from './object/RoomObjectType';\nimport { RoomObjectUserType } from './object/RoomObjectUserType';\nimport { RoomObjectVariable } from './object/RoomObjectVariable';\nimport { SelectedRoomObjectData } from './utils/SelectedRoomObjectData';\nexport class RoomObjectEventHandler extends Disposable {\n  constructor(roomEngine) {\n    super();\n    this._roomEngine = void 0;\n    this._eventIds = void 0;\n    this._selectedAvatarId = void 0;\n    this._selectedObjectId = void 0;\n    this._selectedObjectCategory = void 0;\n    this._whereYouClickIsWhereYouGo = void 0;\n    this._objectPlacementSource = void 0;\n    this._roomEngine = roomEngine;\n    this._eventIds = new Map();\n    this._selectedAvatarId = -1;\n    this._selectedObjectId = -1;\n    this._selectedObjectCategory = -2;\n    this._whereYouClickIsWhereYouGo = true;\n    this._objectPlacementSource = null;\n    this.onRoomEngineObjectEvent = this.onRoomEngineObjectEvent.bind(this);\n\n    this._roomEngine.events.addEventListener(RoomEngineObjectEvent.ADDED, this.onRoomEngineObjectEvent);\n  }\n\n  dispose() {\n    if (this._eventIds) {\n      this._eventIds = null;\n    }\n\n    this._roomEngine.events.removeEventListener(RoomEngineObjectEvent.ADDED, this.onRoomEngineObjectEvent);\n\n    this._roomEngine = null;\n  }\n\n  onRoomEngineObjectEvent(event) {\n    let selectedData = this.getSelectedRoomObjectData(event.roomId);\n    if (!selectedData) return;\n\n    if (selectedData.operation === RoomObjectOperationType.OBJECT_PLACE && selectedData.id === event.objectId) {\n      const roomObject = this._roomEngine.getRoomObject(event.roomId, selectedData.id, selectedData.category);\n\n      if (roomObject && roomObject.model) {\n        if (selectedData.category === RoomObjectCategory.FLOOR) {\n          const allowedDirections = roomObject.model.getValue(RoomObjectVariable.FURNITURE_ALLOWED_DIRECTIONS);\n\n          if (allowedDirections && allowedDirections.length) {\n            const direction = new Vector3d(allowedDirections[0]);\n            roomObject.setDirection(direction);\n            this.updateSelectedObjectData(event.roomId, selectedData.id, selectedData.category, selectedData.loc, direction, selectedData.operation, selectedData.typeId, selectedData.instanceData, selectedData.stuffData, selectedData.state, selectedData.animFrame, selectedData.posture);\n            selectedData = this.getSelectedRoomObjectData(event.roomId);\n            if (!selectedData) return;\n          }\n        }\n      }\n\n      this.setFurnitureAlphaMultiplier(roomObject, 0.5);\n    }\n  }\n\n  processRoomCanvasMouseEvent(event, object, geometry) {\n    if (!event || !object) return;\n    if (RoomEnterEffect.isRunning()) return;\n    const type = object.type;\n\n    let category = this._roomEngine.getRoomObjectCategoryForType(type);\n\n    if (category !== RoomObjectCategory.ROOM && (!this._roomEngine.isPlayingGame() || category !== RoomObjectCategory.UNIT)) category = RoomObjectCategory.MINIMUM;\n\n    const _local_7 = this.getMouseEventId(category, event.type);\n\n    if (_local_7 === event.eventId) {\n      if (event.type === MouseEventType.MOUSE_CLICK || event.type === MouseEventType.DOUBLE_CLICK || event.type === MouseEventType.MOUSE_DOWN || event.type === MouseEventType.MOUSE_UP || event.type === MouseEventType.MOUSE_MOVE) return;\n    } else {\n      if (event.eventId) {\n        this.setMouseEventId(category, event.type, event.eventId);\n      }\n    }\n\n    if (object.mouseHandler) object.mouseHandler.mouseEvent(event, geometry);\n  }\n\n  processRoomObjectPlacement(placementSource, roomId, id, category, typeId) {\n    let extra = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let stuffData = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    let state = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : -1;\n    let frameNumber = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : -1;\n    let posture = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : null;\n    this._objectPlacementSource = placementSource;\n    const location = new Vector3d(-100, -100);\n    const direction = new Vector3d(0);\n    this.setSelectedRoomObjectData(roomId, id, category, location, direction, RoomObjectOperationType.OBJECT_PLACE, typeId, extra, stuffData, state, frameNumber, posture);\n\n    if (this._roomEngine) {\n      this._roomEngine.setObjectMoverIconSprite(typeId, category, false, extra, stuffData, state, frameNumber, posture);\n\n      this._roomEngine.setObjectMoverIconSpriteVisible(false);\n    }\n\n    return true;\n  }\n\n  cancelRoomObjectInsert(k) {\n    this.resetSelectedObjectData(k);\n    return true;\n  }\n\n  getMouseEventId(k, _arg_2) {\n    const existing = this._eventIds.get(k);\n\n    if (!existing) return null;\n    return existing.get(_arg_2) || null;\n  }\n\n  setMouseEventId(k, _arg_2, _arg_3) {\n    let existing = this._eventIds.get(k);\n\n    if (!existing) {\n      existing = new Map();\n\n      this._eventIds.set(k, existing);\n    }\n\n    existing.delete(_arg_2);\n    existing.set(_arg_2, _arg_3);\n  }\n\n  handleRoomObjectEvent(event, roomId) {\n    if (!event) return;\n\n    if (event instanceof RoomObjectMouseEvent) {\n      this.handleRoomObjectMouseEvent(event, roomId);\n      return;\n    }\n\n    switch (event.type) {\n      case RoomObjectStateChangedEvent.STATE_CHANGE:\n      case RoomObjectStateChangedEvent.STATE_RANDOM:\n        this.onRoomObjectStateChangedEvent(event, roomId);\n        return;\n\n      case RoomObjectDimmerStateUpdateEvent.DIMMER_STATE:\n        this.onRoomObjectDimmerStateUpdateEvent(event, roomId);\n        return;\n\n      case RoomObjectMoveEvent.POSITION_CHANGED:\n      case RoomObjectMoveEvent.OBJECT_REMOVED:\n        this.handleSelectedObjectRemove(event, roomId);\n        return;\n\n      case RoomObjectWidgetRequestEvent.OPEN_WIDGET:\n      case RoomObjectWidgetRequestEvent.CLOSE_WIDGET:\n      case RoomObjectWidgetRequestEvent.OPEN_FURNI_CONTEXT_MENU:\n      case RoomObjectWidgetRequestEvent.CLOSE_FURNI_CONTEXT_MENU:\n      case RoomObjectWidgetRequestEvent.PLACEHOLDER:\n      case RoomObjectWidgetRequestEvent.CREDITFURNI:\n      case RoomObjectWidgetRequestEvent.STICKIE:\n      case RoomObjectWidgetRequestEvent.PRESENT:\n      case RoomObjectWidgetRequestEvent.TROPHY:\n      case RoomObjectWidgetRequestEvent.TEASER:\n      case RoomObjectWidgetRequestEvent.ECOTRONBOX:\n      case RoomObjectWidgetRequestEvent.DIMMER:\n      case RoomObjectWidgetRequestEvent.WIDGET_REMOVE_DIMMER:\n      case RoomObjectWidgetRequestEvent.CLOTHING_CHANGE:\n      case RoomObjectWidgetRequestEvent.JUKEBOX_PLAYLIST_EDITOR:\n      case RoomObjectWidgetRequestEvent.MANNEQUIN:\n      case RoomObjectWidgetRequestEvent.PET_PRODUCT_MENU:\n      case RoomObjectWidgetRequestEvent.GUILD_FURNI_CONTEXT_MENU:\n      case RoomObjectWidgetRequestEvent.MONSTERPLANT_SEED_PLANT_CONFIRMATION_DIALOG:\n      case RoomObjectWidgetRequestEvent.PURCHASABLE_CLOTHING_CONFIRMATION_DIALOG:\n      case RoomObjectWidgetRequestEvent.BACKGROUND_COLOR:\n      case RoomObjectWidgetRequestEvent.MYSTERYBOX_OPEN_DIALOG:\n      case RoomObjectWidgetRequestEvent.EFFECTBOX_OPEN_DIALOG:\n      case RoomObjectWidgetRequestEvent.MYSTERYTROPHY_OPEN_DIALOG:\n      case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_OPEN:\n      case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_ENGRAVING:\n      case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_FAILED:\n      case RoomObjectWidgetRequestEvent.FRIEND_FURNITURE_CONFIRM:\n      case RoomObjectWidgetRequestEvent.FRIEND_FURNITURE_ENGRAVING:\n      case RoomObjectWidgetRequestEvent.BADGE_DISPLAY_ENGRAVING:\n      case RoomObjectWidgetRequestEvent.HIGH_SCORE_DISPLAY:\n      case RoomObjectWidgetRequestEvent.HIDE_HIGH_SCORE_DISPLAY:\n      case RoomObjectWidgetRequestEvent.INERNAL_LINK:\n      case RoomObjectWidgetRequestEvent.ROOM_LINK:\n        this.onRoomObjectWidgetRequestEvent(event, roomId);\n        return;\n\n      case RoomObjectFurnitureActionEvent.DICE_ACTIVATE:\n      case RoomObjectFurnitureActionEvent.DICE_OFF:\n      case RoomObjectFurnitureActionEvent.USE_HABBOWHEEL:\n      case RoomObjectFurnitureActionEvent.STICKIE:\n      case RoomObjectFurnitureActionEvent.ENTER_ONEWAYDOOR:\n        this.onRoomObjectFurnitureActionEvent(event, roomId);\n        return;\n\n      case RoomObjectFurnitureActionEvent.SOUND_MACHINE_INIT:\n      case RoomObjectFurnitureActionEvent.SOUND_MACHINE_START:\n      case RoomObjectFurnitureActionEvent.SOUND_MACHINE_STOP:\n      case RoomObjectFurnitureActionEvent.SOUND_MACHINE_DISPOSE:\n        this.handleObjectSoundMachineEvent(event, roomId);\n        return;\n\n      case RoomObjectFurnitureActionEvent.JUKEBOX_INIT:\n      case RoomObjectFurnitureActionEvent.JUKEBOX_START:\n      case RoomObjectFurnitureActionEvent.JUKEBOX_MACHINE_STOP:\n      case RoomObjectFurnitureActionEvent.JUKEBOX_DISPOSE:\n        this.handleObjectJukeboxEvent(event, roomId);\n        return;\n\n      case RoomObjectFloorHoleEvent.ADD_HOLE:\n      case RoomObjectFloorHoleEvent.REMOVE_HOLE:\n        this.onRoomObjectFloorHoleEvent(event, roomId);\n        return;\n\n      case RoomObjectRoomAdEvent.ROOM_AD_FURNI_CLICK:\n      case RoomObjectRoomAdEvent.ROOM_AD_FURNI_DOUBLE_CLICK:\n      case RoomObjectRoomAdEvent.ROOM_AD_TOOLTIP_SHOW:\n      case RoomObjectRoomAdEvent.ROOM_AD_TOOLTIP_HIDE:\n      case RoomObjectRoomAdEvent.ROOM_AD_LOAD_IMAGE:\n        this.onRoomObjectRoomAdEvent(event, roomId);\n        return;\n\n      case RoomObjectBadgeAssetEvent.LOAD_BADGE:\n        this.onRoomObjectBadgeAssetEvent(event, roomId);\n        return;\n\n      case RoomObjectFurnitureActionEvent.MOUSE_ARROW:\n      case RoomObjectFurnitureActionEvent.MOUSE_BUTTON:\n        this.handleMousePointer(event, roomId);\n        return;\n\n      case RoomObjectPlaySoundIdEvent.PLAY_SOUND:\n      case RoomObjectPlaySoundIdEvent.PLAY_SOUND_AT_PITCH:\n        this.handleRoomObjectPlaySoundEvent(event, roomId);\n        return;\n\n      case RoomObjectSamplePlaybackEvent.ROOM_OBJECT_INITIALIZED:\n      case RoomObjectSamplePlaybackEvent.ROOM_OBJECT_DISPOSED:\n      case RoomObjectSamplePlaybackEvent.PLAY_SAMPLE:\n      case RoomObjectSamplePlaybackEvent.CHANGE_PITCH:\n        this.handleRoomObjectSamplePlaybackEvent(event, roomId);\n        return;\n\n      case RoomObjectHSLColorEnableEvent.ROOM_BACKGROUND_COLOR:\n        this.onHSLColorEnableEvent(event, roomId);\n        return;\n\n      case RoomObjectDataRequestEvent.RODRE_CURRENT_USER_ID:\n      case RoomObjectDataRequestEvent.RODRE_URL_PREFIX:\n        this.onRoomObjectDataRequestEvent(event, roomId);\n        return;\n\n      default:\n        NitroLogger.log(`Unhandled Event: ${event.constructor.name}`, `Object ID: ${event.object.id}`);\n        return;\n    }\n  }\n\n  handleRoomObjectMouseEvent(event, roomId) {\n    if (!event || !event.type) return;\n\n    switch (event.type) {\n      case RoomObjectMouseEvent.CLICK:\n        this.handleRoomObjectMouseClickEvent(event, roomId);\n        return;\n\n      case RoomObjectMouseEvent.MOUSE_MOVE:\n        this.handleRoomObjectMouseMoveEvent(event, roomId);\n        return;\n\n      case RoomObjectMouseEvent.MOUSE_DOWN:\n        this.handleRoomObjectMouseDownEvent(event, roomId);\n        return;\n\n      case RoomObjectMouseEvent.MOUSE_DOWN_LONG:\n        this.handleRoomObjectMouseDownLongEvent(event, roomId);\n        return;\n\n      case RoomObjectMouseEvent.MOUSE_ENTER:\n        this.handleRoomObjectMouseEnterEvent(event, roomId);\n        return;\n\n      case RoomObjectMouseEvent.MOUSE_LEAVE:\n        this.handleRoomObjectMouseLeaveEvent(event, roomId);\n        return;\n    }\n  }\n\n  handleRoomObjectMouseClickEvent(event, roomId) {\n    if (!event) return;\n    let operation = RoomObjectOperationType.OBJECT_UNDEFINED;\n    const selectedData = this.getSelectedRoomObjectData(roomId);\n    if (selectedData) operation = selectedData.operation;\n    let didWalk = false;\n    let didMove = false;\n\n    if (this._whereYouClickIsWhereYouGo) {\n      if (!operation || operation === RoomObjectOperationType.OBJECT_UNDEFINED) {\n        didWalk = this.handleMoveTargetFurni(roomId, event);\n      }\n    }\n\n    const category = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\n\n    switch (operation) {\n      case RoomObjectOperationType.OBJECT_MOVE:\n        if (category === RoomObjectCategory.ROOM) {\n          if (selectedData) {\n            this.modifyRoomObject(roomId, selectedData.id, selectedData.category, RoomObjectOperationType.OBJECT_MOVE_TO);\n          }\n        } else if (category === RoomObjectCategory.UNIT) {\n          if (selectedData && event.objectType === RoomObjectUserType.MONSTER_PLANT) {\n            this.modifyRoomObject(roomId, selectedData.id, selectedData.category, RoomObjectOperationType.OBJECT_MOVE_TO);\n          }\n\n          if (event.eventId) this.setMouseEventId(RoomObjectCategory.ROOM, MouseEventType.MOUSE_CLICK, event.eventId);\n          this.placeObjectOnUser(roomId, event.objectId, category);\n        }\n\n        didMove = true;\n        if (event.objectId !== -1) this.setSelectedObject(roomId, event.objectId, category);\n        break;\n\n      case RoomObjectOperationType.OBJECT_PLACE:\n        if (category === RoomObjectCategory.ROOM) {\n          this.placeObject(roomId, event instanceof RoomObjectTileMouseEvent, event instanceof RoomObjectWallMouseEvent);\n        } else if (category === RoomObjectCategory.UNIT) {\n          switch (event.objectType) {\n            case RoomObjectUserType.MONSTER_PLANT:\n            case RoomObjectUserType.RENTABLE_BOT:\n              this.placeObject(roomId, event instanceof RoomObjectTileMouseEvent, event instanceof RoomObjectWallMouseEvent);\n              break;\n\n            default:\n              if (event.eventId) {\n                this.setMouseEventId(RoomObjectCategory.ROOM, MouseEventType.MOUSE_CLICK, event.eventId);\n              }\n\n              this.placeObjectOnUser(roomId, event.objectId, category);\n              break;\n          }\n        }\n\n        break;\n\n      case RoomObjectOperationType.OBJECT_UNDEFINED:\n        if (category === RoomObjectCategory.ROOM) {\n          if (!didWalk && event instanceof RoomObjectTileMouseEvent) this.onRoomObjectTileMouseEvent(roomId, event);\n        } else {\n          this.setSelectedObject(roomId, event.objectId, category);\n          didMove = false;\n\n          if (category === RoomObjectCategory.UNIT) {\n            if (event.ctrlKey && !event.altKey && !event.shiftKey && event.objectType === RoomObjectUserType.RENTABLE_BOT) {\n              this.modifyRoomObject(roomId, event.objectId, category, RoomObjectOperationType.OBJECT_PICKUP_BOT);\n            } else if (event.ctrlKey && !event.altKey && !event.shiftKey && event.objectType === RoomObjectUserType.MONSTER_PLANT) {\n              this.modifyRoomObject(roomId, event.objectId, category, RoomObjectOperationType.OBJECT_PICKUP_PET);\n            } else if (!event.ctrlKey && !event.altKey && event.shiftKey && event.objectType === RoomObjectUserType.MONSTER_PLANT) {\n              this.modifyRoomObject(roomId, event.objectId, category, RoomObjectOperationType.OBJECT_ROTATE_POSITIVE);\n            }\n\n            if (!this._roomEngine.isPlayingGame()) {\n              didWalk = true;\n            } else {\n              didMove = true;\n            }\n          } else if (category === RoomObjectCategory.FLOOR || category === RoomObjectCategory.WALL) {\n            if (event.altKey || event.ctrlKey || event.shiftKey) {\n              if (!event.ctrlKey && !event.altKey && event.shiftKey) {\n                if (category === RoomObjectCategory.FLOOR) {\n                  if (this._roomEngine.events) {\n                    this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.REQUEST_ROTATE, roomId, event.objectId, category));\n                  }\n                }\n              } else if (event.ctrlKey && !event.altKey && !event.shiftKey) {\n                this.modifyRoomObject(roomId, event.objectId, category, RoomObjectOperationType.OBJECT_PICKUP);\n              }\n\n              if (!this._roomEngine.isPlayingGame()) {\n                didWalk = true;\n              } else {\n                didMove = true;\n              }\n            }\n          }\n\n          if (event.eventId) {\n            if (didWalk) {\n              this.setMouseEventId(RoomObjectCategory.ROOM, MouseEventType.MOUSE_CLICK, event.eventId);\n            }\n\n            if (didMove) {\n              this.setMouseEventId(RoomObjectCategory.MINIMUM, MouseEventType.MOUSE_CLICK, event.eventId);\n            }\n          }\n        }\n\n        break;\n    }\n\n    if (category === RoomObjectCategory.ROOM) {\n      const _local_15 = this.getMouseEventId(RoomObjectCategory.MINIMUM, MouseEventType.MOUSE_CLICK);\n\n      const _local_16 = this.getMouseEventId(RoomObjectCategory.UNIT, MouseEventType.MOUSE_CLICK);\n\n      if (_local_15 !== event.eventId && _local_16 !== event.eventId && !didMove) {\n        this.deselectObject(roomId);\n        if (this._roomEngine.events) this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.DESELECTED, roomId, -1, RoomObjectCategory.MINIMUM));\n        this.setSelectedAvatar(roomId, 0, false);\n      }\n    }\n  }\n\n  handleRoomObjectMouseMoveEvent(event, roomId) {\n    if (!event) return;\n    let operation = RoomObjectOperationType.OBJECT_UNDEFINED;\n    const selectedData = this.getSelectedRoomObjectData(roomId);\n    if (selectedData) operation = selectedData.operation;\n\n    const category = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\n\n    if (this._roomEngine) {\n      const roomCursor = this._roomEngine.getRoomObjectCursor(roomId);\n\n      if (roomCursor && roomCursor.logic) {\n        let newEvent = null;\n\n        if (event instanceof RoomObjectTileMouseEvent) {\n          newEvent = this.handleMouseOverTile(event, roomId);\n        } else if (event.object && event.object.id !== -1) {\n          if (this._whereYouClickIsWhereYouGo) {\n            newEvent = this.handleMouseOverObject(category, roomId, event);\n          }\n        } else {\n          newEvent = new ObjectTileCursorUpdateMessage(null, 0, false, event.eventId);\n        }\n\n        roomCursor.processUpdateMessage(newEvent);\n      }\n    }\n\n    switch (operation) {\n      case RoomObjectOperationType.OBJECT_MOVE:\n        if (category === RoomObjectCategory.ROOM) this.handleObjectMove(event, roomId);\n        return;\n\n      case RoomObjectOperationType.OBJECT_PLACE:\n        if (category === RoomObjectCategory.ROOM) this.handleObjectPlace(event, roomId);\n        return;\n    }\n  }\n\n  handleRoomObjectMouseDownEvent(event, roomId) {\n    if (!event) return;\n    let operation = RoomObjectOperationType.OBJECT_UNDEFINED;\n    const selectedData = this.getSelectedRoomObjectData(roomId);\n    if (selectedData) operation = selectedData.operation;\n\n    const category = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\n\n    switch (operation) {\n      case RoomObjectOperationType.OBJECT_UNDEFINED:\n        if (category === RoomObjectCategory.FLOOR || category === RoomObjectCategory.WALL || event.objectType === RoomObjectUserType.MONSTER_PLANT) {\n          if (event.altKey && !event.ctrlKey && !event.shiftKey || this.decorateModeMove(event)) {\n            if (this._roomEngine.events) this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.REQUEST_MOVE, roomId, event.objectId, category));\n          }\n        }\n\n        return;\n    }\n  }\n\n  handleRoomObjectMouseDownLongEvent(event, roomId) {\n    if (!event) return;\n    let operation = RoomObjectOperationType.OBJECT_UNDEFINED;\n    const selectedData = this.getSelectedRoomObjectData(roomId);\n    if (selectedData) operation = selectedData.operation;\n\n    const category = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\n\n    switch (operation) {\n      case RoomObjectOperationType.OBJECT_UNDEFINED:\n        if (category === RoomObjectCategory.FLOOR || category === RoomObjectCategory.WALL || event.objectType === RoomObjectUserType.MONSTER_PLANT) {\n          if (!event.ctrlKey && !event.shiftKey || this.decorateModeMove(event)) {\n            if (this._roomEngine.events) this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.REQUEST_MANIPULATION, roomId, event.objectId, category));\n          }\n        }\n\n        return;\n    }\n  }\n\n  handleRoomObjectMouseEnterEvent(event, roomId) {\n    const id = event.objectId;\n    const type = event.objectType;\n\n    const category = this._roomEngine.getRoomObjectCategoryForType(type);\n\n    if (this._roomEngine.events) {\n      this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.MOUSE_ENTER, roomId, id, category));\n    }\n  }\n\n  handleRoomObjectMouseLeaveEvent(event, roomId) {\n    const id = event.objectId;\n    const type = event.objectType;\n\n    const category = this._roomEngine.getRoomObjectCategoryForType(type);\n\n    if (category !== RoomObjectCategory.ROOM) {\n      if (category === RoomObjectCategory.UNIT) {\n        const cursor = this._roomEngine.getRoomObjectCursor(roomId);\n\n        if (cursor) cursor.processUpdateMessage(new ObjectDataUpdateMessage(0, null));\n      }\n    }\n\n    if (this._roomEngine.events) {\n      this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.MOUSE_LEAVE, roomId, id, category));\n    }\n\n    return;\n  }\n\n  onRoomObjectStateChangedEvent(event, roomId) {\n    if (!event) return;\n\n    switch (event.type) {\n      case RoomObjectStateChangedEvent.STATE_CHANGE:\n        this.changeObjectState(roomId, event.object.id, event.object.type, event.state, false);\n        return;\n\n      case RoomObjectStateChangedEvent.STATE_RANDOM:\n        this.changeObjectState(roomId, event.object.id, event.object.type, event.state, true);\n        return;\n    }\n  }\n\n  onRoomObjectDimmerStateUpdateEvent(event, roomId) {\n    if (!event) return;\n\n    switch (event.type) {\n      case RoomObjectDimmerStateUpdateEvent.DIMMER_STATE:\n        this._roomEngine.events.dispatchEvent(new RoomEngineDimmerStateEvent(roomId, event.state, event.presetId, event.effectId, event.color, event.brightness));\n\n        return;\n    }\n  }\n\n  handleSelectedObjectRemove(event, roomId) {\n    if (!event || !this._roomEngine) return;\n\n    switch (event.type) {\n      case RoomObjectMoveEvent.POSITION_CHANGED:\n        {\n          const objectId = event.objectId;\n          const objectType = event.objectType;\n\n          const objectCategory = this._roomEngine.getRoomObjectCategoryForType(objectType);\n\n          const object = this._roomEngine.getRoomObject(roomId, objectId, objectCategory);\n\n          const selectionArrow = this._roomEngine.getRoomObjectSelectionArrow(roomId);\n\n          if (object && selectionArrow && selectionArrow.logic) {\n            const location = object.getLocation();\n            selectionArrow.logic.processUpdateMessage(new RoomObjectUpdateMessage(location, null));\n          }\n\n          return;\n        }\n\n      case RoomObjectMoveEvent.OBJECT_REMOVED:\n        this.setSelectedAvatar(roomId, 0, false);\n        return;\n    }\n  }\n\n  onRoomObjectWidgetRequestEvent(event, roomId) {\n    if (!event || !this._roomEngine) return;\n    const objectId = event.objectId;\n    const objectType = event.objectType;\n\n    const objectCategory = this._roomEngine.getRoomObjectCategoryForType(objectType);\n\n    const eventDispatcher = this._roomEngine.events;\n    if (!eventDispatcher) return;\n\n    switch (event.type) {\n      case RoomObjectWidgetRequestEvent.OPEN_WIDGET:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.OPEN_WIDGET, roomId, objectId, objectCategory, event.object.logic.widget));\n        return;\n\n      case RoomObjectWidgetRequestEvent.CLOSE_WIDGET:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.CLOSE_WIDGET, roomId, objectId, objectCategory, event.object.logic.widget));\n        return;\n\n      case RoomObjectWidgetRequestEvent.OPEN_FURNI_CONTEXT_MENU:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.OPEN_FURNI_CONTEXT_MENU, roomId, objectId, objectCategory, event.object.logic.contextMenu));\n        return;\n\n      case RoomObjectWidgetRequestEvent.CLOSE_FURNI_CONTEXT_MENU:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.CLOSE_FURNI_CONTEXT_MENU, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.PLACEHOLDER:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_PLACEHOLDER, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.CREDITFURNI:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_CREDITFURNI, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.STICKIE:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_STICKIE, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.PRESENT:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_PRESENT, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.TROPHY:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_TROPHY, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.TEASER:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_TEASER, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.ECOTRONBOX:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_ECOTRONBOX, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.DIMMER:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_DIMMER, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.WIDGET_REMOVE_DIMMER:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REMOVE_DIMMER, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.CLOTHING_CHANGE:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_CLOTHING_CHANGE, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.JUKEBOX_PLAYLIST_EDITOR:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_PLAYLIST_EDITOR, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.MANNEQUIN:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_MANNEQUIN, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.PET_PRODUCT_MENU:\n        eventDispatcher.dispatchEvent(new RoomEngineUseProductEvent(RoomEngineUseProductEvent.USE_PRODUCT_FROM_ROOM, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.GUILD_FURNI_CONTEXT_MENU:\n        this._roomEngine.connection.send(new FurnitureGroupInfoComposer(event.objectId, event.object.model.getValue(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_GUILD_ID)));\n\n        return;\n\n      case RoomObjectWidgetRequestEvent.MONSTERPLANT_SEED_PLANT_CONFIRMATION_DIALOG:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_MONSTERPLANT_SEED_PLANT_CONFIRMATION_DIALOG, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.PURCHASABLE_CLOTHING_CONFIRMATION_DIALOG:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_PURCHASABLE_CLOTHING_CONFIRMATION_DIALOG, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.BACKGROUND_COLOR:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_BACKGROUND_COLOR, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.MYSTERYBOX_OPEN_DIALOG:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_MYSTERYBOX_OPEN_DIALOG, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.EFFECTBOX_OPEN_DIALOG:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_EFFECTBOX_OPEN_DIALOG, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.MYSTERYTROPHY_OPEN_DIALOG:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_MYSTERYTROPHY_OPEN_DIALOG, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_OPEN:\n        //this._roomEngine.connection.send();\n        // new _Str_4406(k._Str_1577, 0)\n        return;\n\n      case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_ENGRAVING:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_ACHIEVEMENT_RESOLUTION_ENGRAVING, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_FAILED:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_ACHIEVEMENT_RESOLUTION_FAILED, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.FRIEND_FURNITURE_CONFIRM:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_FRIEND_FURNITURE_CONFIRM, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.FRIEND_FURNITURE_ENGRAVING:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_FRIEND_FURNITURE_ENGRAVING, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.BADGE_DISPLAY_ENGRAVING:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_BADGE_DISPLAY_ENGRAVING, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.HIGH_SCORE_DISPLAY:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_HIGH_SCORE_DISPLAY, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.HIDE_HIGH_SCORE_DISPLAY:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_HIDE_HIGH_SCORE_DISPLAY, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.INERNAL_LINK:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_INTERNAL_LINK, roomId, objectId, objectCategory));\n        return;\n\n      case RoomObjectWidgetRequestEvent.ROOM_LINK:\n        eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_ROOM_LINK, roomId, objectId, objectCategory));\n        return;\n    }\n  }\n\n  onRoomObjectFurnitureActionEvent(event, roomId) {\n    if (!event) return;\n    this.useObject(roomId, event.object.id, event.object.type, event.type);\n  }\n\n  handleObjectSoundMachineEvent(event, roomId) {\n    if (!event) return;\n\n    const objectCategory = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\n\n    const selectedData = this.getSelectedRoomObjectData(roomId);\n\n    if (selectedData) {\n      if (selectedData.category === objectCategory && selectedData.id === event.objectId) {\n        if (selectedData.operation === RoomObjectOperationType.OBJECT_PLACE) return;\n      }\n    }\n\n    switch (event.type) {\n      case RoomObjectFurnitureActionEvent.SOUND_MACHINE_INIT:\n        this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.SOUND_MACHINE_INIT, roomId, event.objectId, objectCategory));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.SOUND_MACHINE_START:\n        this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.SOUND_MACHINE_SWITCHED_ON, roomId, event.objectId, objectCategory));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.SOUND_MACHINE_STOP:\n        this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.SOUND_MACHINE_SWITCHED_OFF, roomId, event.objectId, objectCategory));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.SOUND_MACHINE_DISPOSE:\n        this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.SOUND_MACHINE_DISPOSE, roomId, event.objectId, objectCategory));\n\n        return;\n    }\n  }\n\n  handleObjectJukeboxEvent(event, roomId) {\n    if (!event) return;\n\n    const objectCategory = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\n\n    const selectedData = this.getSelectedRoomObjectData(roomId);\n\n    if (selectedData) {\n      if (selectedData.category === objectCategory && selectedData.id === event.objectId) {\n        if (selectedData.operation === RoomObjectOperationType.OBJECT_PLACE) return;\n      }\n    }\n\n    switch (event.type) {\n      case RoomObjectFurnitureActionEvent.JUKEBOX_INIT:\n        this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.JUKEBOX_INIT, roomId, event.objectId, objectCategory));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.JUKEBOX_START:\n        this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.JUKEBOX_SWITCHED_ON, roomId, event.objectId, objectCategory));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.JUKEBOX_MACHINE_STOP:\n        this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.JUKEBOX_SWITCHED_OFF, roomId, event.objectId, objectCategory));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.JUKEBOX_DISPOSE:\n        this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.JUKEBOX_DISPOSE, roomId, event.objectId, objectCategory));\n\n        return;\n    }\n  }\n\n  onRoomObjectFloorHoleEvent(event, roomId) {\n    if (!event) return;\n\n    switch (event.type) {\n      case RoomObjectFloorHoleEvent.ADD_HOLE:\n        this._roomEngine.addRoomInstanceFloorHole(roomId, event.objectId);\n\n        return;\n\n      case RoomObjectFloorHoleEvent.REMOVE_HOLE:\n        this._roomEngine.removeRoomInstanceFloorHole(roomId, event.objectId);\n\n        return;\n    }\n  }\n\n  onRoomObjectRoomAdEvent(event, roomId) {\n    if (!event) return;\n    let eventType = null;\n\n    switch (event.type) {\n      case RoomObjectRoomAdEvent.ROOM_AD_FURNI_CLICK:\n        this._roomEngine.events.dispatchEvent(event);\n\n        if (event.clickUrl && event.clickUrl.length > 0) {\n          Nitro.instance.createLinkEvent(event.clickUrl);\n        }\n\n        eventType = RoomEngineRoomAdEvent.FURNI_CLICK;\n        break;\n\n      case RoomObjectRoomAdEvent.ROOM_AD_FURNI_DOUBLE_CLICK:\n        if (event.clickUrl && event.clickUrl.length > 0) {\n          const catalogPage = 'CATALOG_PAGE';\n\n          if (event.clickUrl.indexOf(catalogPage) === 0) {\n            Nitro.instance.createLinkEvent(event.clickUrl.substr(catalogPage.length));\n          }\n        }\n\n        eventType = RoomEngineRoomAdEvent.FURNI_DOUBLE_CLICK;\n        break;\n\n      case RoomObjectRoomAdEvent.ROOM_AD_TOOLTIP_SHOW:\n        eventType = RoomEngineRoomAdEvent.TOOLTIP_SHOW;\n        break;\n\n      case RoomObjectRoomAdEvent.ROOM_AD_TOOLTIP_HIDE:\n        eventType = RoomEngineRoomAdEvent.TOOLTIP_HIDE;\n        break;\n    }\n\n    if (eventType) this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(eventType, roomId, event.objectId, this._roomEngine.getRoomObjectCategoryForType(event.objectType)));\n  }\n\n  onRoomObjectBadgeAssetEvent(event, roomId) {\n    if (!event || !this._roomEngine) return;\n\n    switch (event.type) {\n      case RoomObjectBadgeAssetEvent.LOAD_BADGE:\n        {\n          const objectId = event.objectId;\n          const objectType = event.objectType;\n\n          const objectCategory = this._roomEngine.getRoomObjectCategoryForType(objectType);\n\n          this._roomEngine.loadRoomObjectBadgeImage(roomId, objectId, objectCategory, event.badgeId, event.groupBadge);\n\n          return;\n        }\n    }\n  }\n\n  handleMousePointer(event, roomId) {\n    if (!event) return;\n\n    this._roomEngine.updateMousePointer(event.type, event.objectId, event.objectType);\n  }\n\n  handleRoomObjectPlaySoundEvent(event, roomId) {\n    const objectCategory = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\n\n    switch (event.type) {\n      case RoomObjectPlaySoundIdEvent.PLAY_SOUND:\n        this._roomEngine.events.dispatchEvent(new RoomEngineObjectPlaySoundEvent(RoomEngineObjectPlaySoundEvent.PLAY_SOUND, roomId, event.objectId, objectCategory, event.soundId, event.pitch));\n\n        return;\n\n      case RoomObjectPlaySoundIdEvent.PLAY_SOUND_AT_PITCH:\n        this._roomEngine.events.dispatchEvent(new RoomEngineObjectPlaySoundEvent(RoomEngineObjectPlaySoundEvent.PLAY_SOUND_AT_PITCH, roomId, event.objectId, objectCategory, event.soundId, event.pitch));\n\n        return;\n    }\n  }\n\n  handleRoomObjectSamplePlaybackEvent(event, roomId) {\n    if (!event) return;\n\n    const objectCategory = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\n\n    switch (event.type) {\n      case RoomObjectSamplePlaybackEvent.ROOM_OBJECT_INITIALIZED:\n        this._roomEngine.events.dispatchEvent(new RoomEngineSamplePlaybackEvent(RoomEngineSamplePlaybackEvent.ROOM_OBJECT_INITIALIZED, roomId, event.objectId, objectCategory, event.sampleId, event.pitch));\n\n        break;\n\n      case RoomObjectSamplePlaybackEvent.ROOM_OBJECT_DISPOSED:\n        this._roomEngine.events.dispatchEvent(new RoomEngineSamplePlaybackEvent(RoomEngineSamplePlaybackEvent.ROOM_OBJECT_DISPOSED, roomId, event.objectId, objectCategory, event.sampleId, event.pitch));\n\n        break;\n\n      case RoomObjectSamplePlaybackEvent.PLAY_SAMPLE:\n        this._roomEngine.events.dispatchEvent(new RoomEngineSamplePlaybackEvent(RoomEngineSamplePlaybackEvent.PLAY_SAMPLE, roomId, event.objectId, objectCategory, event.sampleId, event.pitch));\n\n        break;\n\n      case RoomObjectSamplePlaybackEvent.CHANGE_PITCH:\n        this._roomEngine.events.dispatchEvent(new RoomEngineSamplePlaybackEvent(RoomEngineSamplePlaybackEvent.CHANGE_PITCH, roomId, event.objectId, objectCategory, event.sampleId, event.pitch));\n\n        break;\n    }\n  }\n\n  onHSLColorEnableEvent(event, roomId) {\n    if (!event || !this._roomEngine) return;\n\n    switch (event.type) {\n      case RoomObjectHSLColorEnableEvent.ROOM_BACKGROUND_COLOR:\n        this._roomEngine.events.dispatchEvent(new RoomObjectHSLColorEnabledEvent(RoomObjectHSLColorEnabledEvent.ROOM_BACKGROUND_COLOR, roomId, event.enable, event.hue, event.saturation, event.lightness));\n\n        return;\n    }\n  }\n\n  onRoomObjectDataRequestEvent(event, roomId) {\n    if (!event || !this._roomEngine || !event.object) return;\n\n    switch (event.type) {\n      case RoomObjectDataRequestEvent.RODRE_CURRENT_USER_ID:\n        event.object.model.setValue(RoomObjectVariable.SESSION_CURRENT_USER_ID, this._roomEngine.sessionDataManager.userId);\n        return;\n\n      case RoomObjectDataRequestEvent.RODRE_URL_PREFIX:\n        event.object.model.setValue(RoomObjectVariable.SESSION_URL_PREFIX, Nitro.instance.getConfiguration('url.prefix'));\n        return;\n    }\n  }\n\n  onRoomObjectTileMouseEvent(roomId, event) {\n    if (!this._roomEngine || this._roomEngine.isDecorating || !this._roomEngine.roomSessionManager) return;\n\n    const session = this._roomEngine.roomSessionManager.getSession(roomId);\n\n    if (!session || session.isSpectator) return;\n    this.sendWalkUpdate(event.tileXAsInt, event.tileYAsInt);\n  }\n\n  handleObjectMove(event, roomId) {\n    if (!event || !this._roomEngine) return;\n    const eventDispatcher = this._roomEngine.events;\n    if (!eventDispatcher) return;\n    const selectedData = this.getSelectedRoomObjectData(roomId);\n    if (!selectedData) return;\n\n    const roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\n\n    if (!roomObject) return;\n    let _local_6 = true;\n\n    if (selectedData.category === RoomObjectCategory.FLOOR || selectedData.category === RoomObjectCategory.UNIT) {\n      const stackingHeightMap = this._roomEngine.getFurnitureStackingHeightMap(roomId);\n\n      if (!(event instanceof RoomObjectTileMouseEvent && this.handleFurnitureMove(roomObject, selectedData, Math.trunc(event.tileX + 0.5), Math.trunc(event.tileY + 0.5), stackingHeightMap))) {\n        this.handleFurnitureMove(roomObject, selectedData, selectedData.loc.x, selectedData.loc.y, stackingHeightMap);\n        _local_6 = false;\n      }\n    } else if (selectedData.category === RoomObjectCategory.WALL) {\n      _local_6 = false;\n\n      if (event instanceof RoomObjectWallMouseEvent) {\n        const _local_10 = event.wallLocation;\n        const _local_11 = event.wallWidth;\n        const _local_12 = event.wallHeight;\n        const _local_13 = event.x;\n        const _local_14 = event.y;\n        const _local_15 = event.direction;\n\n        if (this.handleWallItemMove(roomObject, selectedData, _local_10, _local_11, _local_12, _local_13, _local_14, _local_15)) {\n          _local_6 = true;\n        }\n      }\n\n      if (!_local_6) {\n        roomObject.setLocation(selectedData.loc);\n        roomObject.setDirection(selectedData.dir);\n      }\n\n      this._roomEngine.updateRoomObjectMask(roomId, selectedData.id, _local_6);\n    }\n\n    if (_local_6) {\n      this.setFurnitureAlphaMultiplier(roomObject, 0.5);\n\n      this._roomEngine.setObjectMoverIconSpriteVisible(false);\n    } else {\n      this.setFurnitureAlphaMultiplier(roomObject, 0);\n\n      this._roomEngine.setObjectMoverIconSpriteVisible(true);\n    }\n  }\n\n  handleObjectPlace(event, roomId) {\n    if (!event || !this._roomEngine) return;\n    const eventDispatcher = this._roomEngine.events;\n    if (!eventDispatcher) return;\n    let selectedData = this.getSelectedRoomObjectData(roomId);\n    if (!selectedData) return;\n\n    let roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\n\n    if (!roomObject) {\n      if (event instanceof RoomObjectTileMouseEvent) {\n        if (selectedData.category === RoomObjectCategory.FLOOR) {\n          this._roomEngine.addFurnitureFloor(roomId, selectedData.id, selectedData.typeId, selectedData.loc, selectedData.dir, 0, selectedData.stuffData, parseFloat(selectedData.instanceData), -1, 0, 0, '', false);\n        } else if (selectedData.category === RoomObjectCategory.UNIT) {\n          this._roomEngine.addRoomObjectUser(roomId, selectedData.id, new Vector3d(), new Vector3d(180), 180, selectedData.typeId, selectedData.instanceData);\n\n          const roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\n\n          roomObject && selectedData.posture && roomObject.model.setValue(RoomObjectVariable.FIGURE_POSTURE, selectedData.posture);\n        }\n      } else if (event instanceof RoomObjectWallMouseEvent) {\n        if (selectedData.category === RoomObjectCategory.WALL) {\n          this._roomEngine.addFurnitureWall(roomId, selectedData.id, selectedData.typeId, selectedData.loc, selectedData.dir, 0, selectedData.instanceData, 0);\n        }\n      }\n\n      roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\n\n      if (roomObject) {\n        if (selectedData.category === RoomObjectCategory.FLOOR) {\n          const allowedDirections = roomObject.model.getValue(RoomObjectVariable.FURNITURE_ALLOWED_DIRECTIONS);\n\n          if (allowedDirections && allowedDirections.length) {\n            const direction = new Vector3d(allowedDirections[0]);\n            roomObject.setDirection(direction);\n            this.updateSelectedObjectData(roomId, selectedData.id, selectedData.category, selectedData.loc, direction, selectedData.operation, selectedData.typeId, selectedData.instanceData, selectedData.stuffData, selectedData.state, selectedData.animFrame, selectedData.posture);\n            selectedData = this.getSelectedRoomObjectData(roomId);\n            if (!selectedData) return;\n          }\n        }\n      }\n\n      this.setFurnitureAlphaMultiplier(roomObject, 0.5);\n\n      this._roomEngine.setObjectMoverIconSpriteVisible(true);\n    }\n\n    if (roomObject) {\n      let _local_12 = true;\n\n      const stackingHeightMap = this._roomEngine.getFurnitureStackingHeightMap(roomId);\n\n      if (selectedData.category === RoomObjectCategory.FLOOR) {\n        if (!(event instanceof RoomObjectTileMouseEvent && this.handleFurnitureMove(roomObject, selectedData, Math.trunc(event.tileX + 0.5), Math.trunc(event.tileY + 0.5), stackingHeightMap))) {\n          this._roomEngine.removeRoomObjectFloor(roomId, selectedData.id);\n\n          _local_12 = false;\n        }\n      } else if (selectedData.category === RoomObjectCategory.WALL) {\n        _local_12 = false;\n\n        if (event instanceof RoomObjectWallMouseEvent) {\n          const _local_14 = event.wallLocation;\n          const _local_15 = event.wallWidth;\n          const _local_16 = event.wallHeight;\n          const _local_17 = event.x;\n          const _local_18 = event.y;\n          const _local_19 = event.direction;\n\n          if (this.handleWallItemMove(roomObject, selectedData, _local_14, _local_15, _local_16, _local_17, _local_18, _local_19)) {\n            _local_12 = true;\n          }\n        }\n\n        if (!_local_12) {\n          this._roomEngine.removeRoomObjectWall(roomId, selectedData.id);\n        }\n\n        this._roomEngine.updateRoomObjectMask(roomId, selectedData.id, _local_12);\n      } else if (selectedData.category === RoomObjectCategory.UNIT) {\n        if (!(event instanceof RoomObjectTileMouseEvent && this.handleUserPlace(roomObject, Math.trunc(event.tileX + 0.5), Math.trunc(event.tileY + 0.5), this._roomEngine.getLegacyWallGeometry(roomId)))) {\n          this._roomEngine.removeRoomObjectUser(roomId, selectedData.id);\n\n          _local_12 = false;\n        }\n      }\n\n      this._roomEngine.setObjectMoverIconSpriteVisible(!_local_12);\n    }\n  }\n\n  handleFurnitureMove(roomObject, selectedObjectData, x, y, stackingHeightMap) {\n    if (!roomObject || !selectedObjectData) return false;\n\n    const _local_6 = new Vector3d();\n\n    _local_6.assign(roomObject.getDirection());\n\n    roomObject.setDirection(selectedObjectData.dir);\n\n    const _local_7 = new Vector3d(x, y, 0);\n\n    const _local_8 = new Vector3d();\n\n    _local_8.assign(roomObject.getDirection());\n\n    let _local_9 = this.validateFurnitureLocation(roomObject, _local_7, selectedObjectData.loc, selectedObjectData.dir, stackingHeightMap);\n\n    if (!_local_9) {\n      _local_8.x = this.getValidRoomObjectDirection(roomObject, true);\n      roomObject.setDirection(_local_8);\n      _local_9 = this.validateFurnitureLocation(roomObject, _local_7, selectedObjectData.loc, selectedObjectData.dir, stackingHeightMap);\n    }\n\n    if (!_local_9) {\n      roomObject.setDirection(_local_6);\n      return false;\n    }\n\n    roomObject.setLocation(_local_9);\n    if (_local_8) roomObject.setDirection(_local_8);\n    return true;\n  }\n\n  handleWallItemMove(k, _arg_2, _arg_3, _arg_4, _arg_5, _arg_6, _arg_7, _arg_8) {\n    if (!k || !_arg_2) return false;\n\n    const _local_9 = new Vector3d(_arg_8);\n\n    const _local_10 = this.validateWallItemLocation(k, _arg_3, _arg_4, _arg_5, _arg_6, _arg_7, _arg_2);\n\n    if (!_local_10) return false;\n    k.setLocation(_local_10);\n    k.setDirection(_local_9);\n    return true;\n  }\n\n  validateFurnitureLocation(k, _arg_2, _arg_3, _arg_4, _arg_5) {\n    if (!k || !k.model || !_arg_2) return null;\n    let _local_15 = null;\n\n    const _local_6 = k.getDirection();\n\n    if (!_local_6) return null;\n    if (!_arg_3 || !_arg_4) return null;\n\n    if (_arg_2.x === _arg_3.x && _arg_2.y === _arg_3.y) {\n      if (_local_6.x === _arg_4.x) {\n        _local_15 = new Vector3d();\n\n        _local_15.assign(_arg_3);\n\n        return _local_15;\n      }\n    }\n\n    let sizeX = k.model.getValue(RoomObjectVariable.FURNITURE_SIZE_X);\n    let sizeY = k.model.getValue(RoomObjectVariable.FURNITURE_SIZE_Y);\n    if (sizeX < 1) sizeX = 1;\n    if (sizeY < 1) sizeY = 1;\n    const _local_9 = _arg_3.x;\n    const _local_10 = _arg_3.y;\n    let _local_11 = sizeX;\n    let _local_12 = sizeY;\n    let _local_13 = 0;\n\n    let _local_14 = Math.trunc(Math.trunc(_local_6.x + 45) % 360 / 90);\n\n    if (_local_14 === 1 || _local_14 === 3) {\n      _local_13 = sizeX;\n      sizeX = sizeY;\n      sizeY = _local_13;\n    }\n\n    _local_14 = Math.trunc(Math.trunc(_arg_4.x + 45) % 360 / 90);\n\n    if (_local_14 === 1 || _local_14 === 3) {\n      _local_13 = _local_11;\n      _local_11 = _local_12;\n      _local_12 = _local_13;\n    }\n\n    if (_arg_5 && _arg_2) {\n      const stackable = k.model.getValue(RoomObjectVariable.FURNITURE_ALWAYS_STACKABLE) === 1;\n\n      if (_arg_5.validateLocation(_arg_2.x, _arg_2.y, sizeX, sizeY, _local_9, _local_10, _local_11, _local_12, stackable)) {\n        return new Vector3d(_arg_2.x, _arg_2.y, _arg_5.getTileHeight(_arg_2.x, _arg_2.y));\n      }\n\n      return null;\n    }\n\n    return null;\n  }\n\n  validateWallItemLocation(k, _arg_2, _arg_3, _arg_4, _arg_5, _arg_6, _arg_7) {\n    if (k == null || k.model == null || _arg_2 == null || _arg_3 == null || _arg_4 == null || _arg_7 == null) return null;\n\n    const _local_8 = k.model.getValue(RoomObjectVariable.FURNITURE_SIZE_X);\n\n    const _local_9 = k.model.getValue(RoomObjectVariable.FURNITURE_SIZE_Z);\n\n    const _local_10 = k.model.getValue(RoomObjectVariable.FURNITURE_CENTER_Z);\n\n    if (_arg_5 < _local_8 / 2 || _arg_5 > _arg_3.length - _local_8 / 2 || _arg_6 < _local_10 || _arg_6 > _arg_4.length - (_local_9 - _local_10)) {\n      if (_arg_5 < _local_8 / 2 && _arg_5 <= _arg_3.length - _local_8 / 2) {\n        _arg_5 = _local_8 / 2;\n      } else {\n        if (_arg_5 >= _local_8 / 2 && _arg_5 > _arg_3.length - _local_8 / 2) {\n          _arg_5 = _arg_3.length - _local_8 / 2;\n        }\n      }\n\n      if (_arg_6 < _local_10 && _arg_6 <= _arg_4.length - (_local_9 - _local_10)) {\n        _arg_6 = _local_10;\n      } else {\n        if (_arg_6 >= _local_10 && _arg_6 > _arg_4.length - (_local_9 - _local_10)) {\n          _arg_6 = _arg_4.length - (_local_9 - _local_10);\n        }\n      }\n    }\n\n    if (_arg_5 < _local_8 / 2 || _arg_5 > _arg_3.length - _local_8 / 2 || _arg_6 < _local_10 || _arg_6 > _arg_4.length - (_local_9 - _local_10)) {\n      return null;\n    }\n\n    let _local_11 = Vector3d.sum(Vector3d.product(_arg_3, _arg_5 / _arg_3.length), Vector3d.product(_arg_4, _arg_6 / _arg_4.length));\n\n    _local_11 = Vector3d.sum(_arg_2, _local_11);\n    return _local_11;\n  }\n\n  changeObjectState(roomId, objectId, type, state, isRandom) {\n    const category = this._roomEngine.getRoomObjectCategoryForType(type);\n\n    this.changeRoomObjectState(roomId, objectId, category, state, isRandom);\n  }\n\n  useObject(roomId, objectId, type, action) {\n    if (!this._roomEngine || !this._roomEngine.connection) return;\n\n    switch (action) {\n      case RoomObjectFurnitureActionEvent.DICE_ACTIVATE:\n        this._roomEngine.connection.send(new FurnitureDiceActivateComposer(objectId));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.DICE_OFF:\n        this._roomEngine.connection.send(new FurnitureDiceDeactivateComposer(objectId));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.USE_HABBOWHEEL:\n        this._roomEngine.connection.send(new FurnitureColorWheelComposer(objectId));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.STICKIE:\n        this._roomEngine.connection.send(new GetItemDataComposer(objectId));\n\n        return;\n\n      case RoomObjectFurnitureActionEvent.ENTER_ONEWAYDOOR:\n        this._roomEngine.connection.send(new FurnitureOneWayDoorComposer(objectId));\n\n        return;\n    }\n  }\n\n  changeRoomObjectState(roomId, objectId, category, state, isRandom) {\n    if (!this._roomEngine || !this._roomEngine.connection) return true;\n\n    if (category === RoomObjectCategory.FLOOR) {\n      if (!isRandom) {\n        this._roomEngine.connection.send(new FurnitureMultiStateComposer(objectId, state));\n      } else {\n        this._roomEngine.connection.send(new FurnitureRandomStateComposer(objectId, state));\n      }\n    } else if (category === RoomObjectCategory.WALL) {\n      this._roomEngine.connection.send(new FurnitureWallMultiStateComposer(objectId, state));\n    }\n\n    return true;\n  }\n\n  sendWalkUpdate(x, y) {\n    if (!this._roomEngine || !this._roomEngine.connection) return;\n\n    this._roomEngine.connection.send(new RoomUnitWalkComposer(x, y));\n  }\n\n  handleMouseOverObject(category, roomId, event) {\n    if (category !== RoomObjectCategory.FLOOR) return null;\n\n    const roomObject = this._roomEngine.getRoomObject(roomId, event.objectId, RoomObjectCategory.FLOOR);\n\n    if (!roomObject) return null;\n    const location = this.getActiveSurfaceLocation(roomObject, event);\n    if (!location) return null;\n\n    const furnitureHeightMap = this._roomEngine.getFurnitureStackingHeightMap(roomId);\n\n    if (!furnitureHeightMap) return null;\n    const x = location.x;\n    const y = location.y;\n    const z = location.z;\n    return new ObjectTileCursorUpdateMessage(new Vector3d(x, y, roomObject.getLocation().z), z, true, event.eventId);\n  }\n\n  handleMoveTargetFurni(k, _arg_2) {\n    if (_arg_2.objectType === RoomObjectUserType.USER || _arg_2.objectType === RoomObjectUserType.PET || _arg_2.objectType === RoomObjectUserType.BOT || _arg_2.objectType === RoomObjectUserType.RENTABLE_BOT || _arg_2.objectType === RoomObjectUserType.MONSTER_PLANT) return;\n\n    const _local_3 = this._roomEngine.getRoomObject(k, _arg_2.objectId, RoomObjectCategory.FLOOR);\n\n    const _local_4 = this.getActiveSurfaceLocation(_local_3, _arg_2);\n\n    if (_local_4) {\n      this.sendWalkUpdate(_local_4.x, _local_4.y);\n      return true;\n    }\n\n    return false;\n  }\n\n  getActiveSurfaceLocation(k, _arg_2) {\n    if (!k || !_arg_2) return null;\n\n    const furniData = this._roomEngine.sessionDataManager.getFloorItemDataByName(k.type);\n\n    if (!furniData) return null;\n    if (!furniData.canStandOn && !furniData.canSitOn && !furniData.canLayOn) return null;\n    const model = k.model;\n    if (!model) return null;\n    const location = k.getLocation();\n    const direction = k.getDirection();\n    let sizeX = model.getValue(RoomObjectVariable.FURNITURE_SIZE_X);\n    let sizeY = model.getValue(RoomObjectVariable.FURNITURE_SIZE_Y);\n    const sizeZ = model.getValue(RoomObjectVariable.FURNITURE_SIZE_Z);\n    if (direction.x === 90 || direction.x === 270) [sizeX, sizeY] = [sizeY, sizeX];\n    if (sizeX < 1) sizeX = 1;\n    if (sizeY < 1) sizeY = 1;\n\n    const renderingCanvas = this._roomEngine.getActiveRoomInstanceRenderingCanvas();\n\n    if (!renderingCanvas) return null;\n    const scale = renderingCanvas.geometry.scale;\n\n    const _local_13 = furniData.canSitOn ? 0.5 : 0;\n\n    const _local_14 = (scale / 2 + _arg_2.spriteOffsetX + _arg_2.localX) / (scale / 4);\n\n    const _local_15 = (_arg_2.spriteOffsetY + _arg_2.localY + (sizeZ - _local_13) * scale / 2) / (scale / 4);\n\n    const _local_16 = (_local_14 + 2 * _local_15) / 4;\n\n    const _local_17 = (_local_14 - 2 * _local_15) / 4;\n\n    const _local_18 = Math.floor(location.x + _local_16);\n\n    const _local_19 = Math.floor(location.y - _local_17 + 1);\n\n    let _local_20 = false;\n    if (_local_18 < location.x || _local_18 >= location.x + sizeX) _local_20 = true;else if (_local_19 < location.y || _local_19 >= location.y + sizeY) _local_20 = true;\n\n    const _local_21 = furniData.canSitOn ? sizeZ - 0.5 : sizeZ;\n\n    if (!_local_20) return new Vector3d(_local_18, _local_19, _local_21);\n    return null;\n  }\n\n  handleMouseOverTile(k, roomId) {\n    if (this._whereYouClickIsWhereYouGo) {\n      return new ObjectTileCursorUpdateMessage(new Vector3d(k.tileXAsInt, k.tileYAsInt, k.tileZAsInt), 0, true, k.eventId);\n    }\n\n    const roomObject = this._roomEngine.getRoomObjectCursor(roomId);\n\n    if (roomObject && roomObject.visualization) {\n      const _local_4 = k.tileXAsInt;\n      const _local_5 = k.tileYAsInt;\n      const _local_6 = k.tileZAsInt;\n\n      const _local_7 = this._roomEngine.getRoomInstance(roomId);\n\n      if (_local_7) {\n        const _local_8 = this._roomEngine.getRoomTileObjectMap(roomId);\n\n        if (_local_8) {\n          const _local_9 = _local_8.getObjectIntTile(_local_4, _local_5);\n\n          const _local_10 = this._roomEngine.getFurnitureStackingHeightMap(roomId);\n\n          if (_local_10) {\n            if (_local_9 && _local_9.model && _local_9.model.getValue(RoomObjectVariable.FURNITURE_IS_VARIABLE_HEIGHT) > 0) {\n              const _local_11 = _local_10.getTileHeight(_local_4, _local_5);\n\n              const _local_12 = this._roomEngine.getLegacyWallGeometry(roomId).getHeight(_local_4, _local_5);\n\n              return new ObjectTileCursorUpdateMessage(new Vector3d(_local_4, _local_5, _local_6), _local_11 - _local_12, true, k.eventId);\n            }\n\n            return new ObjectTileCursorUpdateMessage(new Vector3d(_local_4, _local_5, _local_6), 0, true, k.eventId);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  placeObject(roomId, isTileEvent, isWallEvent) {\n    const selectedData = this.getSelectedRoomObjectData(roomId);\n    if (!selectedData) return;\n    let roomObject = null;\n    let objectId = selectedData.id;\n    const category = selectedData.category;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let direction = 0;\n    let wallLocation = '';\n\n    if (this._roomEngine && this._roomEngine.connection) {\n      roomObject = this._roomEngine.getRoomObject(roomId, objectId, category);\n\n      if (roomObject) {\n        const location = roomObject.getLocation();\n        direction = roomObject.getDirection().x;\n\n        if (category === RoomObjectCategory.FLOOR || category === RoomObjectCategory.UNIT) {\n          x = location.x;\n          y = location.y;\n          z = location.z;\n        } else if (category === RoomObjectCategory.WALL) {\n          x = location.x;\n          y = location.y;\n          z = location.z;\n\n          const wallGeometry = this._roomEngine.getLegacyWallGeometry(roomId);\n\n          if (wallGeometry) wallLocation = wallGeometry.getOldLocationString(location, direction);\n        }\n\n        direction = (direction / 45 % 8 + 8) % 8;\n        if (objectId < 0 && category === RoomObjectCategory.UNIT) objectId = objectId * -1;\n\n        if (this._objectPlacementSource !== RoomObjectPlacementSource.CATALOG) {\n          if (category === RoomObjectCategory.UNIT) {\n            if (selectedData.typeId === RoomObjectType.PET) {\n              this._roomEngine.connection.send(new PetPlaceComposer(objectId, Math.trunc(x), Math.trunc(y)));\n            } else if (selectedData.typeId === RoomObjectType.RENTABLE_BOT) {\n              this._roomEngine.connection.send(new BotPlaceComposer(objectId, Math.trunc(x), Math.trunc(y)));\n            }\n          } else if (roomObject.model.getValue(RoomObjectVariable.FURNITURE_IS_STICKIE) !== undefined) {\n            this._roomEngine.connection.send(new FurniturePostItPlaceComposer(objectId, wallLocation));\n          } else {\n            this._roomEngine.connection.send(new FurniturePlaceComposer(objectId, category, wallLocation, Math.trunc(x), Math.trunc(y), direction));\n          }\n        }\n      }\n    }\n\n    this._roomEngine.setPlacedRoomObjectData(roomId, new SelectedRoomObjectData(selectedData.id, selectedData.category, null, selectedData.dir, null));\n\n    this.resetSelectedObjectData(roomId);\n\n    if (this._roomEngine && this._roomEngine.events) {\n      const placedInRoom = roomObject && roomObject.id === selectedData.id;\n\n      this._roomEngine.events.dispatchEvent(new RoomEngineObjectPlacedEvent(RoomEngineObjectEvent.PLACED, roomId, objectId, category, wallLocation, x, y, z, direction, placedInRoom, isTileEvent, isWallEvent, selectedData.instanceData));\n    }\n  }\n\n  modifyRoomObject(roomId, objectId, category, operation) {\n    if (!this._roomEngine) return false;\n\n    const roomObject = this._roomEngine.getRoomObject(roomId, objectId, category);\n\n    if (!roomObject) return false;\n    let _local_9 = true;\n\n    switch (operation) {\n      case RoomObjectOperationType.OBJECT_ROTATE_POSITIVE:\n      case RoomObjectOperationType.OBJECT_ROTATE_NEGATIVE:\n        if (this._roomEngine.connection) {\n          let direction = 0;\n\n          if (operation == RoomObjectOperationType.OBJECT_ROTATE_NEGATIVE) {\n            direction = this.getValidRoomObjectDirection(roomObject, false);\n          } else {\n            direction = this.getValidRoomObjectDirection(roomObject, true);\n          }\n\n          const x = roomObject.getLocation().x;\n          const y = roomObject.getLocation().y;\n\n          if (this.isValidLocation(roomObject, new Vector3d(direction), this._roomEngine.getFurnitureStackingHeightMap(roomId))) {\n            direction = Math.trunc(direction / 45);\n\n            if (roomObject.type === RoomObjectUserType.MONSTER_PLANT) {\n              const roomSession = this._roomEngine.roomSessionManager.getSession(roomId);\n\n              if (roomSession) {\n                const userData = roomSession.userDataManager.getUserDataByIndex(objectId);\n\n                if (userData) {\n                  this._roomEngine.connection.send(new PetMoveComposer(userData.webID, Math.trunc(x), Math.trunc(y), direction));\n                }\n              }\n            } else {\n              this._roomEngine.connection.send(new FurnitureFloorUpdateComposer(objectId, x, y, direction));\n            }\n          }\n        }\n\n        break;\n\n      case RoomObjectOperationType.OBJECT_EJECT:\n      case RoomObjectOperationType.OBJECT_PICKUP:\n        if (this._roomEngine.connection) this._roomEngine.connection.send(new FurniturePickupComposer(category, objectId));\n        break;\n\n      case RoomObjectOperationType.OBJECT_PICKUP_PET:\n        if (this._roomEngine.connection) {\n          const session = this._roomEngine.roomSessionManager.getSession(roomId);\n\n          if (session) {\n            const userData = session.userDataManager.getUserDataByIndex(objectId);\n            session.pickupPet(userData.webID);\n          }\n        }\n\n        break;\n\n      case RoomObjectOperationType.OBJECT_PICKUP_BOT:\n        if (this._roomEngine.connection) {\n          const session = this._roomEngine.roomSessionManager.getSession(roomId);\n\n          if (session) {\n            const userData = session.userDataManager.getUserDataByIndex(objectId);\n            session.pickupBot(userData.webID);\n          }\n        }\n\n        break;\n\n      case RoomObjectOperationType.OBJECT_MOVE:\n        _local_9 = false;\n        this.setFurnitureAlphaMultiplier(roomObject, 0.5);\n        this.setSelectedRoomObjectData(roomId, roomObject.id, category, roomObject.getLocation(), roomObject.getDirection(), operation);\n\n        this._roomEngine.setObjectMoverIconSprite(roomObject.id, category, true);\n\n        this._roomEngine.setObjectMoverIconSpriteVisible(false);\n\n        break;\n\n      case RoomObjectOperationType.OBJECT_MOVE_TO:\n        {\n          const selectedData = this.getSelectedRoomObjectData(roomId);\n          this.updateSelectedObjectData(roomId, selectedData.id, selectedData.category, selectedData.loc, selectedData.dir, RoomObjectOperationType.OBJECT_MOVE_TO, selectedData.typeId, selectedData.instanceData, selectedData.stuffData, selectedData.state, selectedData.animFrame, selectedData.posture);\n          this.setFurnitureAlphaMultiplier(roomObject, 1);\n\n          this._roomEngine.removeObjectMoverIconSprite();\n\n          if (this._roomEngine.connection) {\n            if (category === RoomObjectCategory.FLOOR) {\n              const angle = roomObject.getDirection().x % 360;\n              const location = roomObject.getLocation();\n              const direction = angle / 45;\n\n              this._roomEngine.connection.send(new FurnitureFloorUpdateComposer(objectId, location.x, location.y, direction));\n            } else if (category === RoomObjectCategory.WALL) {\n              const angle = roomObject.getDirection().x % 360;\n\n              const wallGeometry = this._roomEngine.getLegacyWallGeometry(roomId);\n\n              if (wallGeometry) {\n                const location = wallGeometry.getOldLocationString(roomObject.getLocation(), angle);\n                if (location) this._roomEngine.connection.send(new FurnitureWallUpdateComposer(objectId, location));\n              }\n            } else if (category === RoomObjectCategory.UNIT) {\n              const angle = roomObject.getDirection().x % 360;\n              const location = roomObject.getLocation();\n              const direction = angle / 45;\n              const race = parseInt(roomObject.model.getValue(RoomObjectVariable.RACE));\n\n              const roomSession = this._roomEngine.roomSessionManager.getSession(roomId);\n\n              if (roomSession) {\n                const userData = roomSession.userDataManager.getUserDataByIndex(objectId);\n                if (userData) this._roomEngine.connection.send(new PetMoveComposer(userData.webID, location.x, location.y, direction));\n              }\n            }\n          }\n\n          break;\n        }\n    }\n\n    if (_local_9) this.resetSelectedObjectData(roomId);\n    return true;\n  }\n\n  modifyRoomObjectDataWithMap(roomId, objectId, category, operation, data) {\n    if (!this._roomEngine) return false;\n\n    const roomObject = this._roomEngine.getRoomObject(roomId, objectId, category);\n\n    if (!roomObject) return false;\n\n    switch (operation) {\n      case RoomObjectOperationType.OBJECT_SAVE_STUFF_DATA:\n        if (this._roomEngine.connection) {\n          this._roomEngine.connection.send(new SetObjectDataMessageComposer(objectId, data));\n        }\n\n        break;\n    }\n\n    return true;\n  }\n\n  modifyWallItemData(roomId, objectId, colorHex, text) {\n    if (!this._roomEngine || !this._roomEngine.connection) return false;\n\n    this._roomEngine.connection.send(new SetItemDataMessageComposer(objectId, colorHex, text));\n\n    return true;\n  }\n\n  deleteWallItem(roomId, itemId) {\n    if (!this._roomEngine || !this._roomEngine.connection) return false;\n\n    this._roomEngine.connection.send(new RemoveWallItemComposer(itemId));\n\n    return true;\n  }\n\n  getValidRoomObjectDirection(k, _arg_2) {\n    if (!k || !k.model) return 0;\n    let _local_6 = 0;\n    let _local_7 = 0;\n    let allowedDirections = [];\n\n    if (k.type === RoomObjectUserType.MONSTER_PLANT) {\n      allowedDirections = k.model.getValue(RoomObjectVariable.PET_ALLOWED_DIRECTIONS);\n    } else {\n      allowedDirections = k.model.getValue(RoomObjectVariable.FURNITURE_ALLOWED_DIRECTIONS);\n    }\n\n    let direction = k.getDirection().x;\n\n    if (allowedDirections && allowedDirections.length) {\n      _local_6 = allowedDirections.indexOf(direction);\n\n      if (_local_6 < 0) {\n        _local_6 = 0;\n        _local_7 = 0;\n\n        while (_local_7 < allowedDirections.length) {\n          if (direction <= allowedDirections[_local_7]) break;\n          _local_6++;\n          _local_7++;\n        }\n\n        _local_6 = _local_6 % allowedDirections.length;\n      }\n\n      if (_arg_2) _local_6 = (_local_6 + 1) % allowedDirections.length;else _local_6 = (_local_6 - 1 + allowedDirections.length) % allowedDirections.length;\n      direction = allowedDirections[_local_6];\n    }\n\n    return direction;\n  }\n\n  isValidLocation(object, goalDirection, stackingHeightMap) {\n    if (!object || !object.model || !goalDirection) return false;\n    const direction = object.getDirection();\n    const location = object.getLocation();\n    if (!direction || !location) return false;\n    if (direction.x % 180 === goalDirection.x % 180) return true;\n    let sizeX = object.model.getValue(RoomObjectVariable.FURNITURE_SIZE_X);\n    let sizeY = object.model.getValue(RoomObjectVariable.FURNITURE_SIZE_Y);\n    if (sizeX < 1) sizeX = 1;\n    if (sizeY < 1) sizeY = 1;\n    let _local_8 = sizeX;\n    let _local_9 = sizeY;\n\n    let _local_11 = Math.trunc(Math.trunc(goalDirection.x + 45) % 360 / 90);\n\n    if (_local_11 === 1 || _local_11 === 3) [sizeX, sizeY] = [sizeY, sizeX];\n    _local_11 = Math.trunc(Math.trunc(direction.x + 45) % 360 / 90);\n    if (_local_11 === 1 || _local_11 === 3) [_local_8, _local_9] = [_local_9, _local_8];\n\n    if (stackingHeightMap && location) {\n      const alwaysStackable = object.model.getValue(RoomObjectVariable.FURNITURE_ALWAYS_STACKABLE) === 1;\n      if (stackingHeightMap.validateLocation(location.x, location.y, sizeX, sizeY, location.x, location.y, _local_8, _local_9, alwaysStackable, location.z)) return true;\n    }\n\n    return false;\n  }\n\n  placeObjectOnUser(roomId, objectId, category) {\n    const _local_4 = this.getSelectedRoomObjectData(roomId);\n\n    if (!_local_4) return;\n\n    const _local_5 = this._roomEngine.getRoomObject(roomId, objectId, category);\n\n    if (!_local_5) return;\n    if (!this._roomEngine || !this._roomEngine.events) return;\n\n    this._roomEngine.events.dispatchEvent(new RoomEngineObjectPlacedOnUserEvent(RoomEngineObjectEvent.PLACED_ON_USER, roomId, objectId, category, _local_4.id, _local_4.category));\n  }\n\n  setSelectedObject(roomId, objectId, category) {\n    if (!this._roomEngine) return;\n    const eventDispatcher = this._roomEngine.events;\n    if (!eventDispatcher) return;\n\n    switch (category) {\n      case RoomObjectCategory.UNIT:\n      case RoomObjectCategory.FLOOR:\n      case RoomObjectCategory.WALL:\n        if (category === RoomObjectCategory.UNIT) {\n          this.deselectObject(roomId);\n          this.setSelectedAvatar(roomId, objectId, true);\n        } else {\n          this.setSelectedAvatar(roomId, 0, false);\n\n          if (objectId !== this._selectedObjectId) {\n            this.deselectObject(roomId);\n\n            const roomObject = this._roomEngine.getRoomObject(roomId, objectId, category);\n\n            if (roomObject && roomObject.logic) {\n              roomObject.logic.processUpdateMessage(new ObjectSelectedMessage(true));\n              this._selectedObjectId = objectId;\n              this._selectedObjectCategory = category;\n            }\n          }\n        }\n\n        eventDispatcher.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.SELECTED, roomId, objectId, category));\n        return;\n    }\n  }\n\n  deselectObject(roomId) {\n    if (this._selectedObjectId === -1) return;\n\n    const object = this._roomEngine.getRoomObject(roomId, this._selectedObjectId, this._selectedObjectCategory);\n\n    if (object && object.logic) {\n      object.logic.processUpdateMessage(new ObjectSelectedMessage(false));\n      this._selectedObjectId = -1;\n      this._selectedObjectCategory = RoomObjectCategory.MINIMUM;\n    }\n  }\n\n  setSelectedAvatar(k, _arg_2, _arg_3) {\n    if (!this._roomEngine) return;\n    const _local_4 = RoomObjectCategory.UNIT;\n\n    const _local_5 = this._roomEngine.getRoomObject(k, this._selectedAvatarId, _local_4);\n\n    if (_local_5 && _local_5.logic) {\n      _local_5.logic.processUpdateMessage(new ObjectAvatarSelectedMessage(false));\n\n      this._selectedAvatarId = -1;\n    }\n\n    let _local_6 = false;\n\n    if (_arg_3) {\n      const _local_5 = this._roomEngine.getRoomObject(k, _arg_2, _local_4);\n\n      if (_local_5 && _local_5.logic) {\n        _local_5.logic.processUpdateMessage(new ObjectAvatarSelectedMessage(true));\n\n        _local_6 = true;\n        this._selectedAvatarId = _arg_2;\n\n        const location = _local_5.getLocation();\n\n        if (location) this._roomEngine.connection.send(new RoomUnitLookComposer(~~location.x, ~~location.y));\n      }\n    }\n\n    const selectionArrow = this._roomEngine.getRoomObjectSelectionArrow(k);\n\n    if (selectionArrow && selectionArrow.logic) {\n      if (_local_6 && !this._roomEngine.isPlayingGame()) selectionArrow.logic.processUpdateMessage(new ObjectVisibilityUpdateMessage(ObjectVisibilityUpdateMessage.ENABLED));else selectionArrow.logic.processUpdateMessage(new ObjectVisibilityUpdateMessage(ObjectVisibilityUpdateMessage.DISABLED));\n    }\n  }\n\n  resetSelectedObjectData(roomId) {\n    if (!this._roomEngine) return;\n\n    this._roomEngine.removeObjectMoverIconSprite();\n\n    const selectedData = this.getSelectedRoomObjectData(roomId);\n\n    if (selectedData) {\n      if (selectedData.operation === RoomObjectOperationType.OBJECT_MOVE || selectedData.operation === RoomObjectOperationType.OBJECT_MOVE_TO) {\n        const roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\n\n        if (roomObject && selectedData.operation !== RoomObjectOperationType.OBJECT_MOVE_TO) {\n          roomObject.setLocation(selectedData.loc);\n          roomObject.setDirection(selectedData.dir);\n        }\n\n        this.setFurnitureAlphaMultiplier(roomObject, 1);\n\n        if (selectedData.category === RoomObjectCategory.WALL) {\n          this._roomEngine.updateRoomObjectMask(roomId, selectedData.id, true);\n        }\n\n        this.updateSelectedObjectData(roomId, selectedData.id, selectedData.category, selectedData.loc, selectedData.dir, RoomObjectOperationType.OBJECT_MOVE, selectedData.typeId, selectedData.instanceData, selectedData.stuffData, selectedData.state, selectedData.animFrame, selectedData.posture);\n      } else if (selectedData.operation === RoomObjectOperationType.OBJECT_PLACE) {\n        const objectId = selectedData.id;\n        const category = selectedData.category;\n\n        switch (category) {\n          case RoomObjectCategory.FLOOR:\n            this._roomEngine.removeRoomObjectFloor(roomId, objectId);\n\n            break;\n\n          case RoomObjectCategory.WALL:\n            this._roomEngine.removeRoomObjectWall(roomId, objectId);\n\n            break;\n\n          case RoomObjectCategory.UNIT:\n            this._roomEngine.removeRoomObjectUser(roomId, objectId);\n\n            break;\n        }\n      }\n\n      this._roomEngine.setSelectedRoomObjectData(roomId, null);\n    }\n  }\n\n  getSelectedRoomObjectData(roomId) {\n    if (!this._roomEngine) return null;\n    return this._roomEngine.getSelectedRoomObjectData(roomId);\n  }\n\n  setFurnitureAlphaMultiplier(object, multiplier) {\n    if (!object || !object.model) return;\n    object.model.setValue(RoomObjectVariable.FURNITURE_ALPHA_MULTIPLIER, multiplier);\n  }\n\n  decorateModeMove(event) {\n    return this._roomEngine.isDecorating && !(event.ctrlKey || event.shiftKey);\n  }\n\n  cancelRoomObjectPlacement(roomId) {\n    this.resetSelectedObjectData(roomId);\n    return true;\n  }\n\n  setSelectedRoomObjectData(roomId, id, category, location, direction, operation) {\n    let typeId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n    let instanceData = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n    let stuffData = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n    let state = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : -1;\n    let frameNumber = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : -1;\n    let posture = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : null;\n    this.resetSelectedObjectData(roomId);\n    if (!this._roomEngine) return;\n    const selectedData = new SelectedRoomObjectData(id, category, operation, location, direction, typeId, instanceData, stuffData, state, frameNumber, posture);\n\n    this._roomEngine.setSelectedRoomObjectData(roomId, selectedData);\n  }\n\n  updateSelectedObjectData(roomId, id, category, location, direction, operation) {\n    let typeId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n    let instanceData = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n    let stuffData = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n    let state = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : -1;\n    let frameNumber = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : -1;\n    let posture = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : null;\n    if (!this._roomEngine) return null;\n    const selectedData = new SelectedRoomObjectData(id, category, operation, location, direction, typeId, instanceData, stuffData, state, frameNumber, posture);\n\n    this._roomEngine.setSelectedRoomObjectData(roomId, selectedData);\n  }\n\n  handleUserPlace(roomObject, x, y, wallGeometry) {\n    if (!wallGeometry.isRoomTile(x, y)) return false;\n    roomObject.setLocation(new Vector3d(x, y, wallGeometry.getHeight(x, y)));\n    return true;\n  }\n\n  get engine() {\n    return this._roomEngine;\n  }\n\n  get selectedAvatarId() {\n    return this._selectedAvatarId;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/RoomObjectEventHandler.ts"],"names":["Disposable","NitroLogger","RoomObjectMouseEvent","RoomObjectUpdateMessage","RoomEnterEffect","Vector3d","FurnitureGroupInfoComposer","SetObjectDataMessageComposer","BotPlaceComposer","GetItemDataComposer","PetMoveComposer","PetPlaceComposer","RemoveWallItemComposer","SetItemDataMessageComposer","FurnitureFloorUpdateComposer","FurniturePickupComposer","FurniturePlaceComposer","FurniturePostItPlaceComposer","FurnitureColorWheelComposer","FurnitureDiceActivateComposer","FurnitureDiceDeactivateComposer","FurnitureMultiStateComposer","FurnitureOneWayDoorComposer","FurnitureRandomStateComposer","FurnitureWallMultiStateComposer","FurnitureWallUpdateComposer","RoomUnitLookComposer","RoomUnitWalkComposer","Nitro","MouseEventType","RoomObjectPlacementSource","RoomEngineObjectPlaySoundEvent","RoomEngineRoomAdEvent","RoomEngineUseProductEvent","RoomObjectPlaySoundIdEvent","RoomObjectRoomAdEvent","RoomObjectSoundMachineEvent","RoomEngineDimmerStateEvent","RoomEngineObjectEvent","RoomEngineObjectPlacedEvent","RoomEngineObjectPlacedOnUserEvent","RoomEngineSamplePlaybackEvent","RoomEngineTriggerWidgetEvent","RoomObjectBadgeAssetEvent","RoomObjectDataRequestEvent","RoomObjectDimmerStateUpdateEvent","RoomObjectFloorHoleEvent","RoomObjectFurnitureActionEvent","RoomObjectHSLColorEnabledEvent","RoomObjectHSLColorEnableEvent","RoomObjectMoveEvent","RoomObjectSamplePlaybackEvent","RoomObjectStateChangedEvent","RoomObjectTileMouseEvent","RoomObjectWallMouseEvent","RoomObjectWidgetRequestEvent","ObjectAvatarSelectedMessage","ObjectDataUpdateMessage","ObjectSelectedMessage","ObjectTileCursorUpdateMessage","ObjectVisibilityUpdateMessage","RoomObjectCategory","RoomObjectOperationType","RoomObjectType","RoomObjectUserType","RoomObjectVariable","SelectedRoomObjectData","RoomObjectEventHandler","constructor","roomEngine","_roomEngine","_eventIds","_selectedAvatarId","_selectedObjectId","_selectedObjectCategory","_whereYouClickIsWhereYouGo","_objectPlacementSource","Map","onRoomEngineObjectEvent","bind","events","addEventListener","ADDED","dispose","removeEventListener","event","selectedData","getSelectedRoomObjectData","roomId","operation","OBJECT_PLACE","id","objectId","roomObject","getRoomObject","category","model","FLOOR","allowedDirections","getValue","FURNITURE_ALLOWED_DIRECTIONS","length","direction","setDirection","updateSelectedObjectData","loc","typeId","instanceData","stuffData","state","animFrame","posture","setFurnitureAlphaMultiplier","processRoomCanvasMouseEvent","object","geometry","isRunning","type","getRoomObjectCategoryForType","ROOM","isPlayingGame","UNIT","MINIMUM","_local_7","getMouseEventId","eventId","MOUSE_CLICK","DOUBLE_CLICK","MOUSE_DOWN","MOUSE_UP","MOUSE_MOVE","setMouseEventId","mouseHandler","mouseEvent","processRoomObjectPlacement","placementSource","extra","frameNumber","location","setSelectedRoomObjectData","setObjectMoverIconSprite","setObjectMoverIconSpriteVisible","cancelRoomObjectInsert","k","resetSelectedObjectData","_arg_2","existing","get","_arg_3","set","delete","handleRoomObjectEvent","handleRoomObjectMouseEvent","STATE_CHANGE","STATE_RANDOM","onRoomObjectStateChangedEvent","DIMMER_STATE","onRoomObjectDimmerStateUpdateEvent","POSITION_CHANGED","OBJECT_REMOVED","handleSelectedObjectRemove","OPEN_WIDGET","CLOSE_WIDGET","OPEN_FURNI_CONTEXT_MENU","CLOSE_FURNI_CONTEXT_MENU","PLACEHOLDER","CREDITFURNI","STICKIE","PRESENT","TROPHY","TEASER","ECOTRONBOX","DIMMER","WIDGET_REMOVE_DIMMER","CLOTHING_CHANGE","JUKEBOX_PLAYLIST_EDITOR","MANNEQUIN","PET_PRODUCT_MENU","GUILD_FURNI_CONTEXT_MENU","MONSTERPLANT_SEED_PLANT_CONFIRMATION_DIALOG","PURCHASABLE_CLOTHING_CONFIRMATION_DIALOG","BACKGROUND_COLOR","MYSTERYBOX_OPEN_DIALOG","EFFECTBOX_OPEN_DIALOG","MYSTERYTROPHY_OPEN_DIALOG","ACHIEVEMENT_RESOLUTION_OPEN","ACHIEVEMENT_RESOLUTION_ENGRAVING","ACHIEVEMENT_RESOLUTION_FAILED","FRIEND_FURNITURE_CONFIRM","FRIEND_FURNITURE_ENGRAVING","BADGE_DISPLAY_ENGRAVING","HIGH_SCORE_DISPLAY","HIDE_HIGH_SCORE_DISPLAY","INERNAL_LINK","ROOM_LINK","onRoomObjectWidgetRequestEvent","DICE_ACTIVATE","DICE_OFF","USE_HABBOWHEEL","ENTER_ONEWAYDOOR","onRoomObjectFurnitureActionEvent","SOUND_MACHINE_INIT","SOUND_MACHINE_START","SOUND_MACHINE_STOP","SOUND_MACHINE_DISPOSE","handleObjectSoundMachineEvent","JUKEBOX_INIT","JUKEBOX_START","JUKEBOX_MACHINE_STOP","JUKEBOX_DISPOSE","handleObjectJukeboxEvent","ADD_HOLE","REMOVE_HOLE","onRoomObjectFloorHoleEvent","ROOM_AD_FURNI_CLICK","ROOM_AD_FURNI_DOUBLE_CLICK","ROOM_AD_TOOLTIP_SHOW","ROOM_AD_TOOLTIP_HIDE","ROOM_AD_LOAD_IMAGE","onRoomObjectRoomAdEvent","LOAD_BADGE","onRoomObjectBadgeAssetEvent","MOUSE_ARROW","MOUSE_BUTTON","handleMousePointer","PLAY_SOUND","PLAY_SOUND_AT_PITCH","handleRoomObjectPlaySoundEvent","ROOM_OBJECT_INITIALIZED","ROOM_OBJECT_DISPOSED","PLAY_SAMPLE","CHANGE_PITCH","handleRoomObjectSamplePlaybackEvent","ROOM_BACKGROUND_COLOR","onHSLColorEnableEvent","RODRE_CURRENT_USER_ID","RODRE_URL_PREFIX","onRoomObjectDataRequestEvent","log","name","CLICK","handleRoomObjectMouseClickEvent","handleRoomObjectMouseMoveEvent","handleRoomObjectMouseDownEvent","MOUSE_DOWN_LONG","handleRoomObjectMouseDownLongEvent","MOUSE_ENTER","handleRoomObjectMouseEnterEvent","MOUSE_LEAVE","handleRoomObjectMouseLeaveEvent","OBJECT_UNDEFINED","didWalk","didMove","handleMoveTargetFurni","objectType","OBJECT_MOVE","modifyRoomObject","OBJECT_MOVE_TO","MONSTER_PLANT","placeObjectOnUser","setSelectedObject","placeObject","RENTABLE_BOT","onRoomObjectTileMouseEvent","ctrlKey","altKey","shiftKey","OBJECT_PICKUP_BOT","OBJECT_PICKUP_PET","OBJECT_ROTATE_POSITIVE","WALL","dispatchEvent","REQUEST_ROTATE","OBJECT_PICKUP","_local_15","_local_16","deselectObject","DESELECTED","setSelectedAvatar","roomCursor","getRoomObjectCursor","logic","newEvent","handleMouseOverTile","handleMouseOverObject","processUpdateMessage","handleObjectMove","handleObjectPlace","decorateModeMove","REQUEST_MOVE","REQUEST_MANIPULATION","cursor","changeObjectState","presetId","effectId","color","brightness","objectCategory","selectionArrow","getRoomObjectSelectionArrow","getLocation","eventDispatcher","widget","contextMenu","REQUEST_PLACEHOLDER","REQUEST_CREDITFURNI","REQUEST_STICKIE","REQUEST_PRESENT","REQUEST_TROPHY","REQUEST_TEASER","REQUEST_ECOTRONBOX","REQUEST_DIMMER","REMOVE_DIMMER","REQUEST_CLOTHING_CHANGE","REQUEST_PLAYLIST_EDITOR","REQUEST_MANNEQUIN","USE_PRODUCT_FROM_ROOM","connection","send","FURNITURE_GUILD_CUSTOMIZED_GUILD_ID","REQUEST_MONSTERPLANT_SEED_PLANT_CONFIRMATION_DIALOG","REQUEST_PURCHASABLE_CLOTHING_CONFIRMATION_DIALOG","REQUEST_BACKGROUND_COLOR","REQUEST_MYSTERYBOX_OPEN_DIALOG","REQUEST_EFFECTBOX_OPEN_DIALOG","REQUEST_MYSTERYTROPHY_OPEN_DIALOG","REQUEST_ACHIEVEMENT_RESOLUTION_ENGRAVING","REQUEST_ACHIEVEMENT_RESOLUTION_FAILED","REQUEST_FRIEND_FURNITURE_CONFIRM","REQUEST_FRIEND_FURNITURE_ENGRAVING","REQUEST_BADGE_DISPLAY_ENGRAVING","REQUEST_HIGH_SCORE_DISPLAY","REQUEST_HIDE_HIGH_SCORE_DISPLAY","REQUEST_INTERNAL_LINK","REQUEST_ROOM_LINK","useObject","SOUND_MACHINE_SWITCHED_ON","SOUND_MACHINE_SWITCHED_OFF","JUKEBOX_SWITCHED_ON","JUKEBOX_SWITCHED_OFF","addRoomInstanceFloorHole","removeRoomInstanceFloorHole","eventType","clickUrl","instance","createLinkEvent","FURNI_CLICK","catalogPage","indexOf","substr","FURNI_DOUBLE_CLICK","TOOLTIP_SHOW","TOOLTIP_HIDE","loadRoomObjectBadgeImage","badgeId","groupBadge","updateMousePointer","soundId","pitch","sampleId","enable","hue","saturation","lightness","setValue","SESSION_CURRENT_USER_ID","sessionDataManager","userId","SESSION_URL_PREFIX","getConfiguration","isDecorating","roomSessionManager","session","getSession","isSpectator","sendWalkUpdate","tileXAsInt","tileYAsInt","_local_6","stackingHeightMap","getFurnitureStackingHeightMap","handleFurnitureMove","Math","trunc","tileX","tileY","x","y","_local_10","wallLocation","_local_11","wallWidth","_local_12","wallHeight","_local_13","_local_14","handleWallItemMove","setLocation","dir","updateRoomObjectMask","addFurnitureFloor","parseFloat","addRoomObjectUser","FIGURE_POSTURE","addFurnitureWall","removeRoomObjectFloor","_local_17","_local_18","_local_19","removeRoomObjectWall","handleUserPlace","getLegacyWallGeometry","removeRoomObjectUser","selectedObjectData","assign","getDirection","_local_8","_local_9","validateFurnitureLocation","getValidRoomObjectDirection","_arg_4","_arg_5","_arg_6","_arg_7","_arg_8","validateWallItemLocation","sizeX","FURNITURE_SIZE_X","sizeY","FURNITURE_SIZE_Y","stackable","FURNITURE_ALWAYS_STACKABLE","validateLocation","getTileHeight","FURNITURE_SIZE_Z","FURNITURE_CENTER_Z","sum","product","isRandom","changeRoomObjectState","action","getActiveSurfaceLocation","furnitureHeightMap","z","USER","PET","BOT","_local_3","_local_4","furniData","getFloorItemDataByName","canStandOn","canSitOn","canLayOn","sizeZ","renderingCanvas","getActiveRoomInstanceRenderingCanvas","scale","spriteOffsetX","localX","spriteOffsetY","localY","floor","_local_20","_local_21","tileZAsInt","visualization","_local_5","getRoomInstance","getRoomTileObjectMap","getObjectIntTile","FURNITURE_IS_VARIABLE_HEIGHT","getHeight","isTileEvent","isWallEvent","wallGeometry","getOldLocationString","CATALOG","FURNITURE_IS_STICKIE","undefined","setPlacedRoomObjectData","placedInRoom","PLACED","OBJECT_ROTATE_NEGATIVE","isValidLocation","roomSession","userData","userDataManager","getUserDataByIndex","webID","OBJECT_EJECT","pickupPet","pickupBot","removeObjectMoverIconSprite","angle","race","parseInt","RACE","modifyRoomObjectDataWithMap","data","OBJECT_SAVE_STUFF_DATA","modifyWallItemData","colorHex","text","deleteWallItem","itemId","PET_ALLOWED_DIRECTIONS","goalDirection","alwaysStackable","PLACED_ON_USER","SELECTED","ENABLED","DISABLED","multiplier","FURNITURE_ALPHA_MULTIPLIER","cancelRoomObjectPlacement","isRoomTile","engine","selectedAvatarId"],"mappings":"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","sourcesContent":["import { Disposable } from '../../core/common/disposable/Disposable';\r\nimport { NitroLogger } from '../../core/common/logger/NitroLogger';\r\nimport { RoomObjectEvent } from '../../room/events/RoomObjectEvent';\r\nimport { RoomObjectMouseEvent } from '../../room/events/RoomObjectMouseEvent';\r\nimport { RoomSpriteMouseEvent } from '../../room/events/RoomSpriteMouseEvent';\r\nimport { RoomObjectUpdateMessage } from '../../room/messages/RoomObjectUpdateMessage';\r\nimport { IRoomObject } from '../../room/object/IRoomObject';\r\nimport { IRoomObjectController } from '../../room/object/IRoomObjectController';\r\nimport { IRoomCanvasMouseListener } from '../../room/renderer/IRoomCanvasMouseListener';\r\nimport { IRoomGeometry } from '../../room/utils/IRoomGeometry';\r\nimport { IVector3D } from '../../room/utils/IVector3D';\r\nimport { RoomEnterEffect } from '../../room/utils/RoomEnterEffect';\r\nimport { Vector3d } from '../../room/utils/Vector3d';\r\nimport { FurnitureGroupInfoComposer, SetObjectDataMessageComposer } from '../communication';\r\nimport { BotPlaceComposer } from '../communication/messages/outgoing/room/engine/BotPlaceComposer';\r\nimport { GetItemDataComposer } from '../communication/messages/outgoing/room/engine/GetItemDataComposer';\r\nimport { PetMoveComposer } from '../communication/messages/outgoing/room/engine/PetMoveComposer';\r\nimport { PetPlaceComposer } from '../communication/messages/outgoing/room/engine/PetPlaceComposer';\r\nimport { RemoveWallItemComposer } from '../communication/messages/outgoing/room/engine/RemoveWallItemComposer';\r\nimport { SetItemDataMessageComposer } from '../communication/messages/outgoing/room/engine/SetItemDataMessageComposer';\r\nimport { FurnitureFloorUpdateComposer } from '../communication/messages/outgoing/room/furniture/floor/FurnitureFloorUpdateComposer';\r\nimport { FurniturePickupComposer } from '../communication/messages/outgoing/room/furniture/FurniturePickupComposer';\r\nimport { FurniturePlaceComposer } from '../communication/messages/outgoing/room/furniture/FurniturePlaceComposer';\r\nimport { FurniturePostItPlaceComposer } from '../communication/messages/outgoing/room/furniture/FurniturePostItPlaceComposer';\r\nimport { FurnitureColorWheelComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureColorWheelComposer';\r\nimport { FurnitureDiceActivateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureDiceActivateComposer';\r\nimport { FurnitureDiceDeactivateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureDiceDeactivateComposer';\r\nimport { FurnitureMultiStateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureMultiStateComposer';\r\nimport { FurnitureOneWayDoorComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureOneWayDoorComposer';\r\nimport { FurnitureRandomStateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureRandomStateComposer';\r\nimport { FurnitureWallMultiStateComposer } from '../communication/messages/outgoing/room/furniture/logic/FurnitureWallMultiStateComposer';\r\nimport { FurnitureWallUpdateComposer } from '../communication/messages/outgoing/room/furniture/wall/FurnitureWallUpdateComposer';\r\nimport { RoomUnitLookComposer } from '../communication/messages/outgoing/room/unit/RoomUnitLookComposer';\r\nimport { RoomUnitWalkComposer } from '../communication/messages/outgoing/room/unit/RoomUnitWalkComposer';\r\nimport { Nitro } from '../Nitro';\r\nimport { MouseEventType } from '../ui/MouseEventType';\r\nimport { RoomObjectPlacementSource } from './enums/RoomObjectPlacementSource';\r\nimport { RoomEngineObjectPlaySoundEvent, RoomEngineRoomAdEvent, RoomEngineUseProductEvent, RoomObjectPlaySoundIdEvent, RoomObjectRoomAdEvent, RoomObjectSoundMachineEvent } from './events';\r\nimport { RoomEngineDimmerStateEvent } from './events/RoomEngineDimmerStateEvent';\r\nimport { RoomEngineObjectEvent } from './events/RoomEngineObjectEvent';\r\nimport { RoomEngineObjectPlacedEvent } from './events/RoomEngineObjectPlacedEvent';\r\nimport { RoomEngineObjectPlacedOnUserEvent } from './events/RoomEngineObjectPlacedOnUserEvent';\r\nimport { RoomEngineSamplePlaybackEvent } from './events/RoomEngineSamplePlaybackEvent';\r\nimport { RoomEngineTriggerWidgetEvent } from './events/RoomEngineTriggerWidgetEvent';\r\nimport { RoomObjectBadgeAssetEvent } from './events/RoomObjectBadgeAssetEvent';\r\nimport { RoomObjectDataRequestEvent } from './events/RoomObjectDataRequestEvent';\r\nimport { RoomObjectDimmerStateUpdateEvent } from './events/RoomObjectDimmerStateUpdateEvent';\r\nimport { RoomObjectFloorHoleEvent } from './events/RoomObjectFloorHoleEvent';\r\nimport { RoomObjectFurnitureActionEvent } from './events/RoomObjectFurnitureActionEvent';\r\nimport { RoomObjectHSLColorEnabledEvent } from './events/RoomObjectHSLColorEnabledEvent';\r\nimport { RoomObjectHSLColorEnableEvent } from './events/RoomObjectHSLColorEnableEvent';\r\nimport { RoomObjectMoveEvent } from './events/RoomObjectMoveEvent';\r\nimport { RoomObjectSamplePlaybackEvent } from './events/RoomObjectSamplePlaybackEvent';\r\nimport { RoomObjectStateChangedEvent } from './events/RoomObjectStateChangedEvent';\r\nimport { RoomObjectTileMouseEvent } from './events/RoomObjectTileMouseEvent';\r\nimport { RoomObjectWallMouseEvent } from './events/RoomObjectWallMouseEvent';\r\nimport { RoomObjectWidgetRequestEvent } from './events/RoomObjectWidgetRequestEvent';\r\nimport { IRoomEngineServices } from './IRoomEngineServices';\r\nimport { ObjectAvatarSelectedMessage } from './messages/ObjectAvatarSelectedMessage';\r\nimport { ObjectDataUpdateMessage } from './messages/ObjectDataUpdateMessage';\r\nimport { ObjectSelectedMessage } from './messages/ObjectSelectedMessage';\r\nimport { ObjectTileCursorUpdateMessage } from './messages/ObjectTileCursorUpdateMessage';\r\nimport { ObjectVisibilityUpdateMessage } from './messages/ObjectVisibilityUpdateMessage';\r\nimport { IObjectData } from './object/data/IObjectData';\r\nimport { RoomObjectCategory } from './object/RoomObjectCategory';\r\nimport { RoomObjectOperationType } from './object/RoomObjectOperationType';\r\nimport { RoomObjectType } from './object/RoomObjectType';\r\nimport { RoomObjectUserType } from './object/RoomObjectUserType';\r\nimport { RoomObjectVariable } from './object/RoomObjectVariable';\r\nimport { FurnitureStackingHeightMap } from './utils/FurnitureStackingHeightMap';\r\nimport { LegacyWallGeometry } from './utils/LegacyWallGeometry';\r\nimport { SelectedRoomObjectData } from './utils/SelectedRoomObjectData';\r\n\r\nexport class RoomObjectEventHandler extends Disposable implements IRoomCanvasMouseListener\r\n{\r\n    private _roomEngine: IRoomEngineServices;\r\n\r\n    private _eventIds: Map<number, Map<string, string>>;\r\n\r\n    private _selectedAvatarId: number;\r\n    private _selectedObjectId: number;\r\n    private _selectedObjectCategory: number;\r\n    private _whereYouClickIsWhereYouGo: boolean;\r\n    private _objectPlacementSource: string;\r\n\r\n    constructor(roomEngine: IRoomEngineServices)\r\n    {\r\n        super();\r\n\r\n        this._roomEngine = roomEngine;\r\n\r\n        this._eventIds = new Map();\r\n\r\n        this._selectedAvatarId = -1;\r\n        this._selectedObjectId = -1;\r\n        this._selectedObjectCategory = -2;\r\n        this._whereYouClickIsWhereYouGo = true;\r\n        this._objectPlacementSource = null;\r\n\r\n        this.onRoomEngineObjectEvent = this.onRoomEngineObjectEvent.bind(this);\r\n\r\n        this._roomEngine.events.addEventListener(RoomEngineObjectEvent.ADDED, this.onRoomEngineObjectEvent);\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        if(this._eventIds)\r\n        {\r\n            this._eventIds = null;\r\n        }\r\n\r\n        this._roomEngine.events.removeEventListener(RoomEngineObjectEvent.ADDED, this.onRoomEngineObjectEvent);\r\n\r\n        this._roomEngine = null;\r\n    }\r\n\r\n    private onRoomEngineObjectEvent(event: RoomEngineObjectEvent): void\r\n    {\r\n        let selectedData = this.getSelectedRoomObjectData(event.roomId);\r\n\r\n        if(!selectedData) return;\r\n\r\n        if((selectedData.operation === RoomObjectOperationType.OBJECT_PLACE) && (selectedData.id === event.objectId))\r\n        {\r\n            const roomObject = this._roomEngine.getRoomObject(event.roomId, selectedData.id, selectedData.category);\r\n\r\n            if(roomObject && roomObject.model)\r\n            {\r\n                if(selectedData.category === RoomObjectCategory.FLOOR)\r\n                {\r\n                    const allowedDirections = roomObject.model.getValue<number[]>(RoomObjectVariable.FURNITURE_ALLOWED_DIRECTIONS);\r\n\r\n                    if(allowedDirections && allowedDirections.length)\r\n                    {\r\n                        const direction = new Vector3d(allowedDirections[0]);\r\n\r\n                        roomObject.setDirection(direction);\r\n\r\n                        this.updateSelectedObjectData(event.roomId, selectedData.id, selectedData.category, selectedData.loc, direction, selectedData.operation, selectedData.typeId, selectedData.instanceData, selectedData.stuffData, selectedData.state, selectedData.animFrame, selectedData.posture);\r\n\r\n                        selectedData = this.getSelectedRoomObjectData(event.roomId);\r\n\r\n                        if(!selectedData) return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setFurnitureAlphaMultiplier(roomObject, 0.5);\r\n        }\r\n    }\r\n\r\n    public processRoomCanvasMouseEvent(event: RoomSpriteMouseEvent, object: IRoomObject, geometry: IRoomGeometry): void\r\n    {\r\n        if(!event || !object) return;\r\n\r\n        if(RoomEnterEffect.isRunning()) return;\r\n\r\n        const type = object.type;\r\n\r\n        let category = this._roomEngine.getRoomObjectCategoryForType(type);\r\n\r\n        if((category !== RoomObjectCategory.ROOM) && (!this._roomEngine.isPlayingGame() || category !== RoomObjectCategory.UNIT)) category = RoomObjectCategory.MINIMUM;\r\n\r\n        const _local_7 = this.getMouseEventId(category, event.type);\r\n\r\n        if(_local_7 === event.eventId)\r\n        {\r\n            if((event.type === MouseEventType.MOUSE_CLICK) || (event.type === MouseEventType.DOUBLE_CLICK) || (event.type === MouseEventType.MOUSE_DOWN) || (event.type === MouseEventType.MOUSE_UP) || (event.type === MouseEventType.MOUSE_MOVE)) return;\r\n        }\r\n        else\r\n        {\r\n            if(event.eventId)\r\n            {\r\n                this.setMouseEventId(category, event.type, event.eventId);\r\n            }\r\n        }\r\n\r\n        if(object.mouseHandler) object.mouseHandler.mouseEvent(event, geometry);\r\n    }\r\n\r\n    public processRoomObjectPlacement(placementSource: string, roomId: number, id: number, category: number, typeId: number, extra: string = null, stuffData: IObjectData = null, state: number = -1, frameNumber: number = -1, posture: string = null): boolean\r\n    {\r\n        this._objectPlacementSource = placementSource;\r\n\r\n        const location = new Vector3d(-100, -100);\r\n        const direction = new Vector3d(0);\r\n\r\n        this.setSelectedRoomObjectData(roomId, id, category, location, direction, RoomObjectOperationType.OBJECT_PLACE, typeId, extra, stuffData, state, frameNumber, posture);\r\n\r\n        if(this._roomEngine)\r\n        {\r\n            this._roomEngine.setObjectMoverIconSprite(typeId, category, false, extra, stuffData, state, frameNumber, posture);\r\n            this._roomEngine.setObjectMoverIconSpriteVisible(false);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public cancelRoomObjectInsert(k: number): boolean\r\n    {\r\n        this.resetSelectedObjectData(k);\r\n\r\n        return true;\r\n    }\r\n\r\n    private getMouseEventId(k: number, _arg_2: string): string\r\n    {\r\n        const existing = this._eventIds.get(k);\r\n\r\n        if(!existing) return null;\r\n\r\n        return (existing.get(_arg_2) || null);\r\n    }\r\n\r\n    private setMouseEventId(k: number, _arg_2: string, _arg_3: string): void\r\n    {\r\n        let existing = this._eventIds.get(k);\r\n\r\n        if(!existing)\r\n        {\r\n            existing = new Map();\r\n\r\n            this._eventIds.set(k, existing);\r\n        }\r\n\r\n        existing.delete(_arg_2);\r\n        existing.set(_arg_2, _arg_3);\r\n    }\r\n\r\n\r\n    public handleRoomObjectEvent(event: RoomObjectEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        if(event instanceof RoomObjectMouseEvent)\r\n        {\r\n            this.handleRoomObjectMouseEvent(event, roomId);\r\n\r\n            return;\r\n        }\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectStateChangedEvent.STATE_CHANGE:\r\n            case RoomObjectStateChangedEvent.STATE_RANDOM:\r\n                this.onRoomObjectStateChangedEvent((event as RoomObjectStateChangedEvent), roomId);\r\n                return;\r\n            case RoomObjectDimmerStateUpdateEvent.DIMMER_STATE:\r\n                this.onRoomObjectDimmerStateUpdateEvent((event as RoomObjectDimmerStateUpdateEvent), roomId);\r\n                return;\r\n            case RoomObjectMoveEvent.POSITION_CHANGED:\r\n            case RoomObjectMoveEvent.OBJECT_REMOVED:\r\n                this.handleSelectedObjectRemove((event as RoomObjectMoveEvent), roomId);\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.OPEN_WIDGET:\r\n            case RoomObjectWidgetRequestEvent.CLOSE_WIDGET:\r\n            case RoomObjectWidgetRequestEvent.OPEN_FURNI_CONTEXT_MENU:\r\n            case RoomObjectWidgetRequestEvent.CLOSE_FURNI_CONTEXT_MENU:\r\n            case RoomObjectWidgetRequestEvent.PLACEHOLDER:\r\n            case RoomObjectWidgetRequestEvent.CREDITFURNI:\r\n            case RoomObjectWidgetRequestEvent.STICKIE:\r\n            case RoomObjectWidgetRequestEvent.PRESENT:\r\n            case RoomObjectWidgetRequestEvent.TROPHY:\r\n            case RoomObjectWidgetRequestEvent.TEASER:\r\n            case RoomObjectWidgetRequestEvent.ECOTRONBOX:\r\n            case RoomObjectWidgetRequestEvent.DIMMER:\r\n            case RoomObjectWidgetRequestEvent.WIDGET_REMOVE_DIMMER:\r\n            case RoomObjectWidgetRequestEvent.CLOTHING_CHANGE:\r\n            case RoomObjectWidgetRequestEvent.JUKEBOX_PLAYLIST_EDITOR:\r\n            case RoomObjectWidgetRequestEvent.MANNEQUIN:\r\n            case RoomObjectWidgetRequestEvent.PET_PRODUCT_MENU:\r\n            case RoomObjectWidgetRequestEvent.GUILD_FURNI_CONTEXT_MENU:\r\n            case RoomObjectWidgetRequestEvent.MONSTERPLANT_SEED_PLANT_CONFIRMATION_DIALOG:\r\n            case RoomObjectWidgetRequestEvent.PURCHASABLE_CLOTHING_CONFIRMATION_DIALOG:\r\n            case RoomObjectWidgetRequestEvent.BACKGROUND_COLOR:\r\n            case RoomObjectWidgetRequestEvent.MYSTERYBOX_OPEN_DIALOG:\r\n            case RoomObjectWidgetRequestEvent.EFFECTBOX_OPEN_DIALOG:\r\n            case RoomObjectWidgetRequestEvent.MYSTERYTROPHY_OPEN_DIALOG:\r\n            case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_OPEN:\r\n            case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_ENGRAVING:\r\n            case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_FAILED:\r\n            case RoomObjectWidgetRequestEvent.FRIEND_FURNITURE_CONFIRM:\r\n            case RoomObjectWidgetRequestEvent.FRIEND_FURNITURE_ENGRAVING:\r\n            case RoomObjectWidgetRequestEvent.BADGE_DISPLAY_ENGRAVING:\r\n            case RoomObjectWidgetRequestEvent.HIGH_SCORE_DISPLAY:\r\n            case RoomObjectWidgetRequestEvent.HIDE_HIGH_SCORE_DISPLAY:\r\n            case RoomObjectWidgetRequestEvent.INERNAL_LINK:\r\n            case RoomObjectWidgetRequestEvent.ROOM_LINK:\r\n                this.onRoomObjectWidgetRequestEvent((event as RoomObjectWidgetRequestEvent), roomId);\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.DICE_ACTIVATE:\r\n            case RoomObjectFurnitureActionEvent.DICE_OFF:\r\n            case RoomObjectFurnitureActionEvent.USE_HABBOWHEEL:\r\n            case RoomObjectFurnitureActionEvent.STICKIE:\r\n            case RoomObjectFurnitureActionEvent.ENTER_ONEWAYDOOR:\r\n                this.onRoomObjectFurnitureActionEvent((event as RoomObjectFurnitureActionEvent), roomId);\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.SOUND_MACHINE_INIT:\r\n            case RoomObjectFurnitureActionEvent.SOUND_MACHINE_START:\r\n            case RoomObjectFurnitureActionEvent.SOUND_MACHINE_STOP:\r\n            case RoomObjectFurnitureActionEvent.SOUND_MACHINE_DISPOSE:\r\n                this.handleObjectSoundMachineEvent(event, roomId);\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.JUKEBOX_INIT:\r\n            case RoomObjectFurnitureActionEvent.JUKEBOX_START:\r\n            case RoomObjectFurnitureActionEvent.JUKEBOX_MACHINE_STOP:\r\n            case RoomObjectFurnitureActionEvent.JUKEBOX_DISPOSE:\r\n                this.handleObjectJukeboxEvent(event, roomId);\r\n                return;\r\n            case RoomObjectFloorHoleEvent.ADD_HOLE:\r\n            case RoomObjectFloorHoleEvent.REMOVE_HOLE:\r\n                this.onRoomObjectFloorHoleEvent((event as RoomObjectFloorHoleEvent), roomId);\r\n                return;\r\n            case RoomObjectRoomAdEvent.ROOM_AD_FURNI_CLICK:\r\n            case RoomObjectRoomAdEvent.ROOM_AD_FURNI_DOUBLE_CLICK:\r\n            case RoomObjectRoomAdEvent.ROOM_AD_TOOLTIP_SHOW:\r\n            case RoomObjectRoomAdEvent.ROOM_AD_TOOLTIP_HIDE:\r\n            case RoomObjectRoomAdEvent.ROOM_AD_LOAD_IMAGE:\r\n                this.onRoomObjectRoomAdEvent((event as RoomObjectRoomAdEvent), roomId);\r\n                return;\r\n            case RoomObjectBadgeAssetEvent.LOAD_BADGE:\r\n                this.onRoomObjectBadgeAssetEvent((event as RoomObjectBadgeAssetEvent), roomId);\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.MOUSE_ARROW:\r\n            case RoomObjectFurnitureActionEvent.MOUSE_BUTTON:\r\n                this.handleMousePointer((event as RoomObjectFurnitureActionEvent), roomId);\r\n                return;\r\n            case RoomObjectPlaySoundIdEvent.PLAY_SOUND:\r\n            case RoomObjectPlaySoundIdEvent.PLAY_SOUND_AT_PITCH:\r\n                this.handleRoomObjectPlaySoundEvent((event as RoomObjectPlaySoundIdEvent), roomId);\r\n                return;\r\n            case RoomObjectSamplePlaybackEvent.ROOM_OBJECT_INITIALIZED:\r\n            case RoomObjectSamplePlaybackEvent.ROOM_OBJECT_DISPOSED:\r\n            case RoomObjectSamplePlaybackEvent.PLAY_SAMPLE:\r\n            case RoomObjectSamplePlaybackEvent.CHANGE_PITCH:\r\n                this.handleRoomObjectSamplePlaybackEvent((event as RoomObjectSamplePlaybackEvent), roomId);\r\n                return;\r\n            case RoomObjectHSLColorEnableEvent.ROOM_BACKGROUND_COLOR:\r\n                this.onHSLColorEnableEvent((event as RoomObjectHSLColorEnableEvent), roomId);\r\n                return;\r\n            case RoomObjectDataRequestEvent.RODRE_CURRENT_USER_ID:\r\n            case RoomObjectDataRequestEvent.RODRE_URL_PREFIX:\r\n                this.onRoomObjectDataRequestEvent((event as RoomObjectDataRequestEvent), roomId);\r\n                return;\r\n            default:\r\n                NitroLogger.log(`Unhandled Event: ${ event.constructor.name }`, `Object ID: ${ event.object.id }`);\r\n                return;\r\n        }\r\n    }\r\n\r\n    private handleRoomObjectMouseEvent(event: RoomObjectMouseEvent, roomId: number): void\r\n    {\r\n        if(!event || !event.type) return;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectMouseEvent.CLICK:\r\n                this.handleRoomObjectMouseClickEvent(event, roomId);\r\n                return;\r\n            case RoomObjectMouseEvent.MOUSE_MOVE:\r\n                this.handleRoomObjectMouseMoveEvent(event, roomId);\r\n                return;\r\n            case RoomObjectMouseEvent.MOUSE_DOWN:\r\n                this.handleRoomObjectMouseDownEvent(event, roomId);\r\n                return;\r\n            case RoomObjectMouseEvent.MOUSE_DOWN_LONG:\r\n                this.handleRoomObjectMouseDownLongEvent(event, roomId);\r\n                return;\r\n            case RoomObjectMouseEvent.MOUSE_ENTER:\r\n                this.handleRoomObjectMouseEnterEvent(event, roomId);\r\n                return;\r\n            case RoomObjectMouseEvent.MOUSE_LEAVE:\r\n                this.handleRoomObjectMouseLeaveEvent(event, roomId);\r\n                return;\r\n        }\r\n    }\r\n\r\n    private handleRoomObjectMouseClickEvent(event: RoomObjectMouseEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        let operation = RoomObjectOperationType.OBJECT_UNDEFINED;\r\n\r\n        const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(selectedData) operation = selectedData.operation;\r\n\r\n        let didWalk = false;\r\n        let didMove = false;\r\n\r\n        if(this._whereYouClickIsWhereYouGo)\r\n        {\r\n            if(!operation || (operation === RoomObjectOperationType.OBJECT_UNDEFINED))\r\n            {\r\n                didWalk = this.handleMoveTargetFurni(roomId, event);\r\n            }\r\n        }\r\n\r\n        const category = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\r\n\r\n        switch(operation)\r\n        {\r\n            case RoomObjectOperationType.OBJECT_MOVE:\r\n                if(category === RoomObjectCategory.ROOM)\r\n                {\r\n                    if(selectedData)\r\n                    {\r\n                        this.modifyRoomObject(roomId, selectedData.id, selectedData.category, RoomObjectOperationType.OBJECT_MOVE_TO);\r\n                    }\r\n                }\r\n\r\n                else if(category === RoomObjectCategory.UNIT)\r\n                {\r\n                    if(selectedData && (event.objectType === RoomObjectUserType.MONSTER_PLANT))\r\n                    {\r\n                        this.modifyRoomObject(roomId, selectedData.id, selectedData.category, RoomObjectOperationType.OBJECT_MOVE_TO);\r\n                    }\r\n\r\n                    if(event.eventId) this.setMouseEventId(RoomObjectCategory.ROOM, MouseEventType.MOUSE_CLICK, event.eventId);\r\n\r\n                    this.placeObjectOnUser(roomId, event.objectId, category);\r\n                }\r\n\r\n                didMove = true;\r\n\r\n                if(event.objectId !== -1) this.setSelectedObject(roomId, event.objectId, category);\r\n\r\n                break;\r\n            case RoomObjectOperationType.OBJECT_PLACE:\r\n                if(category === RoomObjectCategory.ROOM)\r\n                {\r\n                    this.placeObject(roomId, (event instanceof RoomObjectTileMouseEvent), (event instanceof RoomObjectWallMouseEvent));\r\n                }\r\n\r\n                else if(category === RoomObjectCategory.UNIT)\r\n                {\r\n                    switch(event.objectType)\r\n                    {\r\n                        case RoomObjectUserType.MONSTER_PLANT:\r\n                        case RoomObjectUserType.RENTABLE_BOT:\r\n                            this.placeObject(roomId, (event instanceof RoomObjectTileMouseEvent), (event instanceof RoomObjectWallMouseEvent));\r\n                            break;\r\n                        default:\r\n                            if(event.eventId)\r\n                            {\r\n                                this.setMouseEventId(RoomObjectCategory.ROOM, MouseEventType.MOUSE_CLICK, event.eventId);\r\n                            }\r\n\r\n                            this.placeObjectOnUser(roomId, event.objectId, category);\r\n                            break;\r\n                    }\r\n                }\r\n                break;\r\n            case RoomObjectOperationType.OBJECT_UNDEFINED:\r\n                if(category === RoomObjectCategory.ROOM)\r\n                {\r\n                    if(!didWalk && (event instanceof RoomObjectTileMouseEvent)) this.onRoomObjectTileMouseEvent(roomId, event);\r\n                }\r\n                else\r\n                {\r\n                    this.setSelectedObject(roomId, event.objectId, category);\r\n\r\n                    didMove = false;\r\n\r\n                    if(category === RoomObjectCategory.UNIT)\r\n                    {\r\n                        if(event.ctrlKey && !event.altKey && !event.shiftKey && (event.objectType === RoomObjectUserType.RENTABLE_BOT))\r\n                        {\r\n                            this.modifyRoomObject(roomId, event.objectId, category, RoomObjectOperationType.OBJECT_PICKUP_BOT);\r\n                        }\r\n\r\n                        else if(event.ctrlKey && !event.altKey && !event.shiftKey && (event.objectType === RoomObjectUserType.MONSTER_PLANT))\r\n                        {\r\n                            this.modifyRoomObject(roomId, event.objectId, category, RoomObjectOperationType.OBJECT_PICKUP_PET);\r\n                        }\r\n\r\n                        else if(!event.ctrlKey && !event.altKey && event.shiftKey && (event.objectType === RoomObjectUserType.MONSTER_PLANT))\r\n                        {\r\n                            this.modifyRoomObject(roomId, event.objectId, category, RoomObjectOperationType.OBJECT_ROTATE_POSITIVE);\r\n                        }\r\n\r\n                        if(!this._roomEngine.isPlayingGame())\r\n                        {\r\n                            didWalk = true;\r\n                        }\r\n                        else\r\n                        {\r\n                            didMove = true;\r\n                        }\r\n                    }\r\n\r\n                    else if((category === RoomObjectCategory.FLOOR) || (category === RoomObjectCategory.WALL))\r\n                    {\r\n                        if(event.altKey || event.ctrlKey || event.shiftKey)\r\n                        {\r\n                            if(!event.ctrlKey && !event.altKey && event.shiftKey)\r\n                            {\r\n                                if(category === RoomObjectCategory.FLOOR)\r\n                                {\r\n                                    if(this._roomEngine.events)\r\n                                    {\r\n                                        this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.REQUEST_ROTATE, roomId, event.objectId, category));\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            else if(event.ctrlKey && !event.altKey && !event.shiftKey)\r\n                            {\r\n                                this.modifyRoomObject(roomId, event.objectId, category, RoomObjectOperationType.OBJECT_PICKUP);\r\n                            }\r\n\r\n                            if(!this._roomEngine.isPlayingGame())\r\n                            {\r\n                                didWalk = true;\r\n                            }\r\n                            else\r\n                            {\r\n                                didMove = true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if(event.eventId)\r\n                    {\r\n                        if(didWalk)\r\n                        {\r\n                            this.setMouseEventId(RoomObjectCategory.ROOM, MouseEventType.MOUSE_CLICK, event.eventId);\r\n                        }\r\n\r\n                        if(didMove)\r\n                        {\r\n                            this.setMouseEventId(RoomObjectCategory.MINIMUM, MouseEventType.MOUSE_CLICK, event.eventId);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(category === RoomObjectCategory.ROOM)\r\n        {\r\n            const _local_15 = this.getMouseEventId(RoomObjectCategory.MINIMUM, MouseEventType.MOUSE_CLICK);\r\n            const _local_16 = this.getMouseEventId(RoomObjectCategory.UNIT, MouseEventType.MOUSE_CLICK);\r\n\r\n            if((_local_15 !== event.eventId) && (_local_16 !== event.eventId) && !didMove)\r\n            {\r\n                this.deselectObject(roomId);\r\n\r\n                if(this._roomEngine.events) this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.DESELECTED, roomId, -1, RoomObjectCategory.MINIMUM));\r\n\r\n                this.setSelectedAvatar(roomId, 0, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleRoomObjectMouseMoveEvent(event: RoomObjectMouseEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        let operation = RoomObjectOperationType.OBJECT_UNDEFINED;\r\n\r\n        const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(selectedData) operation = selectedData.operation;\r\n\r\n        const category = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\r\n\r\n        if(this._roomEngine)\r\n        {\r\n            const roomCursor = this._roomEngine.getRoomObjectCursor(roomId);\r\n\r\n            if(roomCursor && roomCursor.logic)\r\n            {\r\n                let newEvent: ObjectTileCursorUpdateMessage = null;\r\n\r\n                if(event instanceof RoomObjectTileMouseEvent)\r\n                {\r\n                    newEvent = this.handleMouseOverTile(event, roomId);\r\n                }\r\n\r\n                else if(event.object && (event.object.id !== -1))\r\n                {\r\n                    if(this._whereYouClickIsWhereYouGo)\r\n                    {\r\n                        newEvent = this.handleMouseOverObject(category, roomId, event);\r\n                    }\r\n                }\r\n\r\n                else\r\n                {\r\n                    newEvent = new ObjectTileCursorUpdateMessage(null, 0, false, event.eventId);\r\n                }\r\n\r\n                roomCursor.processUpdateMessage(newEvent);\r\n            }\r\n        }\r\n\r\n        switch(operation)\r\n        {\r\n            case RoomObjectOperationType.OBJECT_MOVE:\r\n                if(category === RoomObjectCategory.ROOM) this.handleObjectMove(event, roomId);\r\n\r\n                return;\r\n            case RoomObjectOperationType.OBJECT_PLACE:\r\n                if(category === RoomObjectCategory.ROOM) this.handleObjectPlace(event, roomId);\r\n\r\n                return;\r\n        }\r\n    }\r\n\r\n    private handleRoomObjectMouseDownEvent(event: RoomObjectMouseEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        let operation = RoomObjectOperationType.OBJECT_UNDEFINED;\r\n\r\n        const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(selectedData) operation = selectedData.operation;\r\n\r\n        const category = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\r\n\r\n        switch(operation)\r\n        {\r\n            case RoomObjectOperationType.OBJECT_UNDEFINED:\r\n                if((category === RoomObjectCategory.FLOOR) || (category === RoomObjectCategory.WALL) || (event.objectType === RoomObjectUserType.MONSTER_PLANT))\r\n                {\r\n                    if((event.altKey && !event.ctrlKey && !event.shiftKey) || this.decorateModeMove(event))\r\n                    {\r\n                        if(this._roomEngine.events) this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.REQUEST_MOVE, roomId, event.objectId, category));\r\n                    }\r\n                }\r\n                return;\r\n        }\r\n    }\r\n\r\n    private handleRoomObjectMouseDownLongEvent(event: RoomObjectMouseEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        let operation = RoomObjectOperationType.OBJECT_UNDEFINED;\r\n\r\n        const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(selectedData) operation = selectedData.operation;\r\n\r\n        const category = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\r\n\r\n        switch(operation)\r\n        {\r\n            case RoomObjectOperationType.OBJECT_UNDEFINED:\r\n                if((category === RoomObjectCategory.FLOOR) || (category === RoomObjectCategory.WALL) || (event.objectType === RoomObjectUserType.MONSTER_PLANT))\r\n                {\r\n                    if((!event.ctrlKey && !event.shiftKey) || this.decorateModeMove(event))\r\n                    {\r\n                        if(this._roomEngine.events) this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.REQUEST_MANIPULATION, roomId, event.objectId, category));\r\n                    }\r\n                }\r\n                return;\r\n        }\r\n    }\r\n\r\n    private handleRoomObjectMouseEnterEvent(event: RoomObjectMouseEvent, roomId: number): void\r\n    {\r\n        const id = event.objectId;\r\n        const type = event.objectType;\r\n        const category = this._roomEngine.getRoomObjectCategoryForType(type);\r\n\r\n        if(this._roomEngine.events)\r\n        {\r\n            this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.MOUSE_ENTER, roomId, id, category));\r\n        }\r\n    }\r\n\r\n    private handleRoomObjectMouseLeaveEvent(event: RoomObjectMouseEvent, roomId: number): void\r\n    {\r\n        const id = event.objectId;\r\n        const type = event.objectType;\r\n        const category = this._roomEngine.getRoomObjectCategoryForType(type);\r\n\r\n        if(category !== RoomObjectCategory.ROOM)\r\n        {\r\n            if(category === RoomObjectCategory.UNIT)\r\n            {\r\n                const cursor = this._roomEngine.getRoomObjectCursor(roomId);\r\n\r\n                if(cursor) cursor.processUpdateMessage(new ObjectDataUpdateMessage(0, null));\r\n            }\r\n        }\r\n\r\n        if(this._roomEngine.events)\r\n        {\r\n            this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.MOUSE_LEAVE, roomId, id, category));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    private onRoomObjectStateChangedEvent(event: RoomObjectStateChangedEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectStateChangedEvent.STATE_CHANGE:\r\n                this.changeObjectState(roomId, event.object.id, event.object.type, event.state, false);\r\n                return;\r\n            case RoomObjectStateChangedEvent.STATE_RANDOM:\r\n                this.changeObjectState(roomId, event.object.id, event.object.type, event.state, true);\r\n                return;\r\n        }\r\n    }\r\n\r\n    private onRoomObjectDimmerStateUpdateEvent(event: RoomObjectDimmerStateUpdateEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectDimmerStateUpdateEvent.DIMMER_STATE:\r\n                this._roomEngine.events.dispatchEvent(new RoomEngineDimmerStateEvent(roomId, event.state, event.presetId, event.effectId, event.color, event.brightness));\r\n                return;\r\n        }\r\n    }\r\n\r\n    private handleSelectedObjectRemove(event: RoomObjectMoveEvent, roomId: number): void\r\n    {\r\n        if(!event || !this._roomEngine) return;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectMoveEvent.POSITION_CHANGED: {\r\n                const objectId = event.objectId;\r\n                const objectType = event.objectType;\r\n                const objectCategory = this._roomEngine.getRoomObjectCategoryForType(objectType);\r\n                const object = this._roomEngine.getRoomObject(roomId, objectId, objectCategory);\r\n                const selectionArrow = this._roomEngine.getRoomObjectSelectionArrow(roomId);\r\n\r\n                if(object && selectionArrow && selectionArrow.logic)\r\n                {\r\n                    const location = object.getLocation();\r\n\r\n                    selectionArrow.logic.processUpdateMessage(new RoomObjectUpdateMessage(location, null));\r\n                }\r\n                return;\r\n            }\r\n            case RoomObjectMoveEvent.OBJECT_REMOVED:\r\n                this.setSelectedAvatar(roomId, 0, false);\r\n                return;\r\n        }\r\n    }\r\n\r\n    private onRoomObjectWidgetRequestEvent(event: RoomObjectWidgetRequestEvent, roomId: number): void\r\n    {\r\n        if(!event || !this._roomEngine) return;\r\n\r\n        const objectId = event.objectId;\r\n        const objectType = event.objectType;\r\n        const objectCategory = this._roomEngine.getRoomObjectCategoryForType(objectType);\r\n        const eventDispatcher = this._roomEngine.events;\r\n\r\n        if(!eventDispatcher) return;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectWidgetRequestEvent.OPEN_WIDGET:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.OPEN_WIDGET, roomId, objectId, objectCategory, ((event.object as IRoomObjectController).logic.widget)));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.CLOSE_WIDGET:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.CLOSE_WIDGET, roomId, objectId, objectCategory, ((event.object as IRoomObjectController).logic.widget)));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.OPEN_FURNI_CONTEXT_MENU:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.OPEN_FURNI_CONTEXT_MENU, roomId, objectId, objectCategory, ((event.object as IRoomObjectController).logic.contextMenu)));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.CLOSE_FURNI_CONTEXT_MENU:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.CLOSE_FURNI_CONTEXT_MENU, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.PLACEHOLDER:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_PLACEHOLDER, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.CREDITFURNI:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_CREDITFURNI, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.STICKIE:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_STICKIE, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.PRESENT:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_PRESENT, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.TROPHY:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_TROPHY, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.TEASER:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_TEASER, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.ECOTRONBOX:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_ECOTRONBOX, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.DIMMER:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_DIMMER, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.WIDGET_REMOVE_DIMMER:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REMOVE_DIMMER, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.CLOTHING_CHANGE:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_CLOTHING_CHANGE, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.JUKEBOX_PLAYLIST_EDITOR:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_PLAYLIST_EDITOR, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.MANNEQUIN:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_MANNEQUIN, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.PET_PRODUCT_MENU:\r\n                eventDispatcher.dispatchEvent(new RoomEngineUseProductEvent(RoomEngineUseProductEvent.USE_PRODUCT_FROM_ROOM, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.GUILD_FURNI_CONTEXT_MENU:\r\n                this._roomEngine.connection.send(new FurnitureGroupInfoComposer(event.objectId, event.object.model.getValue<number>(RoomObjectVariable.FURNITURE_GUILD_CUSTOMIZED_GUILD_ID)));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.MONSTERPLANT_SEED_PLANT_CONFIRMATION_DIALOG:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_MONSTERPLANT_SEED_PLANT_CONFIRMATION_DIALOG, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.PURCHASABLE_CLOTHING_CONFIRMATION_DIALOG:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_PURCHASABLE_CLOTHING_CONFIRMATION_DIALOG, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.BACKGROUND_COLOR:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_BACKGROUND_COLOR, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.MYSTERYBOX_OPEN_DIALOG:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_MYSTERYBOX_OPEN_DIALOG, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.EFFECTBOX_OPEN_DIALOG:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_EFFECTBOX_OPEN_DIALOG, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.MYSTERYTROPHY_OPEN_DIALOG:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_MYSTERYTROPHY_OPEN_DIALOG, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_OPEN:\r\n                //this._roomEngine.connection.send();\r\n                // new _Str_4406(k._Str_1577, 0)\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_ENGRAVING:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_ACHIEVEMENT_RESOLUTION_ENGRAVING, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.ACHIEVEMENT_RESOLUTION_FAILED:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_ACHIEVEMENT_RESOLUTION_FAILED, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.FRIEND_FURNITURE_CONFIRM:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_FRIEND_FURNITURE_CONFIRM, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.FRIEND_FURNITURE_ENGRAVING:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_FRIEND_FURNITURE_ENGRAVING, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.BADGE_DISPLAY_ENGRAVING:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_BADGE_DISPLAY_ENGRAVING, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.HIGH_SCORE_DISPLAY:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_HIGH_SCORE_DISPLAY, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.HIDE_HIGH_SCORE_DISPLAY:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_HIDE_HIGH_SCORE_DISPLAY, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.INERNAL_LINK:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_INTERNAL_LINK, roomId, objectId, objectCategory));\r\n                return;\r\n            case RoomObjectWidgetRequestEvent.ROOM_LINK:\r\n                eventDispatcher.dispatchEvent(new RoomEngineTriggerWidgetEvent(RoomEngineTriggerWidgetEvent.REQUEST_ROOM_LINK, roomId, objectId, objectCategory));\r\n                return;\r\n        }\r\n    }\r\n\r\n    private onRoomObjectFurnitureActionEvent(event: RoomObjectFurnitureActionEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        this.useObject(roomId, event.object.id, event.object.type, event.type);\r\n    }\r\n\r\n    private handleObjectSoundMachineEvent(event: RoomObjectEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        const objectCategory = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\r\n        const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(selectedData)\r\n        {\r\n            if((selectedData.category === objectCategory) && (selectedData.id === event.objectId))\r\n            {\r\n                if(selectedData.operation === RoomObjectOperationType.OBJECT_PLACE) return;\r\n            }\r\n        }\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectFurnitureActionEvent.SOUND_MACHINE_INIT:\r\n                this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.SOUND_MACHINE_INIT, roomId, event.objectId, objectCategory));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.SOUND_MACHINE_START:\r\n                this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.SOUND_MACHINE_SWITCHED_ON, roomId, event.objectId, objectCategory));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.SOUND_MACHINE_STOP:\r\n                this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.SOUND_MACHINE_SWITCHED_OFF, roomId, event.objectId, objectCategory));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.SOUND_MACHINE_DISPOSE:\r\n                this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.SOUND_MACHINE_DISPOSE, roomId, event.objectId, objectCategory));\r\n                return;\r\n        }\r\n    }\r\n\r\n    private handleObjectJukeboxEvent(event: RoomObjectEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        const objectCategory = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\r\n        const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(selectedData)\r\n        {\r\n            if((selectedData.category === objectCategory) && (selectedData.id === event.objectId))\r\n            {\r\n                if(selectedData.operation === RoomObjectOperationType.OBJECT_PLACE) return;\r\n            }\r\n        }\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectFurnitureActionEvent.JUKEBOX_INIT:\r\n                this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.JUKEBOX_INIT, roomId, event.objectId, objectCategory));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.JUKEBOX_START:\r\n                this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.JUKEBOX_SWITCHED_ON, roomId, event.objectId, objectCategory));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.JUKEBOX_MACHINE_STOP:\r\n                this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.JUKEBOX_SWITCHED_OFF, roomId, event.objectId, objectCategory));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.JUKEBOX_DISPOSE:\r\n                this._roomEngine.events.dispatchEvent(new RoomObjectSoundMachineEvent(RoomObjectSoundMachineEvent.JUKEBOX_DISPOSE, roomId, event.objectId, objectCategory));\r\n                return;\r\n        }\r\n    }\r\n\r\n    private onRoomObjectFloorHoleEvent(event: RoomObjectFloorHoleEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectFloorHoleEvent.ADD_HOLE:\r\n                this._roomEngine.addRoomInstanceFloorHole(roomId, event.objectId);\r\n                return;\r\n            case RoomObjectFloorHoleEvent.REMOVE_HOLE:\r\n                this._roomEngine.removeRoomInstanceFloorHole(roomId, event.objectId);\r\n                return;\r\n        }\r\n    }\r\n\r\n    private onRoomObjectRoomAdEvent(event: RoomObjectRoomAdEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        let eventType: string = null;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectRoomAdEvent.ROOM_AD_FURNI_CLICK:\r\n                this._roomEngine.events.dispatchEvent(event);\r\n\r\n                if(event.clickUrl && (event.clickUrl.length > 0))\r\n                {\r\n                    Nitro.instance.createLinkEvent(event.clickUrl);\r\n                }\r\n\r\n                eventType = RoomEngineRoomAdEvent.FURNI_CLICK;\r\n                break;\r\n            case RoomObjectRoomAdEvent.ROOM_AD_FURNI_DOUBLE_CLICK:\r\n                if(event.clickUrl && (event.clickUrl.length > 0))\r\n                {\r\n                    const catalogPage = 'CATALOG_PAGE';\r\n\r\n                    if(event.clickUrl.indexOf(catalogPage) === 0)\r\n                    {\r\n                        Nitro.instance.createLinkEvent(event.clickUrl.substr(catalogPage.length));\r\n                    }\r\n                }\r\n\r\n                eventType = RoomEngineRoomAdEvent.FURNI_DOUBLE_CLICK;\r\n                break;\r\n            case RoomObjectRoomAdEvent.ROOM_AD_TOOLTIP_SHOW:\r\n                eventType = RoomEngineRoomAdEvent.TOOLTIP_SHOW;\r\n                break;\r\n            case RoomObjectRoomAdEvent.ROOM_AD_TOOLTIP_HIDE:\r\n                eventType = RoomEngineRoomAdEvent.TOOLTIP_HIDE;\r\n                break;\r\n        }\r\n\r\n        if(eventType) this._roomEngine.events.dispatchEvent(new RoomEngineObjectEvent(eventType, roomId, event.objectId, this._roomEngine.getRoomObjectCategoryForType(event.objectType)));\r\n    }\r\n\r\n    private onRoomObjectBadgeAssetEvent(event: RoomObjectBadgeAssetEvent, roomId: number): void\r\n    {\r\n        if(!event || !this._roomEngine) return;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectBadgeAssetEvent.LOAD_BADGE: {\r\n                const objectId = event.objectId;\r\n                const objectType = event.objectType;\r\n                const objectCategory = this._roomEngine.getRoomObjectCategoryForType(objectType);\r\n\r\n                this._roomEngine.loadRoomObjectBadgeImage(roomId, objectId, objectCategory, event.badgeId, event.groupBadge);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleMousePointer(event: RoomObjectFurnitureActionEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        this._roomEngine.updateMousePointer(event.type, event.objectId, event.objectType);\r\n    }\r\n\r\n    private handleRoomObjectPlaySoundEvent(event: RoomObjectPlaySoundIdEvent, roomId: number): void\r\n    {\r\n        const objectCategory = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectPlaySoundIdEvent.PLAY_SOUND:\r\n                this._roomEngine.events.dispatchEvent(new RoomEngineObjectPlaySoundEvent(RoomEngineObjectPlaySoundEvent.PLAY_SOUND, roomId, event.objectId, objectCategory, event.soundId, event.pitch));\r\n                return;\r\n            case RoomObjectPlaySoundIdEvent.PLAY_SOUND_AT_PITCH:\r\n                this._roomEngine.events.dispatchEvent(new RoomEngineObjectPlaySoundEvent(RoomEngineObjectPlaySoundEvent.PLAY_SOUND_AT_PITCH, roomId, event.objectId, objectCategory, event.soundId, event.pitch));\r\n                return;\r\n        }\r\n    }\r\n\r\n    private handleRoomObjectSamplePlaybackEvent(event: RoomObjectSamplePlaybackEvent, roomId: number): void\r\n    {\r\n        if(!event) return;\r\n\r\n        const objectCategory = this._roomEngine.getRoomObjectCategoryForType(event.objectType);\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectSamplePlaybackEvent.ROOM_OBJECT_INITIALIZED:\r\n                this._roomEngine.events.dispatchEvent(new RoomEngineSamplePlaybackEvent(RoomEngineSamplePlaybackEvent.ROOM_OBJECT_INITIALIZED, roomId, event.objectId, objectCategory, event.sampleId, event.pitch));\r\n                break;\r\n            case RoomObjectSamplePlaybackEvent.ROOM_OBJECT_DISPOSED:\r\n                this._roomEngine.events.dispatchEvent(new RoomEngineSamplePlaybackEvent(RoomEngineSamplePlaybackEvent.ROOM_OBJECT_DISPOSED, roomId, event.objectId, objectCategory, event.sampleId, event.pitch));\r\n                break;\r\n            case RoomObjectSamplePlaybackEvent.PLAY_SAMPLE:\r\n                this._roomEngine.events.dispatchEvent(new RoomEngineSamplePlaybackEvent(RoomEngineSamplePlaybackEvent.PLAY_SAMPLE, roomId, event.objectId, objectCategory, event.sampleId, event.pitch));\r\n                break;\r\n            case RoomObjectSamplePlaybackEvent.CHANGE_PITCH:\r\n                this._roomEngine.events.dispatchEvent(new RoomEngineSamplePlaybackEvent(RoomEngineSamplePlaybackEvent.CHANGE_PITCH, roomId, event.objectId, objectCategory, event.sampleId, event.pitch));\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onHSLColorEnableEvent(event: RoomObjectHSLColorEnableEvent, roomId: number): void\r\n    {\r\n        if(!event || !this._roomEngine) return;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectHSLColorEnableEvent.ROOM_BACKGROUND_COLOR:\r\n                this._roomEngine.events.dispatchEvent(new RoomObjectHSLColorEnabledEvent(RoomObjectHSLColorEnabledEvent.ROOM_BACKGROUND_COLOR, roomId, event.enable, event.hue, event.saturation, event.lightness));\r\n                return;\r\n        }\r\n    }\r\n\r\n    private onRoomObjectDataRequestEvent(event: RoomObjectDataRequestEvent, roomId: number): void\r\n    {\r\n        if(!event || !this._roomEngine || !event.object) return;\r\n\r\n        switch(event.type)\r\n        {\r\n            case RoomObjectDataRequestEvent.RODRE_CURRENT_USER_ID:\r\n                event.object.model.setValue(RoomObjectVariable.SESSION_CURRENT_USER_ID, this._roomEngine.sessionDataManager.userId);\r\n                return;\r\n            case RoomObjectDataRequestEvent.RODRE_URL_PREFIX:\r\n                event.object.model.setValue(RoomObjectVariable.SESSION_URL_PREFIX, Nitro.instance.getConfiguration('url.prefix'));\r\n                return;\r\n        }\r\n    }\r\n\r\n    private onRoomObjectTileMouseEvent(roomId: number, event: RoomObjectTileMouseEvent): void\r\n    {\r\n        if(!this._roomEngine || this._roomEngine.isDecorating || !this._roomEngine.roomSessionManager) return;\r\n\r\n        const session = this._roomEngine.roomSessionManager.getSession(roomId);\r\n\r\n        if(!session || session.isSpectator) return;\r\n\r\n        this.sendWalkUpdate(event.tileXAsInt, event.tileYAsInt);\r\n    }\r\n\r\n    private handleObjectMove(event: RoomObjectMouseEvent, roomId: number): void\r\n    {\r\n        if(!event || !this._roomEngine) return;\r\n\r\n        const eventDispatcher = this._roomEngine.events;\r\n\r\n        if(!eventDispatcher) return;\r\n\r\n        const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(!selectedData) return;\r\n\r\n        const roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\r\n\r\n        if(!roomObject) return;\r\n\r\n        let _local_6 = true;\r\n\r\n        if((selectedData.category === RoomObjectCategory.FLOOR) || (selectedData.category === RoomObjectCategory.UNIT))\r\n        {\r\n            const stackingHeightMap = this._roomEngine.getFurnitureStackingHeightMap(roomId);\r\n\r\n            if(!(((event instanceof RoomObjectTileMouseEvent)) && (this.handleFurnitureMove(roomObject, selectedData, Math.trunc(event.tileX + 0.5), Math.trunc(event.tileY + 0.5), stackingHeightMap))))\r\n            {\r\n                this.handleFurnitureMove(roomObject, selectedData, selectedData.loc.x, selectedData.loc.y, stackingHeightMap);\r\n\r\n                _local_6 = false;\r\n            }\r\n        }\r\n\r\n        else if((selectedData.category === RoomObjectCategory.WALL))\r\n        {\r\n            _local_6 = false;\r\n\r\n            if(event instanceof RoomObjectWallMouseEvent)\r\n            {\r\n                const _local_10 = event.wallLocation;\r\n                const _local_11 = event.wallWidth;\r\n                const _local_12 = event.wallHeight;\r\n                const _local_13 = event.x;\r\n                const _local_14 = event.y;\r\n                const _local_15 = event.direction;\r\n\r\n                if(this.handleWallItemMove(roomObject, selectedData, _local_10, _local_11, _local_12, _local_13, _local_14, _local_15))\r\n                {\r\n                    _local_6 = true;\r\n                }\r\n            }\r\n\r\n            if(!_local_6)\r\n            {\r\n                roomObject.setLocation(selectedData.loc);\r\n                roomObject.setDirection(selectedData.dir);\r\n            }\r\n\r\n            this._roomEngine.updateRoomObjectMask(roomId, selectedData.id, _local_6);\r\n        }\r\n\r\n        if(_local_6)\r\n        {\r\n            this.setFurnitureAlphaMultiplier(roomObject, 0.5);\r\n\r\n            this._roomEngine.setObjectMoverIconSpriteVisible(false);\r\n        }\r\n        else\r\n        {\r\n            this.setFurnitureAlphaMultiplier(roomObject, 0);\r\n\r\n            this._roomEngine.setObjectMoverIconSpriteVisible(true);\r\n        }\r\n    }\r\n\r\n    private handleObjectPlace(event: RoomObjectMouseEvent, roomId: number): void\r\n    {\r\n        if(!event || !this._roomEngine) return;\r\n\r\n        const eventDispatcher = this._roomEngine.events;\r\n\r\n        if(!eventDispatcher) return;\r\n\r\n        let selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(!selectedData) return;\r\n\r\n        let roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\r\n\r\n        if(!roomObject)\r\n        {\r\n            if(event instanceof RoomObjectTileMouseEvent)\r\n            {\r\n                if(selectedData.category === RoomObjectCategory.FLOOR)\r\n                {\r\n                    this._roomEngine.addFurnitureFloor(roomId, selectedData.id, selectedData.typeId, selectedData.loc, selectedData.dir, 0, selectedData.stuffData, parseFloat(selectedData.instanceData), -1, 0, 0, '', false);\r\n                }\r\n\r\n                else if(selectedData.category === RoomObjectCategory.UNIT)\r\n                {\r\n                    this._roomEngine.addRoomObjectUser(roomId, selectedData.id, new Vector3d(), new Vector3d(180), 180, selectedData.typeId, selectedData.instanceData);\r\n\r\n                    const roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\r\n\r\n                    (roomObject && selectedData.posture && roomObject.model.setValue(RoomObjectVariable.FIGURE_POSTURE, selectedData.posture));\r\n                }\r\n            }\r\n\r\n            else if(event instanceof RoomObjectWallMouseEvent)\r\n            {\r\n                if(selectedData.category === RoomObjectCategory.WALL)\r\n                {\r\n                    this._roomEngine.addFurnitureWall(roomId, selectedData.id, selectedData.typeId, selectedData.loc, selectedData.dir, 0, selectedData.instanceData, 0);\r\n                }\r\n            }\r\n\r\n            roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\r\n\r\n            if(roomObject)\r\n            {\r\n                if(selectedData.category === RoomObjectCategory.FLOOR)\r\n                {\r\n                    const allowedDirections = roomObject.model.getValue<number[]>(RoomObjectVariable.FURNITURE_ALLOWED_DIRECTIONS);\r\n\r\n                    if(allowedDirections && allowedDirections.length)\r\n                    {\r\n                        const direction = new Vector3d(allowedDirections[0]);\r\n\r\n                        roomObject.setDirection(direction);\r\n\r\n                        this.updateSelectedObjectData(roomId, selectedData.id, selectedData.category, selectedData.loc, direction, selectedData.operation, selectedData.typeId, selectedData.instanceData, selectedData.stuffData, selectedData.state, selectedData.animFrame, selectedData.posture);\r\n\r\n                        selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n                        if(!selectedData) return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setFurnitureAlphaMultiplier(roomObject, 0.5);\r\n            this._roomEngine.setObjectMoverIconSpriteVisible(true);\r\n        }\r\n\r\n        if(roomObject)\r\n        {\r\n            let _local_12 = true;\r\n\r\n            const stackingHeightMap = this._roomEngine.getFurnitureStackingHeightMap(roomId);\r\n\r\n            if(selectedData.category === RoomObjectCategory.FLOOR)\r\n            {\r\n                if(!((event instanceof RoomObjectTileMouseEvent) && this.handleFurnitureMove(roomObject, selectedData, Math.trunc(event.tileX + 0.5), Math.trunc(event.tileY + 0.5), stackingHeightMap)))\r\n                {\r\n                    this._roomEngine.removeRoomObjectFloor(roomId, selectedData.id);\r\n\r\n                    _local_12 = false;\r\n                }\r\n            }\r\n\r\n            else if(selectedData.category === RoomObjectCategory.WALL)\r\n            {\r\n                _local_12 = false;\r\n\r\n                if(event instanceof RoomObjectWallMouseEvent)\r\n                {\r\n                    const _local_14 = event.wallLocation;\r\n                    const _local_15 = event.wallWidth;\r\n                    const _local_16 = event.wallHeight;\r\n                    const _local_17 = event.x;\r\n                    const _local_18 = event.y;\r\n                    const _local_19 = event.direction;\r\n\r\n                    if(this.handleWallItemMove(roomObject, selectedData, _local_14, _local_15, _local_16, _local_17, _local_18, _local_19))\r\n                    {\r\n                        _local_12 = true;\r\n                    }\r\n                }\r\n\r\n                if(!_local_12)\r\n                {\r\n                    this._roomEngine.removeRoomObjectWall(roomId, selectedData.id);\r\n                }\r\n\r\n                this._roomEngine.updateRoomObjectMask(roomId, selectedData.id, _local_12);\r\n            }\r\n\r\n            else if(selectedData.category === RoomObjectCategory.UNIT)\r\n            {\r\n                if(!((event instanceof RoomObjectTileMouseEvent) && this.handleUserPlace(roomObject, Math.trunc(event.tileX + 0.5), Math.trunc(event.tileY + 0.5), this._roomEngine.getLegacyWallGeometry(roomId))))\r\n                {\r\n                    this._roomEngine.removeRoomObjectUser(roomId, selectedData.id);\r\n\r\n                    _local_12 = false;\r\n                }\r\n            }\r\n\r\n            this._roomEngine.setObjectMoverIconSpriteVisible(!_local_12);\r\n        }\r\n    }\r\n\r\n    private handleFurnitureMove(roomObject: IRoomObjectController, selectedObjectData: SelectedRoomObjectData, x: number, y: number, stackingHeightMap: FurnitureStackingHeightMap): boolean\r\n    {\r\n        if(!roomObject || !selectedObjectData) return false;\r\n\r\n        const _local_6 = new Vector3d();\r\n        _local_6.assign(roomObject.getDirection());\r\n\r\n        roomObject.setDirection(selectedObjectData.dir);\r\n\r\n        const _local_7 = new Vector3d(x, y, 0);\r\n        const _local_8 = new Vector3d();\r\n\r\n        _local_8.assign(roomObject.getDirection());\r\n\r\n        let _local_9 = this.validateFurnitureLocation(roomObject, _local_7, selectedObjectData.loc, selectedObjectData.dir, stackingHeightMap);\r\n\r\n        if(!_local_9)\r\n        {\r\n            _local_8.x = this.getValidRoomObjectDirection(roomObject, true);\r\n\r\n            roomObject.setDirection(_local_8);\r\n\r\n            _local_9 = this.validateFurnitureLocation(roomObject, _local_7, selectedObjectData.loc, selectedObjectData.dir, stackingHeightMap);\r\n        }\r\n\r\n        if(!_local_9)\r\n        {\r\n            roomObject.setDirection(_local_6);\r\n\r\n            return false;\r\n        }\r\n\r\n        roomObject.setLocation(_local_9);\r\n\r\n        if(_local_8) roomObject.setDirection(_local_8);\r\n\r\n        return true;\r\n    }\r\n\r\n    private handleWallItemMove(k: IRoomObjectController, _arg_2: SelectedRoomObjectData, _arg_3: IVector3D, _arg_4: IVector3D, _arg_5: IVector3D, _arg_6: number, _arg_7: number, _arg_8: number): boolean\r\n    {\r\n        if(!k || !_arg_2) return false;\r\n\r\n        const _local_9 = new Vector3d(_arg_8);\r\n        const _local_10 = this.validateWallItemLocation(k, _arg_3, _arg_4, _arg_5, _arg_6, _arg_7, _arg_2);\r\n\r\n        if(!_local_10) return false;\r\n\r\n        k.setLocation(_local_10);\r\n        k.setDirection(_local_9);\r\n\r\n        return true;\r\n    }\r\n\r\n    private validateFurnitureLocation(k: IRoomObject, _arg_2: IVector3D, _arg_3: IVector3D, _arg_4: IVector3D, _arg_5: FurnitureStackingHeightMap): Vector3d\r\n    {\r\n        if(!k || !k.model || !_arg_2) return null;\r\n\r\n        let _local_15: Vector3d = null;\r\n\r\n        const _local_6 = k.getDirection();\r\n\r\n        if(!_local_6) return null;\r\n\r\n        if(!_arg_3 || !_arg_4) return null;\r\n\r\n        if((_arg_2.x === _arg_3.x) && (_arg_2.y === _arg_3.y))\r\n        {\r\n            if(_local_6.x === _arg_4.x)\r\n            {\r\n                _local_15 = new Vector3d();\r\n\r\n                _local_15.assign(_arg_3);\r\n\r\n                return _local_15;\r\n            }\r\n        }\r\n\r\n        let sizeX = k.model.getValue<number>(RoomObjectVariable.FURNITURE_SIZE_X);\r\n        let sizeY = k.model.getValue<number>(RoomObjectVariable.FURNITURE_SIZE_Y);\r\n\r\n        if(sizeX < 1) sizeX = 1;\r\n\r\n        if(sizeY < 1) sizeY = 1;\r\n\r\n        const _local_9 = _arg_3.x;\r\n        const _local_10 = _arg_3.y;\r\n        let _local_11 = sizeX;\r\n        let _local_12 = sizeY;\r\n        let _local_13 = 0;\r\n        let _local_14 = (Math.trunc((Math.trunc(_local_6.x + 45) % 360) / 90));\r\n\r\n        if((_local_14 === 1) || (_local_14 === 3))\r\n        {\r\n            _local_13 = sizeX;\r\n\r\n            sizeX = sizeY;\r\n            sizeY = _local_13;\r\n        }\r\n\r\n        _local_14 = Math.trunc((Math.trunc(_arg_4.x + 45) % 360) / 90);\r\n\r\n        if((_local_14 === 1) || (_local_14 === 3))\r\n        {\r\n            _local_13 = _local_11;\r\n            _local_11 = _local_12;\r\n            _local_12 = _local_13;\r\n        }\r\n\r\n        if(_arg_5 && _arg_2)\r\n        {\r\n            const stackable = (k.model.getValue<number>(RoomObjectVariable.FURNITURE_ALWAYS_STACKABLE) === 1);\r\n\r\n            if(_arg_5.validateLocation(_arg_2.x, _arg_2.y, sizeX, sizeY, _local_9, _local_10, _local_11, _local_12, stackable))\r\n            {\r\n                return new Vector3d(_arg_2.x, _arg_2.y, _arg_5.getTileHeight(_arg_2.x, _arg_2.y));\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private validateWallItemLocation(k: IRoomObject, _arg_2: IVector3D, _arg_3: IVector3D, _arg_4: IVector3D, _arg_5: number, _arg_6: number, _arg_7: SelectedRoomObjectData): Vector3d\r\n    {\r\n        if((((((k == null) || (k.model == null)) || (_arg_2 == null)) || (_arg_3 == null)) || (_arg_4 == null)) || (_arg_7 == null)) return null;\r\n\r\n        const _local_8 = k.model.getValue<number>(RoomObjectVariable.FURNITURE_SIZE_X);\r\n        const _local_9 = k.model.getValue<number>(RoomObjectVariable.FURNITURE_SIZE_Z);\r\n        const _local_10 = k.model.getValue<number>(RoomObjectVariable.FURNITURE_CENTER_Z);\r\n\r\n        if((((_arg_5 < (_local_8 / 2)) || (_arg_5 > (_arg_3.length - (_local_8 / 2)))) || (_arg_6 < _local_10)) || (_arg_6 > (_arg_4.length - (_local_9 - _local_10))))\r\n        {\r\n            if((_arg_5 < (_local_8 / 2)) && (_arg_5 <= (_arg_3.length - (_local_8 / 2))))\r\n            {\r\n                _arg_5 = (_local_8 / 2);\r\n            }\r\n            else\r\n            {\r\n                if((_arg_5 >= (_local_8 / 2)) && (_arg_5 > (_arg_3.length - (_local_8 / 2))))\r\n                {\r\n                    _arg_5 = (_arg_3.length - (_local_8 / 2));\r\n                }\r\n            }\r\n\r\n            if((_arg_6 < _local_10) && (_arg_6 <= (_arg_4.length - (_local_9 - _local_10))))\r\n            {\r\n                _arg_6 = _local_10;\r\n            }\r\n            else\r\n            {\r\n                if((_arg_6 >= _local_10) && (_arg_6 > (_arg_4.length - (_local_9 - _local_10))))\r\n                {\r\n                    _arg_6 = (_arg_4.length - (_local_9 - _local_10));\r\n                }\r\n            }\r\n        }\r\n\r\n        if((((_arg_5 < (_local_8 / 2)) || (_arg_5 > (_arg_3.length - (_local_8 / 2)))) || (_arg_6 < _local_10)) || (_arg_6 > (_arg_4.length - (_local_9 - _local_10))))\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let _local_11 = Vector3d.sum(Vector3d.product(_arg_3, (_arg_5 / _arg_3.length)), Vector3d.product(_arg_4, (_arg_6 / _arg_4.length)));\r\n\r\n        _local_11 = Vector3d.sum(_arg_2, _local_11);\r\n\r\n        return _local_11;\r\n    }\r\n\r\n    private changeObjectState(roomId: number, objectId: number, type: string, state: number, isRandom: boolean): void\r\n    {\r\n        const category = this._roomEngine.getRoomObjectCategoryForType(type);\r\n\r\n        this.changeRoomObjectState(roomId, objectId, category, state, isRandom);\r\n    }\r\n\r\n    private useObject(roomId: number, objectId: number, type: string, action: string): void\r\n    {\r\n        if(!this._roomEngine || !this._roomEngine.connection) return;\r\n        switch(action)\r\n        {\r\n            case RoomObjectFurnitureActionEvent.DICE_ACTIVATE:\r\n                this._roomEngine.connection.send(new FurnitureDiceActivateComposer(objectId));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.DICE_OFF:\r\n                this._roomEngine.connection.send(new FurnitureDiceDeactivateComposer(objectId));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.USE_HABBOWHEEL:\r\n                this._roomEngine.connection.send(new FurnitureColorWheelComposer(objectId));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.STICKIE:\r\n                this._roomEngine.connection.send(new GetItemDataComposer(objectId));\r\n                return;\r\n            case RoomObjectFurnitureActionEvent.ENTER_ONEWAYDOOR:\r\n                this._roomEngine.connection.send(new FurnitureOneWayDoorComposer(objectId));\r\n                return;\r\n        }\r\n    }\r\n\r\n    private changeRoomObjectState(roomId: number, objectId: number, category: number, state: number, isRandom: boolean): boolean\r\n    {\r\n        if(!this._roomEngine || !this._roomEngine.connection) return true;\r\n\r\n        if(category === RoomObjectCategory.FLOOR)\r\n        {\r\n            if(!isRandom)\r\n            {\r\n                this._roomEngine.connection.send(new FurnitureMultiStateComposer(objectId, state));\r\n            }\r\n            else\r\n            {\r\n                this._roomEngine.connection.send(new FurnitureRandomStateComposer(objectId, state));\r\n            }\r\n        }\r\n\r\n        else if(category === RoomObjectCategory.WALL)\r\n        {\r\n            this._roomEngine.connection.send(new FurnitureWallMultiStateComposer(objectId, state));\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private sendWalkUpdate(x: number, y: number): void\r\n    {\r\n        if(!this._roomEngine || !this._roomEngine.connection) return;\r\n\r\n        this._roomEngine.connection.send(new RoomUnitWalkComposer(x, y));\r\n    }\r\n\r\n    private handleMouseOverObject(category: number, roomId: number, event: RoomObjectMouseEvent): ObjectTileCursorUpdateMessage\r\n    {\r\n        if(category !== RoomObjectCategory.FLOOR) return null;\r\n\r\n        const roomObject = this._roomEngine.getRoomObject(roomId, event.objectId, RoomObjectCategory.FLOOR);\r\n\r\n        if(!roomObject) return null;\r\n\r\n        const location = this.getActiveSurfaceLocation(roomObject, event);\r\n\r\n        if(!location) return null;\r\n\r\n        const furnitureHeightMap = this._roomEngine.getFurnitureStackingHeightMap(roomId);\r\n\r\n        if(!furnitureHeightMap) return null;\r\n\r\n        const x = location.x;\r\n        const y = location.y;\r\n        const z = location.z;\r\n\r\n        return new ObjectTileCursorUpdateMessage(new Vector3d(x, y, roomObject.getLocation().z), z, true, event.eventId);\r\n    }\r\n\r\n    private handleMoveTargetFurni(k: number, _arg_2: RoomObjectMouseEvent): boolean\r\n    {\r\n        if((_arg_2.objectType === RoomObjectUserType.USER) || (_arg_2.objectType === RoomObjectUserType.PET) || (_arg_2.objectType === RoomObjectUserType.BOT) || (_arg_2.objectType === RoomObjectUserType.RENTABLE_BOT) || (_arg_2.objectType === RoomObjectUserType.MONSTER_PLANT)) return;\r\n\r\n        const _local_3 = this._roomEngine.getRoomObject(k, _arg_2.objectId, RoomObjectCategory.FLOOR);\r\n        const _local_4 = this.getActiveSurfaceLocation(_local_3, _arg_2);\r\n\r\n        if(_local_4)\r\n        {\r\n            this.sendWalkUpdate(_local_4.x, _local_4.y);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private getActiveSurfaceLocation(k: IRoomObject, _arg_2: RoomObjectMouseEvent): Vector3d\r\n    {\r\n        if(!k || !_arg_2) return null;\r\n\r\n        const furniData = this._roomEngine.sessionDataManager.getFloorItemDataByName(k.type);\r\n\r\n        if(!furniData) return null;\r\n\r\n        if(!furniData.canStandOn && !furniData.canSitOn && !furniData.canLayOn) return null;\r\n\r\n        const model = k.model;\r\n\r\n        if(!model) return null;\r\n\r\n        const location = k.getLocation();\r\n        const direction = k.getDirection();\r\n\r\n        let sizeX = model.getValue<number>(RoomObjectVariable.FURNITURE_SIZE_X);\r\n        let sizeY = model.getValue<number>(RoomObjectVariable.FURNITURE_SIZE_Y);\r\n        const sizeZ = model.getValue<number>(RoomObjectVariable.FURNITURE_SIZE_Z);\r\n\r\n        if((direction.x === 90) || (direction.x === 270)) [ sizeX, sizeY ] = [ sizeY, sizeX ];\r\n\r\n        if(sizeX < 1) sizeX = 1;\r\n        if(sizeY < 1) sizeY = 1;\r\n\r\n        const renderingCanvas = this._roomEngine.getActiveRoomInstanceRenderingCanvas();\r\n\r\n        if(!renderingCanvas) return null;\r\n\r\n        const scale = renderingCanvas.geometry.scale;\r\n        const _local_13 = furniData.canSitOn ? 0.5 : 0;\r\n        const _local_14 = ((((scale / 2) + _arg_2.spriteOffsetX) + _arg_2.localX) / (scale / 4));\r\n        const _local_15 = (((_arg_2.spriteOffsetY + _arg_2.localY) + (((sizeZ - _local_13) * scale) / 2)) / (scale / 4));\r\n        const _local_16 = ((_local_14 + (2 * _local_15)) / 4);\r\n        const _local_17 = ((_local_14 - (2 * _local_15)) / 4);\r\n        const _local_18 = Math.floor((location.x + _local_16));\r\n        const _local_19 = Math.floor(((location.y - _local_17) + 1));\r\n\r\n        let _local_20 = false;\r\n\r\n        if((_local_18 < location.x) || (_local_18 >= (location.x + sizeX))) _local_20 = true;\r\n        else if((_local_19 < location.y) || (_local_19 >= (location.y + sizeY))) _local_20 = true;\r\n\r\n        const _local_21 = furniData.canSitOn ? (sizeZ - 0.5) : sizeZ;\r\n\r\n        if(!_local_20) return new Vector3d(_local_18, _local_19, _local_21);\r\n\r\n        return null;\r\n    }\r\n\r\n    private handleMouseOverTile(k: RoomObjectTileMouseEvent, roomId: number): ObjectTileCursorUpdateMessage\r\n    {\r\n        if(this._whereYouClickIsWhereYouGo)\r\n        {\r\n            return new ObjectTileCursorUpdateMessage(new Vector3d(k.tileXAsInt, k.tileYAsInt, k.tileZAsInt), 0, true, k.eventId);\r\n        }\r\n\r\n        const roomObject = this._roomEngine.getRoomObjectCursor(roomId);\r\n\r\n        if(roomObject && roomObject.visualization)\r\n        {\r\n            const _local_4 = k.tileXAsInt;\r\n            const _local_5 = k.tileYAsInt;\r\n            const _local_6 = k.tileZAsInt;\r\n            const _local_7 = this._roomEngine.getRoomInstance(roomId);\r\n\r\n            if(_local_7)\r\n            {\r\n                const _local_8 = this._roomEngine.getRoomTileObjectMap(roomId);\r\n\r\n                if(_local_8)\r\n                {\r\n                    const _local_9 = _local_8.getObjectIntTile(_local_4, _local_5);\r\n                    const _local_10 = this._roomEngine.getFurnitureStackingHeightMap(roomId);\r\n\r\n                    if(_local_10)\r\n                    {\r\n                        if(_local_9 && _local_9.model && (_local_9.model.getValue<number>(RoomObjectVariable.FURNITURE_IS_VARIABLE_HEIGHT) > 0))\r\n                        {\r\n                            const _local_11 = _local_10.getTileHeight(_local_4, _local_5);\r\n                            const _local_12 = this._roomEngine.getLegacyWallGeometry(roomId).getHeight(_local_4, _local_5);\r\n\r\n                            return new ObjectTileCursorUpdateMessage(new Vector3d(_local_4, _local_5, _local_6), (_local_11 - _local_12), true, k.eventId);\r\n                        }\r\n\r\n                        return new ObjectTileCursorUpdateMessage(new Vector3d(_local_4, _local_5, _local_6), 0, true, k.eventId);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private placeObject(roomId: number, isTileEvent: boolean, isWallEvent: boolean): void\r\n    {\r\n        const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(!selectedData) return;\r\n\r\n        let roomObject: IRoomObjectController = null;\r\n        let objectId = selectedData.id;\r\n        const category = selectedData.category;\r\n\r\n        let x = 0;\r\n        let y = 0;\r\n        let z = 0;\r\n        let direction = 0;\r\n        let wallLocation = '';\r\n\r\n        if(this._roomEngine && this._roomEngine.connection)\r\n        {\r\n            roomObject = this._roomEngine.getRoomObject(roomId, objectId, category);\r\n\r\n            if(roomObject)\r\n            {\r\n                const location = roomObject.getLocation();\r\n\r\n                direction = roomObject.getDirection().x;\r\n\r\n                if((category === RoomObjectCategory.FLOOR) || (category === RoomObjectCategory.UNIT))\r\n                {\r\n                    x = location.x;\r\n                    y = location.y;\r\n                    z = location.z;\r\n                }\r\n\r\n                else if(category === RoomObjectCategory.WALL)\r\n                {\r\n                    x = location.x;\r\n                    y = location.y;\r\n                    z = location.z;\r\n\r\n                    const wallGeometry = this._roomEngine.getLegacyWallGeometry(roomId);\r\n\r\n                    if(wallGeometry) wallLocation = wallGeometry.getOldLocationString(location, direction);\r\n                }\r\n\r\n                direction = ((((direction / 45) % 8) + 8) % 8);\r\n\r\n                if((objectId < 0) && (category === RoomObjectCategory.UNIT)) objectId = (objectId * -1);\r\n\r\n                if(this._objectPlacementSource !== RoomObjectPlacementSource.CATALOG)\r\n                {\r\n                    if(category === RoomObjectCategory.UNIT)\r\n                    {\r\n                        if(selectedData.typeId === RoomObjectType.PET)\r\n                        {\r\n                            this._roomEngine.connection.send(new PetPlaceComposer(objectId, Math.trunc(x), Math.trunc(y)));\r\n                        }\r\n\r\n                        else if(selectedData.typeId === RoomObjectType.RENTABLE_BOT)\r\n                        {\r\n                            this._roomEngine.connection.send(new BotPlaceComposer(objectId, Math.trunc(x), Math.trunc(y)));\r\n                        }\r\n                    }\r\n\r\n                    else if(roomObject.model.getValue<string>(RoomObjectVariable.FURNITURE_IS_STICKIE) !== undefined)\r\n                    {\r\n                        this._roomEngine.connection.send(new FurniturePostItPlaceComposer(objectId, wallLocation));\r\n                    }\r\n\r\n                    else\r\n                    {\r\n                        this._roomEngine.connection.send(new FurniturePlaceComposer(objectId, category, wallLocation, Math.trunc(x), Math.trunc(y), direction));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._roomEngine.setPlacedRoomObjectData(roomId, new SelectedRoomObjectData(selectedData.id, selectedData.category, null, selectedData.dir, null));\r\n\r\n        this.resetSelectedObjectData(roomId);\r\n\r\n        if(this._roomEngine && this._roomEngine.events)\r\n        {\r\n            const placedInRoom = (roomObject && (roomObject.id === selectedData.id));\r\n\r\n            this._roomEngine.events.dispatchEvent(new RoomEngineObjectPlacedEvent(RoomEngineObjectEvent.PLACED, roomId, objectId, category, wallLocation, x, y, z, direction, placedInRoom, isTileEvent, isWallEvent, selectedData.instanceData));\r\n        }\r\n    }\r\n\r\n    public modifyRoomObject(roomId: number, objectId: number, category: number, operation: string): boolean\r\n    {\r\n        if(!this._roomEngine) return false;\r\n\r\n        const roomObject = this._roomEngine.getRoomObject(roomId, objectId, category);\r\n\r\n        if(!roomObject) return false;\r\n\r\n        let _local_9 = true;\r\n\r\n        switch(operation)\r\n        {\r\n            case RoomObjectOperationType.OBJECT_ROTATE_POSITIVE:\r\n            case RoomObjectOperationType.OBJECT_ROTATE_NEGATIVE:\r\n                if(this._roomEngine.connection)\r\n                {\r\n                    let direction = 0;\r\n\r\n                    if(operation == RoomObjectOperationType.OBJECT_ROTATE_NEGATIVE)\r\n                    {\r\n                        direction = this.getValidRoomObjectDirection(roomObject, false);\r\n                    }\r\n                    else\r\n                    {\r\n                        direction = this.getValidRoomObjectDirection(roomObject, true);\r\n                    }\r\n\r\n                    const x = roomObject.getLocation().x;\r\n                    const y = roomObject.getLocation().y;\r\n\r\n                    if(this.isValidLocation(roomObject, new Vector3d(direction), this._roomEngine.getFurnitureStackingHeightMap(roomId)))\r\n                    {\r\n                        direction = Math.trunc((direction / 45));\r\n\r\n                        if(roomObject.type === RoomObjectUserType.MONSTER_PLANT)\r\n                        {\r\n                            const roomSession = this._roomEngine.roomSessionManager.getSession(roomId);\r\n\r\n                            if(roomSession)\r\n                            {\r\n                                const userData = roomSession.userDataManager.getUserDataByIndex(objectId);\r\n\r\n                                if(userData)\r\n                                {\r\n                                    this._roomEngine.connection.send(new PetMoveComposer(userData.webID, Math.trunc(x), Math.trunc(y), direction));\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            this._roomEngine.connection.send(new FurnitureFloorUpdateComposer(objectId, x, y, direction));\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case RoomObjectOperationType.OBJECT_EJECT:\r\n            case RoomObjectOperationType.OBJECT_PICKUP:\r\n                if(this._roomEngine.connection) this._roomEngine.connection.send(new FurniturePickupComposer(category, objectId));\r\n                break;\r\n            case RoomObjectOperationType.OBJECT_PICKUP_PET:\r\n                if(this._roomEngine.connection)\r\n                {\r\n                    const session = this._roomEngine.roomSessionManager.getSession(roomId);\r\n\r\n                    if(session)\r\n                    {\r\n                        const userData = session.userDataManager.getUserDataByIndex(objectId);\r\n\r\n                        session.pickupPet(userData.webID);\r\n                    }\r\n                }\r\n                break;\r\n            case RoomObjectOperationType.OBJECT_PICKUP_BOT:\r\n                if(this._roomEngine.connection)\r\n                {\r\n                    const session = this._roomEngine.roomSessionManager.getSession(roomId);\r\n\r\n                    if(session)\r\n                    {\r\n                        const userData = session.userDataManager.getUserDataByIndex(objectId);\r\n\r\n                        session.pickupBot(userData.webID);\r\n                    }\r\n                }\r\n                break;\r\n            case RoomObjectOperationType.OBJECT_MOVE:\r\n                _local_9 = false;\r\n                this.setFurnitureAlphaMultiplier(roomObject, 0.5);\r\n                this.setSelectedRoomObjectData(roomId, roomObject.id, category, roomObject.getLocation(), roomObject.getDirection(), operation);\r\n                this._roomEngine.setObjectMoverIconSprite(roomObject.id, category, true);\r\n                this._roomEngine.setObjectMoverIconSpriteVisible(false);\r\n                break;\r\n            case RoomObjectOperationType.OBJECT_MOVE_TO: {\r\n                const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n                this.updateSelectedObjectData(roomId, selectedData.id, selectedData.category, selectedData.loc, selectedData.dir, RoomObjectOperationType.OBJECT_MOVE_TO, selectedData.typeId, selectedData.instanceData, selectedData.stuffData, selectedData.state, selectedData.animFrame, selectedData.posture);\r\n                this.setFurnitureAlphaMultiplier(roomObject, 1);\r\n                this._roomEngine.removeObjectMoverIconSprite();\r\n\r\n                if(this._roomEngine.connection)\r\n                {\r\n                    if(category === RoomObjectCategory.FLOOR)\r\n                    {\r\n                        const angle = ((roomObject.getDirection().x) % 360);\r\n                        const location = roomObject.getLocation();\r\n                        const direction = (angle / 45);\r\n\r\n                        this._roomEngine.connection.send(new FurnitureFloorUpdateComposer(objectId, location.x, location.y, direction));\r\n                    }\r\n\r\n                    else if(category === RoomObjectCategory.WALL)\r\n                    {\r\n                        const angle = ((roomObject.getDirection().x) % 360);\r\n                        const wallGeometry = this._roomEngine.getLegacyWallGeometry(roomId);\r\n\r\n                        if(wallGeometry)\r\n                        {\r\n                            const location = wallGeometry.getOldLocationString(roomObject.getLocation(), angle);\r\n\r\n                            if(location) this._roomEngine.connection.send(new FurnitureWallUpdateComposer(objectId, location));\r\n                        }\r\n                    }\r\n\r\n                    else if(category === RoomObjectCategory.UNIT)\r\n                    {\r\n                        const angle = ((roomObject.getDirection().x) % 360);\r\n                        const location = roomObject.getLocation();\r\n                        const direction = (angle / 45);\r\n                        const race = parseInt(roomObject.model.getValue<string>(RoomObjectVariable.RACE));\r\n                        const roomSession = this._roomEngine.roomSessionManager.getSession(roomId);\r\n\r\n                        if(roomSession)\r\n                        {\r\n                            const userData = roomSession.userDataManager.getUserDataByIndex(objectId);\r\n\r\n                            if(userData) this._roomEngine.connection.send(new PetMoveComposer(userData.webID, location.x, location.y, direction));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(_local_9) this.resetSelectedObjectData(roomId);\r\n\r\n        return true;\r\n    }\r\n\r\n    public modifyRoomObjectDataWithMap(roomId: number, objectId: number, category: number, operation: string, data: Map<string, string>): boolean\r\n    {\r\n        if(!this._roomEngine) return false;\r\n\r\n        const roomObject = this._roomEngine.getRoomObject(roomId, objectId, category);\r\n\r\n        if(!roomObject) return false;\r\n\r\n        switch(operation)\r\n        {\r\n            case RoomObjectOperationType.OBJECT_SAVE_STUFF_DATA:\r\n                if(this._roomEngine.connection)\r\n                {\r\n                    this._roomEngine.connection.send(new SetObjectDataMessageComposer(objectId, data));\r\n                }\r\n                break;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public modifyWallItemData(roomId: number, objectId: number, colorHex: string, text: string): boolean\r\n    {\r\n        if(!this._roomEngine || !this._roomEngine.connection) return false;\r\n\r\n        this._roomEngine.connection.send(new SetItemDataMessageComposer(objectId, colorHex, text));\r\n\r\n        return true;\r\n    }\r\n\r\n    public deleteWallItem(roomId: number, itemId: number): boolean\r\n    {\r\n        if(!this._roomEngine || !this._roomEngine.connection) return false;\r\n\r\n        this._roomEngine.connection.send(new RemoveWallItemComposer(itemId));\r\n\r\n        return true;\r\n    }\r\n\r\n    public getValidRoomObjectDirection(k: IRoomObjectController, _arg_2: boolean): number\r\n    {\r\n        if(!k || !k.model) return 0;\r\n\r\n        let _local_6 = 0;\r\n        let _local_7 = 0;\r\n        let allowedDirections: number[] = [];\r\n\r\n        if(k.type === RoomObjectUserType.MONSTER_PLANT)\r\n        {\r\n            allowedDirections = k.model.getValue<number[]>(RoomObjectVariable.PET_ALLOWED_DIRECTIONS);\r\n        }\r\n        else\r\n        {\r\n            allowedDirections = k.model.getValue<number[]>(RoomObjectVariable.FURNITURE_ALLOWED_DIRECTIONS);\r\n        }\r\n\r\n        let direction = k.getDirection().x;\r\n\r\n        if(allowedDirections && allowedDirections.length)\r\n        {\r\n            _local_6 = allowedDirections.indexOf(direction);\r\n\r\n            if(_local_6 < 0)\r\n            {\r\n                _local_6 = 0;\r\n                _local_7 = 0;\r\n\r\n                while(_local_7 < allowedDirections.length)\r\n                {\r\n                    if(direction <= allowedDirections[_local_7]) break;\r\n\r\n                    _local_6++;\r\n                    _local_7++;\r\n                }\r\n\r\n                _local_6 = (_local_6 % allowedDirections.length);\r\n            }\r\n\r\n            if(_arg_2) _local_6 = ((_local_6 + 1) % allowedDirections.length);\r\n            else _local_6 = (((_local_6 - 1) + allowedDirections.length) % allowedDirections.length);\r\n\r\n            direction = allowedDirections[_local_6];\r\n        }\r\n\r\n        return direction;\r\n    }\r\n\r\n    private isValidLocation(object: IRoomObject, goalDirection: IVector3D, stackingHeightMap: FurnitureStackingHeightMap): boolean\r\n    {\r\n        if(!object || !object.model || !goalDirection) return false;\r\n\r\n        const direction = object.getDirection();\r\n        const location = object.getLocation();\r\n\r\n        if(!direction || !location) return false;\r\n\r\n        if((direction.x % 180) === (goalDirection.x % 180)) return true;\r\n\r\n        let sizeX = object.model.getValue<number>(RoomObjectVariable.FURNITURE_SIZE_X);\r\n        let sizeY = object.model.getValue<number>(RoomObjectVariable.FURNITURE_SIZE_Y);\r\n\r\n        if(sizeX < 1) sizeX = 1;\r\n\r\n        if(sizeY < 1) sizeY = 1;\r\n\r\n        let _local_8 = sizeX;\r\n        let _local_9 = sizeY;\r\n\r\n        let _local_11 = (Math.trunc((Math.trunc((goalDirection.x + 45)) % 360) / 90));\r\n\r\n        if((_local_11 === 1) || (_local_11 === 3)) [ sizeX, sizeY ] = [ sizeY, sizeX ];\r\n\r\n        _local_11 = (Math.trunc((Math.trunc((direction.x + 45)) % 360) / 90));\r\n\r\n        if(((_local_11 === 1) || (_local_11 === 3))) [ _local_8, _local_9 ] = [ _local_9, _local_8 ];\r\n\r\n        if(stackingHeightMap && location)\r\n        {\r\n            const alwaysStackable = (object.model.getValue<number>(RoomObjectVariable.FURNITURE_ALWAYS_STACKABLE) === 1);\r\n\r\n            if(stackingHeightMap.validateLocation(location.x, location.y, sizeX, sizeY, location.x, location.y, _local_8, _local_9, alwaysStackable, location.z)) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private placeObjectOnUser(roomId: number, objectId: number, category: number): void\r\n    {\r\n        const _local_4 = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(!_local_4) return;\r\n\r\n        const _local_5 = (this._roomEngine.getRoomObject(roomId, objectId, category) as IRoomObjectController);\r\n\r\n        if(!_local_5) return;\r\n\r\n        if(!this._roomEngine || !this._roomEngine.events) return;\r\n\r\n        this._roomEngine.events.dispatchEvent(new RoomEngineObjectPlacedOnUserEvent(RoomEngineObjectEvent.PLACED_ON_USER, roomId, objectId, category, _local_4.id, _local_4.category));\r\n    }\r\n\r\n    public setSelectedObject(roomId: number, objectId: number, category: number): void\r\n    {\r\n        if(!this._roomEngine) return;\r\n\r\n        const eventDispatcher = this._roomEngine.events;\r\n\r\n        if(!eventDispatcher) return;\r\n\r\n        switch(category)\r\n        {\r\n            case RoomObjectCategory.UNIT:\r\n            case RoomObjectCategory.FLOOR:\r\n            case RoomObjectCategory.WALL:\r\n                if(category === RoomObjectCategory.UNIT)\r\n                {\r\n                    this.deselectObject(roomId);\r\n                    this.setSelectedAvatar(roomId, objectId, true);\r\n                }\r\n                else\r\n                {\r\n                    this.setSelectedAvatar(roomId, 0, false);\r\n\r\n                    if(objectId !== this._selectedObjectId)\r\n                    {\r\n                        this.deselectObject(roomId);\r\n\r\n                        const roomObject = this._roomEngine.getRoomObject(roomId, objectId, category);\r\n\r\n                        if(roomObject && roomObject.logic)\r\n                        {\r\n                            roomObject.logic.processUpdateMessage(new ObjectSelectedMessage(true));\r\n\r\n                            this._selectedObjectId = objectId;\r\n                            this._selectedObjectCategory = category;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                eventDispatcher.dispatchEvent(new RoomEngineObjectEvent(RoomEngineObjectEvent.SELECTED, roomId, objectId, category));\r\n\r\n                return;\r\n        }\r\n    }\r\n\r\n    private deselectObject(roomId: number): void\r\n    {\r\n        if(this._selectedObjectId === -1) return;\r\n\r\n        const object = this._roomEngine.getRoomObject(roomId, this._selectedObjectId, this._selectedObjectCategory);\r\n\r\n        if(object && object.logic)\r\n        {\r\n            object.logic.processUpdateMessage(new ObjectSelectedMessage(false));\r\n\r\n            this._selectedObjectId = -1;\r\n            this._selectedObjectCategory = RoomObjectCategory.MINIMUM;\r\n        }\r\n    }\r\n\r\n    public setSelectedAvatar(k: number, _arg_2: number, _arg_3: boolean): void\r\n    {\r\n        if(!this._roomEngine) return;\r\n\r\n        const _local_4 = RoomObjectCategory.UNIT;\r\n        const _local_5 = this._roomEngine.getRoomObject(k, this._selectedAvatarId, _local_4);\r\n\r\n        if(_local_5 && _local_5.logic)\r\n        {\r\n            _local_5.logic.processUpdateMessage(new ObjectAvatarSelectedMessage(false));\r\n\r\n            this._selectedAvatarId = -1;\r\n        }\r\n\r\n        let _local_6 = false;\r\n\r\n        if(_arg_3)\r\n        {\r\n            const _local_5 = this._roomEngine.getRoomObject(k, _arg_2, _local_4);\r\n\r\n            if(_local_5 && _local_5.logic)\r\n            {\r\n                _local_5.logic.processUpdateMessage(new ObjectAvatarSelectedMessage(true));\r\n\r\n                _local_6 = true;\r\n\r\n                this._selectedAvatarId = _arg_2;\r\n\r\n                const location = _local_5.getLocation();\r\n\r\n                if(location) this._roomEngine.connection.send(new RoomUnitLookComposer(~~(location.x), ~~(location.y)));\r\n            }\r\n        }\r\n\r\n        const selectionArrow = this._roomEngine.getRoomObjectSelectionArrow(k);\r\n\r\n        if(selectionArrow && selectionArrow.logic)\r\n        {\r\n            if(_local_6 && !this._roomEngine.isPlayingGame()) selectionArrow.logic.processUpdateMessage(new ObjectVisibilityUpdateMessage(ObjectVisibilityUpdateMessage.ENABLED));\r\n            else selectionArrow.logic.processUpdateMessage(new ObjectVisibilityUpdateMessage(ObjectVisibilityUpdateMessage.DISABLED));\r\n        }\r\n    }\r\n\r\n    private resetSelectedObjectData(roomId: number): void\r\n    {\r\n        if(!this._roomEngine) return;\r\n\r\n        this._roomEngine.removeObjectMoverIconSprite();\r\n\r\n        const selectedData = this.getSelectedRoomObjectData(roomId);\r\n\r\n        if(selectedData)\r\n        {\r\n            if((selectedData.operation === RoomObjectOperationType.OBJECT_MOVE) || (selectedData.operation === RoomObjectOperationType.OBJECT_MOVE_TO))\r\n            {\r\n                const roomObject = this._roomEngine.getRoomObject(roomId, selectedData.id, selectedData.category);\r\n\r\n                if(roomObject && (selectedData.operation !== RoomObjectOperationType.OBJECT_MOVE_TO))\r\n                {\r\n                    roomObject.setLocation(selectedData.loc);\r\n                    roomObject.setDirection(selectedData.dir);\r\n                }\r\n\r\n                this.setFurnitureAlphaMultiplier(roomObject, 1);\r\n\r\n                if(selectedData.category === RoomObjectCategory.WALL)\r\n                {\r\n                    this._roomEngine.updateRoomObjectMask(roomId, selectedData.id, true);\r\n                }\r\n\r\n                this.updateSelectedObjectData(roomId, selectedData.id, selectedData.category, selectedData.loc, selectedData.dir, RoomObjectOperationType.OBJECT_MOVE, selectedData.typeId, selectedData.instanceData, selectedData.stuffData, selectedData.state, selectedData.animFrame, selectedData.posture);\r\n            }\r\n\r\n            else if((selectedData.operation === RoomObjectOperationType.OBJECT_PLACE))\r\n            {\r\n                const objectId = selectedData.id;\r\n                const category = selectedData.category;\r\n\r\n                switch(category)\r\n                {\r\n                    case RoomObjectCategory.FLOOR:\r\n                        this._roomEngine.removeRoomObjectFloor(roomId, objectId);\r\n                        break;\r\n                    case RoomObjectCategory.WALL:\r\n                        this._roomEngine.removeRoomObjectWall(roomId, objectId);\r\n                        break;\r\n                    case RoomObjectCategory.UNIT:\r\n                        this._roomEngine.removeRoomObjectUser(roomId, objectId);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            this._roomEngine.setSelectedRoomObjectData(roomId, null);\r\n        }\r\n    }\r\n\r\n    private getSelectedRoomObjectData(roomId: number): SelectedRoomObjectData\r\n    {\r\n        if(!this._roomEngine) return null;\r\n\r\n        return this._roomEngine.getSelectedRoomObjectData(roomId);\r\n    }\r\n\r\n    private setFurnitureAlphaMultiplier(object: IRoomObjectController, multiplier: number): void\r\n    {\r\n        if(!object || !object.model) return;\r\n\r\n        object.model.setValue(RoomObjectVariable.FURNITURE_ALPHA_MULTIPLIER, multiplier);\r\n    }\r\n\r\n    private decorateModeMove(event: RoomObjectMouseEvent): boolean\r\n    {\r\n        return (this._roomEngine.isDecorating) && (!(event.ctrlKey || event.shiftKey));\r\n    }\r\n\r\n    public cancelRoomObjectPlacement(roomId: number): boolean\r\n    {\r\n        this.resetSelectedObjectData(roomId);\r\n\r\n        return true;\r\n    }\r\n\r\n    private setSelectedRoomObjectData(roomId: number, id: number, category: number, location: IVector3D, direction: IVector3D, operation: string, typeId: number = 0, instanceData: string = null, stuffData: IObjectData =null, state: number = -1, frameNumber: number = -1, posture: string = null): void\r\n    {\r\n        this.resetSelectedObjectData(roomId);\r\n\r\n        if(!this._roomEngine) return;\r\n\r\n        const selectedData = new SelectedRoomObjectData(id, category, operation, location, direction, typeId, instanceData, stuffData, state, frameNumber, posture);\r\n\r\n        this._roomEngine.setSelectedRoomObjectData(roomId, selectedData);\r\n    }\r\n\r\n    private updateSelectedObjectData(roomId: number, id: number, category: number, location: IVector3D, direction: IVector3D, operation: string, typeId: number = 0, instanceData: string = null, stuffData: IObjectData = null, state: number = -1, frameNumber: number = -1, posture: string = null): void\r\n    {\r\n        if(!this._roomEngine) return null;\r\n\r\n        const selectedData = new SelectedRoomObjectData(id, category, operation, location, direction, typeId, instanceData, stuffData, state, frameNumber, posture);\r\n\r\n        this._roomEngine.setSelectedRoomObjectData(roomId, selectedData);\r\n    }\r\n\r\n    private handleUserPlace(roomObject: IRoomObjectController, x: number, y: number, wallGeometry: LegacyWallGeometry): boolean\r\n    {\r\n        if(!wallGeometry.isRoomTile(x, y)) return false;\r\n\r\n        roomObject.setLocation(new Vector3d(x, y, wallGeometry.getHeight(x, y)));\r\n\r\n        return true;\r\n    }\r\n\r\n    public get engine(): IRoomEngineServices\r\n    {\r\n        return this._roomEngine;\r\n    }\r\n\r\n    public get selectedAvatarId(): number\r\n    {\r\n        return this._selectedAvatarId;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}