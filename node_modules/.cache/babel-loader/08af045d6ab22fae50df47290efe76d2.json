{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useMemo, useState } from 'react';\nexport const useSharedVisibility = () => {\n  _s();\n\n  const [activeIds, setActiveIds] = useState([]);\n  const isVisible = useMemo(() => !!activeIds.length, [activeIds]);\n  const activate = useCallback(() => {\n    let id = -1;\n    setActiveIds(prevValue => {\n      const newValue = [...prevValue];\n      id = newValue.length ? newValue[newValue.length - 1] + 1 : 0;\n      newValue.push(id);\n      return newValue;\n    });\n    return id;\n  }, []);\n  const deactivate = useCallback(id => {\n    setActiveIds(prevValue => {\n      const newValue = [...prevValue];\n      const index = newValue.indexOf(id);\n      if (index === -1) return prevValue;\n      newValue.splice(index, 1);\n      return newValue;\n    });\n  }, []);\n  return {\n    isVisible,\n    activate,\n    deactivate\n  };\n};\n\n_s(useSharedVisibility, \"YRedgDRRoCxyXV0I6SShLUEgrz8=\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/hooks/useSharedVisibility.ts"],"names":["useCallback","useMemo","useState","useSharedVisibility","activeIds","setActiveIds","isVisible","length","activate","id","prevValue","newValue","push","deactivate","index","indexOf","splice"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MACnC;AAAA;;AACI,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BH,QAAQ,CAAW,EAAX,CAA5C;AAEA,QAAMI,SAAS,GAAGL,OAAO,CAAC,MAAM,CAAC,CAACG,SAAS,CAACG,MAAnB,EAA2B,CAAEH,SAAF,CAA3B,CAAzB;AAEA,QAAMI,QAAQ,GAAGR,WAAW,CAAC,MAC7B;AACI,QAAIS,EAAE,GAAG,CAAC,CAAV;AAEAJ,IAAAA,YAAY,CAACK,SAAS,IACtB;AACI,YAAMC,QAAQ,GAAG,CAAE,GAAGD,SAAL,CAAjB;AAEAD,MAAAA,EAAE,GAAGE,QAAQ,CAACJ,MAAT,GAAmBI,QAAQ,CAAEA,QAAQ,CAACJ,MAAT,GAAkB,CAApB,CAAR,GAAkC,CAArD,GAA0D,CAA/D;AAEAI,MAAAA,QAAQ,CAACC,IAAT,CAAcH,EAAd;AAEA,aAAOE,QAAP;AACH,KATW,CAAZ;AAWA,WAAOF,EAAP;AACH,GAhB2B,EAgBzB,EAhByB,CAA5B;AAkBA,QAAMI,UAAU,GAAGb,WAAW,CAAES,EAAD,IAC/B;AACIJ,IAAAA,YAAY,CAACK,SAAS,IACtB;AACI,YAAMC,QAAQ,GAAG,CAAE,GAAGD,SAAL,CAAjB;AAEA,YAAMI,KAAK,GAAGH,QAAQ,CAACI,OAAT,CAAiBN,EAAjB,CAAd;AAEA,UAAGK,KAAK,KAAK,CAAC,CAAd,EAAiB,OAAOJ,SAAP;AAEjBC,MAAAA,QAAQ,CAACK,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AAEA,aAAOH,QAAP;AACH,KAXW,CAAZ;AAYH,GAd6B,EAc3B,EAd2B,CAA9B;AAgBA,SAAO;AAAEL,IAAAA,SAAF;AAAaE,IAAAA,QAAb;AAAuBK,IAAAA;AAAvB,GAAP;AACH,CAzCM;;GAAMV,mB","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nexport const useSharedVisibility = () =>\n{\n    const [ activeIds, setActiveIds ] = useState<number[]>([]);\n\n    const isVisible = useMemo(() => !!activeIds.length, [ activeIds ]);\n\n    const activate = useCallback(() =>\n    {\n        let id = -1;\n\n        setActiveIds(prevValue =>\n        {\n            const newValue = [ ...prevValue ];\n\n            id = newValue.length ? (newValue[(newValue.length - 1)] + 1) : 0;\n\n            newValue.push(id);\n\n            return newValue;\n        });\n\n        return id;\n    }, []);\n\n    const deactivate = useCallback((id: number) =>\n    {\n        setActiveIds(prevValue =>\n        {\n            const newValue = [ ...prevValue ];\n\n            const index = newValue.indexOf(id);\n\n            if(index === -1) return prevValue;\n\n            newValue.splice(index, 1);\n\n            return newValue;\n        });\n    }, []);\n\n    return { isVisible, activate, deactivate };\n}\n"]},"metadata":{},"sourceType":"module"}