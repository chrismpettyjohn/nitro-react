{"ast":null,"code":"export class ChatReviewSessionResultsMessageParser {\n  constructor() {\n    this._winningVoteCode = void 0;\n    this._ownVoteCode = void 0;\n    this._finalStatus = void 0;\n  }\n\n  flush() {\n    this._winningVoteCode = -1;\n    this._ownVoteCode = -1;\n    this._finalStatus = null;\n    return true;\n  }\n\n  parse(wrapper) {\n    this._finalStatus = [];\n    this._winningVoteCode = wrapper.readInt();\n    this._ownVoteCode = wrapper.readInt();\n    const count = wrapper.readInt();\n\n    for (let i = 0; i < count; i++) {\n      this._finalStatus.push(wrapper.readInt());\n    }\n\n    return true;\n  }\n\n  get winningVoteCode() {\n    return this._winningVoteCode;\n  }\n\n  get ownVoteCode() {\n    return this._ownVoteCode;\n  }\n\n  get finalStatus() {\n    return this._finalStatus;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/help/ChatReviewSessionResultsMessageParser.ts"],"names":["ChatReviewSessionResultsMessageParser","_winningVoteCode","_ownVoteCode","_finalStatus","flush","parse","wrapper","readInt","count","i","push","winningVoteCode","ownVoteCode","finalStatus"],"mappings":"AAGA,OAAO,MAAMA,qCAAN,CACP;AAAA;AAAA,SACYC,gBADZ;AAAA,SAEYC,YAFZ;AAAA,SAGYC,YAHZ;AAAA;;AAKIC,EAAAA,KAAK,GACL;AACI,SAAKH,gBAAL,GAAwB,CAAC,CAAzB;AACA,SAAKC,YAAL,GAAoB,CAAC,CAArB;AACA,SAAKC,YAAL,GAAoB,IAApB;AACA,WAAO,IAAP;AACH;;AAEDE,EAAAA,KAAK,CAACC,OAAD,EACL;AACI,SAAKH,YAAL,GAAoB,EAApB;AACA,SAAKF,gBAAL,GAAwBK,OAAO,CAACC,OAAR,EAAxB;AACA,SAAKL,YAAL,GAAoBI,OAAO,CAACC,OAAR,EAApB;AACA,UAAMC,KAAK,GAAGF,OAAO,CAACC,OAAR,EAAd;;AAEA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAnB,EAA0BC,CAAC,EAA3B,EACA;AACI,WAAKN,YAAL,CAAkBO,IAAlB,CAAuBJ,OAAO,CAACC,OAAR,EAAvB;AACH;;AAED,WAAO,IAAP;AACH;;AAEyB,MAAfI,eAAe,GAC1B;AACI,WAAO,KAAKV,gBAAZ;AACH;;AAEqB,MAAXW,WAAW,GACtB;AACI,WAAO,KAAKV,YAAZ;AACH;;AAEqB,MAAXW,WAAW,GACtB;AACI,WAAO,KAAKV,YAAZ;AACH;;AAzCL","sourcesContent":["import { IMessageDataWrapper } from '../../../../../core';\r\nimport { IMessageParser } from '../../../../../core/communication/messages/IMessageParser';\r\n\r\nexport class ChatReviewSessionResultsMessageParser implements IMessageParser\r\n{\r\n    private _winningVoteCode: number;\r\n    private _ownVoteCode: number;\r\n    private _finalStatus: number[];\r\n\r\n    flush(): boolean\r\n    {\r\n        this._winningVoteCode = -1;\r\n        this._ownVoteCode = -1;\r\n        this._finalStatus = null;\r\n        return true;\r\n    }\r\n\r\n    parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        this._finalStatus = [];\r\n        this._winningVoteCode = wrapper.readInt();\r\n        this._ownVoteCode = wrapper.readInt();\r\n        const count = wrapper.readInt();\r\n\r\n        for(let i = 0; i < count; i++)\r\n        {\r\n            this._finalStatus.push(wrapper.readInt());\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get winningVoteCode(): number\r\n    {\r\n        return this._winningVoteCode;\r\n    }\r\n\r\n    public get ownVoteCode(): number\r\n    {\r\n        return this._ownVoteCode;\r\n    }\r\n\r\n    public get finalStatus(): number[]\r\n    {\r\n        return this._finalStatus;\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}