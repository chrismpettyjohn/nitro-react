{"ast":null,"code":"import { Disposable } from '../../../../../core/common/disposable/Disposable';\nimport { AvatarScaleType } from '../../../../avatar/enum/AvatarScaleType';\nexport class AvatarVisualizationData extends Disposable {\n  constructor() {\n    super();\n    this._avatarRenderer = void 0;\n  }\n\n  initialize(asset) {\n    return true;\n  }\n\n  onDispose() {\n    this._avatarRenderer = null;\n  }\n\n  createAvatarImage(figure, size) {\n    let gender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let avatarListener = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let effectListener = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let avatarImage = null;\n    if (size > 48) avatarImage = this._avatarRenderer.createAvatarImage(figure, AvatarScaleType.LARGE, gender, avatarListener, effectListener);else avatarImage = this._avatarRenderer.createAvatarImage(figure, AvatarScaleType.SMALL, gender, avatarListener, effectListener);\n    return avatarImage;\n  }\n\n  getAvatarRendererAsset(name) {\n    if (!this._avatarRenderer) return null;\n    return this._avatarRenderer.assets.getTexture(name);\n  }\n\n  get avatarManager() {\n    return this._avatarRenderer;\n  }\n\n  set avatarManager(renderer) {\n    this._avatarRenderer = renderer;\n  }\n\n  get layerCount() {\n    return 0;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/avatar/AvatarVisualizationData.ts"],"names":["Disposable","AvatarScaleType","AvatarVisualizationData","constructor","_avatarRenderer","initialize","asset","onDispose","createAvatarImage","figure","size","gender","avatarListener","effectListener","avatarImage","LARGE","SMALL","getAvatarRendererAsset","name","assets","getTexture","avatarManager","renderer","layerCount"],"mappings":"AAEA,SAASA,UAAT,QAA2B,kDAA3B;AAEA,SAASC,eAAT,QAAgC,yCAAhC;AAMA,OAAO,MAAMC,uBAAN,SAAsCF,UAAtC,CACP;AAGIG,EAAAA,WAAW,GACX;AACI;AADJ,SAHQC,eAGR;AAEC;;AAEMC,EAAAA,UAAU,CAACC,KAAD,EACjB;AACI,WAAO,IAAP;AACH;;AAEMC,EAAAA,SAAS,GAChB;AACI,SAAKH,eAAL,GAAuB,IAAvB;AACH;;AAEMI,EAAAA,iBAAiB,CAACC,MAAD,EAAiBC,IAAjB,EACxB;AAAA,QADuDC,MACvD,uEADwE,IACxE;AAAA,QAD8EC,cAC9E,uEADqH,IACrH;AAAA,QAD2HC,cAC3H,uEADmK,IACnK;AACI,QAAIC,WAAyB,GAAG,IAAhC;AAEA,QAAGJ,IAAI,GAAG,EAAV,EAAcI,WAAW,GAAG,KAAKV,eAAL,CAAqBI,iBAArB,CAAuCC,MAAvC,EAA+CR,eAAe,CAACc,KAA/D,EAAsEJ,MAAtE,EAA8EC,cAA9E,EAA8FC,cAA9F,CAAd,CAAd,KACKC,WAAW,GAAG,KAAKV,eAAL,CAAqBI,iBAArB,CAAuCC,MAAvC,EAA+CR,eAAe,CAACe,KAA/D,EAAsEL,MAAtE,EAA8EC,cAA9E,EAA8FC,cAA9F,CAAd;AAEL,WAAOC,WAAP;AACH;;AAEMG,EAAAA,sBAAsB,CAACC,IAAD,EAC7B;AACI,QAAG,CAAC,KAAKd,eAAT,EAA0B,OAAO,IAAP;AAE1B,WAAO,KAAKA,eAAL,CAAqBe,MAArB,CAA4BC,UAA5B,CAAuCF,IAAvC,CAAP;AACH;;AAEuB,MAAbG,aAAa,GACxB;AACI,WAAO,KAAKjB,eAAZ;AACH;;AAEuB,MAAbiB,aAAa,CAACC,QAAD,EACxB;AACI,SAAKlB,eAAL,GAAuBkB,QAAvB;AACH;;AAEoB,MAAVC,UAAU,GACrB;AACI,WAAO,CAAP;AACH;;AAhDL","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { IAssetData } from '../../../../../core/asset/interfaces';\r\nimport { Disposable } from '../../../../../core/common/disposable/Disposable';\r\nimport { IObjectVisualizationData } from '../../../../../room/object/visualization/IRoomObjectVisualizationData';\r\nimport { AvatarScaleType } from '../../../../avatar/enum/AvatarScaleType';\r\nimport { IAvatarEffectListener } from '../../../../avatar/IAvatarEffectListener';\r\nimport { IAvatarImage } from '../../../../avatar/IAvatarImage';\r\nimport { IAvatarImageListener } from '../../../../avatar/IAvatarImageListener';\r\nimport { IAvatarRenderManager } from '../../../../avatar/IAvatarRenderManager';\r\n\r\nexport class AvatarVisualizationData extends Disposable implements IObjectVisualizationData\r\n{\r\n    private _avatarRenderer: IAvatarRenderManager;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    public initialize(asset: IAssetData): boolean\r\n    {\r\n        return true;\r\n    }\r\n\r\n    public onDispose(): void\r\n    {\r\n        this._avatarRenderer = null;\r\n    }\r\n\r\n    public createAvatarImage(figure: string, size: number, gender: string = null, avatarListener: IAvatarImageListener = null, effectListener: IAvatarEffectListener = null): IAvatarImage\r\n    {\r\n        let avatarImage: IAvatarImage = null;\r\n\r\n        if(size > 48) avatarImage = this._avatarRenderer.createAvatarImage(figure, AvatarScaleType.LARGE, gender, avatarListener, effectListener);\r\n        else avatarImage = this._avatarRenderer.createAvatarImage(figure, AvatarScaleType.SMALL, gender, avatarListener, effectListener);\r\n\r\n        return avatarImage;\r\n    }\r\n\r\n    public getAvatarRendererAsset(name: string): Texture<Resource>\r\n    {\r\n        if(!this._avatarRenderer) return null;\r\n\r\n        return this._avatarRenderer.assets.getTexture(name);\r\n    }\r\n\r\n    public get avatarManager(): IAvatarRenderManager\r\n    {\r\n        return this._avatarRenderer;\r\n    }\r\n\r\n    public set avatarManager(renderer: IAvatarRenderManager)\r\n    {\r\n        this._avatarRenderer = renderer;\r\n    }\r\n\r\n    public get layerCount(): number\r\n    {\r\n        return 0;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}