{"ast":null,"code":"export class UserWardrobePageParser {\n  constructor() {\n    this._looks = void 0;\n  }\n\n  flush() {\n    this._looks = new Map();\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    wrapper.readInt();\n    let totalLooks = wrapper.readInt();\n\n    while (totalLooks > 0) {\n      const slotId = wrapper.readInt();\n      const look = wrapper.readString();\n      const gender = wrapper.readString();\n\n      this._looks.set(slotId, [look, gender]);\n\n      totalLooks--;\n    }\n\n    return true;\n  }\n\n  get looks() {\n    return this._looks;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/user/wardrobe/UserWardrobePageParser.ts"],"names":["UserWardrobePageParser","_looks","flush","Map","parse","wrapper","readInt","totalLooks","slotId","look","readString","gender","set","looks"],"mappings":"AAEA,OAAO,MAAMA,sBAAN,CACP;AAAA;AAAA,SACYC,MADZ;AAAA;;AAGWC,EAAAA,KAAK,GACZ;AACI,SAAKD,MAAL,GAAc,IAAIE,GAAJ,EAAd;AAEA,WAAO,IAAP;AACH;;AAEMC,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEbA,IAAAA,OAAO,CAACC,OAAR;AAEA,QAAIC,UAAU,GAAGF,OAAO,CAACC,OAAR,EAAjB;;AAEA,WAAMC,UAAU,GAAG,CAAnB,EACA;AACI,YAAMC,MAAM,GAAGH,OAAO,CAACC,OAAR,EAAf;AACA,YAAMG,IAAI,GAAGJ,OAAO,CAACK,UAAR,EAAb;AACA,YAAMC,MAAM,GAAGN,OAAO,CAACK,UAAR,EAAf;;AAEA,WAAKT,MAAL,CAAYW,GAAZ,CAAgBJ,MAAhB,EAAwB,CAAEC,IAAF,EAAQE,MAAR,CAAxB;;AAEAJ,MAAAA,UAAU;AACb;;AAED,WAAO,IAAP;AACH;;AAEe,MAALM,KAAK,GAChB;AACI,WAAO,KAAKZ,MAAZ;AACH;;AAnCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\n\r\nexport class UserWardrobePageParser implements IMessageParser\r\n{\r\n    private _looks: Map<number, [ string, string ]>;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._looks = new Map();\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        wrapper.readInt();\r\n\r\n        let totalLooks = wrapper.readInt();\r\n\r\n        while(totalLooks > 0)\r\n        {\r\n            const slotId = wrapper.readInt();\r\n            const look = wrapper.readString();\r\n            const gender = wrapper.readString();\r\n\r\n            this._looks.set(slotId, [ look, gender ]);\r\n\r\n            totalLooks--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get looks(): Map<number, string[]>\r\n    {\r\n        return this._looks;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}