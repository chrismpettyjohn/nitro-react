{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/layout/LayoutMiniCameraView.tsx\",\n    _s = $RefreshSig$();\n\nimport { NitroRectangle } from '@nitrots/nitro-renderer';\nimport { useCallback, useRef } from 'react';\nimport { GetRoomEngine, LocalizeText, SoundNames } from '../../api';\nimport { PlaySound } from '../../api/utils/PlaySound';\nimport { Button } from '../Button';\nimport { DraggableWindow } from '../draggable-window';\nimport { Flex } from '../Flex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LayoutMiniCameraView = props => {\n  _s();\n\n  const {\n    roomId = -1,\n    textureReceiver = null,\n    onClose = null\n  } = props;\n  const elementRef = useRef();\n  const getCameraBounds = useCallback(() => {\n    if (!elementRef || !elementRef.current) return null;\n    const frameBounds = elementRef.current.getBoundingClientRect();\n    return new NitroRectangle(Math.floor(frameBounds.x), Math.floor(frameBounds.y), Math.floor(frameBounds.width), Math.floor(frameBounds.height));\n  }, []);\n  const takePicture = useCallback(() => {\n    PlaySound(SoundNames.CAMERA_SHUTTER);\n    textureReceiver(GetRoomEngine().createTextureFromRoom(roomId, 1, getCameraBounds()));\n  }, [roomId, getCameraBounds, textureReceiver]);\n  return /*#__PURE__*/_jsxDEV(DraggableWindow, {\n    handleSelector: \".nitro-room-thumbnail-camera\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      className: \"nitro-room-thumbnail-camera pt-2 px-1\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        ref: elementRef,\n        className: 'camera-frame'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        gap: 1,\n        className: \"align-items-end camera-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: onClose,\n          children: LocalizeText('cancel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: takePicture,\n          children: LocalizeText('navigator.thumbeditor.save')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LayoutMiniCameraView, \"PpqNznkllQK5chA7yh3moqoU4XI=\");\n\n_c = LayoutMiniCameraView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutMiniCameraView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/layout/LayoutMiniCameraView.tsx"],"names":["NitroRectangle","useCallback","useRef","GetRoomEngine","LocalizeText","SoundNames","PlaySound","Button","DraggableWindow","Flex","LayoutMiniCameraView","props","roomId","textureReceiver","onClose","elementRef","getCameraBounds","current","frameBounds","getBoundingClientRect","Math","floor","x","y","width","height","takePicture","CAMERA_SHUTTER","createTextureFromRoom"],"mappings":";;;AAAA,SAASA,cAAT,QAAmD,yBAAnD;AACA,SAAaC,WAAb,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,UAAtC,QAAwD,WAAxD;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,IAAT,QAAqB,SAArB;;AASA,OAAO,MAAMC,oBAAmD,GAAGC,KAAK,IACxE;AAAA;;AACI,QAAM;AAAEC,IAAAA,MAAM,GAAG,CAAC,CAAZ;AAAeC,IAAAA,eAAe,GAAG,IAAjC;AAAuCC,IAAAA,OAAO,GAAG;AAAjD,MAA0DH,KAAhE;AACA,QAAMI,UAAU,GAAGb,MAAM,EAAzB;AAEA,QAAMc,eAAe,GAAGf,WAAW,CAAC,MACpC;AACI,QAAG,CAACc,UAAD,IAAe,CAACA,UAAU,CAACE,OAA9B,EAAuC,OAAO,IAAP;AAEvC,UAAMC,WAAW,GAAGH,UAAU,CAACE,OAAX,CAAmBE,qBAAnB,EAApB;AAEA,WAAO,IAAInB,cAAJ,CAAmBoB,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACI,CAAvB,CAAnB,EAA8CF,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACK,CAAvB,CAA9C,EAAyEH,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACM,KAAvB,CAAzE,EAAwGJ,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACO,MAAvB,CAAxG,CAAP;AACH,GAPkC,EAOhC,EAPgC,CAAnC;AASA,QAAMC,WAAW,GAAGzB,WAAW,CAAC,MAChC;AACIK,IAAAA,SAAS,CAACD,UAAU,CAACsB,cAAZ,CAAT;AACAd,IAAAA,eAAe,CAACV,aAAa,GAAGyB,qBAAhB,CAAsChB,MAAtC,EAA8C,CAA9C,EAAiDI,eAAe,EAAhE,CAAD,CAAf;AACH,GAJ8B,EAI5B,CAAEJ,MAAF,EAAUI,eAAV,EAA2BH,eAA3B,CAJ4B,CAA/B;AAMA,sBACI,QAAC,eAAD;AAAiB,IAAA,cAAc,EAAC,8BAAhC;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,uCAAhB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,GAAG,EAAGE,UAAZ;AAAyB,QAAA,SAAS,EAAG;AAArC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,GAAG,EAAG,CAAZ;AAAgB,QAAA,SAAS,EAAC,gCAA1B;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAGD,OAAnC;AAAA,oBAA+CV,YAAY,CAAC,QAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAGsB,WAApC;AAAA,oBAAoDtB,YAAY,CAAC,4BAAD;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA/BM;;GAAMM,oB;;KAAAA,oB","sourcesContent":["import { NitroRectangle, NitroRenderTexture } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useRef } from 'react';\nimport { GetRoomEngine, LocalizeText, SoundNames } from '../../api';\nimport { PlaySound } from '../../api/utils/PlaySound';\nimport { Button } from '../Button';\nimport { DraggableWindow } from '../draggable-window';\nimport { Flex } from '../Flex';\n\ninterface LayoutMiniCameraViewProps\n{\n    roomId: number;\n    textureReceiver: (texture: NitroRenderTexture) => void;\n    onClose: () => void;\n}\n\nexport const LayoutMiniCameraView: FC<LayoutMiniCameraViewProps> = props =>\n{\n    const { roomId = -1, textureReceiver = null, onClose = null } = props;\n    const elementRef = useRef<HTMLDivElement>();\n\n    const getCameraBounds = useCallback(() =>\n    {\n        if(!elementRef || !elementRef.current) return null;\n\n        const frameBounds = elementRef.current.getBoundingClientRect();\n        \n        return new NitroRectangle(Math.floor(frameBounds.x), Math.floor(frameBounds.y), Math.floor(frameBounds.width), Math.floor(frameBounds.height));\n    }, []);\n\n    const takePicture = useCallback(() =>\n    {\n        PlaySound(SoundNames.CAMERA_SHUTTER);\n        textureReceiver(GetRoomEngine().createTextureFromRoom(roomId, 1, getCameraBounds()));\n    }, [ roomId, getCameraBounds, textureReceiver ]);\n    \n    return (\n        <DraggableWindow handleSelector=\".nitro-room-thumbnail-camera\">\n            <Flex className=\"nitro-room-thumbnail-camera pt-2 px-1\">\n                <Flex ref={ elementRef } className={ 'camera-frame' } />\n                <Flex gap={ 1 } className=\"align-items-end camera-buttons\">\n                    <Button variant=\"danger\" onClick={ onClose }>{ LocalizeText('cancel') }</Button>\n                    <Button variant=\"success\" onClick={ takePicture }>{ LocalizeText('navigator.thumbeditor.save') }</Button>\n                </Flex>\n            </Flex>\n        </DraggableWindow>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}