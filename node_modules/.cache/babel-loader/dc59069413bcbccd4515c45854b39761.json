{"ast":null,"code":"import { SCALE_MODES } from '@pixi/constants';\nimport { Texture } from '@pixi/core';\nimport { Nitro } from '../../nitro/Nitro';\nexport class TextureUtils {\n  static generateTexture(displayObject) {\n    let region = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let scaleMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : SCALE_MODES.NEAREST;\n    let resolution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    if (!displayObject) return null;\n    return this.getRenderer().generateTexture(displayObject, {\n      scaleMode,\n      resolution,\n      region\n    });\n  }\n\n  static generateTextureFromImage(image) {\n    if (!image) return null;\n    return Texture.from(image);\n  }\n\n  static generateImage(target) {\n    if (!target) return null;\n    return this.getExtractor().image(target);\n  }\n\n  static generateImageUrl(target) {\n    if (!target) return null;\n    return this.getExtractor().base64(target);\n  }\n\n  static generateCanvas(target) {\n    if (!target) return null;\n    return this.getExtractor().canvas(target);\n  }\n\n  static getRenderer() {\n    return Nitro.instance.renderer;\n  }\n\n  static getExtractor() {\n    return this.getRenderer().plugins.extract;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/room/utils/TextureUtils.ts"],"names":["SCALE_MODES","Texture","Nitro","TextureUtils","generateTexture","displayObject","region","scaleMode","NEAREST","resolution","getRenderer","generateTextureFromImage","image","from","generateImage","target","getExtractor","generateImageUrl","base64","generateCanvas","canvas","instance","renderer","plugins","extract"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAA8DC,OAA9D,QAA6E,YAA7E;AAIA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,YAAN,CACP;AACiC,SAAfC,eAAe,CAACC,aAAD,EAC7B;AAAA,QAD4DC,MAC5D,uEADgF,IAChF;AAAA,QADsFC,SACtF,uEAD0GP,WAAW,CAACQ,OACtH;AAAA,QAD+HC,UAC/H,uEADoJ,CACpJ;AACI,QAAG,CAACJ,aAAJ,EAAmB,OAAO,IAAP;AAEnB,WAAO,KAAKK,WAAL,GAAmBN,eAAnB,CAAmCC,aAAnC,EAAkD;AACrDE,MAAAA,SADqD;AAErDE,MAAAA,UAFqD;AAGrDH,MAAAA;AAHqD,KAAlD,CAAP;AAKH;;AAEqC,SAAxBK,wBAAwB,CAACC,KAAD,EACtC;AACI,QAAG,CAACA,KAAJ,EAAW,OAAO,IAAP;AAEX,WAAOX,OAAO,CAACY,IAAR,CAAaD,KAAb,CAAP;AACH;;AAE0B,SAAbE,aAAa,CAACC,MAAD,EAC3B;AACI,QAAG,CAACA,MAAJ,EAAY,OAAO,IAAP;AAEZ,WAAO,KAAKC,YAAL,GAAoBJ,KAApB,CAA0BG,MAA1B,CAAP;AACH;;AAE6B,SAAhBE,gBAAgB,CAACF,MAAD,EAC9B;AACI,QAAG,CAACA,MAAJ,EAAY,OAAO,IAAP;AAEZ,WAAO,KAAKC,YAAL,GAAoBE,MAApB,CAA2BH,MAA3B,CAAP;AACH;;AAE2B,SAAdI,cAAc,CAACJ,MAAD,EAC5B;AACI,QAAG,CAACA,MAAJ,EAAY,OAAO,IAAP;AAEZ,WAAO,KAAKC,YAAL,GAAoBI,MAApB,CAA2BL,MAA3B,CAAP;AACH;;AAEwB,SAAXL,WAAW,GACzB;AACI,WAAOR,KAAK,CAACmB,QAAN,CAAeC,QAAtB;AACH;;AAEyB,SAAZN,YAAY,GAC1B;AACI,WAAQ,KAAKN,WAAL,GAAmBa,OAAnB,CAA2BC,OAAnC;AACH;;AAhDL","sourcesContent":["import { SCALE_MODES } from '@pixi/constants';\r\nimport { AbstractRenderer, Renderer, RenderTexture, Resource, Texture } from '@pixi/core';\r\nimport { DisplayObject } from '@pixi/display';\r\nimport { Extract } from '@pixi/extract';\r\nimport { Rectangle } from '@pixi/math';\r\nimport { Nitro } from '../../nitro/Nitro';\r\n\r\nexport class TextureUtils\r\n{\r\n    public static generateTexture(displayObject: DisplayObject, region: Rectangle = null, scaleMode: number = SCALE_MODES.NEAREST, resolution: number = 1): RenderTexture\r\n    {\r\n        if(!displayObject) return null;\r\n\r\n        return this.getRenderer().generateTexture(displayObject, {\r\n            scaleMode,\r\n            resolution,\r\n            region\r\n        });\r\n    }\r\n\r\n    public static generateTextureFromImage(image: HTMLImageElement): Texture<Resource>\r\n    {\r\n        if(!image) return null;\r\n\r\n        return Texture.from(image);\r\n    }\r\n\r\n    public static generateImage(target: DisplayObject | RenderTexture): HTMLImageElement\r\n    {\r\n        if(!target) return null;\r\n\r\n        return this.getExtractor().image(target);\r\n    }\r\n\r\n    public static generateImageUrl(target: DisplayObject | RenderTexture): string\r\n    {\r\n        if(!target) return null;\r\n\r\n        return this.getExtractor().base64(target);\r\n    }\r\n\r\n    public static generateCanvas(target: DisplayObject | RenderTexture): HTMLCanvasElement\r\n    {\r\n        if(!target) return null;\r\n\r\n        return this.getExtractor().canvas(target);\r\n    }\r\n\r\n    public static getRenderer(): Renderer | AbstractRenderer\r\n    {\r\n        return Nitro.instance.renderer;\r\n    }\r\n\r\n    public static getExtractor(): Extract\r\n    {\r\n        return (this.getRenderer().plugins.extract as Extract);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}