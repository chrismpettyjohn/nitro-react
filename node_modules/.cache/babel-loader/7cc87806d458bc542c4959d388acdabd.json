{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionSetFurniStateToView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredActionSetFurniStateToView = props => {\n  _s();\n\n  const [stateFlag, setStateFlag] = useState(0);\n  const [directionFlag, setDirectionFlag] = useState(0);\n  const [positionFlag, setPositionFlag] = useState(0);\n  const {\n    trigger = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => setIntParams([stateFlag, directionFlag, positionFlag]);\n\n  useEffect(() => {\n    setStateFlag(trigger.getBoolean(0) ? 1 : 0);\n    setDirectionFlag(trigger.getBoolean(1) ? 1 : 0);\n    setPositionFlag(trigger.getBoolean(2) ? 1 : 0);\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredActionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_BY_ID,\n    hasSpecialInput: true,\n    save: save,\n    children: /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.conditions')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"stateFlag\",\n          checked: !!stateFlag,\n          onChange: event => setStateFlag(event.target.checked ? 1 : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('wiredfurni.params.condition.state')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"directionFlag\",\n          checked: !!directionFlag,\n          onChange: event => setDirectionFlag(event.target.checked ? 1 : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('wiredfurni.params.condition.direction')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"positionFlag\",\n          checked: !!positionFlag,\n          onChange: event => setPositionFlag(event.target.checked ? 1 : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('wiredfurni.params.condition.position')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredActionSetFurniStateToView, \"KzmoigAz/CumC2aqlPbWxxtUOv0=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredActionSetFurniStateToView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredActionSetFurniStateToView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/actions/WiredActionSetFurniStateToView.tsx"],"names":["useEffect","useState","LocalizeText","WiredFurniType","Column","Flex","Text","useWiredContext","WiredActionBaseView","WiredActionSetFurniStateToView","props","stateFlag","setStateFlag","directionFlag","setDirectionFlag","positionFlag","setPositionFlag","trigger","setIntParams","save","getBoolean","STUFF_SELECTION_OPTION_BY_ID","event","target","checked"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,oBAAnC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAEA,OAAO,MAAMC,8BAAsC,GAAGC,KAAK,IAC3D;AAAA;;AACI,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAEY,aAAF,EAAiBC,gBAAjB,IAAsCb,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAAEc,YAAF,EAAgBC,eAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM;AAAEgB,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,YAAY,GAAG;AAAjC,MAA0CX,eAAe,EAA/D;;AAEA,QAAMY,IAAI,GAAG,MAAMD,YAAY,CAAC,CAAEP,SAAF,EAAaE,aAAb,EAA4BE,YAA5B,CAAD,CAA/B;;AAEAf,EAAAA,SAAS,CAAC,MACV;AACIY,IAAAA,YAAY,CAACK,OAAO,CAACG,UAAR,CAAmB,CAAnB,IAAwB,CAAxB,GAA4B,CAA7B,CAAZ;AACAN,IAAAA,gBAAgB,CAACG,OAAO,CAACG,UAAR,CAAmB,CAAnB,IAAwB,CAAxB,GAA4B,CAA7B,CAAhB;AACAJ,IAAAA,eAAe,CAACC,OAAO,CAACG,UAAR,CAAmB,CAAnB,IAAwB,CAAxB,GAA4B,CAA7B,CAAf;AACH,GALQ,EAKN,CAAEH,OAAF,CALM,CAAT;AAOA,sBACI,QAAC,mBAAD;AAAqB,IAAA,aAAa,EAAGd,cAAc,CAACkB,4BAApD;AAAmF,IAAA,eAAe,EAAG,IAArG;AAA4G,IAAA,IAAI,EAAGF,IAAnH;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAejB,YAAY,CAAC,8BAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,GAAG,EAAG,CAAhC;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,kBAAjB;AAAoC,UAAA,IAAI,EAAC,UAAzC;AAAoD,UAAA,EAAE,EAAC,WAAvD;AAAmE,UAAA,OAAO,EAAG,CAAC,CAACS,SAA/E;AAA2F,UAAA,QAAQ,EAAGW,KAAK,IAAIV,YAAY,CAACU,KAAK,CAACC,MAAN,CAAaC,OAAb,GAAuB,CAAvB,GAA2B,CAA5B;AAA3H;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAA,oBAAQtB,YAAY,CAAC,mCAAD;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,GAAG,EAAG,CAAhC;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,kBAAjB;AAAoC,UAAA,IAAI,EAAC,UAAzC;AAAoD,UAAA,EAAE,EAAC,eAAvD;AAAuE,UAAA,OAAO,EAAG,CAAC,CAACW,aAAnF;AAAmG,UAAA,QAAQ,EAAGS,KAAK,IAAIR,gBAAgB,CAACQ,KAAK,CAACC,MAAN,CAAaC,OAAb,GAAuB,CAAvB,GAA2B,CAA5B;AAAvI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAA,oBAAQtB,YAAY,CAAC,uCAAD;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,GAAG,EAAG,CAAhC;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,kBAAjB;AAAoC,UAAA,IAAI,EAAC,UAAzC;AAAoD,UAAA,EAAE,EAAC,cAAvD;AAAsE,UAAA,OAAO,EAAG,CAAC,CAACa,YAAlF;AAAiG,UAAA,QAAQ,EAAGO,KAAK,IAAIN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,OAAb,GAAuB,CAAvB,GAA2B,CAA5B;AAApI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAA,oBAAQtB,YAAY,CAAC,sCAAD;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAnCM;;GAAMO,8B;UAKuCF,e;;;KALvCE,8B","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredActionBaseView } from './WiredActionBaseView';\n\nexport const WiredActionSetFurniStateToView: FC<{}> = props =>\n{\n    const [ stateFlag, setStateFlag ] = useState(0);\n    const [ directionFlag, setDirectionFlag ] = useState(0);\n    const [ positionFlag, setPositionFlag ] = useState(0);\n    const { trigger = null, setIntParams = null } = useWiredContext();\n\n    const save = () => setIntParams([ stateFlag, directionFlag, positionFlag ]);\n\n    useEffect(() =>\n    {\n        setStateFlag(trigger.getBoolean(0) ? 1 : 0);\n        setDirectionFlag(trigger.getBoolean(1) ? 1 : 0);\n        setPositionFlag(trigger.getBoolean(2) ? 1 : 0);\n    }, [ trigger ]);\n\n    return (\n        <WiredActionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_BY_ID } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.conditions') }</Text>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"stateFlag\" checked={ !!stateFlag } onChange={ event => setStateFlag(event.target.checked ? 1 : 0) } />\n                    <Text>{ LocalizeText('wiredfurni.params.condition.state') }</Text>\n                </Flex>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"directionFlag\" checked={ !!directionFlag } onChange={ event => setDirectionFlag(event.target.checked ? 1 : 0) } />\n                    <Text>{ LocalizeText('wiredfurni.params.condition.direction') }</Text>\n                </Flex>\n                <Flex alignItems=\"center\" gap={ 1 }>\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"positionFlag\" checked={ !!positionFlag } onChange={ event => setPositionFlag(event.target.checked ? 1 : 0) } />\n                    <Text>{ LocalizeText('wiredfurni.params.condition.position') }</Text>\n                </Flex>\n            </Column>\n        </WiredActionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}