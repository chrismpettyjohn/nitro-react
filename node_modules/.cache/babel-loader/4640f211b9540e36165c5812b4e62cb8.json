{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/achievements/views/category-list/AchievementsCategoryListView.tsx\";\nimport { AutoGrid } from '../../../../common';\nimport { AchievementsCategoryListItemView } from './AchievementsCategoryListItemView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AchievementsCategoryListView = props => {\n  const {\n    categories = null,\n    selectedCategoryCode = null,\n    setSelectedCategoryCode = null,\n    children = null,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(AutoGrid, {\n    columnCount: 3,\n    columnMinWidth: 90,\n    columnMinHeight: 100,\n    ...rest,\n    children: [categories && categories.length > 0 && categories.map((category, index) => /*#__PURE__*/_jsxDEV(AchievementsCategoryListItemView, {\n      category: category,\n      selectedCategoryCode: selectedCategoryCode,\n      setSelectedCategoryCode: setSelectedCategoryCode\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 92\n    }, this)), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = AchievementsCategoryListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AchievementsCategoryListView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/achievements/views/category-list/AchievementsCategoryListView.tsx"],"names":["AutoGrid","AchievementsCategoryListItemView","AchievementsCategoryListView","props","categories","selectedCategoryCode","setSelectedCategoryCode","children","rest","length","map","category","index"],"mappings":";AAEA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,gCAAT,QAAiD,oCAAjD;;AASA,OAAO,MAAMC,4BAAmE,GAAGC,KAAK,IACxF;AACI,QAAM;AAAEC,IAAAA,UAAU,GAAG,IAAf;AAAqBC,IAAAA,oBAAoB,GAAG,IAA5C;AAAkDC,IAAAA,uBAAuB,GAAG,IAA5E;AAAkFC,IAAAA,QAAQ,GAAG,IAA7F;AAAmG,OAAGC;AAAtG,MAA+GL,KAArH;AAEA,sBACI,QAAC,QAAD;AAAU,IAAA,WAAW,EAAG,CAAxB;AAA4B,IAAA,cAAc,EAAG,EAA7C;AAAkD,IAAA,eAAe,EAAG,GAApE;AAAA,OAA+EK,IAA/E;AAAA,eACMJ,UAAU,IAAKA,UAAU,CAACK,MAAX,GAAoB,CAAnC,IAAyCL,UAAU,CAACM,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,kBAAqB,QAAC,gCAAD;AAAgD,MAAA,QAAQ,EAAGD,QAA3D;AAAsE,MAAA,oBAAoB,EAAGN,oBAA7F;AAAoH,MAAA,uBAAuB,EAAGC;AAA9I,OAAwCM,KAAxC;AAAA;AAAA;AAAA;AAAA,YAApC,CAD/C,EAEML,QAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAVM;KAAML,4B","sourcesContent":["import { Dispatch, FC, SetStateAction } from 'react';\nimport { IAchievementCategory } from '../../../../api';\nimport { AutoGrid } from '../../../../common';\nimport { AchievementsCategoryListItemView } from './AchievementsCategoryListItemView';\n\ninterface AchievementsCategoryListViewProps\n{\n    categories: IAchievementCategory[];\n    selectedCategoryCode: string;\n    setSelectedCategoryCode: Dispatch<SetStateAction<string>>;\n}\n\nexport const AchievementsCategoryListView: FC<AchievementsCategoryListViewProps> = props =>\n{\n    const { categories = null, selectedCategoryCode = null, setSelectedCategoryCode = null, children = null, ...rest } = props;\n    \n    return (\n        <AutoGrid columnCount={ 3 } columnMinWidth={ 90 } columnMinHeight={ 100 } { ...rest }>\n            { categories && (categories.length > 0) && categories.map((category, index) => <AchievementsCategoryListItemView key={ index } category={ category } selectedCategoryCode={ selectedCategoryCode } setSelectedCategoryCode={ setSelectedCategoryCode } /> ) }\n            { children }\n        </AutoGrid>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}