{"ast":null,"code":"export class PetInfoParser {\n  constructor() {\n    this._id = void 0;\n    this._name = void 0;\n    this._level = void 0;\n    this._maximumLevel = void 0;\n    this._experience = void 0;\n    this._energy = void 0;\n    this._happyness = void 0;\n    this._levelExperienceGoal = void 0;\n    this._maximumEnergy = void 0;\n    this._maximumHappyness = void 0;\n    this._respect = void 0;\n    this._ownerId = void 0;\n    this._ownerName = void 0;\n    this._age = void 0;\n    this._rarityLevel = void 0;\n    this._saddle = void 0;\n    this._rider = void 0;\n    this._breedable = void 0;\n    this._fullyGrown = void 0;\n    this._dead = void 0;\n    this._maximumTimeToLive = void 0;\n    this._remainingTimeToLive = void 0;\n    this._remainingGrowTime = void 0;\n    this._skillThresholds = void 0;\n    this._publiclyRideable = void 0;\n    this._unknownRarity = void 0;\n    this._publiclyBreedable = void 0;\n  }\n\n  flush() {\n    this._id = -1;\n    this._skillThresholds = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._id = wrapper.readInt();\n    this._name = wrapper.readString();\n    this._level = wrapper.readInt();\n    this._maximumLevel = wrapper.readInt();\n    this._experience = wrapper.readInt();\n    this._levelExperienceGoal = wrapper.readInt();\n    this._energy = wrapper.readInt();\n    this._maximumEnergy = wrapper.readInt();\n    this._happyness = wrapper.readInt();\n    this._maximumHappyness = wrapper.readInt();\n    this._respect = wrapper.readInt();\n    this._ownerId = wrapper.readInt();\n    this._age = wrapper.readInt();\n    this._ownerName = wrapper.readString();\n    this._rarityLevel = wrapper.readInt();\n    this._saddle = wrapper.readBoolean();\n    this._rider = wrapper.readBoolean();\n    let total = wrapper.readInt();\n\n    while (total > 0) {\n      this._skillThresholds.push(wrapper.readInt());\n\n      total--;\n    }\n\n    this._skillThresholds.sort();\n\n    this._publiclyRideable = wrapper.readInt();\n    this._breedable = wrapper.readBoolean();\n    this._fullyGrown = wrapper.readBoolean();\n    this._dead = wrapper.readBoolean();\n    this._unknownRarity = wrapper.readInt();\n    this._maximumTimeToLive = wrapper.readInt();\n    this._remainingTimeToLive = wrapper.readInt();\n    this._remainingGrowTime = wrapper.readInt();\n    this._publiclyBreedable = wrapper.readBoolean();\n    return true;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get level() {\n    return this._level;\n  }\n\n  get maximumLevel() {\n    return this._maximumLevel;\n  }\n\n  get experience() {\n    return this._experience;\n  }\n\n  get energy() {\n    return this._energy;\n  }\n\n  get happyness() {\n    return this._happyness;\n  }\n\n  get levelExperienceGoal() {\n    return this._levelExperienceGoal;\n  }\n\n  get maximumEnergy() {\n    return this._maximumEnergy;\n  }\n\n  get maximumHappyness() {\n    return this._maximumHappyness;\n  }\n\n  get respect() {\n    return this._respect;\n  }\n\n  get ownerId() {\n    return this._ownerId;\n  }\n\n  get ownerName() {\n    return this._ownerName;\n  }\n\n  get age() {\n    return this._age;\n  }\n\n  get rarityLevel() {\n    return this._rarityLevel;\n  }\n\n  get saddle() {\n    return this._saddle;\n  }\n\n  get rider() {\n    return this._rider;\n  }\n\n  get breedable() {\n    return this._breedable;\n  }\n\n  get fullyGrown() {\n    return this._fullyGrown;\n  }\n\n  get dead() {\n    return this._dead;\n  }\n\n  get maximumTimeToLive() {\n    return this._maximumTimeToLive;\n  }\n\n  get remainingTimeToLive() {\n    return this._remainingTimeToLive;\n  }\n\n  get remainingGrowTime() {\n    return this._remainingGrowTime;\n  }\n\n  get skillTresholds() {\n    return this._skillThresholds;\n  }\n\n  get publiclyRideable() {\n    return this._publiclyRideable;\n  }\n\n  get unknownRarity() {\n    return this._unknownRarity;\n  }\n\n  get publiclyBreedable() {\n    return this._publiclyBreedable;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/room/pet/PetInfoParser.ts"],"names":["PetInfoParser","_id","_name","_level","_maximumLevel","_experience","_energy","_happyness","_levelExperienceGoal","_maximumEnergy","_maximumHappyness","_respect","_ownerId","_ownerName","_age","_rarityLevel","_saddle","_rider","_breedable","_fullyGrown","_dead","_maximumTimeToLive","_remainingTimeToLive","_remainingGrowTime","_skillThresholds","_publiclyRideable","_unknownRarity","_publiclyBreedable","flush","parse","wrapper","readInt","readString","readBoolean","total","push","sort","id","name","level","maximumLevel","experience","energy","happyness","levelExperienceGoal","maximumEnergy","maximumHappyness","respect","ownerId","ownerName","age","rarityLevel","saddle","rider","breedable","fullyGrown","dead","maximumTimeToLive","remainingTimeToLive","remainingGrowTime","skillTresholds","publiclyRideable","unknownRarity","publiclyBreedable"],"mappings":"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","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\n\r\nexport class PetInfoParser implements IMessageParser\r\n{\r\n    private _id: number;\r\n    private _name: string;\r\n    private _level: number;\r\n    private _maximumLevel: number;\r\n    private _experience: number;\r\n    private _energy: number;\r\n    private _happyness: number;\r\n    private _levelExperienceGoal: number;\r\n    private _maximumEnergy: number;\r\n    private _maximumHappyness: number;\r\n    private _respect: number;\r\n    private _ownerId: number;\r\n    private _ownerName: string;\r\n    private _age: number;\r\n    private _rarityLevel: number;\r\n    private _saddle: boolean;\r\n    private _rider: boolean;\r\n    private _breedable: boolean;\r\n    private _fullyGrown: boolean;\r\n    private _dead: boolean;\r\n    private _maximumTimeToLive: number;\r\n    private _remainingTimeToLive: number;\r\n    private _remainingGrowTime: number;\r\n    private _skillThresholds: number[];\r\n    private _publiclyRideable: number;\r\n    private _unknownRarity: number;\r\n    private _publiclyBreedable: boolean;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._id = -1;\r\n        this._skillThresholds = [];\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._id = wrapper.readInt();\r\n        this._name = wrapper.readString();\r\n        this._level = wrapper.readInt();\r\n        this._maximumLevel = wrapper.readInt();\r\n        this._experience = wrapper.readInt();\r\n        this._levelExperienceGoal = wrapper.readInt();\r\n        this._energy = wrapper.readInt();\r\n        this._maximumEnergy = wrapper.readInt();\r\n        this._happyness = wrapper.readInt();\r\n        this._maximumHappyness = wrapper.readInt();\r\n        this._respect = wrapper.readInt();\r\n        this._ownerId = wrapper.readInt();\r\n        this._age = wrapper.readInt();\r\n        this._ownerName = wrapper.readString();\r\n        this._rarityLevel = wrapper.readInt();\r\n        this._saddle = wrapper.readBoolean();\r\n        this._rider = wrapper.readBoolean();\r\n\r\n        let total = wrapper.readInt();\r\n\r\n        while(total > 0)\r\n        {\r\n            this._skillThresholds.push(wrapper.readInt());\r\n\r\n            total--;\r\n        }\r\n\r\n        this._skillThresholds.sort();\r\n        this._publiclyRideable = wrapper.readInt();\r\n        this._breedable = wrapper.readBoolean();\r\n        this._fullyGrown = wrapper.readBoolean();\r\n        this._dead = wrapper.readBoolean();\r\n        this._unknownRarity = wrapper.readInt();\r\n        this._maximumTimeToLive = wrapper.readInt();\r\n        this._remainingTimeToLive = wrapper.readInt();\r\n        this._remainingGrowTime = wrapper.readInt();\r\n        this._publiclyBreedable = wrapper.readBoolean();\r\n\r\n        return true;\r\n    }\r\n\r\n    public get id(): number\r\n    {\r\n        return this._id;\r\n    }\r\n\r\n    public get name(): string\r\n    {\r\n        return this._name;\r\n    }\r\n\r\n    public get level(): number\r\n    {\r\n        return this._level;\r\n    }\r\n\r\n    public get maximumLevel(): number\r\n    {\r\n        return this._maximumLevel;\r\n    }\r\n\r\n    public get experience(): number\r\n    {\r\n        return this._experience;\r\n    }\r\n\r\n    public get energy(): number\r\n    {\r\n        return this._energy;\r\n    }\r\n\r\n    public get happyness(): number\r\n    {\r\n        return this._happyness;\r\n    }\r\n\r\n    public get levelExperienceGoal(): number\r\n    {\r\n        return this._levelExperienceGoal;\r\n    }\r\n\r\n    public get maximumEnergy(): number\r\n    {\r\n        return this._maximumEnergy;\r\n    }\r\n\r\n    public get maximumHappyness(): number\r\n    {\r\n        return this._maximumHappyness;\r\n    }\r\n\r\n    public get respect(): number\r\n    {\r\n        return this._respect;\r\n    }\r\n\r\n    public get ownerId(): number\r\n    {\r\n        return this._ownerId;\r\n    }\r\n\r\n    public get ownerName(): string\r\n    {\r\n        return this._ownerName;\r\n    }\r\n\r\n    public get age(): number\r\n    {\r\n        return this._age;\r\n    }\r\n\r\n    public get rarityLevel(): number\r\n    {\r\n        return this._rarityLevel;\r\n    }\r\n\r\n    public get saddle(): boolean\r\n    {\r\n        return this._saddle;\r\n    }\r\n\r\n    public get rider(): boolean\r\n    {\r\n        return this._rider;\r\n    }\r\n\r\n    public get breedable(): boolean\r\n    {\r\n        return this._breedable;\r\n    }\r\n\r\n    public get fullyGrown(): boolean\r\n    {\r\n        return this._fullyGrown;\r\n    }\r\n\r\n    public get dead(): boolean\r\n    {\r\n        return this._dead;\r\n    }\r\n\r\n    public get maximumTimeToLive(): number\r\n    {\r\n        return this._maximumTimeToLive;\r\n    }\r\n\r\n    public get remainingTimeToLive(): number\r\n    {\r\n        return this._remainingTimeToLive;\r\n    }\r\n\r\n    public get remainingGrowTime(): number\r\n    {\r\n        return this._remainingGrowTime;\r\n    }\r\n\r\n    public get skillTresholds(): number[]\r\n    {\r\n        return this._skillThresholds;\r\n    }\r\n\r\n    public get publiclyRideable(): number\r\n    {\r\n        return this._publiclyRideable;\r\n    }\r\n\r\n    public get unknownRarity(): number\r\n    {\r\n        return this._unknownRarity;\r\n    }\r\n\r\n    public get publiclyBreedable(): boolean\r\n    {\r\n        return this._publiclyBreedable;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}