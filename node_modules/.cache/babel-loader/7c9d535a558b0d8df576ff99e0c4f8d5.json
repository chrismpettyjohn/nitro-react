{"ast":null,"code":"export class QuestionFinishedParser {\n  constructor() {\n    this._questionId = void 0;\n    this._answerCounts = void 0;\n  }\n\n  flush() {\n    this._questionId = -1;\n    this._answerCounts = null;\n    return true;\n  }\n\n  parse(wrapper) {\n    this._questionId = wrapper.readInt();\n    this._answerCounts = new Map();\n    const count = wrapper.readInt();\n\n    for (let i = 0; i < count; i++) {\n      const key = wrapper.readString();\n      const value = wrapper.readInt();\n\n      this._answerCounts.set(key, value);\n    }\n\n    return true;\n  }\n\n  get questionId() {\n    return this._questionId;\n  }\n\n  get answerCounts() {\n    return this._answerCounts;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/poll/QuestionFinishedParser.ts"],"names":["QuestionFinishedParser","_questionId","_answerCounts","flush","parse","wrapper","readInt","Map","count","i","key","readString","value","set","questionId","answerCounts"],"mappings":"AAGA,OAAO,MAAMA,sBAAN,CACP;AAAA;AAAA,SACYC,WADZ;AAAA,SAEYC,aAFZ;AAAA;;AAIIC,EAAAA,KAAK,GACL;AACI,SAAKF,WAAL,GAAmB,CAAC,CAApB;AACA,SAAKC,aAAL,GAAqB,IAArB;AACA,WAAO,IAAP;AACH;;AAEDE,EAAAA,KAAK,CAACC,OAAD,EACL;AACI,SAAKJ,WAAL,GAAmBI,OAAO,CAACC,OAAR,EAAnB;AACA,SAAKJ,aAAL,GAAqB,IAAIK,GAAJ,EAArB;AACA,UAAMC,KAAK,GAAGH,OAAO,CAACC,OAAR,EAAd;;AAEA,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAnB,EAA0BC,CAAC,EAA3B,EACA;AACI,YAAMC,GAAG,GAAGL,OAAO,CAACM,UAAR,EAAZ;AACA,YAAMC,KAAK,GAAGP,OAAO,CAACC,OAAR,EAAd;;AACA,WAAKJ,aAAL,CAAmBW,GAAnB,CAAuBH,GAAvB,EAA4BE,KAA5B;AACH;;AACD,WAAO,IAAP;AACH;;AAEoB,MAAVE,UAAU,GACrB;AACI,WAAO,KAAKb,WAAZ;AACH;;AAEsB,MAAZc,YAAY,GACvB;AACI,WAAO,KAAKb,aAAZ;AACH;;AAlCL","sourcesContent":["import { IMessageDataWrapper } from '../../../../../core/communication/messages/IMessageDataWrapper';\r\nimport { IMessageParser } from '../../../../../core/communication/messages/IMessageParser';\r\n\r\nexport class QuestionFinishedParser implements IMessageParser\r\n{\r\n    private _questionId:number;\r\n    private _answerCounts:Map<string, number>;\r\n\r\n    flush(): boolean\r\n    {\r\n        this._questionId = -1;\r\n        this._answerCounts = null;\r\n        return true;\r\n    }\r\n\r\n    parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        this._questionId = wrapper.readInt();\r\n        this._answerCounts = new Map();\r\n        const count = wrapper.readInt();\r\n\r\n        for(let i = 0; i < count; i++)\r\n        {\r\n            const key = wrapper.readString();\r\n            const value = wrapper.readInt();\r\n            this._answerCounts.set(key, value);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public get questionId():number\r\n    {\r\n        return this._questionId;\r\n    }\r\n\r\n    public get answerCounts():Map<string, number>\r\n    {\r\n        return this._answerCounts;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}