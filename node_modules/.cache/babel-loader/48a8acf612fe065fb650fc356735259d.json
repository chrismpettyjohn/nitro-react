{"ast":null,"code":"export class GroupBadgesParser {\n  constructor() {\n    this._badges = void 0;\n  }\n\n  flush() {\n    this._badges = new Map();\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    let badgesCount = wrapper.readInt();\n\n    while (badgesCount > 0) {\n      const id = wrapper.readInt();\n      const badge = wrapper.readString();\n\n      this._badges.set(id, badge);\n\n      badgesCount--;\n    }\n\n    return true;\n  }\n\n  get badges() {\n    return this._badges;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/group/GroupBadgesParser.ts"],"names":["GroupBadgesParser","_badges","flush","Map","parse","wrapper","badgesCount","readInt","id","badge","readString","set","badges"],"mappings":"AAEA,OAAO,MAAMA,iBAAN,CACP;AAAA;AAAA,SACYC,OADZ;AAAA;;AAGIC,EAAAA,KAAK,GACL;AACI,SAAKD,OAAL,GAAe,IAAIE,GAAJ,EAAf;AAEA,WAAO,IAAP;AACH;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EACL;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,QAAIC,WAAW,GAAGD,OAAO,CAACE,OAAR,EAAlB;;AAEA,WAAMD,WAAW,GAAG,CAApB,EACA;AACI,YAAME,EAAE,GAAGH,OAAO,CAACE,OAAR,EAAX;AACA,YAAME,KAAK,GAAGJ,OAAO,CAACK,UAAR,EAAd;;AAEA,WAAKT,OAAL,CAAaU,GAAb,CAAiBH,EAAjB,EAAqBC,KAArB;;AACAH,MAAAA,WAAW;AACd;;AAED,WAAO,IAAP;AACH;;AAEgB,MAANM,MAAM,GACjB;AACI,WAAO,KAAKX,OAAZ;AACH;;AA/BL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\n\r\nexport class GroupBadgesParser implements IMessageParser\r\n{\r\n    private _badges: Map<number, string>;\r\n\r\n    flush(): boolean\r\n    {\r\n        this._badges = new Map();\r\n\r\n        return true;\r\n    }\r\n\r\n    parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        let badgesCount = wrapper.readInt();\r\n\r\n        while(badgesCount > 0)\r\n        {\r\n            const id = wrapper.readInt();\r\n            const badge = wrapper.readString();\r\n\r\n            this._badges.set(id, badge);\r\n            badgesCount--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get badges(): Map<number, string>\r\n    {\r\n        return this._badges;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}