{"ast":null,"code":"import { Nitro } from '../../../../Nitro';\nexport class IssueMessageData {\n  constructor(issueId, state, categoryId, reportedCategoryId, issueAgeinMs, priority, groupingId, reporterUserId, reporterUsername, reportedUserId, reportedUsername, pickerUserId, pickerUsername, message, chatRecordId, patterns) {\n    this._issueId = void 0;\n    this._state = void 0;\n    this._categoryId = void 0;\n    this._reportedCategoryId = void 0;\n    this._issueAgeInMilliseconds = void 0;\n    this._priority = void 0;\n    this._groupingId = void 0;\n    this._reporterUserId = void 0;\n    this._reporterUserName = void 0;\n    this._reportedUserId = void 0;\n    this._reportedUserName = void 0;\n    this._pickerUserId = void 0;\n    this._pickerUserName = void 0;\n    this._message = void 0;\n    this._chatRecordId = void 0;\n    this._patterns = void 0;\n    this._disposed = false;\n    this._creationTimeInMilliseconds = void 0;\n    this._issueId = issueId;\n    this._state = state;\n    this._categoryId = categoryId;\n    this._reportedCategoryId = reportedCategoryId;\n    this._issueAgeInMilliseconds = issueAgeinMs;\n    this._priority = priority;\n    this._groupingId = groupingId;\n    this._reporterUserId = reporterUserId;\n    this._reporterUserName = reporterUsername;\n    this._reportedUserId = reportedUserId;\n    this._reportedUserName = reportedUsername;\n    this._pickerUserId = pickerUserId;\n    this._pickerUserName = pickerUsername;\n    this._message = message;\n    this._chatRecordId = chatRecordId;\n    this._patterns = patterns;\n    this._creationTimeInMilliseconds = Nitro.instance.time; //getTimer()\n  }\n\n  get issueId() {\n    return this._issueId;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get categoryId() {\n    return this._categoryId;\n  }\n\n  get reportedCategoryId() {\n    return this._reportedCategoryId;\n  }\n\n  get issueAgeInMilliseconds() {\n    return this._issueAgeInMilliseconds;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  get groupingId() {\n    return this._groupingId;\n  }\n\n  get reporterUserId() {\n    return this._reporterUserId;\n  }\n\n  get reporterUserName() {\n    return this._reporterUserName;\n  }\n\n  get reportedUserId() {\n    return this._reportedUserId;\n  }\n\n  get reportedUserName() {\n    return this._reportedUserName;\n  }\n\n  get pickerUserId() {\n    return this._pickerUserId;\n  }\n\n  get pickerUserName() {\n    return this._pickerUserName;\n  }\n\n  get message() {\n    return this._message;\n  }\n\n  get chatRecordId() {\n    return this._chatRecordId;\n  }\n\n  get patterns() {\n    return this._patterns;\n  }\n\n  dispose() {\n    if (this.disposed) {\n      return;\n    }\n\n    for (const k of this._patterns) {\n      k.dispose();\n    }\n\n    this._patterns = [];\n    this._disposed = true;\n  }\n\n  get disposed() {\n    return this._disposed;\n  }\n\n  getOpenTime(k) {\n    const _local_2 = (this._issueAgeInMilliseconds + k - this._creationTimeInMilliseconds) / 1000;\n\n    const _local_3 = _local_2 / 60;\n\n    const _local_4 = _local_3 % 60;\n\n    const _local_5 = _local_3 / 60;\n\n    const _local_6 = (_local_4 < 10 ? '0' : '') + _local_4;\n\n    const _local_7 = (_local_5 < 10 ? '0' : '') + _local_5;\n\n    return _local_7 + ':' + _local_6;\n  }\n\n}\nIssueMessageData.STATE_OPEN = 1;\nIssueMessageData.STATE_PICKED = 2;\nIssueMessageData.STATE_CLOSED = 3;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/moderation/IssueMessageData.ts"],"names":["Nitro","IssueMessageData","constructor","issueId","state","categoryId","reportedCategoryId","issueAgeinMs","priority","groupingId","reporterUserId","reporterUsername","reportedUserId","reportedUsername","pickerUserId","pickerUsername","message","chatRecordId","patterns","_issueId","_state","_categoryId","_reportedCategoryId","_issueAgeInMilliseconds","_priority","_groupingId","_reporterUserId","_reporterUserName","_reportedUserId","_reportedUserName","_pickerUserId","_pickerUserName","_message","_chatRecordId","_patterns","_disposed","_creationTimeInMilliseconds","instance","time","issueAgeInMilliseconds","reporterUserName","reportedUserName","pickerUserName","dispose","disposed","k","getOpenTime","_local_2","_local_3","_local_4","_local_5","_local_6","_local_7","STATE_OPEN","STATE_PICKED","STATE_CLOSED"],"mappings":"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","sourcesContent":["import { Nitro } from '../../../../Nitro';\r\nimport { PatternMatchData } from './PatternMatchData';\r\n\r\nexport class IssueMessageData\r\n{\r\n    public static STATE_OPEN: number = 1;\r\n    public static STATE_PICKED: number = 2;\r\n    public static STATE_CLOSED: number = 3;\r\n\r\n    private _issueId: number;\r\n    private _state: number;\r\n    private _categoryId: number;\r\n    private _reportedCategoryId: number;\r\n    private _issueAgeInMilliseconds: number;\r\n    private _priority: number;\r\n    private _groupingId: number;\r\n    private _reporterUserId: number;\r\n    private _reporterUserName: string;\r\n    private _reportedUserId: number;\r\n    private _reportedUserName: string;\r\n    private _pickerUserId: number;\r\n    private _pickerUserName: string;\r\n    private _message: string;\r\n    private _chatRecordId: number;\r\n    private _patterns: PatternMatchData[];\r\n    private _disposed: boolean = false;\r\n    private _creationTimeInMilliseconds: number;\r\n\r\n    constructor(issueId: number, state: number, categoryId: number, reportedCategoryId: number,\r\n        issueAgeinMs: number, priority: number, groupingId: number, reporterUserId: number, reporterUsername: string,\r\n        reportedUserId: number, reportedUsername: string, pickerUserId: number, pickerUsername: string, message: string,\r\n        chatRecordId: number, patterns:PatternMatchData[])\r\n    {\r\n        this._issueId = issueId;\r\n        this._state = state;\r\n        this._categoryId = categoryId;\r\n        this._reportedCategoryId = reportedCategoryId;\r\n        this._issueAgeInMilliseconds = issueAgeinMs;\r\n        this._priority = priority;\r\n        this._groupingId = groupingId;\r\n        this._reporterUserId = reporterUserId;\r\n        this._reporterUserName = reporterUsername;\r\n        this._reportedUserId = reportedUserId;\r\n        this._reportedUserName = reportedUsername;\r\n        this._pickerUserId = pickerUserId;\r\n        this._pickerUserName = pickerUsername;\r\n        this._message = message;\r\n        this._chatRecordId = chatRecordId;\r\n        this._patterns = patterns;\r\n        this._creationTimeInMilliseconds = Nitro.instance.time; //getTimer()\r\n    }\r\n\r\n    public get issueId(): number\r\n    {\r\n        return this._issueId;\r\n    }\r\n\r\n    public get state(): number\r\n    {\r\n        return this._state;\r\n    }\r\n\r\n    public get categoryId(): number\r\n    {\r\n        return this._categoryId;\r\n    }\r\n\r\n    public get reportedCategoryId(): number\r\n    {\r\n        return this._reportedCategoryId;\r\n    }\r\n\r\n    public get issueAgeInMilliseconds(): number\r\n    {\r\n        return this._issueAgeInMilliseconds;\r\n    }\r\n\r\n    public get priority(): number\r\n    {\r\n        return this._priority;\r\n    }\r\n\r\n    public get groupingId(): number\r\n    {\r\n        return this._groupingId;\r\n    }\r\n\r\n    public get reporterUserId(): number\r\n    {\r\n        return this._reporterUserId;\r\n    }\r\n\r\n    public get reporterUserName(): string\r\n    {\r\n        return this._reporterUserName;\r\n    }\r\n\r\n    public get reportedUserId(): number\r\n    {\r\n        return this._reportedUserId;\r\n    }\r\n\r\n    public get reportedUserName(): string\r\n    {\r\n        return this._reportedUserName;\r\n    }\r\n\r\n    public get pickerUserId(): number\r\n    {\r\n        return this._pickerUserId;\r\n    }\r\n\r\n    public get pickerUserName(): string\r\n    {\r\n        return this._pickerUserName;\r\n    }\r\n\r\n    public get message(): string\r\n    {\r\n        return this._message;\r\n    }\r\n\r\n    public get chatRecordId(): number\r\n    {\r\n        return this._chatRecordId;\r\n    }\r\n\r\n    public get patterns(): PatternMatchData[]\r\n    {\r\n        return this._patterns;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n\r\n        if(this.disposed)\r\n        {\r\n            return;\r\n        }\r\n        for(const k of this._patterns)\r\n        {\r\n            k.dispose();\r\n        }\r\n        this._patterns = [];\r\n        this._disposed = true;\r\n    }\r\n\r\n    public get disposed(): boolean\r\n    {\r\n        return this._disposed;\r\n    }\r\n\r\n    public getOpenTime(k: number): string\r\n    {\r\n        const _local_2: number = (((this._issueAgeInMilliseconds + k) - this._creationTimeInMilliseconds) / 1000);\r\n        const _local_3: number = (_local_2 / 60);\r\n        const _local_4: number = (_local_3 % 60);\r\n        const _local_5: number = (_local_3 / 60);\r\n        const _local_6: string = (((_local_4 < 10) ? '0' : '') + _local_4);\r\n        const _local_7: string = (((_local_5 < 10) ? '0' : '') + _local_5);\r\n        return (_local_7 + ':') + _local_6;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}