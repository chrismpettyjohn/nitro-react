{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/layout/LayoutProgressBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Base, Column, Flex } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LayoutProgressBar = props => {\n  _s();\n\n  const {\n    text = '',\n    progress = 0,\n    maxProgress = 100,\n    position = 'relative',\n    justifyContent = 'center',\n    classNames = [],\n    children = null,\n    ...rest\n  } = props;\n  const getClassNames = useMemo(() => {\n    const newClassNames = ['nitro-progress-bar', 'text-white'];\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [classNames]);\n  return /*#__PURE__*/_jsxDEV(Column, {\n    position: position,\n    justifyContent: justifyContent,\n    classNames: getClassNames,\n    ...rest,\n    children: [text && text.length > 0 && /*#__PURE__*/_jsxDEV(Flex, {\n      fit: true,\n      center: true,\n      position: \"absolute\",\n      className: \"nitro-progress-bar-text small\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Base, {\n      className: \"nitro-progress-bar-inner\",\n      style: {\n        width: ~~((progress - 0) * (100 - 0) / (maxProgress - 0) + 0) + '%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LayoutProgressBar, \"dyksOB5DadzwRcuUMLdvWwPn8K8=\");\n\n_c = LayoutProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutProgressBar\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/layout/LayoutProgressBar.tsx"],"names":["useMemo","Base","Column","Flex","LayoutProgressBar","props","text","progress","maxProgress","position","justifyContent","classNames","children","rest","getClassNames","newClassNames","length","push","width"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAoCC,IAApC,QAAgD,IAAhD;;AASA,OAAO,MAAMC,iBAA6C,GAAGC,KAAK,IAClE;AAAA;;AACI,QAAM;AAAEC,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,QAAQ,GAAG,CAAxB;AAA2BC,IAAAA,WAAW,GAAG,GAAzC;AAA8CC,IAAAA,QAAQ,GAAG,UAAzD;AAAqEC,IAAAA,cAAc,GAAG,QAAtF;AAAgGC,IAAAA,UAAU,GAAG,EAA7G;AAAiHC,IAAAA,QAAQ,GAAG,IAA5H;AAAkI,OAAGC;AAArI,MAA8IR,KAApJ;AAEA,QAAMS,aAAa,GAAGd,OAAO,CAAC,MAC9B;AACI,UAAMe,aAAuB,GAAG,CAAE,oBAAF,EAAwB,YAAxB,CAAhC;AAEA,QAAGJ,UAAU,CAACK,MAAd,EAAsBD,aAAa,CAACE,IAAd,CAAmB,GAAGN,UAAtB;AAEtB,WAAOI,aAAP;AACH,GAP4B,EAO1B,CAAEJ,UAAF,CAP0B,CAA7B;AASA,sBACI,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGF,QAAnB;AAA8B,IAAA,cAAc,EAAGC,cAA/C;AAAgE,IAAA,UAAU,EAAGI,aAA7E;AAAA,OAAkGD,IAAlG;AAAA,eACMP,IAAI,IAAKA,IAAI,CAACU,MAAL,GAAc,CAAvB,iBACE,QAAC,IAAD;AAAM,MAAA,GAAG,MAAT;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,QAAQ,EAAC,UAA1B;AAAqC,MAAA,SAAS,EAAC,+BAA/C;AAAA,gBAAiFV;AAAjF;AAAA;AAAA;AAAA;AAAA,YAFR,eAGI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAA2C,MAAA,KAAK,EAAG;AAAEY,QAAAA,KAAK,EAAG,CAAC,EAAI,CAACX,QAAQ,GAAG,CAAZ,KAAkB,MAAM,CAAxB,CAAD,IAAgCC,WAAW,GAAG,CAA9C,CAAD,GAAqD,CAAvD,CAAD,GAA6D;AAAvE;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIMI,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArBM;;GAAMR,iB;;KAAAA,iB","sourcesContent":["import { FC, useMemo } from 'react';\nimport { Base, Column, ColumnProps, Flex } from '..';\n\ninterface LayoutProgressBarProps extends ColumnProps\n{\n    text?: string;\n    progress: number;\n    maxProgress?: number;\n}\n\nexport const LayoutProgressBar: FC<LayoutProgressBarProps> = props =>\n{\n    const { text = '', progress = 0, maxProgress = 100, position = 'relative', justifyContent = 'center', classNames = [], children = null, ...rest } = props;\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [ 'nitro-progress-bar', 'text-white' ];\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ classNames ]);\n\n    return (\n        <Column position={ position } justifyContent={ justifyContent } classNames={ getClassNames } { ...rest }>\n            { text && (text.length > 0) &&\n                <Flex fit center position=\"absolute\" className=\"nitro-progress-bar-text small\">{ text }</Flex> }\n            <Base className=\"nitro-progress-bar-inner\" style={ { width: (~~((((progress - 0) * (100 - 0)) / (maxProgress - 0)) + 0) + '%') } } />\n            { children }\n        </Column>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}