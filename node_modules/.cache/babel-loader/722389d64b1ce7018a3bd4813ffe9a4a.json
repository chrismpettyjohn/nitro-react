{"ast":null,"code":"export class BinaryReader {\n  constructor(buffer) {\n    this._position = void 0;\n    this._dataView = void 0;\n    this._position = 0;\n    this._dataView = new DataView(buffer);\n  }\n\n  readBytes(length) {\n    const buffer = new BinaryReader(this._dataView.buffer.slice(this._position, this._position + length));\n    this._position += length;\n    return buffer;\n  }\n\n  readByte() {\n    const byte = this._dataView.getInt8(this._position);\n\n    this._position++;\n    return byte;\n  }\n\n  readShort() {\n    const short = this._dataView.getInt16(this._position);\n\n    this._position += 2;\n    return short;\n  }\n\n  readInt() {\n    const int = this._dataView.getInt32(this._position);\n\n    this._position += 4;\n    return int;\n  }\n\n  readFloat() {\n    const float = this._dataView.getFloat32(this._position);\n\n    this._position += 4;\n    return float;\n  }\n\n  readDouble() {\n    const double = this._dataView.getFloat64(this._position);\n\n    this._position += 8;\n    return double;\n  }\n\n  remaining() {\n    return this._dataView.byteLength - this._position;\n  }\n\n  toString(encoding) {\n    return new TextDecoder().decode(this._dataView.buffer);\n  }\n\n  toArrayBuffer() {\n    return this._dataView.buffer;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/core/communication/codec/BinaryReader.ts"],"names":["BinaryReader","constructor","buffer","_position","_dataView","DataView","readBytes","length","slice","readByte","byte","getInt8","readShort","short","getInt16","readInt","int","getInt32","readFloat","float","getFloat32","readDouble","double","getFloat64","remaining","byteLength","toString","encoding","TextDecoder","decode","toArrayBuffer"],"mappings":"AAAA,OAAO,MAAMA,YAAN,CACP;AAIIC,EAAAA,WAAW,CAACC,MAAD,EACX;AAAA,SAJQC,SAIR;AAAA,SAHQC,SAGR;AACI,SAAKD,SAAL,GAAiB,CAAjB;AACA,SAAKC,SAAL,GAAiB,IAAIC,QAAJ,CAAaH,MAAb,CAAjB;AACH;;AAEMI,EAAAA,SAAS,CAACC,MAAD,EAChB;AACI,UAAML,MAAM,GAAG,IAAIF,YAAJ,CAAiB,KAAKI,SAAL,CAAeF,MAAf,CAAsBM,KAAtB,CAA4B,KAAKL,SAAjC,EAA4C,KAAKA,SAAL,GAAiBI,MAA7D,CAAjB,CAAf;AAEA,SAAKJ,SAAL,IAAkBI,MAAlB;AAEA,WAAOL,MAAP;AACH;;AAEMO,EAAAA,QAAQ,GACf;AACI,UAAMC,IAAI,GAAG,KAAKN,SAAL,CAAeO,OAAf,CAAuB,KAAKR,SAA5B,CAAb;;AAEA,SAAKA,SAAL;AAEA,WAAOO,IAAP;AACH;;AAEME,EAAAA,SAAS,GAChB;AACI,UAAMC,KAAK,GAAG,KAAKT,SAAL,CAAeU,QAAf,CAAwB,KAAKX,SAA7B,CAAd;;AAEA,SAAKA,SAAL,IAAkB,CAAlB;AAEA,WAAOU,KAAP;AACH;;AAEME,EAAAA,OAAO,GACd;AACI,UAAMC,GAAG,GAAG,KAAKZ,SAAL,CAAea,QAAf,CAAwB,KAAKd,SAA7B,CAAZ;;AAEA,SAAKA,SAAL,IAAkB,CAAlB;AAEA,WAAOa,GAAP;AACH;;AAEME,EAAAA,SAAS,GAChB;AACI,UAAMC,KAAK,GAAG,KAAKf,SAAL,CAAegB,UAAf,CAA0B,KAAKjB,SAA/B,CAAd;;AAEA,SAAKA,SAAL,IAAkB,CAAlB;AAEA,WAAOgB,KAAP;AACH;;AAEME,EAAAA,UAAU,GACjB;AACI,UAAMC,MAAM,GAAG,KAAKlB,SAAL,CAAemB,UAAf,CAA0B,KAAKpB,SAA/B,CAAf;;AAEA,SAAKA,SAAL,IAAkB,CAAlB;AAEA,WAAOmB,MAAP;AACH;;AAEME,EAAAA,SAAS,GAChB;AACI,WAAO,KAAKpB,SAAL,CAAeqB,UAAf,GAA4B,KAAKtB,SAAxC;AACH;;AAEMuB,EAAAA,QAAQ,CAACC,QAAD,EACf;AACI,WAAO,IAAIC,WAAJ,GAAkBC,MAAlB,CAAyB,KAAKzB,SAAL,CAAeF,MAAxC,CAAP;AACH;;AAEM4B,EAAAA,aAAa,GACpB;AACI,WAAO,KAAK1B,SAAL,CAAeF,MAAtB;AACH;;AA7EL","sourcesContent":["export class BinaryReader\r\n{\r\n    private _position: number;\r\n    private _dataView: DataView;\r\n\r\n    constructor(buffer: ArrayBuffer)\r\n    {\r\n        this._position = 0;\r\n        this._dataView = new DataView(buffer);\r\n    }\r\n\r\n    public readBytes(length: number): BinaryReader\r\n    {\r\n        const buffer = new BinaryReader(this._dataView.buffer.slice(this._position, this._position + length));\r\n\r\n        this._position += length;\r\n\r\n        return buffer;\r\n    }\r\n\r\n    public readByte(): number\r\n    {\r\n        const byte = this._dataView.getInt8(this._position);\r\n\r\n        this._position++;\r\n\r\n        return byte;\r\n    }\r\n\r\n    public readShort(): number\r\n    {\r\n        const short = this._dataView.getInt16(this._position);\r\n\r\n        this._position += 2;\r\n\r\n        return short;\r\n    }\r\n\r\n    public readInt(): number\r\n    {\r\n        const int = this._dataView.getInt32(this._position);\r\n\r\n        this._position += 4;\r\n\r\n        return int;\r\n    }\r\n\r\n    public readFloat(): number\r\n    {\r\n        const float = this._dataView.getFloat32(this._position);\r\n\r\n        this._position += 4;\r\n\r\n        return float;\r\n    }\r\n\r\n    public readDouble(): number\r\n    {\r\n        const double = this._dataView.getFloat64(this._position);\r\n\r\n        this._position += 8;\r\n\r\n        return double;\r\n    }\r\n\r\n    public remaining(): number\r\n    {\r\n        return this._dataView.byteLength - this._position;\r\n    }\r\n\r\n    public toString(encoding?: string): string\r\n    {\r\n        return new TextDecoder().decode(this._dataView.buffer);\r\n    }\r\n\r\n    public toArrayBuffer(): ArrayBuffer\r\n    {\r\n        return this._dataView.buffer;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}