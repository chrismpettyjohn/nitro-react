{"ast":null,"code":"import { RoomObjectVariable } from '../../RoomObjectVariable';\nimport { ObjectDataBase } from '../ObjectDataBase';\nimport { ObjectDataKey } from '../ObjectDataKey';\nimport { HighScoreData } from './HighScoreData';\nexport class HighScoreDataType extends ObjectDataBase {\n  constructor() {\n    super();\n    this._state = void 0;\n    this._scoreType = void 0;\n    this._clearType = void 0;\n    this._entries = void 0;\n    this._state = '';\n    this._scoreType = -1;\n    this._clearType = -1;\n    this._entries = [];\n  }\n\n  parseWrapper(wrapper) {\n    if (!wrapper) return;\n    this._state = wrapper.readString();\n    this._scoreType = wrapper.readInt();\n    this._clearType = wrapper.readInt();\n    let totalScores = wrapper.readInt();\n\n    while (totalScores > 0) {\n      const data = new HighScoreData();\n      data.score = wrapper.readInt();\n      let totalUsers = wrapper.readInt();\n\n      while (totalUsers > 0) {\n        data.addUsername(wrapper.readString());\n        totalUsers--;\n      }\n\n      this._entries.push(data);\n\n      totalScores--;\n    }\n\n    super.parseWrapper(wrapper);\n  }\n\n  initializeFromRoomObjectModel(model) {\n    this._scoreType = model.getValue(RoomObjectVariable.FURNITURE_HIGHSCORE_SCORE_TYPE);\n    this._clearType = model.getValue(RoomObjectVariable.FURNITURE_HIGHSCORE_CLEAR_TYPE);\n    this._entries = [];\n    const totalEntries = model.getValue(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_COUNT);\n    let i = 0;\n\n    while (i < totalEntries) {\n      const data = new HighScoreData();\n      data.score = model.getValue(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_SCORE_ + i);\n      data.users = model.getValue(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_USERS_ + i);\n\n      this._entries.push(data);\n\n      i++;\n    }\n\n    super.initializeFromRoomObjectModel(model);\n  }\n\n  writeRoomObjectModel(model) {\n    super.writeRoomObjectModel(model);\n    model.setValue(RoomObjectVariable.FURNITURE_DATA_FORMAT, HighScoreDataType.FORMAT_KEY);\n    model.setValue(RoomObjectVariable.FURNITURE_HIGHSCORE_SCORE_TYPE, this._scoreType);\n    model.setValue(RoomObjectVariable.FURNITURE_HIGHSCORE_CLEAR_TYPE, this._clearType);\n\n    if (this._entries) {\n      model.setValue(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_COUNT, this._entries.length);\n      let i = 0;\n\n      while (i < this._entries.length) {\n        const entry = this._entries[i];\n        model.setValue(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_SCORE_ + i, entry.score);\n        model.setValue(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_USERS_ + i, entry.users);\n        i++;\n      }\n    }\n  }\n\n  getLegacyString() {\n    return this._state;\n  }\n\n  get entries() {\n    return this._entries;\n  }\n\n  get clearType() {\n    return this._clearType;\n  }\n\n  get scoreType() {\n    return this._scoreType;\n  }\n\n}\nHighScoreDataType.FORMAT_KEY = ObjectDataKey.HIGHSCORE_KEY;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/data/type/HighScoreDataType.ts"],"names":["RoomObjectVariable","ObjectDataBase","ObjectDataKey","HighScoreData","HighScoreDataType","constructor","_state","_scoreType","_clearType","_entries","parseWrapper","wrapper","readString","readInt","totalScores","data","score","totalUsers","addUsername","push","initializeFromRoomObjectModel","model","getValue","FURNITURE_HIGHSCORE_SCORE_TYPE","FURNITURE_HIGHSCORE_CLEAR_TYPE","totalEntries","FURNITURE_HIGHSCORE_DATA_ENTRY_COUNT","i","FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_SCORE_","users","FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_USERS_","writeRoomObjectModel","setValue","FURNITURE_DATA_FORMAT","FORMAT_KEY","length","entry","getLegacyString","entries","clearType","scoreType","HIGHSCORE_KEY"],"mappings":"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","sourcesContent":["import { IMessageDataWrapper } from '../../../../../core/communication/messages/IMessageDataWrapper';\r\nimport { IRoomObjectModel } from '../../../../../room/object/IRoomObjectModel';\r\nimport { RoomObjectVariable } from '../../RoomObjectVariable';\r\nimport { IObjectData } from '../IObjectData';\r\nimport { ObjectDataBase } from '../ObjectDataBase';\r\nimport { ObjectDataKey } from '../ObjectDataKey';\r\nimport { HighScoreData } from './HighScoreData';\r\n\r\nexport class HighScoreDataType extends ObjectDataBase implements IObjectData\r\n{\r\n    public static FORMAT_KEY = ObjectDataKey.HIGHSCORE_KEY;\r\n\r\n    private _state: string;\r\n    private _scoreType: number;\r\n    private _clearType: number;\r\n    private _entries: HighScoreData[];\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        this._state = '';\r\n        this._scoreType = -1;\r\n        this._clearType = -1;\r\n        this._entries = [];\r\n    }\r\n\r\n    public parseWrapper(wrapper: IMessageDataWrapper): void\r\n    {\r\n        if(!wrapper) return;\r\n\r\n        this._state = wrapper.readString();\r\n        this._scoreType = wrapper.readInt();\r\n        this._clearType = wrapper.readInt();\r\n\r\n        let totalScores = wrapper.readInt();\r\n\r\n        while(totalScores > 0)\r\n        {\r\n            const data = new HighScoreData();\r\n\r\n            data.score = wrapper.readInt();\r\n\r\n            let totalUsers = wrapper.readInt();\r\n\r\n            while(totalUsers > 0)\r\n            {\r\n                data.addUsername(wrapper.readString());\r\n\r\n                totalUsers--;\r\n            }\r\n\r\n            this._entries.push(data);\r\n\r\n            totalScores--;\r\n        }\r\n\r\n        super.parseWrapper(wrapper);\r\n    }\r\n\r\n    public initializeFromRoomObjectModel(model: IRoomObjectModel): void\r\n    {\r\n        this._scoreType = model.getValue<number>(RoomObjectVariable.FURNITURE_HIGHSCORE_SCORE_TYPE);\r\n        this._clearType = model.getValue<number>(RoomObjectVariable.FURNITURE_HIGHSCORE_CLEAR_TYPE);\r\n        this._entries = [];\r\n\r\n        const totalEntries = model.getValue<number>(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_COUNT);\r\n\r\n        let i = 0;\r\n\r\n        while(i < totalEntries)\r\n        {\r\n            const data = new HighScoreData();\r\n\r\n            data.score = model.getValue<number>(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_SCORE_ + i);\r\n            data.users = model.getValue<string[]>(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_USERS_ + i);\r\n\r\n            this._entries.push(data);\r\n\r\n            i++;\r\n        }\r\n\r\n        super.initializeFromRoomObjectModel(model);\r\n    }\r\n\r\n    public writeRoomObjectModel(model: IRoomObjectModel): void\r\n    {\r\n        super.writeRoomObjectModel(model);\r\n\r\n        model.setValue(RoomObjectVariable.FURNITURE_DATA_FORMAT, HighScoreDataType.FORMAT_KEY);\r\n        model.setValue(RoomObjectVariable.FURNITURE_HIGHSCORE_SCORE_TYPE, this._scoreType);\r\n        model.setValue(RoomObjectVariable.FURNITURE_HIGHSCORE_CLEAR_TYPE, this._clearType);\r\n\r\n        if(this._entries)\r\n        {\r\n            model.setValue(RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_COUNT, this._entries.length);\r\n\r\n            let i = 0;\r\n\r\n            while(i < this._entries.length)\r\n            {\r\n                const entry = this._entries[i];\r\n\r\n                model.setValue((RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_SCORE_ + i), entry.score);\r\n                model.setValue((RoomObjectVariable.FURNITURE_HIGHSCORE_DATA_ENTRY_BASE_USERS_ + i), entry.users);\r\n\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getLegacyString(): string\r\n    {\r\n        return this._state;\r\n    }\r\n\r\n    public get entries(): HighScoreData[]\r\n    {\r\n        return this._entries;\r\n    }\r\n\r\n    public get clearType(): number\r\n    {\r\n        return this._clearType;\r\n    }\r\n\r\n    public get scoreType(): number\r\n    {\r\n        return this._scoreType;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}