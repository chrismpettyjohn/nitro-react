{"ast":null,"code":"export class GroupBuyDataParser {\n  constructor() {\n    this._groupCost = void 0;\n    this._availableRooms = void 0;\n  }\n\n  flush() {\n    this._groupCost = 0;\n    this._availableRooms = new Map();\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._groupCost = wrapper.readInt();\n    let availableRoomsCount = wrapper.readInt();\n\n    while (availableRoomsCount > 0) {\n      const roomId = wrapper.readInt();\n      const roomName = wrapper.readString();\n      wrapper.readBoolean();\n\n      this._availableRooms.set(roomId, roomName);\n\n      availableRoomsCount--;\n    }\n\n    return true;\n  }\n\n  get groupCost() {\n    return this._groupCost;\n  }\n\n  get availableRooms() {\n    return this._availableRooms;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/group/GroupBuyDataParser.ts"],"names":["GroupBuyDataParser","_groupCost","_availableRooms","flush","Map","parse","wrapper","readInt","availableRoomsCount","roomId","roomName","readString","readBoolean","set","groupCost","availableRooms"],"mappings":"AAEA,OAAO,MAAMA,kBAAN,CACP;AAAA;AAAA,SACYC,UADZ;AAAA,SAEYC,eAFZ;AAAA;;AAIIC,EAAAA,KAAK,GACL;AACI,SAAKF,UAAL,GAAkB,CAAlB;AACA,SAAKC,eAAL,GAAuB,IAAIE,GAAJ,EAAvB;AAEA,WAAO,IAAP;AACH;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EACL;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKL,UAAL,GAAkBK,OAAO,CAACC,OAAR,EAAlB;AACA,QAAIC,mBAAmB,GAAGF,OAAO,CAACC,OAAR,EAA1B;;AAEA,WAAMC,mBAAmB,GAAG,CAA5B,EACA;AACI,YAAMC,MAAM,GAAGH,OAAO,CAACC,OAAR,EAAf;AACA,YAAMG,QAAQ,GAAGJ,OAAO,CAACK,UAAR,EAAjB;AACAL,MAAAA,OAAO,CAACM,WAAR;;AAEA,WAAKV,eAAL,CAAqBW,GAArB,CAAyBJ,MAAzB,EAAiCC,QAAjC;;AAEAF,MAAAA,mBAAmB;AACtB;;AACD,WAAO,IAAP;AACH;;AAEmB,MAATM,SAAS,GACpB;AACI,WAAO,KAAKb,UAAZ;AACH;;AAEwB,MAAdc,cAAc,GACzB;AACI,WAAO,KAAKb,eAAZ;AACH;;AAxCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\n\r\nexport class GroupBuyDataParser implements IMessageParser\r\n{\r\n    private _groupCost: number;\r\n    private _availableRooms: Map<number, string>;\r\n\r\n    flush(): boolean\r\n    {\r\n        this._groupCost = 0;\r\n        this._availableRooms = new Map();\r\n\r\n        return true;\r\n    }\r\n\r\n    parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._groupCost = wrapper.readInt();\r\n        let availableRoomsCount = wrapper.readInt();\r\n\r\n        while(availableRoomsCount > 0)\r\n        {\r\n            const roomId = wrapper.readInt();\r\n            const roomName = wrapper.readString();\r\n            wrapper.readBoolean();\r\n\r\n            this._availableRooms.set(roomId, roomName);\r\n\r\n            availableRoomsCount--;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public get groupCost(): number\r\n    {\r\n        return this._groupCost;\r\n    }\r\n\r\n    public get availableRooms(): Map<number, string>\r\n    {\r\n        return this._availableRooms;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}