{"ast":null,"code":"import { Disposable } from '../../core/common/disposable/Disposable';\nimport { Vector3d } from '../../room/utils/Vector3d';\nimport { AvatarGuideStatus } from '../avatar/enum/AvatarGuideStatus';\nimport { PetType } from '../avatar/pets/PetType';\nimport { ObjectsDataUpdateEvent, PetExperienceEvent } from '../communication';\nimport { GuideSessionEndedMessageEvent } from '../communication/messages/incoming/help/GuideSessionEndedMessageEvent';\nimport { GuideSessionErrorMessageEvent } from '../communication/messages/incoming/help/GuideSessionErrorMessageEvent';\nimport { GuideSessionStartedMessageEvent } from '../communication/messages/incoming/help/GuideSessionStartedMessageEvent';\nimport { ObjectsRollingEvent } from '../communication/messages/incoming/room/engine/ObjectsRollingEvent';\nimport { DiceValueMessageEvent } from '../communication/messages/incoming/room/furniture/DiceValueMessageEvent';\nimport { FurnitureFloorAddEvent } from '../communication/messages/incoming/room/furniture/floor/FurnitureFloorAddEvent';\nimport { FurnitureFloorEvent } from '../communication/messages/incoming/room/furniture/floor/FurnitureFloorEvent';\nimport { FurnitureFloorRemoveEvent } from '../communication/messages/incoming/room/furniture/floor/FurnitureFloorRemoveEvent';\nimport { FurnitureFloorUpdateEvent } from '../communication/messages/incoming/room/furniture/floor/FurnitureFloorUpdateEvent';\nimport { FurnitureAliasesEvent } from '../communication/messages/incoming/room/furniture/FurnitureAliasesEvent';\nimport { FurnitureDataEvent } from '../communication/messages/incoming/room/furniture/FurnitureDataEvent';\nimport { ItemDataUpdateMessageEvent } from '../communication/messages/incoming/room/furniture/ItemDataUpdateMessageEvent';\nimport { OneWayDoorStatusMessageEvent } from '../communication/messages/incoming/room/furniture/OneWayDoorStatusMessageEvent';\nimport { FurnitureWallAddEvent } from '../communication/messages/incoming/room/furniture/wall/FurnitureWallAddEvent';\nimport { FurnitureWallEvent } from '../communication/messages/incoming/room/furniture/wall/FurnitureWallEvent';\nimport { FurnitureWallRemoveEvent } from '../communication/messages/incoming/room/furniture/wall/FurnitureWallRemoveEvent';\nimport { FurnitureWallUpdateEvent } from '../communication/messages/incoming/room/furniture/wall/FurnitureWallUpdateEvent';\nimport { FloorHeightMapEvent } from '../communication/messages/incoming/room/mapping/FloorHeightMapEvent';\nimport { RoomEntryTileMessageEvent } from '../communication/messages/incoming/room/mapping/RoomEntryTileMessageEvent';\nimport { RoomHeightMapEvent } from '../communication/messages/incoming/room/mapping/RoomHeightMapEvent';\nimport { RoomHeightMapUpdateEvent } from '../communication/messages/incoming/room/mapping/RoomHeightMapUpdateEvent';\nimport { RoomPaintEvent } from '../communication/messages/incoming/room/mapping/RoomPaintEvent';\nimport { RoomReadyMessageEvent } from '../communication/messages/incoming/room/mapping/RoomReadyMessageEvent';\nimport { RoomVisualizationSettingsEvent } from '../communication/messages/incoming/room/mapping/RoomVisualizationSettingsEvent';\nimport { PetFigureUpdateEvent } from '../communication/messages/incoming/room/pet/PetFigureUpdateEvent';\nimport { YouArePlayingGameEvent } from '../communication/messages/incoming/room/session/YouArePlayingGameEvent';\nimport { RoomUnitChatEvent } from '../communication/messages/incoming/room/unit/chat/RoomUnitChatEvent';\nimport { RoomUnitChatShoutEvent } from '../communication/messages/incoming/room/unit/chat/RoomUnitChatShoutEvent';\nimport { RoomUnitChatWhisperEvent } from '../communication/messages/incoming/room/unit/chat/RoomUnitChatWhisperEvent';\nimport { RoomUnitTypingEvent } from '../communication/messages/incoming/room/unit/chat/RoomUnitTypingEvent';\nimport { RoomUnitDanceEvent } from '../communication/messages/incoming/room/unit/RoomUnitDanceEvent';\nimport { RoomUnitEffectEvent } from '../communication/messages/incoming/room/unit/RoomUnitEffectEvent';\nimport { RoomUnitEvent } from '../communication/messages/incoming/room/unit/RoomUnitEvent';\nimport { RoomUnitExpressionEvent } from '../communication/messages/incoming/room/unit/RoomUnitExpressionEvent';\nimport { RoomUnitHandItemEvent } from '../communication/messages/incoming/room/unit/RoomUnitHandItemEvent';\nimport { RoomUnitIdleEvent } from '../communication/messages/incoming/room/unit/RoomUnitIdleEvent';\nimport { RoomUnitInfoEvent } from '../communication/messages/incoming/room/unit/RoomUnitInfoEvent';\nimport { RoomUnitNumberEvent } from '../communication/messages/incoming/room/unit/RoomUnitNumberEvent';\nimport { RoomUnitRemoveEvent } from '../communication/messages/incoming/room/unit/RoomUnitRemoveEvent';\nimport { RoomUnitStatusEvent } from '../communication/messages/incoming/room/unit/RoomUnitStatusEvent';\nimport { UserInfoEvent } from '../communication/messages/incoming/user/data/UserInfoEvent';\nimport { IgnoreResultEvent } from '../communication/messages/incoming/user/IgnoreResultEvent';\nimport { FurnitureAliasesComposer } from '../communication/messages/outgoing/room/furniture/FurnitureAliasesComposer';\nimport { GetRoomEntryDataMessageComposer } from '../communication/messages/outgoing/room/layout/GetRoomEntryDataMessageComposer';\nimport { RoomObjectType } from '../room/object/RoomObjectType';\nimport { LegacyDataType } from './object/data/type/LegacyDataType';\nimport { RoomObjectUserType } from './object/RoomObjectUserType';\nimport { RoomObjectVariable } from './object/RoomObjectVariable';\nimport { RoomPlaneParser } from './object/RoomPlaneParser';\nimport { RoomVariableEnum } from './RoomVariableEnum';\nimport { FurnitureStackingHeightMap } from './utils/FurnitureStackingHeightMap';\nimport { LegacyWallGeometry } from './utils/LegacyWallGeometry';\nimport { ObjectRolling } from './utils/ObjectRolling';\nexport class RoomMessageHandler extends Disposable {\n  constructor(roomCreator) {\n    super();\n    this._connection = void 0;\n    this._roomCreator = void 0;\n    this._planeParser = void 0;\n    this._latestEntryTileEvent = void 0;\n    this._currentRoomId = void 0;\n    this._ownUserId = void 0;\n    this._initialConnection = void 0;\n    this._guideId = void 0;\n    this._requesterId = void 0;\n    this._connection = null;\n    this._roomCreator = roomCreator;\n    this._planeParser = new RoomPlaneParser();\n    this._latestEntryTileEvent = null;\n    this._currentRoomId = 0;\n    this._ownUserId = 0;\n    this._initialConnection = true;\n    this._guideId = -1;\n    this._requesterId = -1;\n  }\n\n  onDispose() {\n    super.onDispose();\n    this._connection = null;\n    this._roomCreator = null;\n    this._latestEntryTileEvent = null;\n\n    if (this._planeParser) {\n      this._planeParser.dispose();\n\n      this._planeParser = null;\n    }\n  }\n\n  setConnection(connection) {\n    if (this._connection || !connection) return;\n    this._connection = connection;\n\n    this._connection.addMessageEvent(new UserInfoEvent(this.onUserInfoEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomReadyMessageEvent(this.onRoomReadyMessageEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomPaintEvent(this.onRoomPaintEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FloorHeightMapEvent(this.onRoomModelEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomHeightMapEvent(this.onRoomHeightMapEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomHeightMapUpdateEvent(this.onRoomHeightMapUpdateEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomVisualizationSettingsEvent(this.onRoomThicknessEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomEntryTileMessageEvent(this.onRoomDoorEvent.bind(this)));\n\n    this._connection.addMessageEvent(new ObjectsRollingEvent(this.onRoomRollingEvent.bind(this)));\n\n    this._connection.addMessageEvent(new ObjectsDataUpdateEvent(this.onObjectsDataUpdateEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureAliasesEvent(this.onFurnitureAliasesEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureFloorAddEvent(this.onFurnitureFloorAddEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureFloorEvent(this.onFurnitureFloorEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureFloorRemoveEvent(this.onFurnitureFloorRemoveEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureFloorUpdateEvent(this.onFurnitureFloorUpdateEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureWallAddEvent(this.onFurnitureWallAddEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureWallEvent(this.onFurnitureWallEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureWallRemoveEvent(this.onFurnitureWallRemoveEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureWallUpdateEvent(this.onFurnitureWallUpdateEvent.bind(this)));\n\n    this._connection.addMessageEvent(new FurnitureDataEvent(this.onFurnitureDataEvent.bind(this)));\n\n    this._connection.addMessageEvent(new ItemDataUpdateMessageEvent(this.onItemDataUpdateMessageEvent.bind(this)));\n\n    this._connection.addMessageEvent(new OneWayDoorStatusMessageEvent(this.onOneWayDoorStatusMessageEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitDanceEvent(this.onRoomUnitDanceEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitEffectEvent(this.onRoomUnitEffectEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitEvent(this.onRoomUnitEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitExpressionEvent(this.onRoomUnitExpressionEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitHandItemEvent(this.onRoomUnitHandItemEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitIdleEvent(this.onRoomUnitIdleEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitInfoEvent(this.onRoomUnitInfoEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitNumberEvent(this.onRoomUnitNumberEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitRemoveEvent(this.onRoomUnitRemoveEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitStatusEvent(this.onRoomUnitStatusEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitChatEvent(this.onRoomUnitChatEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitChatShoutEvent(this.onRoomUnitChatEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitChatWhisperEvent(this.onRoomUnitChatEvent.bind(this)));\n\n    this._connection.addMessageEvent(new RoomUnitTypingEvent(this.onRoomUnitTypingEvent.bind(this)));\n\n    this._connection.addMessageEvent(new PetFigureUpdateEvent(this.onPetFigureUpdateEvent.bind(this)));\n\n    this._connection.addMessageEvent(new PetExperienceEvent(this.onPetExperienceEvent.bind(this)));\n\n    this._connection.addMessageEvent(new YouArePlayingGameEvent(this.onYouArePlayingGameEvent.bind(this)));\n\n    this._connection.addMessageEvent(new DiceValueMessageEvent(this.onDiceValueMessageEvent.bind(this)));\n\n    this._connection.addMessageEvent(new IgnoreResultEvent(this.onIgnoreResultEvent.bind(this)));\n\n    this._connection.addMessageEvent(new GuideSessionStartedMessageEvent(this.onGuideSessionStartedMessageEvent.bind(this)));\n\n    this._connection.addMessageEvent(new GuideSessionEndedMessageEvent(this.onGuideSessionEndedMessageEvent.bind(this)));\n\n    this._connection.addMessageEvent(new GuideSessionErrorMessageEvent(this.onGuideSessionErrorMessageEvent.bind(this)));\n  }\n\n  setRoomId(id) {\n    if (this._currentRoomId !== 0) {\n      if (this._roomCreator) this._roomCreator.destroyRoom(this._currentRoomId);\n    }\n\n    this._currentRoomId = id;\n    this._latestEntryTileEvent = null;\n  }\n\n  clearRoomId() {\n    this._currentRoomId = 0;\n    this._latestEntryTileEvent = null;\n  }\n\n  onUserInfoEvent(event) {\n    if (!(event instanceof UserInfoEvent) || !event.connection) return;\n    const parser = event.getParser();\n    if (!parser) return;\n    this._ownUserId = parser.userInfo.userId;\n  }\n\n  onRoomReadyMessageEvent(event) {\n    const parser = event.getParser();\n\n    if (this._currentRoomId !== parser.roomId) {\n      this.setRoomId(parser.roomId);\n    }\n\n    if (this._roomCreator) {\n      this._roomCreator.setRoomInstanceModelName(parser.roomId, parser.name);\n    }\n\n    if (this._initialConnection) {\n      event.connection.send(new FurnitureAliasesComposer());\n      this._initialConnection = false;\n      return;\n    }\n\n    event.connection.send(new GetRoomEntryDataMessageComposer());\n  }\n\n  onRoomPaintEvent(event) {\n    if (!(event instanceof RoomPaintEvent)) return;\n    const parser = event.getParser();\n    if (!parser) return;\n    const floorType = parser.floorType;\n    const wallType = parser.wallType;\n    const landscapeType = parser.landscapeType;\n\n    if (this._roomCreator) {\n      this._roomCreator.updateRoomInstancePlaneType(this._currentRoomId, floorType, wallType, landscapeType);\n    }\n  }\n\n  onRoomModelEvent(event) {\n    if (!(event instanceof FloorHeightMapEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    const wallGeometry = this._roomCreator.getLegacyWallGeometry(this._currentRoomId);\n\n    if (!wallGeometry) return;\n\n    this._planeParser.reset();\n\n    const width = parser.width;\n    const height = parser.height;\n\n    this._planeParser.initializeTileMap(width, height);\n\n    let entryTile = null;\n    if (this._latestEntryTileEvent) entryTile = this._latestEntryTileEvent.getParser();\n    let doorX = -1;\n    let doorY = -1;\n    let doorZ = 0;\n    let doorDirection = 0;\n    let y = 0;\n\n    while (y < height) {\n      let x = 0;\n\n      while (x < width) {\n        const tileHeight = parser.getHeight(x, y);\n\n        if ((y > 0 && y < height - 1 || x > 0 && x < width - 1) && !(tileHeight == RoomPlaneParser.TILE_BLOCKED) && (entryTile == null || x == entryTile.x && y == entryTile.y)) {\n          if (parser.getHeight(x, y - 1) == RoomPlaneParser.TILE_BLOCKED && parser.getHeight(x - 1, y) == RoomPlaneParser.TILE_BLOCKED && parser.getHeight(x, y + 1) == RoomPlaneParser.TILE_BLOCKED) {\n            doorX = x + 0.5;\n            doorY = y;\n            doorZ = tileHeight;\n            doorDirection = 90;\n          }\n\n          if (parser.getHeight(x, y - 1) == RoomPlaneParser.TILE_BLOCKED && parser.getHeight(x - 1, y) == RoomPlaneParser.TILE_BLOCKED && parser.getHeight(x + 1, y) == RoomPlaneParser.TILE_BLOCKED) {\n            doorX = x;\n            doorY = y + 0.5;\n            doorZ = tileHeight;\n            doorDirection = 180;\n          }\n        }\n\n        this._planeParser.setTileHeight(x, y, tileHeight);\n\n        x++;\n      }\n\n      y++;\n    }\n\n    this._planeParser.setTileHeight(Math.floor(doorX), Math.floor(doorY), doorZ);\n\n    this._planeParser.initializeFromTileData(parser.wallHeight);\n\n    this._planeParser.setTileHeight(Math.floor(doorX), Math.floor(doorY), doorZ + this._planeParser.wallHeight);\n\n    if (parser.scale === 64) {\n      this._planeParser.restrictsDragging = true;\n      this._planeParser.restrictsScaling = true;\n      this._planeParser.restrictedScale = 0.5;\n    } else {\n      this._planeParser.restrictsDragging = false;\n      this._planeParser.restrictsScaling = false;\n      this._planeParser.restrictedScale = 1;\n    }\n\n    wallGeometry.scale = LegacyWallGeometry.DEFAULT_SCALE;\n    wallGeometry.initialize(width, height, this._planeParser.floorHeight);\n    let heightIterator = parser.height - 1;\n\n    while (heightIterator >= 0) {\n      let widthIterator = parser.width - 1;\n\n      while (widthIterator >= 0) {\n        wallGeometry.setHeight(widthIterator, heightIterator, this._planeParser.getTileHeight(widthIterator, heightIterator));\n        widthIterator--;\n      }\n\n      heightIterator--;\n    }\n\n    const roomMap = this._planeParser.getMapData();\n\n    roomMap.doors.push({\n      x: doorX,\n      y: doorY,\n      z: doorZ,\n      dir: doorDirection\n    });\n\n    this._roomCreator.createRoomInstance(this._currentRoomId, roomMap);\n  }\n\n  onRoomHeightMapEvent(event) {\n    if (!(event instanceof RoomHeightMapEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n    const width = parser.width;\n    const height = parser.height;\n    const heightMap = new FurnitureStackingHeightMap(width, height);\n    let y = 0;\n\n    while (y < height) {\n      let x = 0;\n\n      while (x < width) {\n        heightMap.setTileHeight(x, y, parser.getTileHeight(x, y));\n        heightMap.setStackingBlocked(x, y, parser.getStackingBlocked(x, y));\n        heightMap.setIsRoomTile(x, y, parser.isRoomTile(x, y));\n        x++;\n      }\n\n      y++;\n    }\n\n    this._roomCreator.setFurnitureStackingHeightMap(this._currentRoomId, heightMap);\n  }\n\n  onRoomHeightMapUpdateEvent(event) {\n    if (!(event instanceof RoomHeightMapUpdateEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    const heightMap = this._roomCreator.getFurnitureStackingHeightMap(this._currentRoomId);\n\n    if (!heightMap) return;\n\n    while (parser.next()) {\n      heightMap.setTileHeight(parser.x, parser.y, parser.tileHeight());\n      heightMap.setStackingBlocked(parser.x, parser.y, parser.isStackingBlocked());\n      heightMap.setIsRoomTile(parser.x, parser.y, parser.isRoomTile());\n    }\n\n    this._roomCreator.refreshTileObjectMap(this._currentRoomId, 'RoomMessageHandler.onRoomHeightMapUpdateEvent()');\n  }\n\n  onRoomThicknessEvent(event) {\n    if (!(event instanceof RoomVisualizationSettingsEvent)) return;\n    const parser = event.getParser();\n    if (!parser) return;\n    const visibleWall = !parser.hideWalls;\n    const visibleFloor = true;\n    const thicknessWall = parser.thicknessWall;\n    const thicknessFloor = parser.thicknessFloor;\n\n    if (this._roomCreator) {\n      this._roomCreator.updateRoomInstancePlaneVisibility(this._currentRoomId, visibleWall, visibleFloor);\n\n      this._roomCreator.updateRoomInstancePlaneThickness(this._currentRoomId, thicknessWall, thicknessFloor);\n    }\n  }\n\n  onRoomDoorEvent(event) {\n    if (!(event instanceof RoomEntryTileMessageEvent)) return;\n    this._latestEntryTileEvent = event;\n  }\n\n  onRoomRollingEvent(event) {\n    if (!(event instanceof ObjectsRollingEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n\n    this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.rollerId, null, null, 1, null);\n\n    this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.rollerId, null, null, 2, null);\n\n    const furnitureRolling = parser.itemsRolling;\n\n    if (furnitureRolling && furnitureRolling.length) {\n      for (const rollData of furnitureRolling) {\n        if (!rollData) continue;\n\n        this._roomCreator.rollRoomObjectFloor(this._currentRoomId, rollData.id, rollData.location, rollData.targetLocation);\n      }\n    }\n\n    const unitRollData = parser.unitRolling;\n\n    if (unitRollData) {\n      this._roomCreator.updateRoomObjectUserLocation(this._currentRoomId, unitRollData.id, unitRollData.location, unitRollData.targetLocation);\n\n      const object = this._roomCreator.getRoomObjectUser(this._currentRoomId, unitRollData.id);\n\n      if (object && object.type !== RoomObjectUserType.MONSTER_PLANT) {\n        let posture = 'std';\n\n        switch (unitRollData.movementType) {\n          case ObjectRolling.MOVE:\n            posture = 'mv';\n            break;\n\n          case ObjectRolling.SLIDE:\n            posture = 'std';\n            break;\n        }\n\n        this._roomCreator.updateRoomObjectUserPosture(this._currentRoomId, unitRollData.id, posture);\n      }\n    }\n  }\n\n  onObjectsDataUpdateEvent(event) {\n    if (!(event instanceof ObjectsDataUpdateEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    for (const object of parser.objects) {\n      this._roomCreator.updateRoomObjectFloor(this._currentRoomId, object.id, null, null, object.state, object.data);\n    }\n  }\n\n  onFurnitureAliasesEvent(event) {\n    if (!(event instanceof FurnitureAliasesEvent) || !event.connection || !this._roomCreator) return;\n    const alises = event.getParser().aliases;\n\n    this._connection.send(new GetRoomEntryDataMessageComposer());\n  }\n\n  onFurnitureFloorAddEvent(event) {\n    if (!(event instanceof FurnitureFloorAddEvent) || !event.connection || !this._roomCreator) return;\n    const item = event.getParser().item;\n    if (!item) return;\n    this.addRoomObjectFurnitureFloor(this._currentRoomId, item);\n  }\n\n  onFurnitureFloorEvent(event) {\n    if (!(event instanceof FurnitureFloorEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n    const totalObjects = parser.items.length;\n    let iterator = 0;\n\n    while (iterator < totalObjects) {\n      const object = parser.items[iterator];\n      if (object) this.addRoomObjectFurnitureFloor(this._currentRoomId, object);\n      iterator++;\n    }\n  }\n\n  onFurnitureFloorRemoveEvent(event) {\n    if (!(event instanceof FurnitureFloorRemoveEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    if (parser.delay > 0) {\n      setTimeout(() => {\n        this._roomCreator.removeRoomObjectFloor(this._currentRoomId, parser.itemId, parser.isExpired ? -1 : parser.userId, true);\n      }, parser.delay);\n    } else {\n      this._roomCreator.removeRoomObjectFloor(this._currentRoomId, parser.itemId, parser.isExpired ? -1 : parser.userId, true);\n    }\n  }\n\n  onFurnitureFloorUpdateEvent(event) {\n    if (!(event instanceof FurnitureFloorUpdateEvent) || !event.connection || !this._roomCreator) return;\n    const item = event.getParser().item;\n    if (!item) return;\n    const location = new Vector3d(item.x, item.y, item.z);\n    const direction = new Vector3d(item.direction);\n\n    this._roomCreator.updateRoomObjectFloor(this._currentRoomId, item.itemId, location, direction, item.data.state, item.data, item.extra);\n\n    this._roomCreator.updateRoomObjectFloorHeight(this._currentRoomId, item.itemId, item.stackHeight);\n\n    this._roomCreator.updateRoomObjectFloorExpiration(this._currentRoomId, item.itemId, item.expires);\n  }\n\n  onFurnitureWallAddEvent(event) {\n    if (!(event instanceof FurnitureWallAddEvent) || !event.connection || !this._roomCreator) return;\n    const data = event.getParser().item;\n    if (!data) return;\n    this.addRoomObjectFurnitureWall(this._currentRoomId, data);\n  }\n\n  onFurnitureWallEvent(event) {\n    if (!(event instanceof FurnitureWallEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n    const totalObjects = parser.items.length;\n    let iterator = 0;\n\n    while (iterator < totalObjects) {\n      const data = parser.items[iterator];\n      if (data) this.addRoomObjectFurnitureWall(this._currentRoomId, data);\n      iterator++;\n    }\n  }\n\n  onFurnitureWallRemoveEvent(event) {\n    if (!(event instanceof FurnitureWallRemoveEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    this._roomCreator.removeRoomObjectWall(this._currentRoomId, parser.itemId, parser.userId);\n  }\n\n  onFurnitureWallUpdateEvent(event) {\n    if (!(event instanceof FurnitureWallUpdateEvent) || !event.connection || !this._roomCreator) return;\n\n    const wallGeometry = this._roomCreator.getLegacyWallGeometry(this._currentRoomId);\n\n    if (!wallGeometry) return;\n    const item = event.getParser().item;\n    if (!item) return;\n    const location = wallGeometry.getLocation(item.width, item.height, item.localX, item.localY, item.direction);\n    const direction = new Vector3d(wallGeometry.getDirection(item.direction));\n\n    this._roomCreator.updateRoomObjectWall(this._currentRoomId, item.itemId, location, direction, item.state, item.stuffData);\n\n    this._roomCreator.updateRoomObjectWallExpiration(this._currentRoomId, item.itemId, item.secondsToExpiration);\n  }\n\n  onFurnitureDataEvent(event) {\n    if (!(event instanceof FurnitureDataEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n\n    this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.furnitureId, null, null, parser.objectData.state, parser.objectData);\n  }\n\n  onItemDataUpdateMessageEvent(event) {\n    if (!(event instanceof ItemDataUpdateMessageEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n\n    this._roomCreator.updateRoomObjectWallItemData(this._currentRoomId, parser.furnitureId, parser.data);\n  }\n\n  onOneWayDoorStatusMessageEvent(event) {\n    if (!(event instanceof OneWayDoorStatusMessageEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n\n    this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.itemId, null, null, parser.state, new LegacyDataType());\n  }\n\n  onDiceValueMessageEvent(event) {\n    if (!(event instanceof DiceValueMessageEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n\n    this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.itemId, null, null, parser.value, new LegacyDataType());\n  }\n\n  onRoomUnitDanceEvent(event) {\n    if (!(event instanceof RoomUnitDanceEvent) || !event.connection || !this._roomCreator) return;\n\n    this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_DANCE, event.getParser().danceId);\n  }\n\n  onRoomUnitEffectEvent(event) {\n    if (!(event instanceof RoomUnitEffectEvent) || !event.connection || !this._roomCreator) return;\n\n    this._roomCreator.updateRoomObjectUserEffect(this._currentRoomId, event.getParser().unitId, event.getParser().effectId, event.getParser().delay);\n  }\n\n  onRoomUnitEvent(event) {\n    if (!(event instanceof RoomUnitEvent) || !event.connection || !this._roomCreator) return;\n    const users = event.getParser().users;\n    if (!users || !users.length) return;\n\n    for (const user of users) {\n      if (!user) continue;\n      const location = new Vector3d(user.x, user.y, user.z);\n      const direction = new Vector3d(user.dir);\n\n      this._roomCreator.addRoomObjectUser(this._currentRoomId, user.roomIndex, location, direction, user.dir, user.userType, user.figure);\n\n      if (user.webID === this._ownUserId) {\n        this._roomCreator.setRoomSessionOwnUser(this._currentRoomId, user.roomIndex);\n\n        this._roomCreator.updateRoomObjectUserOwn(this._currentRoomId, user.roomIndex);\n      }\n\n      this._roomCreator.updateRoomObjectUserFigure(this._currentRoomId, user.roomIndex, user.figure, user.sex, user.subType, user.isRiding);\n\n      if (RoomObjectUserType.getTypeString(user.userType) === RoomObjectUserType.PET) {\n        if (this._roomCreator.getPetTypeId(user.figure) === PetType.MONSTERPLANT) {\n          this._roomCreator.updateRoomObjectUserPosture(this._currentRoomId, user.roomIndex, user.petPosture);\n        }\n      }\n\n      this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, user.roomIndex, RoomObjectVariable.FIGURE_IS_MUTED, this._roomCreator.sessionDataManager.isUserIgnored(user.name) ? 1 : 0);\n    }\n\n    this.updateGuideMarker();\n  }\n\n  onRoomUnitExpressionEvent(event) {\n    if (!(event instanceof RoomUnitExpressionEvent) || !event.connection || !this._roomCreator) return;\n\n    this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_EXPRESSION, event.getParser().expression);\n  }\n\n  onRoomUnitHandItemEvent(event) {\n    if (!(event instanceof RoomUnitHandItemEvent) || !event.connection || !this._roomCreator) return;\n\n    this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_CARRY_OBJECT, event.getParser().handId);\n  }\n\n  onRoomUnitIdleEvent(event) {\n    if (!(event instanceof RoomUnitIdleEvent) || !event.connection || !this._roomCreator) return;\n\n    this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_SLEEP, event.getParser().isIdle ? 1 : 0);\n  }\n\n  onRoomUnitInfoEvent(event) {\n    if (!(event instanceof RoomUnitInfoEvent) || !event.connection || !this._roomCreator) return;\n\n    this._roomCreator.updateRoomObjectUserFigure(this._currentRoomId, event.getParser().unitId, event.getParser().figure, event.getParser().gender);\n  }\n\n  onRoomUnitNumberEvent(event) {\n    if (!(event instanceof RoomUnitNumberEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, parser.unitId, RoomObjectVariable.FIGURE_NUMBER_VALUE, parser.value);\n  }\n\n  onRoomUnitRemoveEvent(event) {\n    if (!(event instanceof RoomUnitRemoveEvent) || !event.connection || !this._roomCreator) return;\n\n    this._roomCreator.removeRoomObjectUser(this._currentRoomId, event.getParser().unitId);\n\n    this.updateGuideMarker();\n  }\n\n  onRoomUnitStatusEvent(event) {\n    if (!(event instanceof RoomUnitStatusEvent) || !event.connection || !this._roomCreator) return;\n    const statuses = event.getParser().statuses;\n    if (!statuses || !statuses.length) return;\n\n    const roomInstance = this._roomCreator.getRoomInstance(this._currentRoomId);\n\n    if (!roomInstance) return;\n    const zScale = roomInstance.model.getValue(RoomVariableEnum.ROOM_Z_SCALE) || 1;\n\n    for (const status of statuses) {\n      if (!status) continue;\n      let height = status.height;\n      if (height) height = height / zScale;\n      const location = new Vector3d(status.x, status.y, status.z + height);\n      const direction = new Vector3d(status.direction);\n      let goal = null;\n      if (status.didMove) goal = new Vector3d(status.targetX, status.targetY, status.targetZ);\n\n      this._roomCreator.updateRoomObjectUserLocation(this._currentRoomId, status.id, location, goal, status.canStandUp, height, direction, status.headDirection);\n\n      this._roomCreator.updateRoomObjectUserFlatControl(this._currentRoomId, status.id, null);\n\n      let isPosture = true;\n      let postureUpdate = false;\n      let postureType = RoomObjectVariable.STD;\n      let parameter = '';\n\n      if (status.actions && status.actions.length) {\n        for (const action of status.actions) {\n          if (!action) continue;\n\n          switch (action.action) {\n            case 'flatctrl':\n              this._roomCreator.updateRoomObjectUserFlatControl(this._currentRoomId, status.id, action.value);\n\n              break;\n\n            case 'sign':\n              if (status.actions.length === 1) isPosture = false;\n\n              this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, status.id, RoomObjectVariable.FIGURE_SIGN, parseInt(action.value));\n\n              break;\n\n            case 'gst':\n              if (status.actions.length === 1) isPosture = false;\n\n              this._roomCreator.updateRoomObjectUserPetGesture(this._currentRoomId, status.id, action.value);\n\n              break;\n\n            case 'wav':\n            case 'mv':\n              postureUpdate = true;\n              postureType = action.action;\n              parameter = action.value;\n              break;\n\n            case 'trd':\n              break;\n\n            default:\n              postureUpdate = true;\n              postureType = action.action;\n              parameter = action.value;\n              break;\n          }\n        }\n      }\n\n      if (postureUpdate) this._roomCreator.updateRoomObjectUserPosture(this._currentRoomId, status.id, postureType, parameter);else if (isPosture) this._roomCreator.updateRoomObjectUserPosture(this._currentRoomId, status.id, RoomObjectVariable.STD, '');\n    }\n\n    this.updateGuideMarker();\n  }\n\n  onRoomUnitChatEvent(event) {\n    if (!event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    this._roomCreator.updateRoomObjectUserGesture(this._currentRoomId, parser.roomIndex, parser.gesture);\n\n    this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, parser.roomIndex, RoomObjectVariable.FIGURE_TALK, parser.message.length / 10);\n  }\n\n  onRoomUnitTypingEvent(event) {\n    if (!(event instanceof RoomUnitTypingEvent) || !event.connection || !this._roomCreator) return;\n\n    this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_IS_TYPING, event.getParser().isTyping ? 1 : 0);\n  }\n\n  onPetFigureUpdateEvent(event) {\n    if (!(event instanceof PetFigureUpdateEvent) || !event.connection || !this._roomCreator) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    this._roomCreator.updateRoomObjectUserFigure(this._currentRoomId, parser.roomIndex, parser.figureData.figuredata, '', '', parser.isRiding);\n  }\n\n  onPetExperienceEvent(event) {\n    const parser = event.getParser();\n    if (!parser) return;\n\n    this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, parser.roomIndex, RoomObjectVariable.FIGURE_GAINED_EXPERIENCE, parser.gainedExperience);\n  }\n\n  onYouArePlayingGameEvent(event) {\n    if (!event) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    this._roomCreator.setRoomEngineGameMode(this._currentRoomId, parser.isPlaying);\n  }\n\n  addRoomObjectFurnitureFloor(roomId, data) {\n    if (!data || !this._roomCreator) return;\n    const location = new Vector3d(data.x, data.y, data.z);\n    const direction = new Vector3d(data.direction);\n\n    if (data.spriteName) {\n      this._roomCreator.addFurnitureFloorByTypeName(roomId, data.itemId, data.spriteName, location, direction, data.state, data.data, data.extra, data.expires, data.usagePolicy, data.userId, data.username, true, true, data.stackHeight);\n    } else {\n      this._roomCreator.addFurnitureFloor(roomId, data.itemId, data.spriteId, location, direction, data.state, data.data, data.extra, data.expires, data.usagePolicy, data.userId, data.username, true, true, data.stackHeight);\n    }\n  }\n\n  addRoomObjectFurnitureWall(roomId, data) {\n    if (!data || !this._roomCreator) return;\n\n    const wallGeometry = this._roomCreator.getLegacyWallGeometry(roomId);\n\n    if (!wallGeometry) return;\n    let location = null;\n\n    if (!data.isOldFormat) {\n      location = wallGeometry.getLocation(data.width, data.height, data.localX, data.localY, data.direction);\n    } else {//location = wallGeometry.getLocationOldFormat(data.y, data.z, data.direction);\n    }\n\n    const direction = new Vector3d(wallGeometry.getDirection(data.direction));\n\n    this._roomCreator.addFurnitureWall(roomId, data.itemId, data.spriteId, location, direction, data.state, data.stuffData, data.secondsToExpiration, data.usagePolicy, data.userId, data.username);\n  }\n\n  onIgnoreResultEvent(event) {\n    if (!event) return;\n    const parser = event.getParser();\n    if (!parser) return;\n\n    const roomSession = this._roomCreator.roomSessionManager.getSession(this._currentRoomId);\n\n    if (!roomSession) return;\n    const userData = roomSession.userDataManager.getUserDataByName(parser.name);\n    if (!userData) return;\n\n    switch (parser.result) {\n      case 1:\n      case 2:\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, userData.roomIndex, RoomObjectVariable.FIGURE_IS_MUTED, 1);\n\n        return;\n\n      case 3:\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, userData.roomIndex, RoomObjectVariable.FIGURE_IS_MUTED, 0);\n\n        return;\n    }\n  }\n\n  onGuideSessionStartedMessageEvent(event) {\n    const parser = event.getParser();\n    this._guideId = parser.guideUserId;\n    this._requesterId = parser.requesterUserId;\n    this.updateGuideMarker();\n  }\n\n  onGuideSessionEndedMessageEvent(k) {\n    this.removeGuideMarker();\n  }\n\n  onGuideSessionErrorMessageEvent(k) {\n    this.removeGuideMarker();\n  }\n\n  updateGuideMarker() {\n    const userId = this._roomCreator.sessionDataManager.userId;\n    this.setUserGuideStatus(this._guideId, this._requesterId === userId ? AvatarGuideStatus.GUIDE : AvatarGuideStatus.NONE);\n    this.setUserGuideStatus(this._requesterId, this._guideId === userId ? AvatarGuideStatus.REQUESTER : AvatarGuideStatus.NONE);\n  }\n\n  removeGuideMarker() {\n    this.setUserGuideStatus(this._guideId, AvatarGuideStatus.NONE);\n    this.setUserGuideStatus(this._requesterId, AvatarGuideStatus.NONE);\n    this._guideId = -1;\n    this._requesterId = -1;\n  }\n\n  setUserGuideStatus(userId, status) {\n    if (!this._roomCreator || !this._roomCreator.roomSessionManager) return;\n\n    const roomSession = this._roomCreator.roomSessionManager.getSession(this._currentRoomId);\n\n    if (!roomSession) return;\n    const userData = roomSession.userDataManager.getDataByType(userId, RoomObjectType.USER);\n    if (!userData) return;\n\n    this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, userData.roomIndex, RoomObjectVariable.FIGURE_GUIDE_STATUS, status);\n  } // public _SafeStr_10580(event:_SafeStr_2242): void\n  // {\n  //     var arrayIndex: number;\n  //     var discoColours:Array;\n  //     var discoTimer:Timer;\n  //     var eventParser:_SafeStr_4576 = (event.parser as _SafeStr_4576);\n  //     switch (eventParser._SafeStr_7025)\n  //     {\n  //         case 0:\n  //             _SafeStr_4588.init(250, 5000);\n  //             _SafeStr_4588._SafeStr_6766();\n  //             return;\n  //         case 1:\n  //             _SafeStr_4231.init(250, 5000);\n  //             _SafeStr_4231._SafeStr_6766();\n  //             return;\n  //         case 2:\n  //             this._SafeStr_10592.roomSessionManager.events.dispatchEvent(new _SafeStr_2821(this._SafeStr_10593, -1, true));\n  //             return;\n  //         case 3:\n  //             arrayIndex = 0;\n  //             discoColours = [29371, 16731195, 16764980, 0x99FF00, 29371, 16731195, 16764980, 0x99FF00, 0];\n  //             discoTimer = new Timer(1000, (discoColours.length + 1));\n  //             discoTimer.addEventListener(TimerEvent.TIMER, function (k:TimerEvent): void\n  //             {\n  //                 if (arrayIndex == discoColours.length)\n  //                 {\n  //                     _SafeStr_10592._SafeStr_21164(_SafeStr_10593, discoColours[arrayIndex++], 176, true);\n  //                 } else\n  //                 {\n  //                     _SafeStr_10592._SafeStr_21164(_SafeStr_10593, discoColours[arrayIndex++], 176, false);\n  //                 };\n  //             });\n  //             discoTimer.start();\n  //             return;\n  //     };\n  // }\n\n\n  get currentRoomId() {\n    return this._currentRoomId;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/RoomMessageHandler.ts"],"names":["Disposable","Vector3d","AvatarGuideStatus","PetType","ObjectsDataUpdateEvent","PetExperienceEvent","GuideSessionEndedMessageEvent","GuideSessionErrorMessageEvent","GuideSessionStartedMessageEvent","ObjectsRollingEvent","DiceValueMessageEvent","FurnitureFloorAddEvent","FurnitureFloorEvent","FurnitureFloorRemoveEvent","FurnitureFloorUpdateEvent","FurnitureAliasesEvent","FurnitureDataEvent","ItemDataUpdateMessageEvent","OneWayDoorStatusMessageEvent","FurnitureWallAddEvent","FurnitureWallEvent","FurnitureWallRemoveEvent","FurnitureWallUpdateEvent","FloorHeightMapEvent","RoomEntryTileMessageEvent","RoomHeightMapEvent","RoomHeightMapUpdateEvent","RoomPaintEvent","RoomReadyMessageEvent","RoomVisualizationSettingsEvent","PetFigureUpdateEvent","YouArePlayingGameEvent","RoomUnitChatEvent","RoomUnitChatShoutEvent","RoomUnitChatWhisperEvent","RoomUnitTypingEvent","RoomUnitDanceEvent","RoomUnitEffectEvent","RoomUnitEvent","RoomUnitExpressionEvent","RoomUnitHandItemEvent","RoomUnitIdleEvent","RoomUnitInfoEvent","RoomUnitNumberEvent","RoomUnitRemoveEvent","RoomUnitStatusEvent","UserInfoEvent","IgnoreResultEvent","FurnitureAliasesComposer","GetRoomEntryDataMessageComposer","RoomObjectType","LegacyDataType","RoomObjectUserType","RoomObjectVariable","RoomPlaneParser","RoomVariableEnum","FurnitureStackingHeightMap","LegacyWallGeometry","ObjectRolling","RoomMessageHandler","constructor","roomCreator","_connection","_roomCreator","_planeParser","_latestEntryTileEvent","_currentRoomId","_ownUserId","_initialConnection","_guideId","_requesterId","onDispose","dispose","setConnection","connection","addMessageEvent","onUserInfoEvent","bind","onRoomReadyMessageEvent","onRoomPaintEvent","onRoomModelEvent","onRoomHeightMapEvent","onRoomHeightMapUpdateEvent","onRoomThicknessEvent","onRoomDoorEvent","onRoomRollingEvent","onObjectsDataUpdateEvent","onFurnitureAliasesEvent","onFurnitureFloorAddEvent","onFurnitureFloorEvent","onFurnitureFloorRemoveEvent","onFurnitureFloorUpdateEvent","onFurnitureWallAddEvent","onFurnitureWallEvent","onFurnitureWallRemoveEvent","onFurnitureWallUpdateEvent","onFurnitureDataEvent","onItemDataUpdateMessageEvent","onOneWayDoorStatusMessageEvent","onRoomUnitDanceEvent","onRoomUnitEffectEvent","onRoomUnitEvent","onRoomUnitExpressionEvent","onRoomUnitHandItemEvent","onRoomUnitIdleEvent","onRoomUnitInfoEvent","onRoomUnitNumberEvent","onRoomUnitRemoveEvent","onRoomUnitStatusEvent","onRoomUnitChatEvent","onRoomUnitTypingEvent","onPetFigureUpdateEvent","onPetExperienceEvent","onYouArePlayingGameEvent","onDiceValueMessageEvent","onIgnoreResultEvent","onGuideSessionStartedMessageEvent","onGuideSessionEndedMessageEvent","onGuideSessionErrorMessageEvent","setRoomId","id","destroyRoom","clearRoomId","event","parser","getParser","userInfo","userId","roomId","setRoomInstanceModelName","name","send","floorType","wallType","landscapeType","updateRoomInstancePlaneType","wallGeometry","getLegacyWallGeometry","reset","width","height","initializeTileMap","entryTile","doorX","doorY","doorZ","doorDirection","y","x","tileHeight","getHeight","TILE_BLOCKED","setTileHeight","Math","floor","initializeFromTileData","wallHeight","scale","restrictsDragging","restrictsScaling","restrictedScale","DEFAULT_SCALE","initialize","floorHeight","heightIterator","widthIterator","setHeight","getTileHeight","roomMap","getMapData","doors","push","z","dir","createRoomInstance","heightMap","setStackingBlocked","getStackingBlocked","setIsRoomTile","isRoomTile","setFurnitureStackingHeightMap","getFurnitureStackingHeightMap","next","isStackingBlocked","refreshTileObjectMap","visibleWall","hideWalls","visibleFloor","thicknessWall","thicknessFloor","updateRoomInstancePlaneVisibility","updateRoomInstancePlaneThickness","updateRoomObjectFloor","rollerId","furnitureRolling","itemsRolling","length","rollData","rollRoomObjectFloor","location","targetLocation","unitRollData","unitRolling","updateRoomObjectUserLocation","object","getRoomObjectUser","type","MONSTER_PLANT","posture","movementType","MOVE","SLIDE","updateRoomObjectUserPosture","objects","state","data","alises","aliases","item","addRoomObjectFurnitureFloor","totalObjects","items","iterator","delay","setTimeout","removeRoomObjectFloor","itemId","isExpired","direction","extra","updateRoomObjectFloorHeight","stackHeight","updateRoomObjectFloorExpiration","expires","addRoomObjectFurnitureWall","removeRoomObjectWall","getLocation","localX","localY","getDirection","updateRoomObjectWall","stuffData","updateRoomObjectWallExpiration","secondsToExpiration","furnitureId","objectData","updateRoomObjectWallItemData","value","updateRoomObjectUserAction","unitId","FIGURE_DANCE","danceId","updateRoomObjectUserEffect","effectId","users","user","addRoomObjectUser","roomIndex","userType","figure","webID","setRoomSessionOwnUser","updateRoomObjectUserOwn","updateRoomObjectUserFigure","sex","subType","isRiding","getTypeString","PET","getPetTypeId","MONSTERPLANT","petPosture","FIGURE_IS_MUTED","sessionDataManager","isUserIgnored","updateGuideMarker","FIGURE_EXPRESSION","expression","FIGURE_CARRY_OBJECT","handId","FIGURE_SLEEP","isIdle","gender","FIGURE_NUMBER_VALUE","removeRoomObjectUser","statuses","roomInstance","getRoomInstance","zScale","model","getValue","ROOM_Z_SCALE","status","goal","didMove","targetX","targetY","targetZ","canStandUp","headDirection","updateRoomObjectUserFlatControl","isPosture","postureUpdate","postureType","STD","parameter","actions","action","FIGURE_SIGN","parseInt","updateRoomObjectUserPetGesture","updateRoomObjectUserGesture","gesture","FIGURE_TALK","message","FIGURE_IS_TYPING","isTyping","figureData","figuredata","FIGURE_GAINED_EXPERIENCE","gainedExperience","setRoomEngineGameMode","isPlaying","spriteName","addFurnitureFloorByTypeName","usagePolicy","username","addFurnitureFloor","spriteId","isOldFormat","addFurnitureWall","roomSession","roomSessionManager","getSession","userData","userDataManager","getUserDataByName","result","guideUserId","requesterUserId","k","removeGuideMarker","setUserGuideStatus","GUIDE","NONE","REQUESTER","getDataByType","USER","FIGURE_GUIDE_STATUS","currentRoomId"],"mappings":"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","sourcesContent":["import { Disposable } from '../../core/common/disposable/Disposable';\r\nimport { IConnection } from '../../core/communication/connections/IConnection';\r\nimport { IVector3D } from '../../room/utils/IVector3D';\r\nimport { Vector3d } from '../../room/utils/Vector3d';\r\nimport { AvatarGuideStatus } from '../avatar/enum/AvatarGuideStatus';\r\nimport { PetType } from '../avatar/pets/PetType';\r\nimport { ObjectsDataUpdateEvent, PetExperienceEvent } from '../communication';\r\nimport { GuideSessionEndedMessageEvent } from '../communication/messages/incoming/help/GuideSessionEndedMessageEvent';\r\nimport { GuideSessionErrorMessageEvent } from '../communication/messages/incoming/help/GuideSessionErrorMessageEvent';\r\nimport { GuideSessionStartedMessageEvent } from '../communication/messages/incoming/help/GuideSessionStartedMessageEvent';\r\nimport { ObjectsRollingEvent } from '../communication/messages/incoming/room/engine/ObjectsRollingEvent';\r\nimport { DiceValueMessageEvent } from '../communication/messages/incoming/room/furniture/DiceValueMessageEvent';\r\nimport { FurnitureFloorAddEvent } from '../communication/messages/incoming/room/furniture/floor/FurnitureFloorAddEvent';\r\nimport { FurnitureFloorEvent } from '../communication/messages/incoming/room/furniture/floor/FurnitureFloorEvent';\r\nimport { FurnitureFloorRemoveEvent } from '../communication/messages/incoming/room/furniture/floor/FurnitureFloorRemoveEvent';\r\nimport { FurnitureFloorUpdateEvent } from '../communication/messages/incoming/room/furniture/floor/FurnitureFloorUpdateEvent';\r\nimport { FurnitureAliasesEvent } from '../communication/messages/incoming/room/furniture/FurnitureAliasesEvent';\r\nimport { FurnitureDataEvent } from '../communication/messages/incoming/room/furniture/FurnitureDataEvent';\r\nimport { ItemDataUpdateMessageEvent } from '../communication/messages/incoming/room/furniture/ItemDataUpdateMessageEvent';\r\nimport { OneWayDoorStatusMessageEvent } from '../communication/messages/incoming/room/furniture/OneWayDoorStatusMessageEvent';\r\nimport { FurnitureWallAddEvent } from '../communication/messages/incoming/room/furniture/wall/FurnitureWallAddEvent';\r\nimport { FurnitureWallEvent } from '../communication/messages/incoming/room/furniture/wall/FurnitureWallEvent';\r\nimport { FurnitureWallRemoveEvent } from '../communication/messages/incoming/room/furniture/wall/FurnitureWallRemoveEvent';\r\nimport { FurnitureWallUpdateEvent } from '../communication/messages/incoming/room/furniture/wall/FurnitureWallUpdateEvent';\r\nimport { FloorHeightMapEvent } from '../communication/messages/incoming/room/mapping/FloorHeightMapEvent';\r\nimport { RoomEntryTileMessageEvent } from '../communication/messages/incoming/room/mapping/RoomEntryTileMessageEvent';\r\nimport { RoomHeightMapEvent } from '../communication/messages/incoming/room/mapping/RoomHeightMapEvent';\r\nimport { RoomHeightMapUpdateEvent } from '../communication/messages/incoming/room/mapping/RoomHeightMapUpdateEvent';\r\nimport { RoomPaintEvent } from '../communication/messages/incoming/room/mapping/RoomPaintEvent';\r\nimport { RoomReadyMessageEvent } from '../communication/messages/incoming/room/mapping/RoomReadyMessageEvent';\r\nimport { RoomVisualizationSettingsEvent } from '../communication/messages/incoming/room/mapping/RoomVisualizationSettingsEvent';\r\nimport { PetFigureUpdateEvent } from '../communication/messages/incoming/room/pet/PetFigureUpdateEvent';\r\nimport { YouArePlayingGameEvent } from '../communication/messages/incoming/room/session/YouArePlayingGameEvent';\r\nimport { RoomUnitChatEvent } from '../communication/messages/incoming/room/unit/chat/RoomUnitChatEvent';\r\nimport { RoomUnitChatShoutEvent } from '../communication/messages/incoming/room/unit/chat/RoomUnitChatShoutEvent';\r\nimport { RoomUnitChatWhisperEvent } from '../communication/messages/incoming/room/unit/chat/RoomUnitChatWhisperEvent';\r\nimport { RoomUnitTypingEvent } from '../communication/messages/incoming/room/unit/chat/RoomUnitTypingEvent';\r\nimport { RoomUnitDanceEvent } from '../communication/messages/incoming/room/unit/RoomUnitDanceEvent';\r\nimport { RoomUnitEffectEvent } from '../communication/messages/incoming/room/unit/RoomUnitEffectEvent';\r\nimport { RoomUnitEvent } from '../communication/messages/incoming/room/unit/RoomUnitEvent';\r\nimport { RoomUnitExpressionEvent } from '../communication/messages/incoming/room/unit/RoomUnitExpressionEvent';\r\nimport { RoomUnitHandItemEvent } from '../communication/messages/incoming/room/unit/RoomUnitHandItemEvent';\r\nimport { RoomUnitIdleEvent } from '../communication/messages/incoming/room/unit/RoomUnitIdleEvent';\r\nimport { RoomUnitInfoEvent } from '../communication/messages/incoming/room/unit/RoomUnitInfoEvent';\r\nimport { RoomUnitNumberEvent } from '../communication/messages/incoming/room/unit/RoomUnitNumberEvent';\r\nimport { RoomUnitRemoveEvent } from '../communication/messages/incoming/room/unit/RoomUnitRemoveEvent';\r\nimport { RoomUnitStatusEvent } from '../communication/messages/incoming/room/unit/RoomUnitStatusEvent';\r\nimport { UserInfoEvent } from '../communication/messages/incoming/user/data/UserInfoEvent';\r\nimport { IgnoreResultEvent } from '../communication/messages/incoming/user/IgnoreResultEvent';\r\nimport { FurnitureAliasesComposer } from '../communication/messages/outgoing/room/furniture/FurnitureAliasesComposer';\r\nimport { GetRoomEntryDataMessageComposer } from '../communication/messages/outgoing/room/layout/GetRoomEntryDataMessageComposer';\r\nimport { FurnitureFloorDataParser } from '../communication/messages/parser/room/furniture/floor/FurnitureFloorDataParser';\r\nimport { FurnitureWallDataParser } from '../communication/messages/parser/room/furniture/wall/FurnitureWallDataParser';\r\nimport { RoomEntryTileMessageParser } from '../communication/messages/parser/room/mapping/RoomEntryTileMessageParser';\r\nimport { RoomObjectType } from '../room/object/RoomObjectType';\r\nimport { IRoomCreator } from './IRoomCreator';\r\nimport { LegacyDataType } from './object/data/type/LegacyDataType';\r\nimport { RoomObjectUserType } from './object/RoomObjectUserType';\r\nimport { RoomObjectVariable } from './object/RoomObjectVariable';\r\nimport { RoomPlaneParser } from './object/RoomPlaneParser';\r\nimport { RoomVariableEnum } from './RoomVariableEnum';\r\nimport { FurnitureStackingHeightMap } from './utils/FurnitureStackingHeightMap';\r\nimport { LegacyWallGeometry } from './utils/LegacyWallGeometry';\r\nimport { ObjectRolling } from './utils/ObjectRolling';\r\n\r\nexport class RoomMessageHandler extends Disposable\r\n{\r\n    private _connection: IConnection;\r\n    private _roomCreator: IRoomCreator;\r\n    private _planeParser: RoomPlaneParser;\r\n    private _latestEntryTileEvent: RoomEntryTileMessageEvent;\r\n\r\n    private _currentRoomId: number;\r\n    private _ownUserId: number;\r\n    private _initialConnection: boolean;\r\n    private _guideId: number;\r\n    private _requesterId: number;\r\n\r\n    constructor(roomCreator: IRoomCreator)\r\n    {\r\n        super();\r\n\r\n        this._connection = null;\r\n        this._roomCreator = roomCreator;\r\n        this._planeParser = new RoomPlaneParser();\r\n        this._latestEntryTileEvent = null;\r\n\r\n        this._currentRoomId = 0;\r\n        this._ownUserId = 0;\r\n        this._initialConnection = true;\r\n        this._guideId = -1;\r\n        this._requesterId = -1;\r\n    }\r\n\r\n    protected onDispose(): void\r\n    {\r\n        super.onDispose();\r\n\r\n        this._connection = null;\r\n        this._roomCreator = null;\r\n        this._latestEntryTileEvent = null;\r\n\r\n        if(this._planeParser)\r\n        {\r\n            this._planeParser.dispose();\r\n\r\n            this._planeParser = null;\r\n        }\r\n    }\r\n\r\n    public setConnection(connection: IConnection)\r\n    {\r\n        if(this._connection || !connection) return;\r\n\r\n        this._connection = connection;\r\n\r\n        this._connection.addMessageEvent(new UserInfoEvent(this.onUserInfoEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomReadyMessageEvent(this.onRoomReadyMessageEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomPaintEvent(this.onRoomPaintEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FloorHeightMapEvent(this.onRoomModelEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomHeightMapEvent(this.onRoomHeightMapEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomHeightMapUpdateEvent(this.onRoomHeightMapUpdateEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomVisualizationSettingsEvent(this.onRoomThicknessEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomEntryTileMessageEvent(this.onRoomDoorEvent.bind(this)));\r\n        this._connection.addMessageEvent(new ObjectsRollingEvent(this.onRoomRollingEvent.bind(this)));\r\n        this._connection.addMessageEvent(new ObjectsDataUpdateEvent(this.onObjectsDataUpdateEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureAliasesEvent(this.onFurnitureAliasesEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureFloorAddEvent(this.onFurnitureFloorAddEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureFloorEvent(this.onFurnitureFloorEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureFloorRemoveEvent(this.onFurnitureFloorRemoveEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureFloorUpdateEvent(this.onFurnitureFloorUpdateEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureWallAddEvent(this.onFurnitureWallAddEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureWallEvent(this.onFurnitureWallEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureWallRemoveEvent(this.onFurnitureWallRemoveEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureWallUpdateEvent(this.onFurnitureWallUpdateEvent.bind(this)));\r\n        this._connection.addMessageEvent(new FurnitureDataEvent(this.onFurnitureDataEvent.bind(this)));\r\n        this._connection.addMessageEvent(new ItemDataUpdateMessageEvent(this.onItemDataUpdateMessageEvent.bind(this)));\r\n        this._connection.addMessageEvent(new OneWayDoorStatusMessageEvent(this.onOneWayDoorStatusMessageEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitDanceEvent(this.onRoomUnitDanceEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitEffectEvent(this.onRoomUnitEffectEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitEvent(this.onRoomUnitEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitExpressionEvent(this.onRoomUnitExpressionEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitHandItemEvent(this.onRoomUnitHandItemEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitIdleEvent(this.onRoomUnitIdleEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitInfoEvent(this.onRoomUnitInfoEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitNumberEvent(this.onRoomUnitNumberEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitRemoveEvent(this.onRoomUnitRemoveEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitStatusEvent(this.onRoomUnitStatusEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitChatEvent(this.onRoomUnitChatEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitChatShoutEvent(this.onRoomUnitChatEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitChatWhisperEvent(this.onRoomUnitChatEvent.bind(this)));\r\n        this._connection.addMessageEvent(new RoomUnitTypingEvent(this.onRoomUnitTypingEvent.bind(this)));\r\n        this._connection.addMessageEvent(new PetFigureUpdateEvent(this.onPetFigureUpdateEvent.bind(this)));\r\n        this._connection.addMessageEvent(new PetExperienceEvent(this.onPetExperienceEvent.bind(this)));\r\n        this._connection.addMessageEvent(new YouArePlayingGameEvent(this.onYouArePlayingGameEvent.bind(this)));\r\n        this._connection.addMessageEvent(new DiceValueMessageEvent(this.onDiceValueMessageEvent.bind(this)));\r\n        this._connection.addMessageEvent(new IgnoreResultEvent(this.onIgnoreResultEvent.bind(this)));\r\n        this._connection.addMessageEvent(new GuideSessionStartedMessageEvent(this.onGuideSessionStartedMessageEvent.bind(this)));\r\n        this._connection.addMessageEvent(new GuideSessionEndedMessageEvent(this.onGuideSessionEndedMessageEvent.bind(this)));\r\n        this._connection.addMessageEvent(new GuideSessionErrorMessageEvent(this.onGuideSessionErrorMessageEvent.bind(this)));\r\n    }\r\n\r\n    public setRoomId(id: number): void\r\n    {\r\n        if(this._currentRoomId !== 0)\r\n        {\r\n            if(this._roomCreator) this._roomCreator.destroyRoom(this._currentRoomId);\r\n        }\r\n\r\n        this._currentRoomId = id;\r\n        this._latestEntryTileEvent = null;\r\n    }\r\n\r\n    public clearRoomId(): void\r\n    {\r\n        this._currentRoomId = 0;\r\n        this._latestEntryTileEvent = null;\r\n    }\r\n\r\n    private onUserInfoEvent(event: UserInfoEvent): void\r\n    {\r\n        if(!(event instanceof UserInfoEvent) || !event.connection) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        this._ownUserId = parser.userInfo.userId;\r\n    }\r\n\r\n    private onRoomReadyMessageEvent(event: RoomReadyMessageEvent): void\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        if(this._currentRoomId !== parser.roomId)\r\n        {\r\n            this.setRoomId(parser.roomId);\r\n        }\r\n\r\n        if(this._roomCreator)\r\n        {\r\n            this._roomCreator.setRoomInstanceModelName(parser.roomId, parser.name);\r\n        }\r\n\r\n        if(this._initialConnection)\r\n        {\r\n            event.connection.send(new FurnitureAliasesComposer());\r\n\r\n            this._initialConnection = false;\r\n\r\n            return;\r\n        }\r\n\r\n        event.connection.send(new GetRoomEntryDataMessageComposer());\r\n    }\r\n\r\n    private onRoomPaintEvent(event: RoomPaintEvent): void\r\n    {\r\n        if(!(event instanceof RoomPaintEvent)) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        const floorType = parser.floorType;\r\n        const wallType = parser.wallType;\r\n        const landscapeType = parser.landscapeType;\r\n\r\n        if(this._roomCreator)\r\n        {\r\n            this._roomCreator.updateRoomInstancePlaneType(this._currentRoomId, floorType, wallType, landscapeType);\r\n        }\r\n    }\r\n\r\n    private onRoomModelEvent(event: FloorHeightMapEvent): void\r\n    {\r\n        if(!(event instanceof FloorHeightMapEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        const wallGeometry = this._roomCreator.getLegacyWallGeometry(this._currentRoomId);\r\n\r\n        if(!wallGeometry) return;\r\n\r\n        this._planeParser.reset();\r\n\r\n        const width = parser.width;\r\n        const height = parser.height;\r\n\r\n        this._planeParser.initializeTileMap(width, height);\r\n\r\n        let entryTile: RoomEntryTileMessageParser = null;\r\n\r\n        if(this._latestEntryTileEvent) entryTile = this._latestEntryTileEvent.getParser();\r\n\r\n        let doorX = -1;\r\n        let doorY = -1;\r\n        let doorZ = 0;\r\n        let doorDirection = 0;\r\n\r\n        let y = 0;\r\n\r\n        while(y < height)\r\n        {\r\n            let x = 0;\r\n\r\n            while(x < width)\r\n            {\r\n                const tileHeight = parser.getHeight(x, y);\r\n\r\n                if(((((y > 0) && (y < (height - 1))) || ((x > 0) && (x < (width - 1)))) && (!(tileHeight == RoomPlaneParser.TILE_BLOCKED))) && ((entryTile == null) || ((x == entryTile.x) && (y == entryTile.y))))\r\n                {\r\n                    if(((parser.getHeight(x, (y - 1)) == RoomPlaneParser.TILE_BLOCKED) && (parser.getHeight((x - 1), y) == RoomPlaneParser.TILE_BLOCKED)) && (parser.getHeight(x, (y + 1)) == RoomPlaneParser.TILE_BLOCKED))\r\n                    {\r\n                        doorX = (x + 0.5);\r\n                        doorY = y;\r\n                        doorZ = tileHeight;\r\n                        doorDirection = 90;\r\n                    }\r\n\r\n                    if(((parser.getHeight(x, (y - 1)) == RoomPlaneParser.TILE_BLOCKED) && (parser.getHeight((x - 1), y) == RoomPlaneParser.TILE_BLOCKED)) && (parser.getHeight((x + 1), y) == RoomPlaneParser.TILE_BLOCKED))\r\n                    {\r\n                        doorX = x;\r\n                        doorY = (y + 0.5);\r\n                        doorZ = tileHeight;\r\n                        doorDirection = 180;\r\n                    }\r\n                }\r\n\r\n                this._planeParser.setTileHeight(x, y, tileHeight);\r\n\r\n                x++;\r\n            }\r\n\r\n            y++;\r\n        }\r\n\r\n        this._planeParser.setTileHeight(Math.floor(doorX), Math.floor(doorY), doorZ);\r\n        this._planeParser.initializeFromTileData(parser.wallHeight);\r\n        this._planeParser.setTileHeight(Math.floor(doorX), Math.floor(doorY), (doorZ + this._planeParser.wallHeight));\r\n\r\n        if(parser.scale === 64)\r\n        {\r\n            this._planeParser.restrictsDragging = true;\r\n            this._planeParser.restrictsScaling = true;\r\n            this._planeParser.restrictedScale = 0.5;\r\n        }\r\n        else\r\n        {\r\n            this._planeParser.restrictsDragging = false;\r\n            this._planeParser.restrictsScaling = false;\r\n            this._planeParser.restrictedScale = 1;\r\n        }\r\n\r\n        wallGeometry.scale = LegacyWallGeometry.DEFAULT_SCALE;\r\n        wallGeometry.initialize(width, height, this._planeParser.floorHeight);\r\n\r\n        let heightIterator = (parser.height - 1);\r\n\r\n        while(heightIterator >= 0)\r\n        {\r\n            let widthIterator = (parser.width - 1);\r\n\r\n            while(widthIterator >= 0)\r\n            {\r\n                wallGeometry.setHeight(widthIterator, heightIterator, this._planeParser.getTileHeight(widthIterator, heightIterator));\r\n                widthIterator--;\r\n            }\r\n\r\n            heightIterator--;\r\n        }\r\n\r\n        const roomMap = this._planeParser.getMapData();\r\n\r\n        roomMap.doors.push({\r\n            x: doorX,\r\n            y: doorY,\r\n            z: doorZ,\r\n            dir: doorDirection\r\n        });\r\n\r\n        this._roomCreator.createRoomInstance(this._currentRoomId, roomMap);\r\n    }\r\n\r\n    private onRoomHeightMapEvent(event: RoomHeightMapEvent): void\r\n    {\r\n        if(!(event instanceof RoomHeightMapEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        const width = parser.width;\r\n        const height = parser.height;\r\n        const heightMap = new FurnitureStackingHeightMap(width, height);\r\n\r\n        let y = 0;\r\n\r\n        while(y < height)\r\n        {\r\n            let x = 0;\r\n\r\n            while(x < width)\r\n            {\r\n                heightMap.setTileHeight(x, y, parser.getTileHeight(x, y));\r\n                heightMap.setStackingBlocked(x, y, parser.getStackingBlocked(x, y));\r\n                heightMap.setIsRoomTile(x, y, parser.isRoomTile(x, y));\r\n\r\n                x++;\r\n            }\r\n\r\n            y++;\r\n        }\r\n\r\n        this._roomCreator.setFurnitureStackingHeightMap(this._currentRoomId, heightMap);\r\n    }\r\n\r\n    private onRoomHeightMapUpdateEvent(event: RoomHeightMapUpdateEvent): void\r\n    {\r\n        if(!(event instanceof RoomHeightMapUpdateEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        const heightMap = this._roomCreator.getFurnitureStackingHeightMap(this._currentRoomId);\r\n\r\n        if(!heightMap) return;\r\n\r\n        while(parser.next())\r\n        {\r\n            heightMap.setTileHeight(parser.x, parser.y, parser.tileHeight());\r\n            heightMap.setStackingBlocked(parser.x, parser.y, parser.isStackingBlocked());\r\n            heightMap.setIsRoomTile(parser.x, parser.y, parser.isRoomTile());\r\n        }\r\n\r\n        this._roomCreator.refreshTileObjectMap(this._currentRoomId, 'RoomMessageHandler.onRoomHeightMapUpdateEvent()');\r\n    }\r\n\r\n    private onRoomThicknessEvent(event: RoomVisualizationSettingsEvent): void\r\n    {\r\n        if(!(event instanceof RoomVisualizationSettingsEvent)) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        const visibleWall = !parser.hideWalls;\r\n        const visibleFloor = true;\r\n        const thicknessWall = parser.thicknessWall;\r\n        const thicknessFloor = parser.thicknessFloor;\r\n\r\n        if(this._roomCreator)\r\n        {\r\n            this._roomCreator.updateRoomInstancePlaneVisibility(this._currentRoomId, visibleWall, visibleFloor);\r\n            this._roomCreator.updateRoomInstancePlaneThickness(this._currentRoomId, thicknessWall, thicknessFloor);\r\n        }\r\n    }\r\n\r\n    private onRoomDoorEvent(event: RoomEntryTileMessageEvent): void\r\n    {\r\n        if(!(event instanceof RoomEntryTileMessageEvent)) return;\r\n\r\n        this._latestEntryTileEvent = event;\r\n    }\r\n\r\n    private onRoomRollingEvent(event: ObjectsRollingEvent): void\r\n    {\r\n        if(!(event instanceof ObjectsRollingEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.rollerId, null, null, 1, null);\r\n        this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.rollerId, null, null, 2, null);\r\n\r\n        const furnitureRolling = parser.itemsRolling;\r\n\r\n        if(furnitureRolling && furnitureRolling.length)\r\n        {\r\n            for(const rollData of furnitureRolling)\r\n            {\r\n                if(!rollData) continue;\r\n\r\n                this._roomCreator.rollRoomObjectFloor(this._currentRoomId, rollData.id, rollData.location, rollData.targetLocation);\r\n            }\r\n        }\r\n\r\n        const unitRollData = parser.unitRolling;\r\n\r\n        if(unitRollData)\r\n        {\r\n            this._roomCreator.updateRoomObjectUserLocation(this._currentRoomId, unitRollData.id, unitRollData.location, unitRollData.targetLocation);\r\n\r\n            const object = this._roomCreator.getRoomObjectUser(this._currentRoomId, unitRollData.id);\r\n\r\n            if(object && object.type !== RoomObjectUserType.MONSTER_PLANT)\r\n            {\r\n                let posture = 'std';\r\n\r\n                switch(unitRollData.movementType)\r\n                {\r\n                    case ObjectRolling.MOVE:\r\n                        posture = 'mv';\r\n                        break;\r\n                    case ObjectRolling.SLIDE:\r\n                        posture = 'std';\r\n                        break;\r\n                }\r\n\r\n                this._roomCreator.updateRoomObjectUserPosture(this._currentRoomId, unitRollData.id, posture);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onObjectsDataUpdateEvent(event: ObjectsDataUpdateEvent): void\r\n    {\r\n        if(!(event instanceof ObjectsDataUpdateEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        for(const object of parser.objects)\r\n        {\r\n            this._roomCreator.updateRoomObjectFloor(this._currentRoomId, object.id, null, null, object.state, object.data);\r\n        }\r\n    }\r\n\r\n    private onFurnitureAliasesEvent(event: FurnitureAliasesEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureAliasesEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const alises = event.getParser().aliases;\r\n\r\n        this._connection.send(new GetRoomEntryDataMessageComposer());\r\n    }\r\n\r\n    private onFurnitureFloorAddEvent(event: FurnitureFloorAddEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureFloorAddEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const item = event.getParser().item;\r\n\r\n        if(!item) return;\r\n\r\n        this.addRoomObjectFurnitureFloor(this._currentRoomId, item);\r\n    }\r\n\r\n    private onFurnitureFloorEvent(event: FurnitureFloorEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureFloorEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        const totalObjects = parser.items.length;\r\n\r\n        let iterator = 0;\r\n\r\n        while(iterator < totalObjects)\r\n        {\r\n            const object = parser.items[iterator];\r\n\r\n            if(object) this.addRoomObjectFurnitureFloor(this._currentRoomId, object);\r\n\r\n            iterator++;\r\n        }\r\n    }\r\n\r\n    private onFurnitureFloorRemoveEvent(event: FurnitureFloorRemoveEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureFloorRemoveEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        if(parser.delay > 0)\r\n        {\r\n            setTimeout(() =>\r\n            {\r\n                this._roomCreator.removeRoomObjectFloor(this._currentRoomId, parser.itemId, (parser.isExpired) ? -1 : parser.userId, true);\r\n            }, parser.delay);\r\n        }\r\n        else\r\n        {\r\n            this._roomCreator.removeRoomObjectFloor(this._currentRoomId, parser.itemId, (parser.isExpired) ? -1 : parser.userId, true);\r\n        }\r\n    }\r\n\r\n    private onFurnitureFloorUpdateEvent(event: FurnitureFloorUpdateEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureFloorUpdateEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const item = event.getParser().item;\r\n\r\n        if(!item) return;\r\n\r\n        const location: IVector3D = new Vector3d(item.x, item.y, item.z);\r\n        const direction: IVector3D = new Vector3d(item.direction);\r\n\r\n        this._roomCreator.updateRoomObjectFloor(this._currentRoomId, item.itemId, location, direction, item.data.state, item.data, item.extra);\r\n        this._roomCreator.updateRoomObjectFloorHeight(this._currentRoomId, item.itemId, item.stackHeight);\r\n        this._roomCreator.updateRoomObjectFloorExpiration(this._currentRoomId, item.itemId, item.expires);\r\n    }\r\n\r\n    private onFurnitureWallAddEvent(event: FurnitureWallAddEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureWallAddEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const data = event.getParser().item;\r\n\r\n        if(!data) return;\r\n\r\n        this.addRoomObjectFurnitureWall(this._currentRoomId, data);\r\n    }\r\n\r\n    private onFurnitureWallEvent(event: FurnitureWallEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureWallEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        const totalObjects = parser.items.length;\r\n\r\n        let iterator = 0;\r\n\r\n        while(iterator < totalObjects)\r\n        {\r\n            const data = parser.items[iterator];\r\n\r\n            if(data) this.addRoomObjectFurnitureWall(this._currentRoomId, data);\r\n\r\n            iterator++;\r\n        }\r\n    }\r\n\r\n    private onFurnitureWallRemoveEvent(event: FurnitureWallRemoveEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureWallRemoveEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        this._roomCreator.removeRoomObjectWall(this._currentRoomId, parser.itemId, parser.userId);\r\n    }\r\n\r\n    private onFurnitureWallUpdateEvent(event: FurnitureWallUpdateEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureWallUpdateEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const wallGeometry = this._roomCreator.getLegacyWallGeometry(this._currentRoomId);\r\n\r\n        if(!wallGeometry) return;\r\n\r\n        const item = event.getParser().item;\r\n\r\n        if(!item) return;\r\n\r\n        const location = wallGeometry.getLocation(item.width, item.height, item.localX, item.localY, item.direction);\r\n        const direction = new Vector3d(wallGeometry.getDirection(item.direction));\r\n\r\n        this._roomCreator.updateRoomObjectWall(this._currentRoomId, item.itemId, location, direction, item.state, item.stuffData);\r\n        this._roomCreator.updateRoomObjectWallExpiration(this._currentRoomId, item.itemId, item.secondsToExpiration);\r\n    }\r\n\r\n    private onFurnitureDataEvent(event: FurnitureDataEvent): void\r\n    {\r\n        if(!(event instanceof FurnitureDataEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.furnitureId, null, null, parser.objectData.state, parser.objectData);\r\n    }\r\n\r\n    private onItemDataUpdateMessageEvent(event: ItemDataUpdateMessageEvent): void\r\n    {\r\n        if(!(event instanceof ItemDataUpdateMessageEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        this._roomCreator.updateRoomObjectWallItemData(this._currentRoomId, parser.furnitureId, parser.data);\r\n    }\r\n\r\n    private onOneWayDoorStatusMessageEvent(event: OneWayDoorStatusMessageEvent): void\r\n    {\r\n        if(!(event instanceof OneWayDoorStatusMessageEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.itemId, null, null, parser.state, new LegacyDataType());\r\n    }\r\n\r\n    private onDiceValueMessageEvent(event: DiceValueMessageEvent): void\r\n    {\r\n        if(!(event instanceof DiceValueMessageEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        this._roomCreator.updateRoomObjectFloor(this._currentRoomId, parser.itemId, null, null, parser.value, new LegacyDataType());\r\n    }\r\n\r\n    private onRoomUnitDanceEvent(event: RoomUnitDanceEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitDanceEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_DANCE, event.getParser().danceId);\r\n    }\r\n\r\n    private onRoomUnitEffectEvent(event: RoomUnitEffectEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitEffectEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserEffect(this._currentRoomId, event.getParser().unitId, event.getParser().effectId, event.getParser().delay);\r\n    }\r\n\r\n    private onRoomUnitEvent(event: RoomUnitEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const users = event.getParser().users;\r\n\r\n        if(!users || !users.length) return;\r\n\r\n        for(const user of users)\r\n        {\r\n            if(!user) continue;\r\n\r\n            const location = new Vector3d(user.x, user.y, user.z);\r\n            const direction = new Vector3d(user.dir);\r\n\r\n            this._roomCreator.addRoomObjectUser(this._currentRoomId, user.roomIndex, location, direction, user.dir, user.userType, user.figure);\r\n\r\n            if(user.webID === this._ownUserId)\r\n            {\r\n                this._roomCreator.setRoomSessionOwnUser(this._currentRoomId, user.roomIndex);\r\n                this._roomCreator.updateRoomObjectUserOwn(this._currentRoomId, user.roomIndex);\r\n            }\r\n\r\n            this._roomCreator.updateRoomObjectUserFigure(this._currentRoomId, user.roomIndex, user.figure, user.sex, user.subType, user.isRiding);\r\n\r\n            if(RoomObjectUserType.getTypeString(user.userType) === RoomObjectUserType.PET)\r\n            {\r\n                if(this._roomCreator.getPetTypeId(user.figure) === PetType.MONSTERPLANT)\r\n                {\r\n                    this._roomCreator.updateRoomObjectUserPosture(this._currentRoomId, user.roomIndex, user.petPosture);\r\n                }\r\n            }\r\n\r\n            this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, user.roomIndex, RoomObjectVariable.FIGURE_IS_MUTED, (this._roomCreator.sessionDataManager.isUserIgnored(user.name) ? 1 : 0));\r\n        }\r\n\r\n        this.updateGuideMarker();\r\n    }\r\n\r\n    private onRoomUnitExpressionEvent(event: RoomUnitExpressionEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitExpressionEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_EXPRESSION, event.getParser().expression);\r\n    }\r\n\r\n    private onRoomUnitHandItemEvent(event: RoomUnitHandItemEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitHandItemEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_CARRY_OBJECT, event.getParser().handId);\r\n    }\r\n\r\n    private onRoomUnitIdleEvent(event: RoomUnitIdleEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitIdleEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_SLEEP, (event.getParser().isIdle ? 1 : 0));\r\n    }\r\n\r\n    private onRoomUnitInfoEvent(event: RoomUnitInfoEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitInfoEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserFigure(this._currentRoomId, event.getParser().unitId, event.getParser().figure, event.getParser().gender);\r\n    }\r\n\r\n    private onRoomUnitNumberEvent(event: RoomUnitNumberEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitNumberEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, parser.unitId, RoomObjectVariable.FIGURE_NUMBER_VALUE, parser.value);\r\n    }\r\n\r\n    private onRoomUnitRemoveEvent(event: RoomUnitRemoveEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitRemoveEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        this._roomCreator.removeRoomObjectUser(this._currentRoomId, event.getParser().unitId);\r\n\r\n        this.updateGuideMarker();\r\n    }\r\n\r\n    private onRoomUnitStatusEvent(event: RoomUnitStatusEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitStatusEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const statuses = event.getParser().statuses;\r\n\r\n        if(!statuses || !statuses.length) return;\r\n\r\n        const roomInstance = this._roomCreator.getRoomInstance(this._currentRoomId);\r\n\r\n        if(!roomInstance) return;\r\n\r\n        const zScale = (roomInstance.model.getValue<number>(RoomVariableEnum.ROOM_Z_SCALE) || 1);\r\n\r\n        for(const status of statuses)\r\n        {\r\n            if(!status) continue;\r\n\r\n            let height = status.height;\r\n\r\n            if(height) height = (height / zScale);\r\n\r\n            const location = new Vector3d(status.x, status.y, (status.z + height));\r\n            const direction = new Vector3d(status.direction);\r\n\r\n            let goal: IVector3D = null;\r\n\r\n            if(status.didMove) goal = new Vector3d(status.targetX, status.targetY, status.targetZ);\r\n\r\n            this._roomCreator.updateRoomObjectUserLocation(this._currentRoomId, status.id, location, goal, status.canStandUp, height, direction, status.headDirection);\r\n            this._roomCreator.updateRoomObjectUserFlatControl(this._currentRoomId, status.id, null);\r\n\r\n            let isPosture = true;\r\n            let postureUpdate = false;\r\n            let postureType = RoomObjectVariable.STD;\r\n            let parameter = '';\r\n\r\n            if(status.actions && status.actions.length)\r\n            {\r\n                for(const action of status.actions)\r\n                {\r\n                    if(!action) continue;\r\n\r\n                    switch(action.action)\r\n                    {\r\n                        case 'flatctrl':\r\n                            this._roomCreator.updateRoomObjectUserFlatControl(this._currentRoomId, status.id, action.value);\r\n                            break;\r\n                        case 'sign':\r\n                            if(status.actions.length === 1) isPosture = false;\r\n\r\n                            this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, status.id, RoomObjectVariable.FIGURE_SIGN, parseInt(action.value));\r\n                            break;\r\n                        case 'gst':\r\n                            if(status.actions.length === 1) isPosture = false;\r\n\r\n                            this._roomCreator.updateRoomObjectUserPetGesture(this._currentRoomId, status.id, action.value);\r\n                            break;\r\n                        case 'wav':\r\n                        case 'mv':\r\n                            postureUpdate = true;\r\n                            postureType = action.action;\r\n                            parameter = action.value;\r\n                            break;\r\n                        case 'trd': break;\r\n                        default:\r\n                            postureUpdate = true;\r\n                            postureType = action.action;\r\n                            parameter = action.value;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(postureUpdate) this._roomCreator.updateRoomObjectUserPosture(this._currentRoomId, status.id, postureType, parameter);\r\n            else if(isPosture) this._roomCreator.updateRoomObjectUserPosture(this._currentRoomId, status.id, RoomObjectVariable.STD, '');\r\n        }\r\n\r\n        this.updateGuideMarker();\r\n    }\r\n\r\n    private onRoomUnitChatEvent(event: RoomUnitChatEvent): void\r\n    {\r\n        if(!event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserGesture(this._currentRoomId, parser.roomIndex, parser.gesture);\r\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, parser.roomIndex, RoomObjectVariable.FIGURE_TALK, (parser.message.length / 10));\r\n    }\r\n\r\n    private onRoomUnitTypingEvent(event: RoomUnitTypingEvent): void\r\n    {\r\n        if(!(event instanceof RoomUnitTypingEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, event.getParser().unitId, RoomObjectVariable.FIGURE_IS_TYPING, event.getParser().isTyping ? 1 : 0);\r\n    }\r\n\r\n    private onPetFigureUpdateEvent(event: PetFigureUpdateEvent): void\r\n    {\r\n        if(!(event instanceof PetFigureUpdateEvent) || !event.connection || !this._roomCreator) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserFigure(this._currentRoomId, parser.roomIndex, parser.figureData.figuredata, '' , '', parser.isRiding);\r\n    }\r\n\r\n    private onPetExperienceEvent(event: PetExperienceEvent): void\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, parser.roomIndex, RoomObjectVariable.FIGURE_GAINED_EXPERIENCE, parser.gainedExperience);\r\n    }\r\n\r\n    private onYouArePlayingGameEvent(event: YouArePlayingGameEvent): void\r\n    {\r\n        if(!event) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        this._roomCreator.setRoomEngineGameMode(this._currentRoomId, parser.isPlaying);\r\n    }\r\n\r\n    private addRoomObjectFurnitureFloor(roomId: number, data: FurnitureFloorDataParser): void\r\n    {\r\n        if(!data || !this._roomCreator) return;\r\n\r\n        const location = new Vector3d(data.x, data.y, data.z);\r\n        const direction = new Vector3d(data.direction);\r\n\r\n        if(data.spriteName)\r\n        {\r\n            this._roomCreator.addFurnitureFloorByTypeName(roomId, data.itemId, data.spriteName, location, direction, data.state, data.data, data.extra, data.expires, data.usagePolicy, data.userId, data.username, true, true, data.stackHeight);\r\n        }\r\n        else\r\n        {\r\n            this._roomCreator.addFurnitureFloor(roomId, data.itemId, data.spriteId, location, direction, data.state, data.data, data.extra, data.expires, data.usagePolicy, data.userId, data.username, true, true, data.stackHeight);\r\n        }\r\n    }\r\n\r\n    private addRoomObjectFurnitureWall(roomId: number, data: FurnitureWallDataParser): void\r\n    {\r\n        if(!data || !this._roomCreator) return;\r\n\r\n        const wallGeometry = this._roomCreator.getLegacyWallGeometry(roomId);\r\n\r\n        if(!wallGeometry) return;\r\n\r\n        let location: IVector3D = null;\r\n\r\n        if(!data.isOldFormat)\r\n        {\r\n            location = wallGeometry.getLocation(data.width, data.height, data.localX, data.localY, data.direction);\r\n        }\r\n        else\r\n        {\r\n            //location = wallGeometry.getLocationOldFormat(data.y, data.z, data.direction);\r\n        }\r\n\r\n        const direction = new Vector3d(wallGeometry.getDirection(data.direction));\r\n\r\n        this._roomCreator.addFurnitureWall(roomId, data.itemId, data.spriteId, location, direction, data.state, data.stuffData, data.secondsToExpiration, data.usagePolicy, data.userId, data.username);\r\n    }\r\n\r\n    private onIgnoreResultEvent(event: IgnoreResultEvent): void\r\n    {\r\n        if(!event) return;\r\n\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        const roomSession = this._roomCreator.roomSessionManager.getSession(this._currentRoomId);\r\n\r\n        if(!roomSession) return;\r\n\r\n        const userData = roomSession.userDataManager.getUserDataByName(parser.name);\r\n\r\n        if(!userData) return;\r\n\r\n        switch(parser.result)\r\n        {\r\n            case 1:\r\n            case 2:\r\n                this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, userData.roomIndex, RoomObjectVariable.FIGURE_IS_MUTED, 1);\r\n                return;\r\n            case 3:\r\n                this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, userData.roomIndex, RoomObjectVariable.FIGURE_IS_MUTED, 0);\r\n                return;\r\n        }\r\n    }\r\n\r\n    private onGuideSessionStartedMessageEvent(event: GuideSessionStartedMessageEvent): void\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        this._guideId = parser.guideUserId;\r\n        this._requesterId = parser.requesterUserId;\r\n\r\n        this.updateGuideMarker();\r\n    }\r\n\r\n    private onGuideSessionEndedMessageEvent(k: GuideSessionEndedMessageEvent): void\r\n    {\r\n        this.removeGuideMarker();\r\n    }\r\n\r\n    private onGuideSessionErrorMessageEvent(k: GuideSessionErrorMessageEvent): void\r\n    {\r\n        this.removeGuideMarker();\r\n    }\r\n\r\n    private updateGuideMarker():void\r\n    {\r\n        const userId = this._roomCreator.sessionDataManager.userId;\r\n\r\n        this.setUserGuideStatus(this._guideId, ((this._requesterId === userId) ? AvatarGuideStatus.GUIDE : AvatarGuideStatus.NONE));\r\n        this.setUserGuideStatus(this._requesterId, ((this._guideId === userId) ? AvatarGuideStatus.REQUESTER : AvatarGuideStatus.NONE));\r\n    }\r\n\r\n    private removeGuideMarker():void\r\n    {\r\n        this.setUserGuideStatus(this._guideId, AvatarGuideStatus.NONE);\r\n        this.setUserGuideStatus(this._requesterId, AvatarGuideStatus.NONE);\r\n\r\n        this._guideId = -1;\r\n        this._requesterId = -1;\r\n    }\r\n\r\n    private setUserGuideStatus(userId: number, status: number):void\r\n    {\r\n        if(!this._roomCreator || !this._roomCreator.roomSessionManager) return;\r\n\r\n        const roomSession = this._roomCreator.roomSessionManager.getSession(this._currentRoomId);\r\n\r\n        if(!roomSession) return;\r\n\r\n        const userData = roomSession.userDataManager.getDataByType(userId, RoomObjectType.USER);\r\n\r\n        if(!userData) return;\r\n\r\n        this._roomCreator.updateRoomObjectUserAction(this._currentRoomId, userData.roomIndex, RoomObjectVariable.FIGURE_GUIDE_STATUS, status);\r\n    }\r\n\r\n    // public _SafeStr_10580(event:_SafeStr_2242): void\r\n    // {\r\n    //     var arrayIndex: number;\r\n    //     var discoColours:Array;\r\n    //     var discoTimer:Timer;\r\n    //     var eventParser:_SafeStr_4576 = (event.parser as _SafeStr_4576);\r\n    //     switch (eventParser._SafeStr_7025)\r\n    //     {\r\n    //         case 0:\r\n    //             _SafeStr_4588.init(250, 5000);\r\n    //             _SafeStr_4588._SafeStr_6766();\r\n    //             return;\r\n    //         case 1:\r\n    //             _SafeStr_4231.init(250, 5000);\r\n    //             _SafeStr_4231._SafeStr_6766();\r\n    //             return;\r\n    //         case 2:\r\n    //             this._SafeStr_10592.roomSessionManager.events.dispatchEvent(new _SafeStr_2821(this._SafeStr_10593, -1, true));\r\n    //             return;\r\n    //         case 3:\r\n    //             arrayIndex = 0;\r\n    //             discoColours = [29371, 16731195, 16764980, 0x99FF00, 29371, 16731195, 16764980, 0x99FF00, 0];\r\n    //             discoTimer = new Timer(1000, (discoColours.length + 1));\r\n    //             discoTimer.addEventListener(TimerEvent.TIMER, function (k:TimerEvent): void\r\n    //             {\r\n    //                 if (arrayIndex == discoColours.length)\r\n    //                 {\r\n    //                     _SafeStr_10592._SafeStr_21164(_SafeStr_10593, discoColours[arrayIndex++], 176, true);\r\n    //                 } else\r\n    //                 {\r\n    //                     _SafeStr_10592._SafeStr_21164(_SafeStr_10593, discoColours[arrayIndex++], 176, false);\r\n    //                 };\r\n    //             });\r\n    //             discoTimer.start();\r\n    //             return;\r\n    //     };\r\n    // }\r\n\r\n    public get currentRoomId(): number\r\n    {\r\n        return this._currentRoomId;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}