{"ast":null,"code":"import { Texture } from '@pixi/core';\nimport { Sprite } from '@pixi/sprite';\nimport { AlphaTolerance, TextureUtils } from '../../../../../..';\nexport class GameClickTargetAddition {\n  constructor(id) {\n    this._id = void 0;\n    this._asset = void 0;\n    this._disposed = void 0;\n    this._id = id;\n    this._asset = null;\n    this._disposed = false;\n  }\n\n  dispose() {\n    this._asset = null;\n  }\n\n  update(sprite, scale) {\n    if (!sprite) return;\n\n    if (!this._asset) {\n      const newSprite = new Sprite(Texture.WHITE);\n      newSprite.alpha = 0;\n      newSprite.width = GameClickTargetAddition.WIDTH;\n      newSprite.height = GameClickTargetAddition.HEIGHT;\n      this._asset = TextureUtils.generateTexture(newSprite);\n    }\n\n    sprite.visible = true;\n    sprite.texture = this._asset;\n    sprite.offsetX = GameClickTargetAddition.OFFSET_X;\n    sprite.offsetY = GameClickTargetAddition.OFFSET_Y;\n    sprite.alphaTolerance = AlphaTolerance.MATCH_ALL_PIXELS;\n  }\n\n  animate(sprite) {\n    return false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n}\nGameClickTargetAddition.WIDTH = 46;\nGameClickTargetAddition.HEIGHT = 60;\nGameClickTargetAddition.OFFSET_X = -23;\nGameClickTargetAddition.OFFSET_Y = -48;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/avatar/additions/GameClickTargetAddition.ts"],"names":["Texture","Sprite","AlphaTolerance","TextureUtils","GameClickTargetAddition","constructor","id","_id","_asset","_disposed","dispose","update","sprite","scale","newSprite","WHITE","alpha","width","WIDTH","height","HEIGHT","generateTexture","visible","texture","offsetX","OFFSET_X","offsetY","OFFSET_Y","alphaTolerance","MATCH_ALL_PIXELS","animate"],"mappings":"AAAA,SAAmBA,OAAnB,QAAkC,YAAlC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,mBAA7C;AAIA,OAAO,MAAMC,uBAAN,CACP;AAUIC,EAAAA,WAAW,CAACC,EAAD,EACX;AAAA,SALQC,GAKR;AAAA,SAJQC,MAIR;AAAA,SAHQC,SAGR;AACI,SAAKF,GAAL,GAAWD,EAAX;AACA,SAAKE,MAAL,GAAc,IAAd;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEMC,EAAAA,OAAO,GACd;AACI,SAAKF,MAAL,GAAc,IAAd;AACH;;AAEMG,EAAAA,MAAM,CAACC,MAAD,EAA4BC,KAA5B,EACb;AACI,QAAG,CAACD,MAAJ,EAAY;;AAEZ,QAAG,CAAC,KAAKJ,MAAT,EACA;AACI,YAAMM,SAAS,GAAG,IAAIb,MAAJ,CAAWD,OAAO,CAACe,KAAnB,CAAlB;AAEAD,MAAAA,SAAS,CAACE,KAAV,GAAkB,CAAlB;AACAF,MAAAA,SAAS,CAACG,KAAV,GAAkBb,uBAAuB,CAACc,KAA1C;AACAJ,MAAAA,SAAS,CAACK,MAAV,GAAmBf,uBAAuB,CAACgB,MAA3C;AAEA,WAAKZ,MAAL,GAAcL,YAAY,CAACkB,eAAb,CAA6BP,SAA7B,CAAd;AACH;;AAEDF,IAAAA,MAAM,CAACU,OAAP,GAAiB,IAAjB;AACAV,IAAAA,MAAM,CAACW,OAAP,GAAiB,KAAKf,MAAtB;AACAI,IAAAA,MAAM,CAACY,OAAP,GAAiBpB,uBAAuB,CAACqB,QAAzC;AACAb,IAAAA,MAAM,CAACc,OAAP,GAAiBtB,uBAAuB,CAACuB,QAAzC;AACAf,IAAAA,MAAM,CAACgB,cAAP,GAAwB1B,cAAc,CAAC2B,gBAAvC;AACH;;AAEMC,EAAAA,OAAO,CAAClB,MAAD,EACd;AACI,WAAO,KAAP;AACH;;AAEY,MAAFN,EAAE,GACb;AACI,WAAO,KAAKC,GAAZ;AACH;;AApDL;AADaH,uB,CAEMc,K,GAAgB,E;AAFtBd,uB,CAGMgB,M,GAAiB,E;AAHvBhB,uB,CAIMqB,Q,GAAmB,CAAC,E;AAJ1BrB,uB,CAKMuB,Q,GAAmB,CAAC,E","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { Sprite } from '@pixi/sprite';\r\nimport { AlphaTolerance, TextureUtils } from '../../../../../..';\r\nimport { IRoomObjectSprite } from '../../../../../../room/object/visualization/IRoomObjectSprite';\r\nimport { IAvatarAddition } from './IAvatarAddition';\r\n\r\nexport class GameClickTargetAddition implements IAvatarAddition\r\n{\r\n    private static WIDTH: number = 46;\r\n    private static HEIGHT: number = 60;\r\n    private static OFFSET_X: number = -23;\r\n    private static OFFSET_Y: number = -48;\r\n\r\n    private _id: number;\r\n    private _asset: Texture<Resource>;\r\n    private _disposed: boolean;\r\n\r\n    constructor(id: number)\r\n    {\r\n        this._id = id;\r\n        this._asset = null;\r\n        this._disposed = false;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._asset = null;\r\n    }\r\n\r\n    public update(sprite: IRoomObjectSprite, scale: number): void\r\n    {\r\n        if(!sprite) return;\r\n\r\n        if(!this._asset)\r\n        {\r\n            const newSprite = new Sprite(Texture.WHITE);\r\n\r\n            newSprite.alpha = 0;\r\n            newSprite.width = GameClickTargetAddition.WIDTH;\r\n            newSprite.height = GameClickTargetAddition.HEIGHT;\r\n\r\n            this._asset = TextureUtils.generateTexture(newSprite);\r\n        }\r\n\r\n        sprite.visible = true;\r\n        sprite.texture = this._asset;\r\n        sprite.offsetX = GameClickTargetAddition.OFFSET_X;\r\n        sprite.offsetY = GameClickTargetAddition.OFFSET_Y;\r\n        sprite.alphaTolerance = AlphaTolerance.MATCH_ALL_PIXELS;\r\n    }\r\n\r\n    public animate(sprite: IRoomObjectSprite): boolean\r\n    {\r\n        return false;\r\n    }\r\n\r\n    public get id(): number\r\n    {\r\n        return this._id;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}