{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/groups/views/GroupInformationView.tsx\",\n    _s = $RefreshSig$();\n\nimport { GroupRemoveMemberComposer } from '@nitrots/nitro-renderer';\nimport { useCallback } from 'react';\nimport { CatalogPageName, CreateLinkEvent, GetGroupManager, GetGroupMembers, GetSessionDataManager, LocalizeText, NotificationUtilities, SendMessageComposer, TryJoinGroup, TryVisitRoom } from '../../../api';\nimport { Button, Column, Flex, Grid, LayoutBadgeImageView, Text } from '../../../common';\nimport { GroupMembershipType } from '../common/GroupMembershipType';\nimport { GroupType } from '../common/GroupType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATES = ['regular', 'exclusive', 'private'];\nexport const GroupInformationView = props => {\n  _s();\n\n  const {\n    groupInformation = null,\n    onClose = null,\n    overflow = 'hidden',\n    ...rest\n  } = props;\n  const isRealOwner = groupInformation && groupInformation.ownerName === GetSessionDataManager().userName;\n\n  const joinGroup = () => groupInformation && TryJoinGroup(groupInformation.id);\n\n  const leaveGroup = () => {\n    NotificationUtilities.confirm(LocalizeText('group.leaveconfirm.desc'), () => {\n      SendMessageComposer(new GroupRemoveMemberComposer(groupInformation.id, GetSessionDataManager().userId));\n      if (onClose) onClose();\n    }, null);\n  };\n\n  const getRoleIcon = () => {\n    if (groupInformation.membershipType === GroupMembershipType.NOT_MEMBER || groupInformation.membershipType === GroupMembershipType.REQUEST_PENDING) return null;\n    if (isRealOwner) return /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"icon icon-group-owner\",\n      title: LocalizeText('group.youareowner')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 32\n    }, this);\n    if (groupInformation.isAdmin) return /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"icon icon-group-admin\",\n      title: LocalizeText('group.youareadmin')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 45\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"icon icon-group-member\",\n      title: LocalizeText('group.youaremember')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  };\n\n  const getButtonText = () => {\n    if (isRealOwner) return 'group.youareowner';\n    if (groupInformation.type === GroupType.PRIVATE) return '';\n    if (groupInformation.membershipType === GroupMembershipType.MEMBER) return 'group.leave';\n    if (groupInformation.membershipType === GroupMembershipType.NOT_MEMBER && groupInformation.type === GroupType.REGULAR) return 'group.join';\n    if (groupInformation.membershipType === GroupMembershipType.REQUEST_PENDING) return 'group.membershippending';\n    if (groupInformation.membershipType === GroupMembershipType.NOT_MEMBER && groupInformation.type === GroupType.EXCLUSIVE) return 'group.requestmembership';\n  };\n\n  const handleButtonClick = () => {\n    if (groupInformation.type === GroupType.PRIVATE && groupInformation.membershipType === GroupMembershipType.NOT_MEMBER) return;\n\n    if (groupInformation.membershipType === GroupMembershipType.MEMBER) {\n      leaveGroup();\n      return;\n    }\n\n    joinGroup();\n  };\n\n  const handleAction = useCallback(action => {\n    switch (action) {\n      case 'members':\n        GetGroupMembers(groupInformation.id);\n        break;\n\n      case 'members_pending':\n        GetGroupMembers(groupInformation.id, 2);\n        break;\n\n      case 'manage':\n        GetGroupManager(groupInformation.id);\n        break;\n\n      case 'homeroom':\n        TryVisitRoom(groupInformation.roomId);\n        break;\n\n      case 'furniture':\n        CreateLinkEvent('catalog/open/' + CatalogPageName.GUILD_CUSTOM_FURNI);\n        break;\n\n      case 'popular_groups':\n        CreateLinkEvent('navigator/search/groups');\n        break;\n    }\n  }, [groupInformation]);\n  if (!groupInformation) return null;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"profile-grey-bg-border p-2\",\n    overflow: overflow,\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      center: true,\n      size: 3,\n      overflow: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        overflow: \"hidden\",\n        className: \"group-badge\",\n        children: /*#__PURE__*/_jsxDEV(LayoutBadgeImageView, {\n          badgeCode: groupInformation.badge,\n          isGroup: true,\n          scale: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          underline: true,\n          pointer: true,\n          onClick: () => handleAction('members'),\n          children: LocalizeText('group.membercount', ['totalMembers'], [groupInformation.membersCount.toString()])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), groupInformation.pendingRequestsCount > 0 && /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          underline: true,\n          pointer: true,\n          onClick: () => handleAction('members_pending'),\n          children: LocalizeText('group.pendingmembercount', ['amount'], [groupInformation.pendingRequestsCount.toString()])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), groupInformation.isOwner && /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          underline: true,\n          pointer: true,\n          onClick: () => handleAction('manage'),\n          children: LocalizeText('group.manage')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), getRoleIcon()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      size: 9,\n      justifyContent: \"between\",\n      overflow: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        overflow: \"hidden\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            gap: 2,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              bold: true,\n              children: groupInformation.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              gap: 1,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: 'icon icon-group-type-' + groupInformation.type,\n                title: LocalizeText(`group.edit.settings.type.${STATES[groupInformation.type]}.help`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), groupInformation.canMembersDecorate && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon icon-group-decorate\",\n                title: LocalizeText('group.memberscandecorate')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            children: LocalizeText('group.created', ['date', 'owner'], [groupInformation.createdAt, groupInformation.ownerName])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          textBreak: true,\n          overflow: \"auto\",\n          className: \"group-description\",\n          children: groupInformation.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            underline: true,\n            pointer: true,\n            onClick: () => handleAction('homeroom'),\n            children: LocalizeText('group.linktobase')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            underline: true,\n            pointer: true,\n            onClick: () => handleAction('furniture'),\n            children: LocalizeText('group.buyfurni')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            underline: true,\n            pointer: true,\n            onClick: () => handleAction('popular_groups'),\n            children: LocalizeText('group.showgroups')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), groupInformation.type !== GroupType.PRIVATE && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: groupInformation.membershipType === GroupMembershipType.REQUEST_PENDING || isRealOwner,\n          onClick: handleButtonClick,\n          children: LocalizeText(getButtonText())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GroupInformationView, \"lo9iZe4kKXTV4QkOEgV5A6nFfbU=\");\n\n_c = GroupInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupInformationView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/groups/views/GroupInformationView.tsx"],"names":["GroupRemoveMemberComposer","useCallback","CatalogPageName","CreateLinkEvent","GetGroupManager","GetGroupMembers","GetSessionDataManager","LocalizeText","NotificationUtilities","SendMessageComposer","TryJoinGroup","TryVisitRoom","Button","Column","Flex","Grid","LayoutBadgeImageView","Text","GroupMembershipType","GroupType","STATES","GroupInformationView","props","groupInformation","onClose","overflow","rest","isRealOwner","ownerName","userName","joinGroup","id","leaveGroup","confirm","userId","getRoleIcon","membershipType","NOT_MEMBER","REQUEST_PENDING","isAdmin","getButtonText","type","PRIVATE","MEMBER","REGULAR","EXCLUSIVE","handleButtonClick","handleAction","action","roomId","GUILD_CUSTOM_FURNI","badge","membersCount","toString","pendingRequestsCount","isOwner","title","canMembersDecorate","createdAt","description"],"mappings":"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","sourcesContent":["import { GroupInformationParser, GroupRemoveMemberComposer } from '@nitrots/nitro-renderer';\nimport { FC, useCallback } from 'react';\nimport { CatalogPageName, CreateLinkEvent, GetGroupManager, GetGroupMembers, GetSessionDataManager, LocalizeText, NotificationUtilities, SendMessageComposer, TryJoinGroup, TryVisitRoom } from '../../../api';\nimport { Button, Column, Flex, Grid, GridProps, LayoutBadgeImageView, Text } from '../../../common';\nimport { GroupMembershipType } from '../common/GroupMembershipType';\nimport { GroupType } from '../common/GroupType';\n\nconst STATES: string[] = [ 'regular', 'exclusive', 'private' ];\n\ninterface GroupInformationViewProps extends GridProps\n{\n    groupInformation: GroupInformationParser;\n    onJoin?: () => void;\n    onClose?: () => void;\n}\n\nexport const GroupInformationView: FC<GroupInformationViewProps> = props =>\n{\n    const { groupInformation = null, onClose = null, overflow = 'hidden', ...rest } = props;\n\n    const isRealOwner = (groupInformation && (groupInformation.ownerName === GetSessionDataManager().userName));\n\n    const joinGroup = () => (groupInformation && TryJoinGroup(groupInformation.id));\n\n    const leaveGroup = () =>\n    {\n        NotificationUtilities.confirm(LocalizeText('group.leaveconfirm.desc'), () =>\n        {\n            SendMessageComposer(new GroupRemoveMemberComposer(groupInformation.id, GetSessionDataManager().userId));\n\n            if(onClose) onClose();\n        }, null);\n    }\n\n    const getRoleIcon = () =>\n    {\n        if(groupInformation.membershipType === GroupMembershipType.NOT_MEMBER || groupInformation.membershipType === GroupMembershipType.REQUEST_PENDING) return null;\n\n        if(isRealOwner) return <i className=\"icon icon-group-owner\" title={ LocalizeText('group.youareowner') } />;\n\n        if(groupInformation.isAdmin) return <i className=\"icon icon-group-admin\" title={ LocalizeText('group.youareadmin') } />;\n\n        return <i className=\"icon icon-group-member\" title={ LocalizeText('group.youaremember') } />;\n    }\n\n    const getButtonText = () =>\n    {\n        if(isRealOwner) return 'group.youareowner';\n\n        if(groupInformation.type === GroupType.PRIVATE) return '';\n\n        if(groupInformation.membershipType === GroupMembershipType.MEMBER) return 'group.leave';\n\n        if((groupInformation.membershipType === GroupMembershipType.NOT_MEMBER) && groupInformation.type === GroupType.REGULAR) return 'group.join';\n\n        if(groupInformation.membershipType === GroupMembershipType.REQUEST_PENDING) return 'group.membershippending';\n\n        if((groupInformation.membershipType === GroupMembershipType.NOT_MEMBER) && groupInformation.type === GroupType.EXCLUSIVE) return 'group.requestmembership';\n    }\n\n    const handleButtonClick = () =>\n    {\n        if((groupInformation.type === GroupType.PRIVATE) && (groupInformation.membershipType === GroupMembershipType.NOT_MEMBER)) return;\n\n        if(groupInformation.membershipType === GroupMembershipType.MEMBER)\n        {\n            leaveGroup();\n\n            return;\n        }\n\n        joinGroup();\n    }\n\n    const handleAction = useCallback((action: string) =>\n    {\n        switch(action)\n        {\n            case 'members':\n                GetGroupMembers(groupInformation.id);\n                break;\n            case 'members_pending':\n                GetGroupMembers(groupInformation.id, 2);\n                break;\n            case 'manage':\n                GetGroupManager(groupInformation.id);\n                break;\n            case 'homeroom':\n                TryVisitRoom(groupInformation.roomId);\n                break;\n            case 'furniture':\n                CreateLinkEvent('catalog/open/' + CatalogPageName.GUILD_CUSTOM_FURNI);\n                break;\n            case 'popular_groups':\n                CreateLinkEvent('navigator/search/groups');\n                break;\n        }\n    }, [ groupInformation ]);\n\n    if(!groupInformation) return null;\n\n    return (\n        <Grid className=\"profile-grey-bg-border p-2\" overflow={ overflow } { ...rest }>\n            <Column center size={ 3 } overflow=\"hidden\">\n                <Flex alignItems=\"center\" overflow=\"hidden\" className=\"group-badge\">\n                    <LayoutBadgeImageView badgeCode={ groupInformation.badge } isGroup={ true } scale={ 2 } />\n                </Flex>\n                <Column alignItems=\"center\" gap={ 1 }>\n                    <Text small underline pointer onClick={ () => handleAction('members') }>{ LocalizeText('group.membercount', [ 'totalMembers' ], [ groupInformation.membersCount.toString() ]) }</Text>\n                    { (groupInformation.pendingRequestsCount > 0) &&\n                        <Text small underline pointer onClick={ () => handleAction('members_pending') }>{ LocalizeText('group.pendingmembercount', [ 'amount' ], [ groupInformation.pendingRequestsCount.toString() ]) }</Text> }\n                    { groupInformation.isOwner &&\n                        <Text small underline pointer onClick={ () => handleAction('manage') }>{ LocalizeText('group.manage') }</Text> }\n                </Column>\n                { getRoleIcon() }\n            </Column>\n            <Column size={ 9 } justifyContent=\"between\" overflow=\"auto\">\n                <Column overflow=\"hidden\">\n                    <Column gap={ 1 }>\n                        <Flex alignItems=\"center\" gap={ 2 }>\n                            <Text bold>{ groupInformation.title }</Text>\n                            <Flex gap={ 1 }>\n                                <i className={ 'icon icon-group-type-' + groupInformation.type } title={ LocalizeText(`group.edit.settings.type.${ STATES[groupInformation.type] }.help`) } />\n                                { groupInformation.canMembersDecorate &&\n                                    <i className=\"icon icon-group-decorate\" title={ LocalizeText('group.memberscandecorate') } /> }\n                            </Flex>\n                        </Flex>\n                        <Text small>{ LocalizeText('group.created', [ 'date', 'owner' ], [ groupInformation.createdAt, groupInformation.ownerName ]) }</Text>\n                    </Column>\n                    <Text small textBreak overflow=\"auto\" className=\"group-description\">{ groupInformation.description }</Text>\n                </Column>\n                <Column>\n                    <Column gap={ 1 }>\n                        <Text small underline pointer onClick={ () => handleAction('homeroom') }>{ LocalizeText('group.linktobase') }</Text>\n                        <Text small underline pointer onClick={ () => handleAction('furniture') }>{ LocalizeText('group.buyfurni') }</Text>\n                        <Text small underline pointer onClick={ () => handleAction('popular_groups') }>{ LocalizeText('group.showgroups') }</Text>\n                    </Column>\n                    { (groupInformation.type !== GroupType.PRIVATE) &&\n                        <Button disabled={ (groupInformation.membershipType === GroupMembershipType.REQUEST_PENDING) || isRealOwner } onClick={ handleButtonClick }>\n                            { LocalizeText(getButtonText()) }\n                        </Button> }\n                </Column>\n            </Column>\n        </Grid>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}