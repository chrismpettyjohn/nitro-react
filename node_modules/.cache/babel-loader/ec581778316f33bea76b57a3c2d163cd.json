{"ast":null,"code":"import { ActiveActionData } from '../actions/ActiveActionData';\nexport class AvatarAnimationLayerData {\n  constructor(k, _arg_2, _arg_3) {\n    this._id = void 0;\n    this._action = void 0;\n    this._animationFrame = void 0;\n    this._dx = void 0;\n    this._dy = void 0;\n    this._dz = void 0;\n    this._directionOffset = void 0;\n    this._type = void 0;\n    this._base = void 0;\n    this._items = void 0;\n    this._id = k.id;\n    this._animationFrame = k.frame || 0;\n    this._dx = k.dx || 0;\n    this._dy = k.dy || 0;\n    this._dz = k.dz || 0;\n    this._directionOffset = k.dd || 0;\n    this._type = _arg_2;\n    this._base = k.base || '';\n    this._items = new Map();\n    if (k.items) for (const _local_4 of k.items) this._items.set(_local_4.id, _local_4.base);\n    let _local_5 = '';\n    if (this._base !== '') _local_5 = this.baseAsInt().toString();\n\n    if (_arg_3) {\n      this._action = new ActiveActionData(_arg_3.state, this.base);\n      this._action.definition = _arg_3;\n    }\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  baseAsInt() {\n    let k = 0;\n    let index = 0;\n\n    while (index < this._base.length) {\n      k = k + this._base.charCodeAt(index);\n      index++;\n    }\n\n    return k;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get animationFrame() {\n    return this._animationFrame;\n  }\n\n  get dx() {\n    return this._dx;\n  }\n\n  get dy() {\n    return this._dy;\n  }\n\n  get dz() {\n    return this._dz;\n  }\n\n  get dd() {\n    return this._directionOffset;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get base() {\n    return this._base;\n  }\n\n  get action() {\n    return this._action;\n  }\n\n}\nAvatarAnimationLayerData.BODYPART = 'bodypart';\nAvatarAnimationLayerData.FX = 'fx';","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/avatar/animation/AvatarAnimationLayerData.ts"],"names":["ActiveActionData","AvatarAnimationLayerData","constructor","k","_arg_2","_arg_3","_id","_action","_animationFrame","_dx","_dy","_dz","_directionOffset","_type","_base","_items","id","frame","dx","dy","dz","dd","base","Map","items","_local_4","set","_local_5","baseAsInt","toString","state","definition","index","length","charCodeAt","animationFrame","type","action","BODYPART","FX"],"mappings":"AACA,SAASA,gBAAT,QAAiC,6BAAjC;AAKA,OAAO,MAAMC,wBAAN,CACP;AAeIC,EAAAA,WAAW,CAACC,CAAD,EAA8BC,MAA9B,EAA8CC,MAA9C,EACX;AAAA,SAZQC,GAYR;AAAA,SAXQC,OAWR;AAAA,SAVQC,eAUR;AAAA,SATQC,GASR;AAAA,SARQC,GAQR;AAAA,SAPQC,GAOR;AAAA,SANQC,gBAMR;AAAA,SALQC,KAKR;AAAA,SAJQC,KAIR;AAAA,SAHQC,MAGR;AACI,SAAKT,GAAL,GAAWH,CAAC,CAACa,EAAb;AACA,SAAKR,eAAL,GAAwBL,CAAC,CAACc,KAAF,IAAW,CAAnC;AACA,SAAKR,GAAL,GAAYN,CAAC,CAACe,EAAF,IAAQ,CAApB;AACA,SAAKR,GAAL,GAAYP,CAAC,CAACgB,EAAF,IAAQ,CAApB;AACA,SAAKR,GAAL,GAAYR,CAAC,CAACiB,EAAF,IAAQ,CAApB;AACA,SAAKR,gBAAL,GAAyBT,CAAC,CAACkB,EAAF,IAAQ,CAAjC;AACA,SAAKR,KAAL,GAAaT,MAAb;AACA,SAAKU,KAAL,GAAcX,CAAC,CAACmB,IAAF,IAAU,EAAxB;AACA,SAAKP,MAAL,GAAc,IAAIQ,GAAJ,EAAd;AAEA,QAAGpB,CAAC,CAACqB,KAAL,EAAY,KAAI,MAAMC,QAAV,IAAsBtB,CAAC,CAACqB,KAAxB,EAA+B,KAAKT,MAAL,CAAYW,GAAZ,CAAgBD,QAAQ,CAACT,EAAzB,EAA6BS,QAAQ,CAACH,IAAtC;AAE3C,QAAIK,QAAQ,GAAG,EAAf;AAEA,QAAG,KAAKb,KAAL,KAAe,EAAlB,EAAsBa,QAAQ,GAAG,KAAKC,SAAL,GAAiBC,QAAjB,EAAX;;AAEtB,QAAGxB,MAAH,EACA;AACI,WAAKE,OAAL,GAAe,IAAIP,gBAAJ,CAAqBK,MAAM,CAACyB,KAA5B,EAAmC,KAAKR,IAAxC,CAAf;AACA,WAAKf,OAAL,CAAawB,UAAb,GAA0B1B,MAA1B;AACH;AACJ;;AAEe,MAALmB,KAAK,GAChB;AACI,WAAO,KAAKT,MAAZ;AACH;;AAEOa,EAAAA,SAAS,GACjB;AACI,QAAIzB,CAAC,GAAG,CAAR;AACA,QAAI6B,KAAK,GAAG,CAAZ;;AAEA,WAAMA,KAAK,GAAG,KAAKlB,KAAL,CAAWmB,MAAzB,EACA;AACI9B,MAAAA,CAAC,GAAIA,CAAC,GAAG,KAAKW,KAAL,CAAWoB,UAAX,CAAsBF,KAAtB,CAAT;AAEAA,MAAAA,KAAK;AACR;;AAED,WAAO7B,CAAP;AACH;;AAEY,MAAFa,EAAE,GACb;AACI,WAAO,KAAKV,GAAZ;AACH;;AAEwB,MAAd6B,cAAc,GACzB;AACI,WAAO,KAAK3B,eAAZ;AACH;;AAEY,MAAFU,EAAE,GACb;AACI,WAAO,KAAKT,GAAZ;AACH;;AAEY,MAAFU,EAAE,GACb;AACI,WAAO,KAAKT,GAAZ;AACH;;AAEY,MAAFU,EAAE,GACb;AACI,WAAO,KAAKT,GAAZ;AACH;;AAEY,MAAFU,EAAE,GACb;AACI,WAAO,KAAKT,gBAAZ;AACH;;AAEc,MAAJwB,IAAI,GACf;AACI,WAAO,KAAKvB,KAAZ;AACH;;AAEc,MAAJS,IAAI,GACf;AACI,WAAO,KAAKR,KAAZ;AACH;;AAEgB,MAANuB,MAAM,GACjB;AACI,WAAO,KAAK9B,OAAZ;AACH;;AAvGL;AADaN,wB,CAEKqC,Q,GAAmB,U;AAFxBrC,wB,CAGKsC,E,GAAa,I","sourcesContent":["import { IAssetAnimationFramePart } from '../../../core/asset/interfaces/animation/IAssetAnimationFramePart';\r\nimport { ActiveActionData } from '../actions/ActiveActionData';\r\nimport { IActionDefinition } from '../actions/IActionDefinition';\r\nimport { IActiveActionData } from '../actions/IActiveActionData';\r\nimport { IAnimationLayerData } from './IAnimationLayerData';\r\n\r\nexport class AvatarAnimationLayerData implements IAnimationLayerData\r\n{\r\n    public static BODYPART: string = 'bodypart';\r\n    public static FX: string = 'fx';\r\n\r\n    private _id: string;\r\n    private _action: IActiveActionData;\r\n    private _animationFrame: number;\r\n    private _dx: number;\r\n    private _dy: number;\r\n    private _dz: number;\r\n    private _directionOffset: number;\r\n    private _type: string;\r\n    private _base: string;\r\n    private _items: Map<string, string>;\r\n\r\n    constructor(k: IAssetAnimationFramePart, _arg_2: string, _arg_3: IActionDefinition)\r\n    {\r\n        this._id = k.id;\r\n        this._animationFrame = (k.frame || 0);\r\n        this._dx = (k.dx || 0);\r\n        this._dy = (k.dy || 0);\r\n        this._dz = (k.dz || 0);\r\n        this._directionOffset = (k.dd || 0);\r\n        this._type = _arg_2;\r\n        this._base = (k.base || '');\r\n        this._items = new Map();\r\n\r\n        if(k.items) for(const _local_4 of k.items) this._items.set(_local_4.id, _local_4.base);\r\n\r\n        let _local_5 = '';\r\n\r\n        if(this._base !== '') _local_5 = this.baseAsInt().toString();\r\n\r\n        if(_arg_3)\r\n        {\r\n            this._action = new ActiveActionData(_arg_3.state, this.base);\r\n            this._action.definition = _arg_3;\r\n        }\r\n    }\r\n\r\n    public get items(): Map<string, string>\r\n    {\r\n        return this._items;\r\n    }\r\n\r\n    private baseAsInt(): number\r\n    {\r\n        let k = 0;\r\n        let index = 0;\r\n\r\n        while(index < this._base.length)\r\n        {\r\n            k = (k + this._base.charCodeAt(index));\r\n\r\n            index++;\r\n        }\r\n\r\n        return k;\r\n    }\r\n\r\n    public get id(): string\r\n    {\r\n        return this._id;\r\n    }\r\n\r\n    public get animationFrame(): number\r\n    {\r\n        return this._animationFrame;\r\n    }\r\n\r\n    public get dx(): number\r\n    {\r\n        return this._dx;\r\n    }\r\n\r\n    public get dy(): number\r\n    {\r\n        return this._dy;\r\n    }\r\n\r\n    public get dz(): number\r\n    {\r\n        return this._dz;\r\n    }\r\n\r\n    public get dd(): number\r\n    {\r\n        return this._directionOffset;\r\n    }\r\n\r\n    public get type(): string\r\n    {\r\n        return this._type;\r\n    }\r\n\r\n    public get base(): string\r\n    {\r\n        return this._base;\r\n    }\r\n\r\n    public get action(): IActiveActionData\r\n    {\r\n        return this._action;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}