{"ast":null,"code":"import { IssueMessageData } from './IssueMessageData';\nexport class IssuePickFailedMessageParser {\n  constructor() {\n    this._issues = void 0;\n    this._retryEnabled = void 0;\n    this._retryCount = void 0;\n  }\n\n  flush() {\n    this._issues = null;\n    return true;\n  }\n\n  parse(k) {\n    this._issues = [];\n    const count = k.readInt();\n\n    for (let i = 0; i < count; i++) {\n      const _local_4 = k.readInt();\n\n      const _local_5 = k.readInt();\n\n      const _local_6 = k.readString();\n\n      const _local_7 = new IssueMessageData(_local_4, 0, 0, 0, 0, 0, 0, 0, null, 0, null, _local_5, _local_6, null, 0, []);\n\n      this._issues.push(_local_7);\n    }\n\n    this._retryEnabled = k.readBoolean();\n    this._retryCount = k.readInt();\n    return true;\n  }\n\n  get issues() {\n    return this._issues;\n  }\n\n  get retryEnabled() {\n    return this._retryEnabled;\n  }\n\n  get retryCount() {\n    return this._retryCount;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/moderation/IssuePickFailedMessageParser.ts"],"names":["IssueMessageData","IssuePickFailedMessageParser","_issues","_retryEnabled","_retryCount","flush","parse","k","count","readInt","i","_local_4","_local_5","_local_6","readString","_local_7","push","readBoolean","issues","retryEnabled","retryCount"],"mappings":"AAEA,SAASA,gBAAT,QAAiC,oBAAjC;AAEA,OAAO,MAAMC,4BAAN,CACP;AAAA;AAAA,SACYC,OADZ;AAAA,SAEYC,aAFZ;AAAA,SAGYC,WAHZ;AAAA;;AAKWC,EAAAA,KAAK,GACZ;AACI,SAAKH,OAAL,GAAe,IAAf;AACA,WAAO,IAAP;AACH;;AAEMI,EAAAA,KAAK,CAACC,CAAD,EACZ;AACI,SAAKL,OAAL,GAAe,EAAf;AAEA,UAAMM,KAAK,GAAGD,CAAC,CAACE,OAAF,EAAd;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,KAAnB,EAA0BE,CAAC,EAA3B,EACA;AACI,YAAMC,QAAQ,GAAGJ,CAAC,CAACE,OAAF,EAAjB;;AACA,YAAMG,QAAQ,GAAGL,CAAC,CAACE,OAAF,EAAjB;;AACA,YAAMI,QAAQ,GAAGN,CAAC,CAACO,UAAF,EAAjB;;AACA,YAAMC,QAAQ,GAAG,IAAIf,gBAAJ,CAAqBW,QAArB,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,IAApD,EAA0D,CAA1D,EAA6D,IAA7D,EAAmEC,QAAnE,EAA6EC,QAA7E,EAAuF,IAAvF,EAA6F,CAA7F,EAAgG,EAAhG,CAAjB;;AACA,WAAKX,OAAL,CAAac,IAAb,CAAkBD,QAAlB;AACH;;AAED,SAAKZ,aAAL,GAAqBI,CAAC,CAACU,WAAF,EAArB;AACA,SAAKb,WAAL,GAAmBG,CAAC,CAACE,OAAF,EAAnB;AACA,WAAO,IAAP;AACH;;AAEgB,MAANS,MAAM,GACjB;AACI,WAAO,KAAKhB,OAAZ;AACH;;AAEsB,MAAZiB,YAAY,GACvB;AACI,WAAO,KAAKhB,aAAZ;AACH;;AAEoB,MAAViB,UAAU,GACrB;AACI,WAAO,KAAKhB,WAAZ;AACH;;AA5CL","sourcesContent":["import { IMessageDataWrapper } from '../../../../../core/communication/messages/IMessageDataWrapper';\r\nimport { IMessageParser } from '../../../../../core/communication/messages/IMessageParser';\r\nimport { IssueMessageData } from './IssueMessageData';\r\n\r\nexport class IssuePickFailedMessageParser implements IMessageParser\r\n{\r\n    private _issues: IssueMessageData[];\r\n    private _retryEnabled: boolean;\r\n    private _retryCount: number;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._issues = null;\r\n        return true;\r\n    }\r\n\r\n    public parse(k: IMessageDataWrapper): boolean\r\n    {\r\n        this._issues = [];\r\n\r\n        const count = k.readInt();\r\n\r\n        for(let i = 0; i < count; i++)\r\n        {\r\n            const _local_4 = k.readInt();\r\n            const _local_5 = k.readInt();\r\n            const _local_6 = k.readString();\r\n            const _local_7 = new IssueMessageData(_local_4, 0, 0, 0, 0, 0, 0, 0, null, 0, null, _local_5, _local_6, null, 0, []);\r\n            this._issues.push(_local_7);\r\n        }\r\n\r\n        this._retryEnabled = k.readBoolean();\r\n        this._retryCount = k.readInt();\r\n        return true;\r\n    }\r\n\r\n    public get issues(): IssueMessageData[]\r\n    {\r\n        return this._issues;\r\n    }\r\n\r\n    public get retryEnabled(): boolean\r\n    {\r\n        return this._retryEnabled;\r\n    }\r\n\r\n    public get retryCount(): number\r\n    {\r\n        return this._retryCount;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}