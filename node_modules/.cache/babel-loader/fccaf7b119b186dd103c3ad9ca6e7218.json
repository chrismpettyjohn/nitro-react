{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/WiredFurniSelectorView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { LocalizeText, WiredSelectionVisualizer } from '../../../api';\nimport { Column, Text } from '../../../common';\nimport { WiredSelectObjectEvent } from '../../../events';\nimport { UseUiEvent } from '../../../hooks';\nimport { useWiredContext } from '../WiredContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredFurniSelectorView = props => {\n  _s();\n\n  const {\n    trigger = null,\n    furniIds = [],\n    setFurniIds = null\n  } = useWiredContext();\n  const onWiredSelectObjectEvent = useCallback(event => {\n    const furniId = event.objectId;\n    if (furniId <= 0) return;\n    setFurniIds(prevValue => {\n      const newFurniIds = [...prevValue];\n      const index = prevValue.indexOf(furniId);\n\n      if (index >= 0) {\n        newFurniIds.splice(index, 1);\n        WiredSelectionVisualizer.hide(furniId);\n      } else if (newFurniIds.length < trigger.maximumItemSelectionCount) {\n        newFurniIds.push(furniId);\n        WiredSelectionVisualizer.show(furniId);\n      }\n\n      return newFurniIds;\n    });\n  }, [trigger, setFurniIds]);\n  UseUiEvent(WiredSelectObjectEvent.SELECT_OBJECT, onWiredSelectObjectEvent);\n  return /*#__PURE__*/_jsxDEV(Column, {\n    gap: 1,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      gfbold: true,\n      children: LocalizeText('wiredfurni.pickfurnis.caption', ['count', 'limit'], [furniIds.length.toString(), trigger.maximumItemSelectionCount.toString()])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: LocalizeText('wiredfurni.pickfurnis.desc')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredFurniSelectorView, \"VtOnn5UOktC+rHhiLO9OxH5/qB8=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredFurniSelectorView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredFurniSelectorView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/WiredFurniSelectorView.tsx"],"names":["useCallback","LocalizeText","WiredSelectionVisualizer","Column","Text","WiredSelectObjectEvent","UseUiEvent","useWiredContext","WiredFurniSelectorView","props","trigger","furniIds","setFurniIds","onWiredSelectObjectEvent","event","furniId","objectId","prevValue","newFurniIds","index","indexOf","splice","hide","length","maximumItemSelectionCount","push","show","SELECT_OBJECT","toString"],"mappings":";;;AAAA,SAAaA,WAAb,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,wBAAvB,QAAuD,cAAvD;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,eAAT,QAAgC,iBAAhC;;AAEA,OAAO,MAAMC,sBAA8B,GAAGC,KAAK,IACnD;AAAA;;AACI,QAAM;AAAEC,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,QAAQ,GAAG,EAA7B;AAAiCC,IAAAA,WAAW,GAAG;AAA/C,MAAwDL,eAAe,EAA7E;AAEA,QAAMM,wBAAwB,GAAGb,WAAW,CAAEc,KAAD,IAC7C;AACI,UAAMC,OAAO,GAAGD,KAAK,CAACE,QAAtB;AAEA,QAAGD,OAAO,IAAI,CAAd,EAAiB;AAEjBH,IAAAA,WAAW,CAACK,SAAS,IACrB;AACI,YAAMC,WAAW,GAAG,CAAE,GAAGD,SAAL,CAApB;AAEA,YAAME,KAAK,GAAGF,SAAS,CAACG,OAAV,CAAkBL,OAAlB,CAAd;;AAEA,UAAGI,KAAK,IAAI,CAAZ,EACA;AACID,QAAAA,WAAW,CAACG,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AAEAjB,QAAAA,wBAAwB,CAACoB,IAAzB,CAA8BP,OAA9B;AACH,OALD,MAOK,IAAGG,WAAW,CAACK,MAAZ,GAAqBb,OAAO,CAACc,yBAAhC,EACL;AACIN,QAAAA,WAAW,CAACO,IAAZ,CAAiBV,OAAjB;AAEAb,QAAAA,wBAAwB,CAACwB,IAAzB,CAA8BX,OAA9B;AACH;;AAED,aAAOG,WAAP;AACH,KArBU,CAAX;AAsBH,GA5B2C,EA4BzC,CAAER,OAAF,EAAWE,WAAX,CA5ByC,CAA5C;AA8BAN,EAAAA,UAAU,CAACD,sBAAsB,CAACsB,aAAxB,EAAuCd,wBAAvC,CAAV;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,GAAG,EAAG,CAAd;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAA,gBAAeZ,YAAY,CAAC,+BAAD,EAAkC,CAAE,OAAF,EAAW,OAAX,CAAlC,EAAwD,CAAEU,QAAQ,CAACY,MAAT,CAAgBK,QAAhB,EAAF,EAA8BlB,OAAO,CAACc,yBAAR,CAAkCI,QAAlC,EAA9B,CAAxD;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAA,gBAAQ3B,YAAY,CAAC,4BAAD;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA1CM;;GAAMO,sB;UAEqDD,e;;;KAFrDC,sB","sourcesContent":["import { FC, useCallback } from 'react';\nimport { LocalizeText, WiredSelectionVisualizer } from '../../../api';\nimport { Column, Text } from '../../../common';\nimport { WiredSelectObjectEvent } from '../../../events';\nimport { UseUiEvent } from '../../../hooks';\nimport { useWiredContext } from '../WiredContext';\n\nexport const WiredFurniSelectorView: FC<{}> = props =>\n{\n    const { trigger = null, furniIds = [], setFurniIds = null } = useWiredContext();\n\n    const onWiredSelectObjectEvent = useCallback((event: WiredSelectObjectEvent) =>\n    {\n        const furniId = event.objectId;\n\n        if(furniId <= 0) return;\n\n        setFurniIds(prevValue =>\n        {\n            const newFurniIds = [ ...prevValue ];\n\n            const index = prevValue.indexOf(furniId);\n\n            if(index >= 0)\n            {\n                newFurniIds.splice(index, 1);\n\n                WiredSelectionVisualizer.hide(furniId);\n            }\n\n            else if(newFurniIds.length < trigger.maximumItemSelectionCount)\n            {\n                newFurniIds.push(furniId);\n\n                WiredSelectionVisualizer.show(furniId);\n            }\n\n            return newFurniIds;\n        });\n    }, [ trigger, setFurniIds ]);\n\n    UseUiEvent(WiredSelectObjectEvent.SELECT_OBJECT, onWiredSelectObjectEvent);\n    \n    return (\n        <Column gap={ 1 }>\n            <Text gfbold>{ LocalizeText('wiredfurni.pickfurnis.caption', [ 'count', 'limit' ], [ furniIds.length.toString(), trigger.maximumItemSelectionCount.toString() ]) }</Text>\n            <Text>{ LocalizeText('wiredfurni.pickfurnis.desc') }</Text>\n        </Column>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}