{"ast":null,"code":"import { Rectangle } from '@pixi/math';\nexport class GraphicAsset {\n  constructor() {\n    this._name = void 0;\n    this._source = void 0;\n    this._texture = void 0;\n    this._usesPalette = void 0;\n    this._x = void 0;\n    this._y = void 0;\n    this._width = void 0;\n    this._height = void 0;\n    this._flipH = void 0;\n    this._flipV = void 0;\n    this._rectangle = void 0;\n    this._initialized = void 0;\n  }\n\n  static createAsset(name, source, texture, x, y) {\n    let flipH = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    let flipV = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    let usesPalette = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n    const graphicAsset = GraphicAsset.GRAPHIC_POOL.length ? GraphicAsset.GRAPHIC_POOL.pop() : new GraphicAsset();\n    graphicAsset._name = name;\n    graphicAsset._source = source || null;\n\n    if (texture) {\n      graphicAsset._texture = texture;\n      graphicAsset._initialized = false;\n    } else {\n      graphicAsset._texture = null;\n      graphicAsset._initialized = true;\n    }\n\n    graphicAsset._usesPalette = usesPalette;\n    graphicAsset._x = x;\n    graphicAsset._y = y;\n    graphicAsset._flipH = flipH;\n    graphicAsset._flipV = flipV;\n    graphicAsset._rectangle = null;\n    return graphicAsset;\n  }\n\n  recycle() {\n    this._texture = null;\n    GraphicAsset.GRAPHIC_POOL.push(this);\n  }\n\n  initialize() {\n    if (this._initialized || !this._texture) return;\n    this._width = this._texture.width;\n    this._height = this._texture.height;\n    this._initialized = true;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get source() {\n    return this._source;\n  }\n\n  get texture() {\n    return this._texture;\n  }\n\n  get usesPalette() {\n    return this._usesPalette;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get width() {\n    this.initialize();\n    return this._width;\n  }\n\n  get height() {\n    this.initialize();\n    return this._height;\n  }\n\n  get offsetX() {\n    if (!this._flipH) return this._x;\n    return -this._x;\n  }\n\n  get offsetY() {\n    if (!this._flipV) return this._y;\n    return -this._y;\n  }\n\n  get flipH() {\n    return this._flipH;\n  }\n\n  get flipV() {\n    return this._flipV;\n  }\n\n  get rectangle() {\n    if (!this._rectangle) this._rectangle = new Rectangle(0, 0, this.width, this.height);\n    return this._rectangle;\n  }\n\n}\nGraphicAsset.GRAPHIC_POOL = [];","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/room/object/visualization/utils/GraphicAsset.ts"],"names":["Rectangle","GraphicAsset","_name","_source","_texture","_usesPalette","_x","_y","_width","_height","_flipH","_flipV","_rectangle","_initialized","createAsset","name","source","texture","x","y","flipH","flipV","usesPalette","graphicAsset","GRAPHIC_POOL","length","pop","recycle","push","initialize","width","height","offsetX","offsetY","rectangle"],"mappings":"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","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { Rectangle } from '@pixi/math';\r\nimport { IGraphicAsset } from './IGraphicAsset';\r\n\r\nexport class GraphicAsset implements IGraphicAsset\r\n{\r\n    private static GRAPHIC_POOL: GraphicAsset[] = [];\r\n\r\n    private _name: string;\r\n    private _source: string;\r\n    private _texture: Texture<Resource>;\r\n    private _usesPalette: boolean;\r\n    private _x: number;\r\n    private _y: number;\r\n    private _width: number;\r\n    private _height: number;\r\n    private _flipH: boolean;\r\n    private _flipV: boolean;\r\n    private _rectangle: Rectangle;\r\n    private _initialized: boolean;\r\n\r\n    public static createAsset(name: string, source: string, texture: Texture<Resource>, x: number, y: number, flipH: boolean = false, flipV: boolean = false, usesPalette: boolean = false): GraphicAsset\r\n    {\r\n        const graphicAsset = (GraphicAsset.GRAPHIC_POOL.length ? GraphicAsset.GRAPHIC_POOL.pop() : new GraphicAsset());\r\n\r\n        graphicAsset._name = name;\r\n        graphicAsset._source = source || null;\r\n\r\n        if(texture)\r\n        {\r\n            graphicAsset._texture = texture;\r\n            graphicAsset._initialized = false;\r\n        }\r\n        else\r\n        {\r\n            graphicAsset._texture = null;\r\n            graphicAsset._initialized = true;\r\n        }\r\n\r\n        graphicAsset._usesPalette = usesPalette;\r\n        graphicAsset._x = x;\r\n        graphicAsset._y = y;\r\n        graphicAsset._flipH = flipH;\r\n        graphicAsset._flipV = flipV;\r\n        graphicAsset._rectangle = null;\r\n\r\n        return graphicAsset;\r\n    }\r\n\r\n    public recycle(): void\r\n    {\r\n        this._texture = null;\r\n\r\n        GraphicAsset.GRAPHIC_POOL.push(this);\r\n    }\r\n\r\n    private initialize(): void\r\n    {\r\n        if(this._initialized || !this._texture) return;\r\n\r\n        this._width = this._texture.width;\r\n        this._height = this._texture.height;\r\n\r\n        this._initialized = true;\r\n    }\r\n\r\n    public get name(): string\r\n    {\r\n        return this._name;\r\n    }\r\n\r\n    public get source(): string\r\n    {\r\n        return this._source;\r\n    }\r\n\r\n    public get texture(): Texture<Resource>\r\n    {\r\n        return this._texture;\r\n    }\r\n\r\n    public get usesPalette(): boolean\r\n    {\r\n        return this._usesPalette;\r\n    }\r\n\r\n    public get x(): number\r\n    {\r\n        return this._x;\r\n    }\r\n\r\n    public get y(): number\r\n    {\r\n        return this._y;\r\n    }\r\n\r\n    public get width(): number\r\n    {\r\n        this.initialize();\r\n\r\n        return this._width;\r\n    }\r\n\r\n    public get height(): number\r\n    {\r\n        this.initialize();\r\n\r\n        return this._height;\r\n    }\r\n\r\n    public get offsetX(): number\r\n    {\r\n        if(!this._flipH) return this._x;\r\n\r\n        return (-(this._x));\r\n    }\r\n\r\n    public get offsetY(): number\r\n    {\r\n        if(!this._flipV) return this._y;\r\n\r\n        return (-(this._y));\r\n    }\r\n\r\n    public get flipH(): boolean\r\n    {\r\n        return this._flipH;\r\n    }\r\n\r\n    public get flipV(): boolean\r\n    {\r\n        return this._flipV;\r\n    }\r\n\r\n    public get rectangle(): Rectangle\r\n    {\r\n        if(!this._rectangle) this._rectangle = new Rectangle(0, 0, this.width, this.height);\r\n\r\n        return this._rectangle;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}