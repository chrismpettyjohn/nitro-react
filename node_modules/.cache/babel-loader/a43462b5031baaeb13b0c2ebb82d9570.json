{"ast":null,"code":"import { SongInfoEntry } from '../../incoming/sound/SongInfoEntry';\nexport class TraxSongInfoMessageParser {\n  constructor() {\n    this._songs = void 0;\n  }\n\n  flush() {\n    this._songs = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    const count = wrapper.readInt();\n\n    for (let i = 0; i < count; i++) {\n      const id = wrapper.readInt();\n\n      const _local_3 = wrapper.readString();\n\n      const name = wrapper.readString();\n      const data = wrapper.readString();\n      const length = wrapper.readInt();\n      const creator = wrapper.readString();\n\n      const _local_10 = new SongInfoEntry(id, length, name, creator, data);\n\n      this._songs.push(_local_10);\n    }\n\n    return true;\n  }\n\n  get songs() {\n    return this._songs;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/sound/TraxSongInfoMessageParser.ts"],"names":["SongInfoEntry","TraxSongInfoMessageParser","_songs","flush","parse","wrapper","count","readInt","i","id","_local_3","readString","name","data","length","creator","_local_10","push","songs"],"mappings":"AACA,SAASA,aAAT,QAA8B,oCAA9B;AAEA,OAAO,MAAMC,yBAAN,CACP;AAAA;AAAA,SACYC,MADZ;AAAA;;AAGIC,EAAAA,KAAK,GACL;AACI,SAAKD,MAAL,GAAc,EAAd;AACA,WAAO,IAAP;AACH;;AAEDE,EAAAA,KAAK,CAACC,OAAD,EACL;AACI,UAAMC,KAAK,GAAGD,OAAO,CAACE,OAAR,EAAd;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEF,KAAlB,EAAyBE,CAAC,EAA1B,EACA;AACI,YAAMC,EAAE,GAAGJ,OAAO,CAACE,OAAR,EAAX;;AACA,YAAMG,QAAQ,GAAGL,OAAO,CAACM,UAAR,EAAjB;;AACA,YAAMC,IAAI,GAAGP,OAAO,CAACM,UAAR,EAAb;AACA,YAAME,IAAI,GAAGR,OAAO,CAACM,UAAR,EAAb;AACA,YAAMG,MAAM,GAAGT,OAAO,CAACE,OAAR,EAAf;AACA,YAAMQ,OAAO,GAAGV,OAAO,CAACM,UAAR,EAAhB;;AACA,YAAMK,SAAS,GAAG,IAAIhB,aAAJ,CAAkBS,EAAlB,EAAsBK,MAAtB,EAA8BF,IAA9B,EAAoCG,OAApC,EAA6CF,IAA7C,CAAlB;;AACA,WAAKX,MAAL,CAAYe,IAAZ,CAAiBD,SAAjB;AACH;;AACD,WAAO,IAAP;AACH;;AAEe,MAALE,KAAK,GAChB;AACI,WAAO,KAAKhB,MAAZ;AACH;;AA7BL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\nimport { SongInfoEntry } from '../../incoming/sound/SongInfoEntry';\r\n\r\nexport class TraxSongInfoMessageParser implements IMessageParser\r\n{\r\n    private _songs:SongInfoEntry[];\r\n\r\n    flush(): boolean\r\n    {\r\n        this._songs = [];\r\n        return true;\r\n    }\r\n\r\n    parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        const count = wrapper.readInt();\r\n        for(let i = 0; i< count; i++)\r\n        {\r\n            const id = wrapper.readInt();\r\n            const _local_3 = wrapper.readString();\r\n            const name = wrapper.readString();\r\n            const data = wrapper.readString();\r\n            const length = wrapper.readInt();\r\n            const creator = wrapper.readString();\r\n            const _local_10 = new SongInfoEntry(id, length, name, creator, data);\r\n            this._songs.push(_local_10);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public get songs():SongInfoEntry[]\r\n    {\r\n        return this._songs;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}