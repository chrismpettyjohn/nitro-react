{"ast":null,"code":"import { Text } from '@pixi/text';\nimport { NitroContainer, NitroSprite } from '../../../../../core';\nimport { TextureUtils } from '../../../../../room';\nimport { Nitro } from '../../../../Nitro';\nexport class ExperienceData {\n  constructor(texture) {\n    this._sprite = void 0;\n    this._texture = void 0;\n    this._amount = void 0;\n    this._alpha = void 0;\n    this._sprite = new NitroSprite(texture);\n    this._texture = null;\n    this._amount = -1;\n    this._alpha = 0;\n  }\n\n  renderBubble(amount) {\n    if (!this._sprite || this._amount === amount) return null;\n    const container = new NitroContainer();\n    container.addChild(this._sprite);\n    const text = new Text('+' + amount, {\n      fontFamily: 'Arial',\n      fontSize: 9,\n      fill: 0xFFFFFF,\n      align: 'center'\n    });\n    text.anchor.x = 0.5;\n    text.x = this._sprite.width / 2;\n    text.y = 19;\n    container.addChild(text);\n\n    if (!this._texture) {\n      this._texture = TextureUtils.generateTexture(container);\n    } else {\n      Nitro.instance.renderer.render(container, {\n        renderTexture: this._texture,\n        clear: true\n      });\n    }\n\n    return this._texture;\n  }\n\n  get amount() {\n    return this._amount;\n  }\n\n  set amount(amount) {\n    this._amount = amount;\n  }\n\n  get alpha() {\n    return this._alpha;\n  }\n\n  set alpha(alpha) {\n    this._alpha = alpha;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/pet/ExperienceData.ts"],"names":["Text","NitroContainer","NitroSprite","TextureUtils","Nitro","ExperienceData","constructor","texture","_sprite","_texture","_amount","_alpha","renderBubble","amount","container","addChild","text","fontFamily","fontSize","fill","align","anchor","x","width","y","generateTexture","instance","renderer","render","renderTexture","clear","alpha"],"mappings":"AAEA,SAASA,IAAT,QAAqB,YAArB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,qBAA5C;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,cAAN,CACP;AAMIC,EAAAA,WAAW,CAACC,OAAD,EACX;AAAA,SANQC,OAMR;AAAA,SALQC,QAKR;AAAA,SAJQC,OAIR;AAAA,SAHQC,MAGR;AACI,SAAKH,OAAL,GAAe,IAAIN,WAAJ,CAAgBK,OAAhB,CAAf;AACA,SAAKE,QAAL,GAAgB,IAAhB;AACA,SAAKC,OAAL,GAAe,CAAC,CAAhB;AACA,SAAKC,MAAL,GAAc,CAAd;AACH;;AAEMC,EAAAA,YAAY,CAACC,MAAD,EACnB;AACI,QAAG,CAAC,KAAKL,OAAN,IAAkB,KAAKE,OAAL,KAAiBG,MAAtC,EAA+C,OAAO,IAAP;AAE/C,UAAMC,SAAS,GAAG,IAAIb,cAAJ,EAAlB;AAEAa,IAAAA,SAAS,CAACC,QAAV,CAAmB,KAAKP,OAAxB;AAEA,UAAMQ,IAAI,GAAG,IAAIhB,IAAJ,CAAU,MAAMa,MAAhB,EAAyB;AAClCI,MAAAA,UAAU,EAAE,OADsB;AAElCC,MAAAA,QAAQ,EAAE,CAFwB;AAGlCC,MAAAA,IAAI,EAAE,QAH4B;AAIlCC,MAAAA,KAAK,EAAE;AAJ2B,KAAzB,CAAb;AAOAJ,IAAAA,IAAI,CAACK,MAAL,CAAYC,CAAZ,GAAgB,GAAhB;AAEAN,IAAAA,IAAI,CAACM,CAAL,GAAU,KAAKd,OAAL,CAAae,KAAb,GAAqB,CAA/B;AACAP,IAAAA,IAAI,CAACQ,CAAL,GAAS,EAAT;AAEAV,IAAAA,SAAS,CAACC,QAAV,CAAmBC,IAAnB;;AAEA,QAAG,CAAC,KAAKP,QAAT,EACA;AACI,WAAKA,QAAL,GAAgBN,YAAY,CAACsB,eAAb,CAA6BX,SAA7B,CAAhB;AACH,KAHD,MAKA;AACIV,MAAAA,KAAK,CAACsB,QAAN,CAAeC,QAAf,CAAwBC,MAAxB,CAA+Bd,SAA/B,EAA0C;AACtCe,QAAAA,aAAa,EAAE,KAAKpB,QADkB;AAEtCqB,QAAAA,KAAK,EAAE;AAF+B,OAA1C;AAIH;;AAED,WAAO,KAAKrB,QAAZ;AACH;;AAEgB,MAANI,MAAM,GACjB;AACI,WAAO,KAAKH,OAAZ;AACH;;AAEgB,MAANG,MAAM,CAACA,MAAD,EACjB;AACI,SAAKH,OAAL,GAAeG,MAAf;AACH;;AAEe,MAALkB,KAAK,GAChB;AACI,WAAO,KAAKpB,MAAZ;AACH;;AAEe,MAALoB,KAAK,CAACA,KAAD,EAChB;AACI,SAAKpB,MAAL,GAAcoB,KAAd;AACH;;AArEL","sourcesContent":["import { RenderTexture, Resource, Texture } from '@pixi/core';\r\nimport { Sprite } from '@pixi/sprite';\r\nimport { Text } from '@pixi/text';\r\nimport { NitroContainer, NitroSprite } from '../../../../../core';\r\nimport { TextureUtils } from '../../../../../room';\r\nimport { Nitro } from '../../../../Nitro';\r\n\r\nexport class ExperienceData\r\n{\r\n    private _sprite: Sprite;\r\n    private _texture: RenderTexture;\r\n    private _amount: number;\r\n    private _alpha: number;\r\n\r\n    constructor(texture: Texture<Resource>)\r\n    {\r\n        this._sprite = new NitroSprite(texture);\r\n        this._texture = null;\r\n        this._amount = -1;\r\n        this._alpha = 0;\r\n    }\r\n\r\n    public renderBubble(amount: number): RenderTexture\r\n    {\r\n        if(!this._sprite || (this._amount === amount)) return null;\r\n\r\n        const container = new NitroContainer();\r\n\r\n        container.addChild(this._sprite);\r\n\r\n        const text = new Text(('+' + amount), {\r\n            fontFamily: 'Arial',\r\n            fontSize: 9,\r\n            fill: 0xFFFFFF,\r\n            align: 'center'\r\n        });\r\n\r\n        text.anchor.x = 0.5;\r\n\r\n        text.x = (this._sprite.width / 2);\r\n        text.y = 19;\r\n\r\n        container.addChild(text);\r\n\r\n        if(!this._texture)\r\n        {\r\n            this._texture = TextureUtils.generateTexture(container);\r\n        }\r\n        else\r\n        {\r\n            Nitro.instance.renderer.render(container, {\r\n                renderTexture: this._texture,\r\n                clear: true\r\n            });\r\n        }\r\n\r\n        return this._texture;\r\n    }\r\n\r\n    public get amount(): number\r\n    {\r\n        return this._amount;\r\n    }\r\n\r\n    public set amount(amount: number)\r\n    {\r\n        this._amount = amount;\r\n    }\r\n\r\n    public get alpha(): number\r\n    {\r\n        return this._alpha;\r\n    }\r\n\r\n    public set alpha(alpha: number)\r\n    {\r\n        this._alpha = alpha;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}