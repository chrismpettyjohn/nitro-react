{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/inventory/views/furniture/InventoryFurnitureSearchView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { LocalizeText } from '../../../../api';\nimport { Flex } from '../../../../common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryFurnitureSearchView = props => {\n  _s();\n\n  const {\n    groupItems = [],\n    setGroupItems = null\n  } = props;\n  const [searchValue, setSearchValue] = useState('');\n  useEffect(() => {\n    let filteredGroupItems = [...groupItems];\n\n    if (searchValue && searchValue.length) {\n      const comparison = searchValue.toLocaleLowerCase();\n      filteredGroupItems = groupItems.filter(item => {\n        if (comparison && comparison.length) {\n          if (item.name.toLocaleLowerCase().includes(comparison)) return item;\n        }\n\n        return null;\n      });\n    }\n\n    setGroupItems(filteredGroupItems);\n  }, [groupItems, setGroupItems, searchValue]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    gap: 1,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control form-control-sm\",\n      placeholder: LocalizeText('generic.search'),\n      value: searchValue,\n      onChange: event => setSearchValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InventoryFurnitureSearchView, \"FKMWncbeF1X7oZ/ZpTkX09vq/zE=\");\n\n_c = InventoryFurnitureSearchView;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryFurnitureSearchView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/inventory/views/furniture/InventoryFurnitureSearchView.tsx"],"names":["useEffect","useState","LocalizeText","Flex","InventoryFurnitureSearchView","props","groupItems","setGroupItems","searchValue","setSearchValue","filteredGroupItems","length","comparison","toLocaleLowerCase","filter","item","name","includes","event","target","value"],"mappings":";;;AACA,SAAuCA,SAAvC,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAAoBC,YAApB,QAAwC,iBAAxC;AACA,SAAiBC,IAAjB,QAA6B,oBAA7B;;AAQA,OAAO,MAAMC,4BAAmE,GAAGC,KAAK,IACxF;AAAA;;AACI,QAAM;AAAEC,IAAAA,UAAU,GAAG,EAAf;AAAmBC,IAAAA,aAAa,GAAG;AAAnC,MAA4CF,KAAlD;AACA,QAAM,CAAEG,WAAF,EAAeC,cAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MACV;AACI,QAAIU,kBAAkB,GAAG,CAAE,GAAGJ,UAAL,CAAzB;;AAEA,QAAGE,WAAW,IAAIA,WAAW,CAACG,MAA9B,EACA;AACI,YAAMC,UAAU,GAAGJ,WAAW,CAACK,iBAAZ,EAAnB;AAEAH,MAAAA,kBAAkB,GAAGJ,UAAU,CAACQ,MAAX,CAAkBC,IAAI,IAC3C;AACI,YAAGH,UAAU,IAAIA,UAAU,CAACD,MAA5B,EACA;AACI,cAAGI,IAAI,CAACC,IAAL,CAAUH,iBAAV,GAA8BI,QAA9B,CAAuCL,UAAvC,CAAH,EAAuD,OAAOG,IAAP;AAC1D;;AAED,eAAO,IAAP;AACH,OARoB,CAArB;AASH;;AAEDR,IAAAA,aAAa,CAACG,kBAAD,CAAb;AACH,GApBQ,EAoBN,CAAEJ,UAAF,EAAcC,aAAd,EAA6BC,WAA7B,CApBM,CAAT;AAsBA,sBACI,QAAC,IAAD;AAAM,IAAA,GAAG,EAAG,CAAZ;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,8BAA7B;AAA4D,MAAA,WAAW,EAAGN,YAAY,CAAC,gBAAD,CAAtF;AAA2G,MAAA,KAAK,EAAGM,WAAnH;AAAiI,MAAA,QAAQ,EAAGU,KAAK,IAAIT,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAnK;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhCM;;GAAMhB,4B;;KAAAA,4B","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Dispatch, FC, SetStateAction, useEffect, useState } from 'react';\nimport { GroupItem, LocalizeText } from '../../../../api';\nimport { Button, Flex } from '../../../../common';\n\nexport interface InventoryFurnitureSearchViewProps\n{\n    groupItems: GroupItem[];\n    setGroupItems: Dispatch<SetStateAction<GroupItem[]>>;\n}\n\nexport const InventoryFurnitureSearchView: FC<InventoryFurnitureSearchViewProps> = props =>\n{\n    const { groupItems = [], setGroupItems = null } = props;\n    const [ searchValue, setSearchValue ] = useState('');\n\n    useEffect(() =>\n    {\n        let filteredGroupItems = [ ...groupItems ];\n\n        if(searchValue && searchValue.length)\n        {\n            const comparison = searchValue.toLocaleLowerCase();\n\n            filteredGroupItems = groupItems.filter(item =>\n            {\n                if(comparison && comparison.length)\n                {\n                    if(item.name.toLocaleLowerCase().includes(comparison)) return item;\n                }\n\n                return null;\n            });\n        }\n\n        setGroupItems(filteredGroupItems);\n    }, [ groupItems, setGroupItems, searchValue ]);\n\n    return (\n        <Flex gap={ 1 }>\n            <input type=\"text\" className=\"form-control form-control-sm\" placeholder={ LocalizeText('generic.search') } value={ searchValue } onChange={ event => setSearchValue(event.target.value) } />\n        </Flex>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}