{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/layout/LayoutBackgroundImage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Base } from '../Base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LayoutBackgroundImage = props => {\n  _s();\n\n  const {\n    imageUrl = null,\n    fit = true,\n    style = null,\n    ...rest\n  } = props;\n  const getStyle = useMemo(() => {\n    const newStyle = { ...style\n    };\n    if (imageUrl) newStyle.background = `url(${imageUrl}) center no-repeat`;\n    return newStyle;\n  }, [style, imageUrl]);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    fit: fit,\n    style: getStyle,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_s(LayoutBackgroundImage, \"Jul1RNZKqv25ZztDKwrS7Cji8Sw=\");\n\n_c = LayoutBackgroundImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutBackgroundImage\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/layout/LayoutBackgroundImage.tsx"],"names":["useMemo","Base","LayoutBackgroundImage","props","imageUrl","fit","style","rest","getStyle","newStyle","background"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AACA,SAASC,IAAT,QAAgC,SAAhC;;AAOA,OAAO,MAAMC,qBAAqD,GAAGC,KAAK,IAC1E;AAAA;;AACI,QAAM;AAAEC,IAAAA,QAAQ,GAAG,IAAb;AAAmBC,IAAAA,GAAG,GAAG,IAAzB;AAA+BC,IAAAA,KAAK,GAAG,IAAvC;AAA6C,OAAGC;AAAhD,MAAyDJ,KAA/D;AAEA,QAAMK,QAAQ,GAAGR,OAAO,CAAC,MACzB;AACI,UAAMS,QAAQ,GAAG,EAAE,GAAGH;AAAL,KAAjB;AAEA,QAAGF,QAAH,EAAaK,QAAQ,CAACC,UAAT,GAAuB,OAAON,QAAU,oBAAxC;AAEb,WAAOK,QAAP;AACH,GAPuB,EAOrB,CAAEH,KAAF,EAASF,QAAT,CAPqB,CAAxB;AASA,sBAAO,QAAC,IAAD;AAAM,IAAA,GAAG,EAAGC,GAAZ;AAAkB,IAAA,KAAK,EAAGG,QAA1B;AAAA,OAA0CD;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAdM;;GAAML,qB;;KAAAA,qB","sourcesContent":["import { FC, useMemo } from 'react';\nimport { Base, BaseProps } from '../Base';\n\nexport interface LayoutBackgroundImageProps extends BaseProps<HTMLDivElement>\n{\n    imageUrl?: string;\n}\n\nexport const LayoutBackgroundImage: FC<LayoutBackgroundImageProps> = props =>\n{\n    const { imageUrl = null, fit = true, style = null, ...rest } = props;\n\n    const getStyle = useMemo(() =>\n    {\n        const newStyle = { ...style };\n\n        if(imageUrl) newStyle.background = `url(${ imageUrl }) center no-repeat`;\n\n        return newStyle;\n    }, [ style, imageUrl ]);\n\n    return <Base fit={ fit } style={ getStyle } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}