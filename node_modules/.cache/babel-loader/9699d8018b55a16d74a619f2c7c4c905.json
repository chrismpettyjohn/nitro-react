{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/Column.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Flex } from './Flex';\nimport { useGridContext } from './GridContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Column = props => {\n  _s();\n\n  const {\n    size = 0,\n    offset = 0,\n    column = true,\n    gap = 2,\n    classNames = [],\n    ...rest\n  } = props;\n  const {\n    isCssGrid = false\n  } = useGridContext();\n  const getClassNames = useMemo(() => {\n    const newClassNames = [];\n\n    if (size) {\n      let colClassName = `col-${size}`;\n      if (isCssGrid) colClassName = `g-${colClassName}`;\n      newClassNames.push(colClassName);\n    }\n\n    if (offset) {\n      let colClassName = `offset-${offset}`;\n      if (isCssGrid) colClassName = `g-start-${offset}`;\n      newClassNames.push(colClassName);\n    }\n\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [size, offset, isCssGrid, classNames]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    classNames: getClassNames,\n    column: column,\n    gap: gap,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Column, \"0QAPiYllYNvXFNmGb+tTAgsqKkU=\", false, function () {\n  return [useGridContext];\n});\n\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/Column.tsx"],"names":["useMemo","Flex","useGridContext","Column","props","size","offset","column","gap","classNames","rest","isCssGrid","getClassNames","newClassNames","colClassName","push","length"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AACA,SAASC,IAAT,QAAgC,QAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAUA,OAAO,MAAMC,MAAuB,GAAGC,KAAK,IAC5C;AAAA;;AACI,QAAM;AAAEC,IAAAA,IAAI,GAAG,CAAT;AAAYC,IAAAA,MAAM,GAAG,CAArB;AAAwBC,IAAAA,MAAM,GAAG,IAAjC;AAAuCC,IAAAA,GAAG,GAAG,CAA7C;AAAgDC,IAAAA,UAAU,GAAG,EAA7D;AAAiE,OAAGC;AAApE,MAA6EN,KAAnF;AACA,QAAM;AAAEO,IAAAA,SAAS,GAAG;AAAd,MAAwBT,cAAc,EAA5C;AAEA,QAAMU,aAAa,GAAGZ,OAAO,CAAC,MAC9B;AACI,UAAMa,aAAuB,GAAG,EAAhC;;AAEA,QAAGR,IAAH,EACA;AACI,UAAIS,YAAY,GAAI,OAAOT,IAAM,EAAjC;AAEA,UAAGM,SAAH,EAAcG,YAAY,GAAI,KAAKA,YAAc,EAAnC;AAEdD,MAAAA,aAAa,CAACE,IAAd,CAAmBD,YAAnB;AACH;;AAED,QAAGR,MAAH,EACA;AACI,UAAIQ,YAAY,GAAI,UAAUR,MAAQ,EAAtC;AAEA,UAAGK,SAAH,EAAcG,YAAY,GAAI,WAAWR,MAAQ,EAAnC;AAEdO,MAAAA,aAAa,CAACE,IAAd,CAAmBD,YAAnB;AACH;;AAED,QAAGL,UAAU,CAACO,MAAd,EAAsBH,aAAa,CAACE,IAAd,CAAmB,GAAGN,UAAtB;AAEtB,WAAOI,aAAP;AACH,GAzB4B,EAyB1B,CAAER,IAAF,EAAQC,MAAR,EAAgBK,SAAhB,EAA2BF,UAA3B,CAzB0B,CAA7B;AA2BA,sBAAO,QAAC,IAAD;AAAM,IAAA,UAAU,EAAGG,aAAnB;AAAmC,IAAA,MAAM,EAAGL,MAA5C;AAAqD,IAAA,GAAG,EAAGC,GAA3D;AAAA,OAAsEE;AAAtE;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAjCM;;GAAMP,M;UAGqBD,c;;;KAHrBC,M","sourcesContent":["import { FC, useMemo } from 'react';\nimport { Flex, FlexProps } from './Flex';\nimport { useGridContext } from './GridContext';\nimport { ColumnSizesType } from './types';\n\nexport interface ColumnProps extends FlexProps\n{\n    size?: ColumnSizesType;\n    offset?: ColumnSizesType;\n    column?: boolean;\n}\n\nexport const Column: FC<ColumnProps> = props =>\n{\n    const { size = 0, offset = 0, column = true, gap = 2, classNames = [], ...rest } = props;\n    const { isCssGrid = false } = useGridContext();\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [];\n\n        if(size)\n        {\n            let colClassName = `col-${ size }`;\n\n            if(isCssGrid) colClassName = `g-${ colClassName }`;\n\n            newClassNames.push(colClassName);\n        }\n\n        if(offset)\n        {\n            let colClassName = `offset-${ offset }`;\n\n            if(isCssGrid) colClassName = `g-start-${ offset }`;\n\n            newClassNames.push(colClassName);\n        }\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ size, offset, isCssGrid, classNames ]);\n\n    return <Flex classNames={ getClassNames } column={ column } gap={ gap } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}