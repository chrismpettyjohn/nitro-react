{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/room/RoomView.tsx\",\n    _s = $RefreshSig$();\n\nimport { EventDispatcher, RoomEngineEvent, RoomGeometry, RoomId, RoomSessionEvent, RoomVariableEnum, Vector3d } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { DispatchMouseEvent, DispatchTouchEvent, FurniChooserWidgetHandler, FurnitureContextMenuWidgetHandler, FurnitureCreditWidgetHandler, FurnitureCustomStackHeightWidgetHandler, FurnitureDimmerWidgetHandler, FurnitureExternalImageWidgetHandler, FurnitureInternalLinkHandler, FurnitureMannequinWidgetHandler, FurniturePresentWidgetHandler, FurnitureRoomLinkHandler, FurnitureYoutubeDisplayWidgetHandler, GetNitroInstance, GetRoomEngine, GetRoomSession, InitializeRoomInstanceRenderingCanvas, PollWidgetHandler, RoomWidgetAvatarInfoHandler, RoomWidgetChatHandler, RoomWidgetChatInputHandler, RoomWidgetHandlerManager, RoomWidgetInfostandHandler, SetActiveRoomId, StartRoomSession, UserChooserWidgetHandler, WordQuizWidgetHandler } from '../../api';\nimport { Base } from '../../common';\nimport { UseRoomEngineEvent, UseRoomSessionManagerEvent } from '../../hooks';\nimport { RoomColorView } from './RoomColorView';\nimport { RoomContextProvider } from './RoomContext';\nimport { RoomSpectatorView } from './spectator/RoomSpectatorView';\nimport { RoomWidgetsView } from './widgets/RoomWidgetsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RoomView = props => {\n  _s();\n\n  const [roomSession, setRoomSession] = useState(null);\n  const [widgetHandler, setWidgetHandler] = useState(null);\n  const elementRef = useRef();\n  const onRoomEngineEvent = useCallback(event => {\n    if (RoomId.isRoomPreviewerId(event.roomId)) return;\n    const session = GetRoomSession();\n    if (!session) return;\n\n    switch (event.type) {\n      case RoomEngineEvent.INITIALIZED:\n        SetActiveRoomId(event.roomId);\n        setRoomSession(session);\n        return;\n\n      case RoomEngineEvent.DISPOSED:\n        setRoomSession(null);\n        return;\n    }\n  }, []);\n  UseRoomEngineEvent(RoomEngineEvent.INITIALIZED, onRoomEngineEvent);\n  UseRoomEngineEvent(RoomEngineEvent.DISPOSED, onRoomEngineEvent);\n  const onRoomSessionEvent = useCallback(event => {\n    switch (event.type) {\n      case RoomSessionEvent.CREATED:\n        StartRoomSession(event.session);\n        return;\n\n      case RoomSessionEvent.ENDED:\n        setRoomSession(null);\n        return;\n    }\n  }, []);\n  UseRoomSessionManagerEvent(RoomSessionEvent.CREATED, onRoomSessionEvent);\n  UseRoomSessionManagerEvent(RoomSessionEvent.ENDED, onRoomSessionEvent);\n  const resize = useCallback(function () {\n    let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    const canvas = GetNitroInstance().renderer.view;\n    if (!canvas) return;\n    canvas.style.width = `${Math.floor(window.innerWidth)}px`;\n    canvas.style.height = `${Math.floor(window.innerHeight)}px`;\n    const nitroInstance = GetNitroInstance();\n    nitroInstance.renderer.resolution = window.devicePixelRatio;\n    nitroInstance.renderer.resize(window.innerWidth, window.innerHeight);\n    InitializeRoomInstanceRenderingCanvas(window.innerWidth, window.innerHeight, 1);\n    nitroInstance.render();\n  }, []);\n  useEffect(() => {\n    if (!roomSession) {\n      setWidgetHandler(null);\n      return;\n    }\n\n    const widgetHandlerManager = new RoomWidgetHandlerManager(roomSession, new EventDispatcher());\n    widgetHandlerManager.registerHandler(new RoomWidgetAvatarInfoHandler());\n    widgetHandlerManager.registerHandler(new RoomWidgetInfostandHandler());\n    widgetHandlerManager.registerHandler(new RoomWidgetChatInputHandler());\n    widgetHandlerManager.registerHandler(new RoomWidgetChatHandler());\n    widgetHandlerManager.registerHandler(new UserChooserWidgetHandler());\n    widgetHandlerManager.registerHandler(new WordQuizWidgetHandler());\n    widgetHandlerManager.registerHandler(new PollWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurniChooserWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurnitureContextMenuWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurnitureCreditWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurnitureCustomStackHeightWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurnitureExternalImageWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurniturePresentWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurnitureDimmerWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurnitureYoutubeDisplayWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurnitureMannequinWidgetHandler());\n    widgetHandlerManager.registerHandler(new FurnitureInternalLinkHandler());\n    widgetHandlerManager.registerHandler(new FurnitureRoomLinkHandler());\n    setWidgetHandler(widgetHandlerManager);\n    const roomEngine = GetRoomEngine();\n    const roomId = roomSession.roomId;\n    const canvasId = 1;\n    resize();\n    const displayObject = roomEngine.getRoomInstanceDisplay(roomId, canvasId, window.innerWidth, window.innerHeight, RoomGeometry.SCALE_ZOOMED_IN);\n    if (!displayObject) return;\n    const geometry = roomEngine.getRoomInstanceGeometry(roomId, canvasId);\n\n    if (geometry) {\n      const minX = roomEngine.getRoomInstanceVariable(roomId, RoomVariableEnum.ROOM_MIN_X) || 0;\n      const maxX = roomEngine.getRoomInstanceVariable(roomId, RoomVariableEnum.ROOM_MAX_X) || 0;\n      const minY = roomEngine.getRoomInstanceVariable(roomId, RoomVariableEnum.ROOM_MIN_Y) || 0;\n      const maxY = roomEngine.getRoomInstanceVariable(roomId, RoomVariableEnum.ROOM_MAX_Y) || 0;\n      let x = (minX + maxX) / 2;\n      let y = (minY + maxY) / 2;\n      const offset = 20;\n      x = x + (offset - 1);\n      y = y + (offset - 1);\n      const z = Math.sqrt(offset * offset + offset * offset) * Math.tan(30 / 180 * Math.PI);\n      geometry.location = new Vector3d(x, y, z);\n    }\n\n    const stage = GetNitroInstance().stage;\n    if (!stage) return;\n    stage.addChild(displayObject);\n    SetActiveRoomId(roomSession.roomId);\n  }, [roomSession, resize]);\n  useEffect(() => {\n    const canvas = GetNitroInstance().renderer.view;\n    if (!canvas) return;\n\n    canvas.onclick = event => DispatchMouseEvent(event);\n\n    canvas.onmousemove = event => DispatchMouseEvent(event);\n\n    canvas.onmousedown = event => DispatchMouseEvent(event);\n\n    canvas.onmouseup = event => DispatchMouseEvent(event);\n\n    canvas.ontouchstart = event => DispatchTouchEvent(event);\n\n    canvas.ontouchmove = event => DispatchTouchEvent(event);\n\n    canvas.ontouchend = event => DispatchTouchEvent(event);\n\n    canvas.ontouchcancel = event => DispatchTouchEvent(event);\n\n    resize();\n    const element = elementRef.current;\n    if (element) element.appendChild(canvas);\n    window.addEventListener('resize', resize);\n    return () => {\n      if (element) element.removeChild(canvas);\n      window.removeEventListener('resize', resize);\n    };\n  }, [resize]);\n  return /*#__PURE__*/_jsxDEV(RoomContextProvider, {\n    value: {\n      roomSession,\n      eventDispatcher: widgetHandler && widgetHandler.eventDispatcher,\n      widgetHandler\n    },\n    children: /*#__PURE__*/_jsxDEV(Base, {\n      fit: true,\n      innerRef: elementRef,\n      className: !roomSession && 'd-none',\n      children: roomSession && widgetHandler && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RoomColorView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(RoomWidgetsView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), roomSession.isSpectator && /*#__PURE__*/_jsxDEV(RoomSpectatorView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RoomView, \"cA7EDctgq0vi2Qo+0n1TVg8SgAM=\");\n\n_c = RoomView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/room/RoomView.tsx"],"names":["EventDispatcher","RoomEngineEvent","RoomGeometry","RoomId","RoomSessionEvent","RoomVariableEnum","Vector3d","useCallback","useEffect","useRef","useState","DispatchMouseEvent","DispatchTouchEvent","FurniChooserWidgetHandler","FurnitureContextMenuWidgetHandler","FurnitureCreditWidgetHandler","FurnitureCustomStackHeightWidgetHandler","FurnitureDimmerWidgetHandler","FurnitureExternalImageWidgetHandler","FurnitureInternalLinkHandler","FurnitureMannequinWidgetHandler","FurniturePresentWidgetHandler","FurnitureRoomLinkHandler","FurnitureYoutubeDisplayWidgetHandler","GetNitroInstance","GetRoomEngine","GetRoomSession","InitializeRoomInstanceRenderingCanvas","PollWidgetHandler","RoomWidgetAvatarInfoHandler","RoomWidgetChatHandler","RoomWidgetChatInputHandler","RoomWidgetHandlerManager","RoomWidgetInfostandHandler","SetActiveRoomId","StartRoomSession","UserChooserWidgetHandler","WordQuizWidgetHandler","Base","UseRoomEngineEvent","UseRoomSessionManagerEvent","RoomColorView","RoomContextProvider","RoomSpectatorView","RoomWidgetsView","RoomView","props","roomSession","setRoomSession","widgetHandler","setWidgetHandler","elementRef","onRoomEngineEvent","event","isRoomPreviewerId","roomId","session","type","INITIALIZED","DISPOSED","onRoomSessionEvent","CREATED","ENDED","resize","canvas","renderer","view","style","width","Math","floor","window","innerWidth","height","innerHeight","nitroInstance","resolution","devicePixelRatio","render","widgetHandlerManager","registerHandler","roomEngine","canvasId","displayObject","getRoomInstanceDisplay","SCALE_ZOOMED_IN","geometry","getRoomInstanceGeometry","minX","getRoomInstanceVariable","ROOM_MIN_X","maxX","ROOM_MAX_X","minY","ROOM_MIN_Y","maxY","ROOM_MAX_Y","x","y","offset","z","sqrt","tan","PI","location","stage","addChild","onclick","onmousemove","onmousedown","onmouseup","ontouchstart","ontouchmove","ontouchend","ontouchcancel","element","current","appendChild","addEventListener","removeChild","removeEventListener","eventDispatcher","isSpectator"],"mappings":"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","sourcesContent":["import { EventDispatcher, IRoomSession, RoomEngineEvent, RoomGeometry, RoomId, RoomSessionEvent, RoomVariableEnum, Vector3d } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { DispatchMouseEvent, DispatchTouchEvent, FurniChooserWidgetHandler, FurnitureContextMenuWidgetHandler, FurnitureCreditWidgetHandler, FurnitureCustomStackHeightWidgetHandler, FurnitureDimmerWidgetHandler, FurnitureExternalImageWidgetHandler, FurnitureInternalLinkHandler, FurnitureMannequinWidgetHandler, FurniturePresentWidgetHandler, FurnitureRoomLinkHandler, FurnitureYoutubeDisplayWidgetHandler, GetNitroInstance, GetRoomEngine, GetRoomSession, InitializeRoomInstanceRenderingCanvas, IRoomWidgetHandlerManager, PollWidgetHandler, RoomWidgetAvatarInfoHandler, RoomWidgetChatHandler, RoomWidgetChatInputHandler, RoomWidgetHandlerManager, RoomWidgetInfostandHandler, SetActiveRoomId, StartRoomSession, UserChooserWidgetHandler, WordQuizWidgetHandler } from '../../api';\nimport { Base } from '../../common';\nimport { UseRoomEngineEvent, UseRoomSessionManagerEvent } from '../../hooks';\nimport { RoomColorView } from './RoomColorView';\nimport { RoomContextProvider } from './RoomContext';\nimport { RoomSpectatorView } from './spectator/RoomSpectatorView';\nimport { RoomWidgetsView } from './widgets/RoomWidgetsView';\n\nexport const RoomView: FC<{}> = props =>\n{\n    const [ roomSession, setRoomSession ] = useState<IRoomSession>(null);\n    const [ widgetHandler, setWidgetHandler ] = useState<IRoomWidgetHandlerManager>(null);\n    const elementRef = useRef<HTMLDivElement>();\n\n    const onRoomEngineEvent = useCallback((event: RoomEngineEvent) =>\n    {\n        if(RoomId.isRoomPreviewerId(event.roomId)) return;\n\n        const session = GetRoomSession();\n\n        if(!session) return;\n\n        switch(event.type)\n        {\n            case RoomEngineEvent.INITIALIZED:\n                SetActiveRoomId(event.roomId);\n                setRoomSession(session);\n                return;\n            case RoomEngineEvent.DISPOSED:\n                setRoomSession(null);\n                return;\n        }\n    }, []);\n\n    UseRoomEngineEvent(RoomEngineEvent.INITIALIZED, onRoomEngineEvent);\n    UseRoomEngineEvent(RoomEngineEvent.DISPOSED, onRoomEngineEvent);\n\n    const onRoomSessionEvent = useCallback((event: RoomSessionEvent) =>\n    {\n        switch(event.type)\n        {\n            case RoomSessionEvent.CREATED:\n                StartRoomSession(event.session);\n                return;\n            case RoomSessionEvent.ENDED:\n                setRoomSession(null);\n                return;\n        }\n    }, []);\n\n    UseRoomSessionManagerEvent(RoomSessionEvent.CREATED, onRoomSessionEvent);\n    UseRoomSessionManagerEvent(RoomSessionEvent.ENDED, onRoomSessionEvent);\n\n    const resize = useCallback((event: UIEvent = null) =>\n    {\n        const canvas = GetNitroInstance().renderer.view;\n\n        if(!canvas) return;\n\n        canvas.style.width = `${ Math.floor(window.innerWidth) }px`;\n        canvas.style.height = `${ Math.floor(window.innerHeight) }px`;\n    \n        const nitroInstance = GetNitroInstance();\n\n        nitroInstance.renderer.resolution = window.devicePixelRatio;\n        nitroInstance.renderer.resize(window.innerWidth, window.innerHeight);\n        \n        InitializeRoomInstanceRenderingCanvas(window.innerWidth, window.innerHeight, 1);\n\n        nitroInstance.render();\n    }, []);\n\n    useEffect(() =>\n    {\n        if(!roomSession)\n        {\n            setWidgetHandler(null);\n\n            return;\n        }\n\n        const widgetHandlerManager = new RoomWidgetHandlerManager(roomSession, new EventDispatcher());\n\n        widgetHandlerManager.registerHandler(new RoomWidgetAvatarInfoHandler());\n        widgetHandlerManager.registerHandler(new RoomWidgetInfostandHandler());\n        widgetHandlerManager.registerHandler(new RoomWidgetChatInputHandler());\n        widgetHandlerManager.registerHandler(new RoomWidgetChatHandler());\n        widgetHandlerManager.registerHandler(new UserChooserWidgetHandler());\n        widgetHandlerManager.registerHandler(new WordQuizWidgetHandler());\n        widgetHandlerManager.registerHandler(new PollWidgetHandler());\n\n        widgetHandlerManager.registerHandler(new FurniChooserWidgetHandler());\n        widgetHandlerManager.registerHandler(new FurnitureContextMenuWidgetHandler());\n        widgetHandlerManager.registerHandler(new FurnitureCreditWidgetHandler());\n        widgetHandlerManager.registerHandler(new FurnitureCustomStackHeightWidgetHandler());\n        widgetHandlerManager.registerHandler(new FurnitureExternalImageWidgetHandler());\n        widgetHandlerManager.registerHandler(new FurniturePresentWidgetHandler());\n        widgetHandlerManager.registerHandler(new FurnitureDimmerWidgetHandler());\n        widgetHandlerManager.registerHandler(new FurnitureYoutubeDisplayWidgetHandler());\n        widgetHandlerManager.registerHandler(new FurnitureMannequinWidgetHandler());\n        widgetHandlerManager.registerHandler(new FurnitureInternalLinkHandler());\n        widgetHandlerManager.registerHandler(new FurnitureRoomLinkHandler());\n\n        setWidgetHandler(widgetHandlerManager);\n\n        const roomEngine = GetRoomEngine();\n        const roomId = roomSession.roomId;\n        const canvasId = 1;\n\n        resize();\n\n        const displayObject = roomEngine.getRoomInstanceDisplay(roomId, canvasId, window.innerWidth, window.innerHeight, RoomGeometry.SCALE_ZOOMED_IN);\n\n        if(!displayObject) return;\n\n        const geometry = (roomEngine.getRoomInstanceGeometry(roomId, canvasId) as RoomGeometry);\n\n        if(geometry)\n        {\n            const minX = (roomEngine.getRoomInstanceVariable<number>(roomId, RoomVariableEnum.ROOM_MIN_X) || 0);\n            const maxX = (roomEngine.getRoomInstanceVariable<number>(roomId, RoomVariableEnum.ROOM_MAX_X) || 0);\n            const minY = (roomEngine.getRoomInstanceVariable<number>(roomId, RoomVariableEnum.ROOM_MIN_Y) || 0);\n            const maxY = (roomEngine.getRoomInstanceVariable<number>(roomId, RoomVariableEnum.ROOM_MAX_Y) || 0);\n\n            let x = ((minX + maxX) / 2);\n            let y = ((minY + maxY) / 2);\n\n            const offset = 20;\n\n            x = (x + (offset - 1));\n            y = (y + (offset - 1));\n\n            const z = (Math.sqrt(((offset * offset) + (offset * offset))) * Math.tan(((30 / 180) * Math.PI)));\n\n            geometry.location = new Vector3d(x, y, z);\n        }\n\n        const stage = GetNitroInstance().stage;\n\n        if(!stage) return;\n\n        stage.addChild(displayObject);\n\n        SetActiveRoomId(roomSession.roomId);\n    }, [ roomSession, resize ]);\n\n    useEffect(() =>\n    {\n        const canvas = GetNitroInstance().renderer.view;\n\n        if(!canvas) return;\n\n        canvas.onclick = event => DispatchMouseEvent(event);\n        canvas.onmousemove = event => DispatchMouseEvent(event);\n        canvas.onmousedown = event => DispatchMouseEvent(event);\n        canvas.onmouseup = event => DispatchMouseEvent(event);\n\n        canvas.ontouchstart = event => DispatchTouchEvent(event);\n        canvas.ontouchmove = event => DispatchTouchEvent(event);\n        canvas.ontouchend = event => DispatchTouchEvent(event);\n        canvas.ontouchcancel = event => DispatchTouchEvent(event);\n\n        resize();\n\n        const element = elementRef.current;\n\n        if(element) element.appendChild(canvas);\n\n        window.addEventListener('resize', resize);\n\n        return () =>\n        {\n            if(element) element.removeChild(canvas);\n            \n            window.removeEventListener('resize', resize);\n        }\n    }, [ resize ]);\n\n    return (\n        <RoomContextProvider value={ { roomSession, eventDispatcher: (widgetHandler && widgetHandler.eventDispatcher), widgetHandler } }>\n            <Base fit innerRef={ elementRef } className={ (!roomSession && 'd-none') }>\n                { (roomSession && widgetHandler) &&\n                    <>\n                        <RoomColorView />\n                        <RoomWidgetsView />\n                        { roomSession.isSpectator && <RoomSpectatorView /> }\n                    </> }\n            </Base>\n        </RoomContextProvider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}