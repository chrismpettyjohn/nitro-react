{"ast":null,"code":"export class UserCurrencyParser {\n  constructor() {\n    this._currencies = void 0;\n  }\n\n  flush() {\n    this._currencies = new Map();\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    let totalCurrencies = wrapper.readInt();\n\n    while (totalCurrencies > 0) {\n      this._currencies.set(wrapper.readInt(), wrapper.readInt());\n\n      totalCurrencies--;\n    }\n\n    return true;\n  }\n\n  get currencies() {\n    return this._currencies;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/user/inventory/currency/UserCurrencyParser.ts"],"names":["UserCurrencyParser","_currencies","flush","Map","parse","wrapper","totalCurrencies","readInt","set","currencies"],"mappings":"AAEA,OAAO,MAAMA,kBAAN,CACP;AAAA;AAAA,SACYC,WADZ;AAAA;;AAGWC,EAAAA,KAAK,GACZ;AACI,SAAKD,WAAL,GAAmB,IAAIE,GAAJ,EAAnB;AAEA,WAAO,IAAP;AACH;;AAEMC,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,QAAIC,eAAe,GAAGD,OAAO,CAACE,OAAR,EAAtB;;AAEA,WAAMD,eAAe,GAAG,CAAxB,EACA;AACI,WAAKL,WAAL,CAAiBO,GAAjB,CAAqBH,OAAO,CAACE,OAAR,EAArB,EAAwCF,OAAO,CAACE,OAAR,EAAxC;;AAEAD,MAAAA,eAAe;AAClB;;AAED,WAAO,IAAP;AACH;;AAEoB,MAAVG,UAAU,GACrB;AACI,WAAO,KAAKR,WAAZ;AACH;;AA7BL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../../core';\r\n\r\nexport class UserCurrencyParser implements IMessageParser\r\n{\r\n    private _currencies: Map<number, number>;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._currencies = new Map();\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        let totalCurrencies = wrapper.readInt();\r\n\r\n        while(totalCurrencies > 0)\r\n        {\r\n            this._currencies.set(wrapper.readInt(), wrapper.readInt());\r\n\r\n            totalCurrencies--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get currencies(): Map<number, number>\r\n    {\r\n        return this._currencies;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}