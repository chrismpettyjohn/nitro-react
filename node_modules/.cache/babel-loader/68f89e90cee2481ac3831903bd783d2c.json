{"ast":null,"code":"import { FriendParser } from '../../incoming/friendlist/FriendParser';\nexport class FriendListFragmentParser {\n  constructor() {\n    this._totalFragments = void 0;\n    this._fragmentNumber = void 0;\n    this._fragment = void 0;\n  }\n\n  flush() {\n    this._totalFragments = 0;\n    this._fragmentNumber = 0;\n    this._fragment = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._totalFragments = wrapper.readInt();\n    this._fragmentNumber = wrapper.readInt();\n    let totalFriends = wrapper.readInt();\n\n    while (totalFriends > 0) {\n      this._fragment.push(new FriendParser(wrapper));\n\n      totalFriends--;\n    }\n\n    return true;\n  }\n\n  get totalFragments() {\n    return this._totalFragments;\n  }\n\n  get fragmentNumber() {\n    return this._fragmentNumber;\n  }\n\n  get fragment() {\n    return this._fragment;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/friendlist/FriendListFragmentMessageParser.ts"],"names":["FriendParser","FriendListFragmentParser","_totalFragments","_fragmentNumber","_fragment","flush","parse","wrapper","readInt","totalFriends","push","totalFragments","fragmentNumber","fragment"],"mappings":"AACA,SAASA,YAAT,QAA6B,wCAA7B;AAEA,OAAO,MAAMC,wBAAN,CACP;AAAA;AAAA,SACYC,eADZ;AAAA,SAEYC,eAFZ;AAAA,SAGYC,SAHZ;AAAA;;AAKWC,EAAAA,KAAK,GACZ;AACI,SAAKH,eAAL,GAAuB,CAAvB;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKL,eAAL,GAAuBK,OAAO,CAACC,OAAR,EAAvB;AACA,SAAKL,eAAL,GAAuBI,OAAO,CAACC,OAAR,EAAvB;AAEA,QAAIC,YAAY,GAAGF,OAAO,CAACC,OAAR,EAAnB;;AAEA,WAAMC,YAAY,GAAG,CAArB,EACA;AACI,WAAKL,SAAL,CAAeM,IAAf,CAAoB,IAAIV,YAAJ,CAAiBO,OAAjB,CAApB;;AAEAE,MAAAA,YAAY;AACf;;AAED,WAAO,IAAP;AACH;;AAEwB,MAAdE,cAAc,GACzB;AACI,WAAO,KAAKT,eAAZ;AACH;;AAEwB,MAAdU,cAAc,GACzB;AACI,WAAO,KAAKT,eAAZ;AACH;;AAEkB,MAARU,QAAQ,GACnB;AACI,WAAO,KAAKT,SAAZ;AACH;;AA9CL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\nimport { FriendParser } from '../../incoming/friendlist/FriendParser';\r\n\r\nexport class FriendListFragmentParser implements IMessageParser\r\n{\r\n    private _totalFragments: number;\r\n    private _fragmentNumber: number;\r\n    private _fragment: FriendParser[];\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._totalFragments = 0;\r\n        this._fragmentNumber = 0;\r\n        this._fragment = [];\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._totalFragments = wrapper.readInt();\r\n        this._fragmentNumber = wrapper.readInt();\r\n\r\n        let totalFriends = wrapper.readInt();\r\n\r\n        while(totalFriends > 0)\r\n        {\r\n            this._fragment.push(new FriendParser(wrapper));\r\n\r\n            totalFriends--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get totalFragments(): number\r\n    {\r\n        return this._totalFragments;\r\n    }\r\n\r\n    public get fragmentNumber(): number\r\n    {\r\n        return this._fragmentNumber;\r\n    }\r\n\r\n    public get fragment(): FriendParser[]\r\n    {\r\n        return this._fragment;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}