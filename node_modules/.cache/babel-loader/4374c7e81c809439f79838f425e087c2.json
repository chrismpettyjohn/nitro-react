{"ast":null,"code":"export class TradingOpenFailedParser {\n  constructor() {\n    this._reason = void 0;\n    this._otherUserName = void 0;\n  }\n\n  flush() {\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._reason = wrapper.readInt();\n    this._otherUserName = wrapper.readString();\n    return true;\n  }\n\n  get reason() {\n    return this._reason;\n  }\n\n  get otherUserName() {\n    return this._otherUserName;\n  }\n\n}\nTradingOpenFailedParser.REASON_YOU_ARE_ALREADY_TRADING = 7;\nTradingOpenFailedParser.REASON_OTHER_USER_ALREADY_TRADING = 8;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/inventory/trading/TradingOpenFailedParser.ts"],"names":["TradingOpenFailedParser","_reason","_otherUserName","flush","parse","wrapper","readInt","readString","reason","otherUserName","REASON_YOU_ARE_ALREADY_TRADING","REASON_OTHER_USER_ALREADY_TRADING"],"mappings":"AAEA,OAAO,MAAMA,uBAAN,CACP;AAAA;AAAA,SAIYC,OAJZ;AAAA,SAKYC,cALZ;AAAA;;AAOWC,EAAAA,KAAK,GACZ;AACI,WAAO,IAAP;AACH;;AAEMC,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKJ,OAAL,GAAeI,OAAO,CAACC,OAAR,EAAf;AACA,SAAKJ,cAAL,GAAsBG,OAAO,CAACE,UAAR,EAAtB;AAEA,WAAO,IAAP;AACH;;AAEgB,MAANC,MAAM,GACjB;AACI,WAAO,KAAKP,OAAZ;AACH;;AAEuB,MAAbQ,aAAa,GACxB;AACI,WAAO,KAAKP,cAAZ;AACH;;AA9BL;AADaF,uB,CAEKU,8B,GAAyC,C;AAF9CV,uB,CAGKW,iC,GAA4C,C","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\n\r\nexport class TradingOpenFailedParser implements IMessageParser\r\n{\r\n    public static REASON_YOU_ARE_ALREADY_TRADING: number = 7;\r\n    public static REASON_OTHER_USER_ALREADY_TRADING: number = 8;\r\n\r\n    private _reason: number;\r\n    private _otherUserName: string;\r\n\r\n    public flush(): boolean\r\n    {\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._reason = wrapper.readInt();\r\n        this._otherUserName = wrapper.readString();\r\n\r\n        return true;\r\n    }\r\n\r\n    public get reason(): number\r\n    {\r\n        return this._reason;\r\n    }\r\n\r\n    public get otherUserName(): string\r\n    {\r\n        return this._otherUserName;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}