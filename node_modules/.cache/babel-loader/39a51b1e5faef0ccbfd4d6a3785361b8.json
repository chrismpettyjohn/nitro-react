{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/mod-tools/views/room/ModToolsRoomView.tsx\",\n    _s = $RefreshSig$();\n\nimport { GetModeratorRoomInfoMessageComposer, ModerateRoomMessageComposer, ModeratorActionMessageComposer, ModeratorRoomInfoEvent } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useState } from 'react';\nimport { SendMessageComposer, TryVisitRoom } from '../../../../api';\nimport { Button, Column, DraggableWindowPosition, Flex, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../../../common';\nimport { ModToolsOpenRoomChatlogEvent } from '../../../../events/mod-tools/ModToolsOpenRoomChatlogEvent';\nimport { DispatchUiEvent, UseMessageEventHook } from '../../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModToolsRoomView = props => {\n  _s();\n\n  const {\n    roomId = null,\n    onCloseClick = null\n  } = props;\n  const [infoRequested, setInfoRequested] = useState(false);\n  const [loadedRoomId, setLoadedRoomId] = useState(null);\n  const [name, setName] = useState(null);\n  const [desc, setDesc] = useState(null);\n  const [ownerId, setOwnerId] = useState(null);\n  const [ownerName, setOwnerName] = useState(null);\n  const [ownerInRoom, setOwnerInRoom] = useState(false);\n  const [usersInRoom, setUsersInRoom] = useState(0); //form data\n\n  const [kickUsers, setKickUsers] = useState(false);\n  const [lockRoom, setLockRoom] = useState(false);\n  const [changeRoomName, setChangeRoomName] = useState(false);\n  const [message, setMessage] = useState('');\n  const onModtoolRoomInfoEvent = useCallback(event => {\n    const parser = event.getParser();\n    if (!parser || parser.data.flatId !== roomId) return;\n    setLoadedRoomId(parser.data.flatId);\n    setName(parser.data.room.name);\n    setDesc(parser.data.room.desc);\n    setOwnerId(parser.data.ownerId);\n    setOwnerName(parser.data.ownerName);\n    setOwnerInRoom(parser.data.ownerInRoom);\n    setUsersInRoom(parser.data.userCount);\n  }, [roomId]);\n  UseMessageEventHook(ModeratorRoomInfoEvent, onModtoolRoomInfoEvent);\n  const handleClick = useCallback((action, value) => {\n    if (!action) return;\n\n    switch (action) {\n      case 'alert_only':\n        if (message.trim().length === 0) return;\n        SendMessageComposer(new ModeratorActionMessageComposer(ModeratorActionMessageComposer.ACTION_ALERT, message, ''));\n        SendMessageComposer(new ModerateRoomMessageComposer(roomId, lockRoom ? 1 : 0, changeRoomName ? 1 : 0, kickUsers ? 1 : 0));\n        return;\n\n      case 'send_message':\n        if (message.trim().length === 0) return;\n        SendMessageComposer(new ModeratorActionMessageComposer(ModeratorActionMessageComposer.ACTION_MESSAGE, message, ''));\n        SendMessageComposer(new ModerateRoomMessageComposer(roomId, lockRoom ? 1 : 0, changeRoomName ? 1 : 0, kickUsers ? 1 : 0));\n        return;\n    }\n  }, [changeRoomName, kickUsers, lockRoom, message, roomId]);\n  useEffect(() => {\n    if (infoRequested) return;\n    SendMessageComposer(new GetModeratorRoomInfoMessageComposer(roomId));\n    setInfoRequested(true);\n  }, [roomId, infoRequested, setInfoRequested]);\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    className: \"nitro-mod-tools-room\",\n    theme: \"modtool-windows\",\n    windowPosition: DraggableWindowPosition.TOP_CENTER,\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: 'Room Info',\n      onCloseClick: event => onCloseClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      className: \"text-black\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        gap: 0,\n        className: \"mod-content p-2\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          gfbold: true,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        gap: 2,\n        className: \"mod-content p-2\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          justifyContent: \"center\",\n          grow: true,\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              gfbold: true,\n              className: \"\",\n              children: \"Room Owner:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              underline: true,\n              pointer: true,\n              truncate: true,\n              children: ownerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            gap: 2,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              gfbold: true,\n              className: \"\",\n              children: \"Users in room:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: usersInRoom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            gap: 2,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              gfbold: true,\n              className: \"\",\n              children: \"Owner in room:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: ownerInRoom ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: event => TryVisitRoom(roomId),\n            children: \"Visit Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: event => DispatchUiEvent(new ModToolsOpenRoomChatlogEvent(roomId)),\n            children: \"Chatlog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        className: \"mod-content p-2\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            checked: kickUsers,\n            onChange: event => setKickUsers(event.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Kick everyone out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            checked: lockRoom,\n            onChange: event => setLockRoom(event.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Enable the doorbell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            checked: changeRoomName,\n            onChange: event => setChangeRoomName(event.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Change room name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control message-input p-1\",\n        placeholder: \"Type a mandatory message to the users in this text box...\",\n        value: message,\n        onChange: event => setMessage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"between\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: event => handleClick('send_message'),\n          children: \"Send Caution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: event => handleClick('alert_only'),\n          children: \"Send Alert only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModToolsRoomView, \"ycLxb5dZlHJwAkgKahaQRjzNmaI=\");\n\n_c = ModToolsRoomView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModToolsRoomView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/mod-tools/views/room/ModToolsRoomView.tsx"],"names":["GetModeratorRoomInfoMessageComposer","ModerateRoomMessageComposer","ModeratorActionMessageComposer","ModeratorRoomInfoEvent","useCallback","useEffect","useState","SendMessageComposer","TryVisitRoom","Button","Column","DraggableWindowPosition","Flex","NitroCardContentView","NitroCardHeaderView","NitroCardView","Text","ModToolsOpenRoomChatlogEvent","DispatchUiEvent","UseMessageEventHook","ModToolsRoomView","props","roomId","onCloseClick","infoRequested","setInfoRequested","loadedRoomId","setLoadedRoomId","name","setName","desc","setDesc","ownerId","setOwnerId","ownerName","setOwnerName","ownerInRoom","setOwnerInRoom","usersInRoom","setUsersInRoom","kickUsers","setKickUsers","lockRoom","setLockRoom","changeRoomName","setChangeRoomName","message","setMessage","onModtoolRoomInfoEvent","event","parser","getParser","data","flatId","room","userCount","handleClick","action","value","trim","length","ACTION_ALERT","ACTION_MESSAGE","TOP_CENTER","target","checked"],"mappings":"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","sourcesContent":["import { GetModeratorRoomInfoMessageComposer, ModerateRoomMessageComposer, ModeratorActionMessageComposer, ModeratorRoomInfoEvent } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { SendMessageComposer, TryVisitRoom } from '../../../../api';\nimport { Button, Column, DraggableWindowPosition, Flex, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../../../common';\nimport { ModToolsOpenRoomChatlogEvent } from '../../../../events/mod-tools/ModToolsOpenRoomChatlogEvent';\nimport { DispatchUiEvent, UseMessageEventHook } from '../../../../hooks';\n\ninterface ModToolsRoomViewProps\n{\n    roomId: number;\n    onCloseClick: () => void;\n}\n\nexport const ModToolsRoomView: FC<ModToolsRoomViewProps> = props =>\n{\n    const { roomId = null, onCloseClick = null } = props;\n\n    const [ infoRequested, setInfoRequested ] = useState(false);\n    const [ loadedRoomId, setLoadedRoomId ] = useState(null);\n\n    const [ name, setName ] = useState(null);\n    const [ desc, setDesc ] = useState(null);\n    const [ ownerId, setOwnerId ] = useState(null);\n    const [ ownerName, setOwnerName ] = useState(null);\n    const [ ownerInRoom, setOwnerInRoom ] = useState(false);\n    const [ usersInRoom, setUsersInRoom ] = useState(0);\n\n    //form data\n    const [ kickUsers, setKickUsers ] = useState(false);\n    const [ lockRoom, setLockRoom ] = useState(false);\n    const [ changeRoomName, setChangeRoomName ] = useState(false);\n    const [ message, setMessage ] = useState('');\n\n    const onModtoolRoomInfoEvent = useCallback((event: ModeratorRoomInfoEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(!parser || parser.data.flatId !== roomId) return;\n\n        setLoadedRoomId(parser.data.flatId);\n        setName(parser.data.room.name);\n        setDesc(parser.data.room.desc);\n        setOwnerId(parser.data.ownerId);\n        setOwnerName(parser.data.ownerName);\n        setOwnerInRoom(parser.data.ownerInRoom);\n        setUsersInRoom(parser.data.userCount);\n    }, [ roomId ]);\n\n    UseMessageEventHook(ModeratorRoomInfoEvent, onModtoolRoomInfoEvent);\n\n    const handleClick = useCallback((action: string, value?: string) =>\n    {\n        if(!action) return;\n\n        switch(action)\n        {\n            case 'alert_only':\n                if(message.trim().length === 0) return;\n\n                SendMessageComposer(new ModeratorActionMessageComposer(ModeratorActionMessageComposer.ACTION_ALERT, message, ''));\n                SendMessageComposer(new ModerateRoomMessageComposer(roomId, lockRoom ? 1 : 0, changeRoomName ? 1 : 0, kickUsers ? 1 : 0));\n                return;\n            case 'send_message':\n                if(message.trim().length === 0) return;\n\n                SendMessageComposer(new ModeratorActionMessageComposer(ModeratorActionMessageComposer.ACTION_MESSAGE, message, ''));\n                SendMessageComposer(new ModerateRoomMessageComposer(roomId, lockRoom ? 1 : 0, changeRoomName ? 1 : 0, kickUsers ? 1 : 0));\n                return;\n        }\n    }, [ changeRoomName, kickUsers, lockRoom, message, roomId ]);\n\n    useEffect(() =>\n    {\n        if(infoRequested) return;\n        \n        SendMessageComposer(new GetModeratorRoomInfoMessageComposer(roomId));\n        setInfoRequested(true);\n    }, [ roomId, infoRequested, setInfoRequested ]);\n\n    return (\n        <NitroCardView className=\"nitro-mod-tools-room\" theme=\"modtool-windows\" windowPosition={ DraggableWindowPosition.TOP_CENTER }>\n            <NitroCardHeaderView headerText={ 'Room Info' } onCloseClick={ event => onCloseClick() } />\n            <NitroCardContentView className=\"text-black\">\n                <Column gap={ 0 } className=\"mod-content p-2\">\n                    <Text gfbold>{ name }</Text>\n                    <Text>{ desc }</Text>\n                </Column>\n                <Flex gap={ 2 } className=\"mod-content p-2\">\n                    <Column justifyContent=\"center\" grow gap={ 1 }>\n                        <Flex alignItems=\"center\" gap={ 1 }>\n                            <Text gfbold className=\"\">Room Owner:</Text>\n                            <Text underline pointer truncate>{ ownerName }</Text>\n                        </Flex>\n                        <Flex alignItems=\"center\" gap={ 2 }>\n                            <Text gfbold className=\"\">Users in room:</Text>\n                            <Text>{ usersInRoom }</Text>\n                        </Flex>\n                        <Flex alignItems=\"center\" gap={ 2 }>\n                            <Text gfbold className=\"\">Owner in room:</Text>\n                            <Text>{ ownerInRoom ? 'Yes' : 'No' }</Text>\n                        </Flex>\n                    </Column>\n                    <Column gap={ 1 }>\n                        <Button onClick={ event => TryVisitRoom(roomId) }>Visit Room</Button>\n                        <Button onClick={ event => DispatchUiEvent(new ModToolsOpenRoomChatlogEvent(roomId)) }>Chatlog</Button>\n                    </Column>\n                </Flex>\n                <Column className=\"mod-content p-2\" gap={ 1 }>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={ kickUsers } onChange={ event => setKickUsers(event.target.checked) } />\n                        <Text>Kick everyone out</Text>\n                    </Flex>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={ lockRoom } onChange={ event => setLockRoom(event.target.checked) } />\n                        <Text>Enable the doorbell</Text>\n                    </Flex>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={ changeRoomName } onChange={ event => setChangeRoomName(event.target.checked) }/>\n                        <Text>Change room name</Text>\n                    </Flex>\n                </Column>\n                <textarea className=\"form-control message-input p-1\" placeholder=\"Type a mandatory message to the users in this text box...\" value={ message } onChange={ event => setMessage(event.target.value) }></textarea>\n                <Flex justifyContent=\"between\">\n                    <Button variant=\"danger\" onClick={ event => handleClick('send_message') }>Send Caution</Button>\n                    <Button onClick={ event => handleClick('alert_only') }>Send Alert only</Button>\n                </Flex>\n            </NitroCardContentView>\n        </NitroCardView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}