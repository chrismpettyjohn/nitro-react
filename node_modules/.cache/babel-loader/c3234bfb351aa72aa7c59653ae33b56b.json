{"ast":null,"code":"import { SellablePetPaletteData } from './SellablePetPaletteData';\nexport class SellablePetPalettesParser {\n  constructor() {\n    this._productCode = void 0;\n    this._palettes = void 0;\n  }\n\n  flush() {\n    this._productCode = '';\n    this._palettes = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._productCode = wrapper.readString();\n    let totalPalettes = wrapper.readInt();\n\n    while (totalPalettes > 0) {\n      this._palettes.push(new SellablePetPaletteData(wrapper));\n\n      totalPalettes--;\n    }\n\n    return true;\n  }\n\n  get productCode() {\n    return this._productCode;\n  }\n\n  get palettes() {\n    return this._palettes;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/catalog/SellablePetPalettesParser.ts"],"names":["SellablePetPaletteData","SellablePetPalettesParser","_productCode","_palettes","flush","parse","wrapper","readString","totalPalettes","readInt","push","productCode","palettes"],"mappings":"AACA,SAASA,sBAAT,QAAuC,0BAAvC;AAEA,OAAO,MAAMC,yBAAN,CACP;AAAA;AAAA,SACYC,YADZ;AAAA,SAEYC,SAFZ;AAAA;;AAIWC,EAAAA,KAAK,GACZ;AACI,SAAKF,YAAL,GAAoB,EAApB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKJ,YAAL,GAAoBI,OAAO,CAACC,UAAR,EAApB;AAEA,QAAIC,aAAa,GAAGF,OAAO,CAACG,OAAR,EAApB;;AAEA,WAAMD,aAAa,GAAG,CAAtB,EACA;AACI,WAAKL,SAAL,CAAeO,IAAf,CAAoB,IAAIV,sBAAJ,CAA2BM,OAA3B,CAApB;;AAEAE,MAAAA,aAAa;AAChB;;AAED,WAAO,IAAP;AACH;;AAEqB,MAAXG,WAAW,GACtB;AACI,WAAO,KAAKT,YAAZ;AACH;;AAEkB,MAARU,QAAQ,GACnB;AACI,WAAO,KAAKT,SAAZ;AACH;;AAtCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\nimport { SellablePetPaletteData } from './SellablePetPaletteData';\r\n\r\nexport class SellablePetPalettesParser implements IMessageParser\r\n{\r\n    private _productCode: string;\r\n    private _palettes: SellablePetPaletteData[];\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._productCode = '';\r\n        this._palettes = [];\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._productCode = wrapper.readString();\r\n\r\n        let totalPalettes = wrapper.readInt();\r\n\r\n        while(totalPalettes > 0)\r\n        {\r\n            this._palettes.push(new SellablePetPaletteData(wrapper));\r\n\r\n            totalPalettes--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get productCode(): string\r\n    {\r\n        return this._productCode;\r\n    }\r\n\r\n    public get palettes(): SellablePetPaletteData[]\r\n    {\r\n        return this._palettes;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}