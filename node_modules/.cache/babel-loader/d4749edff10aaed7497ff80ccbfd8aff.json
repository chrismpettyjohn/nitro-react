{"ast":null,"code":"import { SCALE_MODES } from '@pixi/constants';\nimport { Texture } from '@pixi/core';\nimport { IsometricImageFurniVisualization } from './IsometricImageFurniVisualization';\nexport class FurnitureDynamicThumbnailVisualization extends IsometricImageFurniVisualization {\n  constructor() {\n    super();\n    this._cachedUrl = void 0;\n    this._cachedUrl = null;\n    this._hasOutline = true;\n  }\n\n  updateModel(scale) {\n    if (this.object) {\n      const thumbnailUrl = this.getThumbnailURL();\n\n      if (this._cachedUrl !== thumbnailUrl) {\n        this._cachedUrl = thumbnailUrl;\n\n        if (this._cachedUrl && this._cachedUrl !== '') {\n          const image = new Image();\n          image.src = thumbnailUrl;\n          image.crossOrigin = '*';\n\n          image.onload = () => {\n            const texture = Texture.from(image);\n            texture.baseTexture.scaleMode = SCALE_MODES.LINEAR;\n            this.setThumbnailImages(texture);\n          };\n        } else {\n          this.setThumbnailImages(null);\n        }\n      }\n    }\n\n    return super.updateModel(scale);\n  }\n\n  getThumbnailURL() {\n    throw new Error('This method must be overridden!');\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/furniture/FurnitureDynamicThumbnailVisualization.ts"],"names":["SCALE_MODES","Texture","IsometricImageFurniVisualization","FurnitureDynamicThumbnailVisualization","constructor","_cachedUrl","_hasOutline","updateModel","scale","object","thumbnailUrl","getThumbnailURL","image","Image","src","crossOrigin","onload","texture","from","baseTexture","scaleMode","LINEAR","setThumbnailImages","Error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,gCAAT,QAAiD,oCAAjD;AAEA,OAAO,MAAMC,sCAAN,SAAqDD,gCAArD,CACP;AAGIE,EAAAA,WAAW,GACX;AACI;AADJ,SAHQC,UAGR;AAGI,SAAKA,UAAL,GAAkB,IAAlB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACH;;AAESC,EAAAA,WAAW,CAACC,KAAD,EACrB;AACI,QAAG,KAAKC,MAAR,EACA;AACI,YAAMC,YAAY,GAAG,KAAKC,eAAL,EAArB;;AAEA,UAAG,KAAKN,UAAL,KAAoBK,YAAvB,EACA;AACI,aAAKL,UAAL,GAAkBK,YAAlB;;AAEA,YAAG,KAAKL,UAAL,IAAoB,KAAKA,UAAL,KAAoB,EAA3C,EACA;AACI,gBAAMO,KAAK,GAAG,IAAIC,KAAJ,EAAd;AAEAD,UAAAA,KAAK,CAACE,GAAN,GAAYJ,YAAZ;AACAE,UAAAA,KAAK,CAACG,WAAN,GAAoB,GAApB;;AAEAH,UAAAA,KAAK,CAACI,MAAN,GAAe,MACf;AACI,kBAAMC,OAAO,GAAGhB,OAAO,CAACiB,IAAR,CAAaN,KAAb,CAAhB;AAEAK,YAAAA,OAAO,CAACE,WAAR,CAAoBC,SAApB,GAAgCpB,WAAW,CAACqB,MAA5C;AAEA,iBAAKC,kBAAL,CAAwBL,OAAxB;AACH,WAPD;AAQH,SAfD,MAiBA;AACI,eAAKK,kBAAL,CAAwB,IAAxB;AACH;AACJ;AACJ;;AAED,WAAO,MAAMf,WAAN,CAAkBC,KAAlB,CAAP;AACH;;AAESG,EAAAA,eAAe,GACzB;AACI,UAAO,IAAIY,KAAJ,CAAU,iCAAV,CAAP;AACH;;AAlDL","sourcesContent":["import { SCALE_MODES } from '@pixi/constants';\r\nimport { Texture } from '@pixi/core';\r\nimport { IsometricImageFurniVisualization } from './IsometricImageFurniVisualization';\r\n\r\nexport class FurnitureDynamicThumbnailVisualization extends IsometricImageFurniVisualization\r\n{\r\n    private _cachedUrl: string;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        this._cachedUrl = null;\r\n        this._hasOutline = true;\r\n    }\r\n\r\n    protected updateModel(scale: number): boolean\r\n    {\r\n        if(this.object)\r\n        {\r\n            const thumbnailUrl = this.getThumbnailURL();\r\n\r\n            if(this._cachedUrl !== thumbnailUrl)\r\n            {\r\n                this._cachedUrl = thumbnailUrl;\r\n\r\n                if(this._cachedUrl && (this._cachedUrl !== ''))\r\n                {\r\n                    const image = new Image();\r\n\r\n                    image.src = thumbnailUrl;\r\n                    image.crossOrigin = '*';\r\n\r\n                    image.onload = () =>\r\n                    {\r\n                        const texture = Texture.from(image);\r\n\r\n                        texture.baseTexture.scaleMode = SCALE_MODES.LINEAR;\r\n\r\n                        this.setThumbnailImages(texture);\r\n                    };\r\n                }\r\n                else\r\n                {\r\n                    this.setThumbnailImages(null);\r\n                }\r\n            }\r\n        }\r\n\r\n        return super.updateModel(scale);\r\n    }\r\n\r\n    protected getThumbnailURL(): string\r\n    {\r\n        throw (new Error('This method must be overridden!'));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}