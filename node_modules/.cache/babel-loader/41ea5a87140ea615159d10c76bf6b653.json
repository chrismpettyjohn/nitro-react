{"ast":null,"code":"import { ExpressionAddition } from './ExpressionAddition';\nimport { FloatingHeartAddition } from './FloatingHeartAddition';\nexport class ExpressionAdditionFactory {\n  static getExpressionAddition(id, type, visualization) {\n    switch (type) {\n      case this.BLOW:\n        return new FloatingHeartAddition(id, this.BLOW, visualization);\n\n      default:\n        return new ExpressionAddition(id, type, visualization);\n    }\n  }\n\n}\nExpressionAdditionFactory.WAVE = 1;\nExpressionAdditionFactory.BLOW = 2;\nExpressionAdditionFactory.LAUGH = 3;\nExpressionAdditionFactory.CRY = 4;\nExpressionAdditionFactory.IDLE = 5;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/avatar/additions/ExpressionAdditionFactory.ts"],"names":["ExpressionAddition","FloatingHeartAddition","ExpressionAdditionFactory","getExpressionAddition","id","type","visualization","BLOW","WAVE","LAUGH","CRY","IDLE"],"mappings":"AACA,SAASA,kBAAT,QAAmC,sBAAnC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAGA,OAAO,MAAMC,yBAAN,CACP;AAOuC,SAArBC,qBAAqB,CAACC,EAAD,EAAaC,IAAb,EAA2BC,aAA3B,EACnC;AACI,YAAOD,IAAP;AAEI,WAAK,KAAKE,IAAV;AAAgB,eAAO,IAAIN,qBAAJ,CAA0BG,EAA1B,EAA8B,KAAKG,IAAnC,EAAyCD,aAAzC,CAAP;;AAChB;AAAS,eAAO,IAAIN,kBAAJ,CAAuBI,EAAvB,EAA2BC,IAA3B,EAAiCC,aAAjC,CAAP;AAHb;AAKH;;AAdL;AADaJ,yB,CAEKM,I,GAAe,C;AAFpBN,yB,CAGKK,I,GAAe,C;AAHpBL,yB,CAIKO,K,GAAgB,C;AAJrBP,yB,CAKKQ,G,GAAc,C;AALnBR,yB,CAMKS,I,GAAe,C","sourcesContent":["import { AvatarVisualization } from '../AvatarVisualization';\r\nimport { ExpressionAddition } from './ExpressionAddition';\r\nimport { FloatingHeartAddition } from './FloatingHeartAddition';\r\nimport { IExpressionAddition } from './IExpressionAddition';\r\n\r\nexport class ExpressionAdditionFactory\r\n{\r\n    public static WAVE: number = 1;\r\n    public static BLOW: number = 2;\r\n    public static LAUGH: number = 3;\r\n    public static CRY: number = 4;\r\n    public static IDLE: number = 5;\r\n\r\n    public static getExpressionAddition(id: number, type: number, visualization: AvatarVisualization): IExpressionAddition\r\n    {\r\n        switch(type)\r\n        {\r\n            case this.BLOW: return new FloatingHeartAddition(id, this.BLOW, visualization);\r\n            default: return new ExpressionAddition(id, type, visualization);\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}