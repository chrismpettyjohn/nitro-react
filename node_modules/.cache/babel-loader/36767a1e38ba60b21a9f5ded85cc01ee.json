{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/camera/views/capture/CameraWidgetCaptureView.tsx\",\n    _s = $RefreshSig$();\n\nimport { NitroRectangle, TextureUtils } from '@nitrots/nitro-renderer';\nimport { useCallback, useRef } from 'react';\nimport { GetRoomEngine, GetRoomSession, LocalizeText, NotificationUtilities, PlaySound, SoundNames } from '../../../../api';\nimport { Column, DraggableWindow, Flex } from '../../../../common';\nimport { useCameraWidgetContext } from '../../CameraWidgetContext';\nimport { CameraPicture } from '../../common/CameraPicture';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CAMERA_ROLL_LIMIT = 5;\nexport const CameraWidgetCaptureView = props => {\n  _s();\n\n  const {\n    onClose = null,\n    onEdit = null,\n    onDelete = null\n  } = props;\n  const {\n    cameraRoll = null,\n    setCameraRoll = null,\n    selectedPictureIndex = -1,\n    setSelectedPictureIndex = null\n  } = useCameraWidgetContext();\n  const elementRef = useRef();\n  const selectedPicture = selectedPictureIndex > -1 ? cameraRoll[selectedPictureIndex] : null;\n  const getCameraBounds = useCallback(() => {\n    if (!elementRef || !elementRef.current) return null;\n    const frameBounds = elementRef.current.getBoundingClientRect();\n    return new NitroRectangle(Math.floor(frameBounds.x), Math.floor(frameBounds.y), Math.floor(frameBounds.width), Math.floor(frameBounds.height));\n  }, []);\n  const takePicture = useCallback(() => {\n    if (selectedPictureIndex > -1) {\n      setSelectedPictureIndex(-1);\n      return;\n    }\n\n    const texture = GetRoomEngine().createTextureFromRoom(GetRoomSession().roomId, 1, getCameraBounds());\n    const clone = [...cameraRoll];\n\n    if (clone.length >= CAMERA_ROLL_LIMIT) {\n      NotificationUtilities.simpleAlert(LocalizeText('camera.full.body'));\n      clone.pop();\n    }\n\n    PlaySound(SoundNames.CAMERA_SHUTTER);\n    clone.push(new CameraPicture(texture, TextureUtils.generateImageUrl(texture)));\n    setCameraRoll(clone);\n  }, [cameraRoll, selectedPictureIndex, getCameraBounds, setCameraRoll, setSelectedPictureIndex]);\n  return /*#__PURE__*/_jsxDEV(DraggableWindow, {\n    uniqueKey: \"nitro-camera-capture\",\n    children: /*#__PURE__*/_jsxDEV(Column, {\n      center: true,\n      className: \"nitro-camera-capture\",\n      gap: 0,\n      children: [selectedPicture && /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        className: \"camera-area\",\n        src: selectedPicture.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-canvas drag-handler\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-absolute header-close\",\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), !selectedPicture && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: elementRef,\n          className: \"camera-area camera-view-finder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 43\n        }, this), selectedPicture && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-area camera-frame\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera-frame-preview-actions w-100 position-absolute bottom-0 py-2 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success me-3\",\n              title: LocalizeText('camera.editor.button.tooltip'),\n              onClick: onEdit,\n              children: LocalizeText('camera.editor.button.text')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: onDelete,\n              children: LocalizeText('camera.delete.button.text')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera-button\",\n            title: LocalizeText('camera.take.photo.button.tooltip'),\n            onClick: takePicture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), cameraRoll.length > 0 && /*#__PURE__*/_jsxDEV(Flex, {\n        gap: 2,\n        justifyContent: \"center\",\n        className: \"camera-roll d-flex justify-content-center py-2\",\n        children: cameraRoll.map((picture, index) => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: picture.imageUrl,\n            onClick: event => setSelectedPictureIndex(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CameraWidgetCaptureView, \"y/9bFMiVnK4JZ0w47b6/OZKhjTM=\", false, function () {\n  return [useCameraWidgetContext];\n});\n\n_c = CameraWidgetCaptureView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CameraWidgetCaptureView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/camera/views/capture/CameraWidgetCaptureView.tsx"],"names":["NitroRectangle","TextureUtils","useCallback","useRef","GetRoomEngine","GetRoomSession","LocalizeText","NotificationUtilities","PlaySound","SoundNames","Column","DraggableWindow","Flex","useCameraWidgetContext","CameraPicture","CAMERA_ROLL_LIMIT","CameraWidgetCaptureView","props","onClose","onEdit","onDelete","cameraRoll","setCameraRoll","selectedPictureIndex","setSelectedPictureIndex","elementRef","selectedPicture","getCameraBounds","current","frameBounds","getBoundingClientRect","Math","floor","x","y","width","height","takePicture","texture","createTextureFromRoom","roomId","clone","length","simpleAlert","pop","CAMERA_SHUTTER","push","generateImageUrl","imageUrl","map","picture","index","event"],"mappings":";;;AACA,SAASA,cAAT,EAAyBC,YAAzB,QAA6C,yBAA7C;AACA,SAAaC,WAAb,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,YAAxC,EAAsDC,qBAAtD,EAA6EC,SAA7E,EAAwFC,UAAxF,QAA0G,iBAA1G;AACA,SAASC,MAAT,EAAiBC,eAAjB,EAAkCC,IAAlC,QAA8C,oBAA9C;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,aAAT,QAA8B,4BAA9B;;AASA,MAAMC,iBAAyB,GAAG,CAAlC;AAEA,OAAO,MAAMC,uBAAyD,GAAGC,KAAK,IAC9E;AAAA;;AACI,QAAM;AAAEC,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,MAAM,GAAG,IAA3B;AAAiCC,IAAAA,QAAQ,GAAG;AAA5C,MAAqDH,KAA3D;AACA,QAAM;AAAEI,IAAAA,UAAU,GAAG,IAAf;AAAqBC,IAAAA,aAAa,GAAG,IAArC;AAA2CC,IAAAA,oBAAoB,GAAG,CAAC,CAAnE;AAAsEC,IAAAA,uBAAuB,GAAG;AAAhG,MAAyGX,sBAAsB,EAArI;AACA,QAAMY,UAAU,GAAGtB,MAAM,EAAzB;AAEA,QAAMuB,eAAe,GAAKH,oBAAoB,GAAG,CAAC,CAAzB,GAA8BF,UAAU,CAACE,oBAAD,CAAxC,GAAiE,IAA1F;AAEA,QAAMI,eAAe,GAAGzB,WAAW,CAAC,MACpC;AACI,QAAG,CAACuB,UAAD,IAAe,CAACA,UAAU,CAACG,OAA9B,EAAuC,OAAO,IAAP;AAEvC,UAAMC,WAAW,GAAGJ,UAAU,CAACG,OAAX,CAAmBE,qBAAnB,EAApB;AAEA,WAAO,IAAI9B,cAAJ,CAAmB+B,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACI,CAAvB,CAAnB,EAA8CF,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACK,CAAvB,CAA9C,EAAyEH,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACM,KAAvB,CAAzE,EAAwGJ,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACO,MAAvB,CAAxG,CAAP;AACH,GAPkC,EAOhC,EAPgC,CAAnC;AASA,QAAMC,WAAW,GAAGnC,WAAW,CAAC,MAChC;AACI,QAAGqB,oBAAoB,GAAG,CAAC,CAA3B,EACA;AACIC,MAAAA,uBAAuB,CAAC,CAAC,CAAF,CAAvB;AACA;AACH;;AAED,UAAMc,OAAO,GAAGlC,aAAa,GAAGmC,qBAAhB,CAAsClC,cAAc,GAAGmC,MAAvD,EAA+D,CAA/D,EAAkEb,eAAe,EAAjF,CAAhB;AAEA,UAAMc,KAAK,GAAG,CAAE,GAAGpB,UAAL,CAAd;;AAEA,QAAGoB,KAAK,CAACC,MAAN,IAAgB3B,iBAAnB,EACA;AACIR,MAAAA,qBAAqB,CAACoC,WAAtB,CAAkCrC,YAAY,CAAC,kBAAD,CAA9C;AAEAmC,MAAAA,KAAK,CAACG,GAAN;AACH;;AAEDpC,IAAAA,SAAS,CAACC,UAAU,CAACoC,cAAZ,CAAT;AACAJ,IAAAA,KAAK,CAACK,IAAN,CAAW,IAAIhC,aAAJ,CAAkBwB,OAAlB,EAA2BrC,YAAY,CAAC8C,gBAAb,CAA8BT,OAA9B,CAA3B,CAAX;AAEAhB,IAAAA,aAAa,CAACmB,KAAD,CAAb;AACH,GAvB8B,EAuB5B,CAAEpB,UAAF,EAAcE,oBAAd,EAAoCI,eAApC,EAAqDL,aAArD,EAAoEE,uBAApE,CAvB4B,CAA/B;AAyBA,sBACI,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,sBAA3B;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,SAAS,EAAC,sBAAzB;AAAgD,MAAA,GAAG,EAAG,CAAtD;AAAA,iBACME,eAAe,iBAAI;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAoC,QAAA,GAAG,EAAGA,eAAe,CAACsB;AAA1D;AAAA;AAAA;AAAA;AAAA,cADzB,eAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAgD,UAAA,OAAO,EAAG9B;AAA1D;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEM,CAACQ,eAAD,iBAAoB;AAAK,UAAA,GAAG,EAAGD,UAAX;AAAwB,UAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAF1B,EAGMC,eAAe,iBACb;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,gFAAf;AAAA,oCACI;AAAQ,cAAA,SAAS,EAAC,sBAAlB;AAAyC,cAAA,KAAK,EAAGpB,YAAY,CAAC,8BAAD,CAA7D;AAAgG,cAAA,OAAO,EAAGa,MAA1G;AAAA,wBAAqHb,YAAY,CAAC,2BAAD;AAAjI;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,SAAS,EAAC,gBAAlB;AAAmC,cAAA,OAAO,EAAGc,QAA7C;AAAA,wBAA0Dd,YAAY,CAAC,2BAAD;AAAtE;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJR,eAUI;AAAK,UAAA,SAAS,EAAC,+BAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,KAAK,EAAGA,YAAY,CAAC,kCAAD,CAAnD;AAA0F,YAAA,OAAO,EAAG+B;AAApG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAgBOhB,UAAU,CAACqB,MAAX,GAAoB,CAArB,iBACE,QAAC,IAAD;AAAM,QAAA,GAAG,EAAG,CAAZ;AAAgB,QAAA,cAAc,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,gDAAlD;AAAA,kBACMrB,UAAU,CAAC4B,GAAX,CAAe,CAACC,OAAD,EAAUC,KAAV,KACjB;AACI,8BAAO;AAAK,YAAA,GAAG,EAAC,EAAT;AAA0B,YAAA,GAAG,EAAGD,OAAO,CAACF,QAAxC;AAAmD,YAAA,OAAO,EAAGI,KAAK,IAAI5B,uBAAuB,CAAC2B,KAAD;AAA7F,aAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAHC;AADN;AAAA;AAAA;AAAA;AAAA,cAjBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAtEM;;GAAMnC,uB;UAGsGH,sB;;;KAHtGG,uB","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NitroRectangle, TextureUtils } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useRef } from 'react';\nimport { GetRoomEngine, GetRoomSession, LocalizeText, NotificationUtilities, PlaySound, SoundNames } from '../../../../api';\nimport { Column, DraggableWindow, Flex } from '../../../../common';\nimport { useCameraWidgetContext } from '../../CameraWidgetContext';\nimport { CameraPicture } from '../../common/CameraPicture';\n\nexport interface CameraWidgetCaptureViewProps\n{\n    onClose: () => void;\n    onEdit: () => void;\n    onDelete: () => void;\n}\n\nconst CAMERA_ROLL_LIMIT: number = 5;\n\nexport const CameraWidgetCaptureView: FC<CameraWidgetCaptureViewProps> = props =>\n{\n    const { onClose = null, onEdit = null, onDelete = null } = props;\n    const { cameraRoll = null, setCameraRoll = null, selectedPictureIndex = -1, setSelectedPictureIndex = null } = useCameraWidgetContext();\n    const elementRef = useRef<HTMLDivElement>();\n\n    const selectedPicture = ((selectedPictureIndex > -1) ? cameraRoll[selectedPictureIndex] : null);\n\n    const getCameraBounds = useCallback(() =>\n    {\n        if(!elementRef || !elementRef.current) return null;\n\n        const frameBounds = elementRef.current.getBoundingClientRect();\n        \n        return new NitroRectangle(Math.floor(frameBounds.x), Math.floor(frameBounds.y), Math.floor(frameBounds.width), Math.floor(frameBounds.height));\n    }, []);\n\n    const takePicture = useCallback(() =>\n    {\n        if(selectedPictureIndex > -1)\n        {\n            setSelectedPictureIndex(-1);\n            return;\n        }\n\n        const texture = GetRoomEngine().createTextureFromRoom(GetRoomSession().roomId, 1, getCameraBounds());\n\n        const clone = [ ...cameraRoll ];\n\n        if(clone.length >= CAMERA_ROLL_LIMIT)\n        {\n            NotificationUtilities.simpleAlert(LocalizeText('camera.full.body'));\n\n            clone.pop();\n        }\n\n        PlaySound(SoundNames.CAMERA_SHUTTER);\n        clone.push(new CameraPicture(texture, TextureUtils.generateImageUrl(texture)));\n\n        setCameraRoll(clone);\n    }, [ cameraRoll, selectedPictureIndex, getCameraBounds, setCameraRoll, setSelectedPictureIndex ]);\n\n    return (\n        <DraggableWindow uniqueKey=\"nitro-camera-capture\">\n            <Column center className=\"nitro-camera-capture\" gap={ 0 }>\n                { selectedPicture && <img alt=\"\" className=\"camera-area\" src={ selectedPicture.imageUrl } /> }\n                <div className=\"camera-canvas drag-handler\">\n                    <div className=\"position-absolute header-close\" onClick={ onClose } />\n                    { !selectedPicture && <div ref={ elementRef } className=\"camera-area camera-view-finder\" /> }\n                    { selectedPicture && \n                        <div className=\"camera-area camera-frame\">\n                            <div className=\"camera-frame-preview-actions w-100 position-absolute bottom-0 py-2 text-center\">\n                                <button className=\"btn btn-success me-3\" title={ LocalizeText('camera.editor.button.tooltip') } onClick={ onEdit }>{ LocalizeText('camera.editor.button.text') }</button>\n                                <button className=\"btn btn-danger\" onClick={ onDelete }>{ LocalizeText('camera.delete.button.text') }</button>\n                            </div>\n                        </div> }\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"camera-button\" title={ LocalizeText('camera.take.photo.button.tooltip') } onClick={ takePicture } />\n                    </div>\n                </div>\n                { (cameraRoll.length > 0) &&\n                    <Flex gap={ 2 } justifyContent=\"center\" className=\"camera-roll d-flex justify-content-center py-2\">\n                        { cameraRoll.map((picture, index) =>\n                        {\n                            return <img alt=\"\" key={ index } src={ picture.imageUrl } onClick={ event => setSelectedPictureIndex(index) } />;\n                        }) }\n                    </Flex> }\n            </Column>\n        </DraggableWindow>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}