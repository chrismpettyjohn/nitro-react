{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/conditions/WiredConditionActorIsWearingEffectView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredConditionBaseView } from './WiredConditionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredConditionActorIsWearingEffectView = props => {\n  _s();\n\n  const [effect, setEffect] = useState(-1);\n  const {\n    trigger = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => setIntParams([effect]);\n\n  useEffect(() => {\n    setEffect(trigger.intData.length > 0 ? trigger.intData[0] : 0);\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredConditionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.effectid')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control form-control-sm\",\n        value: effect,\n        onChange: event => setEffect(parseInt(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredConditionActorIsWearingEffectView, \"z1iDDlYpu7JUkbusIerSpa9TPjs=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredConditionActorIsWearingEffectView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredConditionActorIsWearingEffectView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/conditions/WiredConditionActorIsWearingEffectView.tsx"],"names":["useEffect","useState","LocalizeText","WiredFurniType","Column","Text","useWiredContext","WiredConditionBaseView","WiredConditionActorIsWearingEffectView","props","effect","setEffect","trigger","setIntParams","save","intData","length","STUFF_SELECTION_OPTION_NONE","event","parseInt","target","value"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,oBAA7B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;;AAEA,OAAO,MAAMC,sCAA8C,GAAGC,KAAK,IACnE;AAAA;;AACI,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBV,QAAQ,CAAC,CAAC,CAAF,CAAtC;AACA,QAAM;AAAEW,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,YAAY,GAAG;AAAjC,MAA0CP,eAAe,EAA/D;;AAEA,QAAMQ,IAAI,GAAG,MAAMD,YAAY,CAAC,CAAEH,MAAF,CAAD,CAA/B;;AAEAV,EAAAA,SAAS,CAAC,MACV;AACIW,IAAAA,SAAS,CAAEC,OAAO,CAACG,OAAR,CAAgBC,MAAhB,GAAyB,CAA1B,GAA+BJ,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAA/B,GAAoD,CAArD,CAAT;AACH,GAHQ,EAGN,CAAEH,OAAF,CAHM,CAAT;AAKA,sBACI,QAAC,sBAAD;AAAwB,IAAA,aAAa,EAAGT,cAAc,CAACc,2BAAvD;AAAqF,IAAA,eAAe,EAAG,IAAvG;AAA8G,IAAA,IAAI,EAAGH,IAArH;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAeZ,YAAY,CAAC,4BAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,8BAA/B;AAA8D,QAAA,KAAK,EAAGQ,MAAtE;AAA+E,QAAA,QAAQ,EAAGQ,KAAK,IAAIP,SAAS,CAACQ,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAT;AAA5G;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CApBM;;GAAMb,sC;UAGuCF,e;;;KAHvCE,sC","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredConditionBaseView } from './WiredConditionBaseView';\n\nexport const WiredConditionActorIsWearingEffectView: FC<{}> = props =>\n{\n    const [ effect, setEffect ] = useState(-1);\n    const { trigger = null, setIntParams = null } = useWiredContext();\n\n    const save = () => setIntParams([ effect ]);\n\n    useEffect(() =>\n    {\n        setEffect((trigger.intData.length > 0) ? trigger.intData[0] : 0);\n    }, [ trigger ]);\n    \n    return (\n        <WiredConditionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.effectid') }</Text>\n                <input type=\"number\" className=\"form-control form-control-sm\" value={ effect } onChange={ event => setEffect(parseInt(event.target.value)) } />\n            </Column>\n        </WiredConditionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}