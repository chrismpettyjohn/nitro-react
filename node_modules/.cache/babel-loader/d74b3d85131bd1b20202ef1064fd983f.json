{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/navigator/views/room-settings/NavigatorRoomSettingsModTabView.tsx\",\n    _s = $RefreshSig$();\n\nimport { BannedUsersFromRoomEvent, RoomBannedUsersComposer, RoomUnbanUserComposer } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useState } from 'react';\nimport { LocalizeText, SendMessageComposer } from '../../../../api';\nimport { Button, Column, Flex, Grid, Text, UserProfileIconView } from '../../../../common';\nimport { UseMessageEventHook } from '../../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavigatorRoomSettingsModTabView = props => {\n  _s();\n\n  var _bannedUsers$find;\n\n  const {\n    roomData = null,\n    handleChange = null\n  } = props;\n  const [selectedUserId, setSelectedUserId] = useState(-1);\n  const [bannedUsers, setBannedUsers] = useState([]);\n  const onBannedUsersFromRoomEvent = useCallback(event => {\n    const parser = event.getParser();\n    if (!roomData || roomData.roomId !== parser.roomId) return;\n    setBannedUsers(parser.bannedUsers);\n  }, [roomData]);\n  UseMessageEventHook(BannedUsersFromRoomEvent, onBannedUsersFromRoomEvent);\n  const unBanUser = useCallback(userId => {\n    setBannedUsers(prevValue => {\n      const newValue = [...prevValue];\n      const index = newValue.findIndex(value => value.userId === userId);\n      if (index >= 0) newValue.splice(index, 1);\n      return newValue;\n    });\n    SendMessageComposer(new RoomUnbanUserComposer(userId, roomData.roomId));\n    setSelectedUserId(-1);\n  }, [roomData]);\n  useEffect(() => {\n    SendMessageComposer(new RoomBannedUsersComposer(roomData.roomId));\n  }, [roomData.roomId]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    overflow: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      size: 6,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: [LocalizeText('navigator.roomsettings.moderation.banned.users'), \" (\", bannedUsers.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        overflow: \"hidden\",\n        className: \"bg-white rounded list-container p-2\",\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          fullWidth: true,\n          overflow: \"auto\",\n          gap: 1,\n          children: bannedUsers && bannedUsers.length > 0 && bannedUsers.map((user, index) => {\n            return /*#__PURE__*/_jsxDEV(Flex, {\n              shrink: true,\n              alignItems: \"center\",\n              gap: 1,\n              overflow: \"hidden\",\n              children: [/*#__PURE__*/_jsxDEV(UserProfileIconView, {\n                userName: user.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                pointer: true,\n                grow: true,\n                onClick: event => setSelectedUserId(user.userId),\n                children: [\" \", user.userName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: selectedUserId <= 0,\n        onClick: event => unBanUser(selectedUserId),\n        children: [LocalizeText('navigator.roomsettings.moderation.unban'), \" \", selectedUserId > 0 && ((_bannedUsers$find = bannedUsers.find(user => user.userId === selectedUserId)) === null || _bannedUsers$find === void 0 ? void 0 : _bannedUsers$find.userName)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      size: 6,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: LocalizeText('navigator.roomsettings.moderation.mute.header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            checked: roomData.moderationSettings.allowMute === 1,\n            onChange: event => handleChange('moderation_mute', event.target.checked ? 1 : 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.moderation.rights')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: LocalizeText('navigator.roomsettings.moderation.kick.header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            checked: roomData.moderationSettings.allowKick === 0,\n            onChange: event => handleChange('moderation_kick', event.target.checked ? 0 : 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.moderation.all')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            checked: roomData.moderationSettings.allowKick === 1 || roomData.moderationSettings.allowKick === 0,\n            disabled: roomData.moderationSettings.allowKick === 0,\n            onChange: event => handleChange('moderation_kick', event.target.checked ? 1 : 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.moderation.rights')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: LocalizeText('navigator.roomsettings.moderation.ban.header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            checked: roomData.moderationSettings.allowBan === 1,\n            onChange: event => handleChange('moderation_ban', event.target.checked ? 1 : 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.moderation.rights')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavigatorRoomSettingsModTabView, \"ix2I/O5clCyg7CvSRmOXpplWaQE=\");\n\n_c = NavigatorRoomSettingsModTabView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigatorRoomSettingsModTabView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/navigator/views/room-settings/NavigatorRoomSettingsModTabView.tsx"],"names":["BannedUsersFromRoomEvent","RoomBannedUsersComposer","RoomUnbanUserComposer","useCallback","useEffect","useState","LocalizeText","SendMessageComposer","Button","Column","Flex","Grid","Text","UserProfileIconView","UseMessageEventHook","NavigatorRoomSettingsModTabView","props","roomData","handleChange","selectedUserId","setSelectedUserId","bannedUsers","setBannedUsers","onBannedUsersFromRoomEvent","event","parser","getParser","roomId","unBanUser","userId","prevValue","newValue","index","findIndex","value","splice","length","map","user","userName","find","moderationSettings","allowMute","target","checked","allowKick","allowBan"],"mappings":"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","sourcesContent":["import { BannedUserData, BannedUsersFromRoomEvent, RoomBannedUsersComposer, RoomUnbanUserComposer } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { IRoomData, LocalizeText, SendMessageComposer } from '../../../../api';\nimport { Button, Column, Flex, Grid, Text, UserProfileIconView } from '../../../../common';\nimport { UseMessageEventHook } from '../../../../hooks';\n\ninterface NavigatorRoomSettingsTabViewProps\n{\n    roomData: IRoomData;\n    handleChange: (field: string, value: string | number | boolean) => void;\n}\n\nexport const NavigatorRoomSettingsModTabView: FC<NavigatorRoomSettingsTabViewProps> = props =>\n{\n    const { roomData = null, handleChange = null } = props;\n    const [ selectedUserId, setSelectedUserId ] = useState<number>(-1);\n    const [ bannedUsers, setBannedUsers ] = useState<BannedUserData[]>([]);\n\n    const onBannedUsersFromRoomEvent = useCallback((event: BannedUsersFromRoomEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(!roomData || (roomData.roomId !== parser.roomId)) return;\n\n        setBannedUsers(parser.bannedUsers);\n    }, [ roomData ]);\n\n    UseMessageEventHook(BannedUsersFromRoomEvent, onBannedUsersFromRoomEvent);\n\n    const unBanUser = useCallback((userId: number) =>\n    {\n        setBannedUsers(prevValue =>\n        {\n            const newValue = [ ...prevValue ];\n\n            const index = newValue.findIndex(value => (value.userId === userId));\n\n            if(index >= 0) newValue.splice(index, 1);\n\n            return newValue;\n        })\n\n        SendMessageComposer(new RoomUnbanUserComposer(userId, roomData.roomId));\n\n        setSelectedUserId(-1);\n    }, [ roomData ]);\n\n    useEffect(() =>\n    {\n        SendMessageComposer(new RoomBannedUsersComposer(roomData.roomId));\n    }, [ roomData.roomId ]);\n\n    return (\n        <Grid overflow=\"auto\">\n            <Column size={ 6 }>\n                <Text bold>{ LocalizeText('navigator.roomsettings.moderation.banned.users') } ({ bannedUsers.length })</Text>\n                <Flex overflow=\"hidden\" className=\"bg-white rounded list-container p-2\">\n                    <Column fullWidth overflow=\"auto\" gap={ 1 }>\n                        { bannedUsers && (bannedUsers.length > 0) && bannedUsers.map((user, index) =>\n                        {\n                            return (\n                                <Flex key={ index } shrink alignItems=\"center\" gap={ 1 } overflow=\"hidden\">\n                                    <UserProfileIconView userName={ user.userName } />\n                                    <Text pointer grow onClick={ event => setSelectedUserId(user.userId) }> { user.userName }</Text>\n                                </Flex>\n                            );\n                        }) }\n                    </Column>\n                </Flex>\n                <Button disabled={ (selectedUserId <= 0) } onClick={ event => unBanUser(selectedUserId) }>\n                    { LocalizeText('navigator.roomsettings.moderation.unban') } { selectedUserId > 0 && bannedUsers.find(user => (user.userId === selectedUserId))?.userName }\n                </Button>\n            </Column>\n            <Column size={ 6 }>\n                <Column gap={ 1 }>\n                    <Text bold>{ LocalizeText('navigator.roomsettings.moderation.mute.header') }</Text>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={ (roomData.moderationSettings.allowMute === 1) } onChange={ event => handleChange('moderation_mute', (event.target.checked ? 1 : 0)) } />\n                        <Text>{ LocalizeText('navigator.roomsettings.moderation.rights') }</Text>\n                    </Flex>\n                </Column>\n                <Column gap={ 1 }>\n                    <Text bold>{ LocalizeText('navigator.roomsettings.moderation.kick.header') }</Text>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={ (roomData.moderationSettings.allowKick === 0) } onChange={ event => handleChange('moderation_kick', (event.target.checked ? 0 : 2)) } />\n                        <Text>{ LocalizeText('navigator.roomsettings.moderation.all') }</Text>\n                    </Flex>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={ ((roomData.moderationSettings.allowKick === 1) || (roomData.moderationSettings.allowKick === 0)) } disabled={ (roomData.moderationSettings.allowKick === 0) } onChange={ event => handleChange('moderation_kick', (event.target.checked ? 1 : 2)) } />\n                        <Text>{ LocalizeText('navigator.roomsettings.moderation.rights') }</Text>\n                    </Flex>\n                </Column>\n                <Column gap={ 1 }>\n                    <Text bold>{ LocalizeText('navigator.roomsettings.moderation.ban.header') }</Text>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={ (roomData.moderationSettings.allowBan === 1) } onChange={ event => handleChange('moderation_ban', (event.target.checked ? 1 : 0)) } />\n                        <Text>{ LocalizeText('navigator.roomsettings.moderation.rights') }</Text>\n                    </Flex>\n                </Column>\n            </Column>\n        </Grid>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}