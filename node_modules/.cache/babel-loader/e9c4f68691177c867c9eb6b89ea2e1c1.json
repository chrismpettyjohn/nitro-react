{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/room/widgets/object-location/ObjectLocationView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { GetNitroInstance, GetRoomObjectBounds, GetRoomSession } from '../../../../api';\nimport { Base } from '../../../../common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ObjectLocationView = props => {\n  _s();\n\n  const {\n    objectId = -1,\n    category = -1,\n    noFollow = false,\n    position = 'absolute',\n    ...rest\n  } = props;\n  const [pos, setPos] = useState({\n    x: -1,\n    y: -1\n  });\n  const elementRef = useRef();\n  const getObjectLocation = useCallback(() => {\n    const roomSession = GetRoomSession();\n    const objectBounds = GetRoomObjectBounds(roomSession.roomId, objectId, category, 1);\n    return objectBounds;\n  }, [objectId, category]);\n  const updatePosition = useCallback(() => {\n    const bounds = getObjectLocation();\n    if (!bounds || !elementRef.current) return;\n    setPos({\n      x: Math.round(bounds.left + bounds.width / 2 - elementRef.current.offsetWidth / 2),\n      y: Math.round(bounds.top - elementRef.current.offsetHeight + 10)\n    });\n  }, [getObjectLocation]);\n  useEffect(() => {\n    let remove = false;\n\n    if (noFollow) {\n      updatePosition();\n    } else {\n      remove = true;\n      GetNitroInstance().ticker.add(updatePosition);\n    }\n\n    return () => {\n      if (remove) GetNitroInstance().ticker.remove(updatePosition);\n    };\n  }, [updatePosition, noFollow]);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    innerRef: elementRef,\n    position: position,\n    visible: pos.x + (elementRef.current ? elementRef.current.offsetWidth : 0) > -1,\n    className: \"object-location\",\n    style: {\n      left: pos.x,\n      top: pos.y\n    },\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ObjectLocationView, \"IL5vYhtGiNMNtw/bVfUVo9J6hAs=\");\n\n_c = ObjectLocationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ObjectLocationView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/room/widgets/object-location/ObjectLocationView.tsx"],"names":["useCallback","useEffect","useRef","useState","GetNitroInstance","GetRoomObjectBounds","GetRoomSession","Base","ObjectLocationView","props","objectId","category","noFollow","position","rest","pos","setPos","x","y","elementRef","getObjectLocation","roomSession","objectBounds","roomId","updatePosition","bounds","current","Math","round","left","width","offsetWidth","top","offsetHeight","remove","ticker","add"],"mappings":";;;AAAA,SAAaA,WAAb,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,cAAhD,QAAsE,iBAAtE;AACA,SAASC,IAAT,QAAgC,oBAAhC;;AASA,OAAO,MAAMC,kBAA+C,GAAGC,KAAK,IACpE;AAAA;;AACI,QAAM;AAAEC,IAAAA,QAAQ,GAAG,CAAC,CAAd;AAAiBC,IAAAA,QAAQ,GAAG,CAAC,CAA7B;AAAgCC,IAAAA,QAAQ,GAAG,KAA3C;AAAkDC,IAAAA,QAAQ,GAAG,UAA7D;AAAyE,OAAGC;AAA5E,MAAqFL,KAA3F;AACA,QAAM,CAAEM,GAAF,EAAOC,MAAP,IAAkBb,QAAQ,CAA2B;AAAEc,IAAAA,CAAC,EAAE,CAAC,CAAN;AAASC,IAAAA,CAAC,EAAE,CAAC;AAAb,GAA3B,CAAhC;AACA,QAAMC,UAAU,GAAGjB,MAAM,EAAzB;AAEA,QAAMkB,iBAAiB,GAAGpB,WAAW,CAAC,MACtC;AACI,UAAMqB,WAAW,GAAGf,cAAc,EAAlC;AACA,UAAMgB,YAAY,GAAGjB,mBAAmB,CAACgB,WAAW,CAACE,MAAb,EAAqBb,QAArB,EAA+BC,QAA/B,EAAyC,CAAzC,CAAxC;AAEA,WAAOW,YAAP;AACH,GANoC,EAMlC,CAAEZ,QAAF,EAAYC,QAAZ,CANkC,CAArC;AAQA,QAAMa,cAAc,GAAGxB,WAAW,CAAC,MACnC;AACI,UAAMyB,MAAM,GAAGL,iBAAiB,EAAhC;AAEA,QAAG,CAACK,MAAD,IAAW,CAACN,UAAU,CAACO,OAA1B,EAAmC;AAEnCV,IAAAA,MAAM,CAAC;AACHC,MAAAA,CAAC,EAAEU,IAAI,CAACC,KAAL,CAAaH,MAAM,CAACI,IAAP,GAAeJ,MAAM,CAACK,KAAP,GAAe,CAA/B,GAAsCX,UAAU,CAACO,OAAX,CAAmBK,WAAnB,GAAiC,CAAnF,CADA;AAEHb,MAAAA,CAAC,EAAES,IAAI,CAACC,KAAL,CAAYH,MAAM,CAACO,GAAP,GAAab,UAAU,CAACO,OAAX,CAAmBO,YAAjC,GAAiD,EAA5D;AAFA,KAAD,CAAN;AAIH,GAViC,EAU/B,CAAEb,iBAAF,CAV+B,CAAlC;AAYAnB,EAAAA,SAAS,CAAC,MACV;AACI,QAAIiC,MAAM,GAAG,KAAb;;AAEA,QAAGtB,QAAH,EACA;AACIY,MAAAA,cAAc;AACjB,KAHD,MAKA;AACIU,MAAAA,MAAM,GAAG,IAAT;AAEA9B,MAAAA,gBAAgB,GAAG+B,MAAnB,CAA0BC,GAA1B,CAA8BZ,cAA9B;AACH;;AAED,WAAO,MACP;AACI,UAAGU,MAAH,EAAW9B,gBAAgB,GAAG+B,MAAnB,CAA0BD,MAA1B,CAAiCV,cAAjC;AACd,KAHD;AAIH,GAnBQ,EAmBN,CAAEA,cAAF,EAAkBZ,QAAlB,CAnBM,CAAT;AAqBA,sBAAO,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAGO,UAAjB;AAA8B,IAAA,QAAQ,EAAGN,QAAzC;AAAoD,IAAA,OAAO,EAAIE,GAAG,CAACE,CAAJ,IAASE,UAAU,CAACO,OAAX,GAAqBP,UAAU,CAACO,OAAX,CAAmBK,WAAxC,GAAsD,CAA/D,CAAD,GAAsE,CAAC,CAArI;AAAyI,IAAA,SAAS,EAAC,iBAAnJ;AAAqK,IAAA,KAAK,EAAG;AAAEF,MAAAA,IAAI,EAAEd,GAAG,CAACE,CAAZ;AAAee,MAAAA,GAAG,EAAEjB,GAAG,CAACG;AAAxB,KAA7K;AAAA,OAAgNJ;AAAhN;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAhDM;;GAAMN,kB;;KAAAA,kB","sourcesContent":["import { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { GetNitroInstance, GetRoomObjectBounds, GetRoomSession } from '../../../../api';\nimport { Base, BaseProps } from '../../../../common';\n\ninterface ObjectLocationViewProps extends BaseProps<HTMLDivElement>\n{\n    objectId: number;\n    category: number;\n    noFollow?: boolean;\n}\n\nexport const ObjectLocationView: FC<ObjectLocationViewProps> = props =>\n{\n    const { objectId = -1, category = -1, noFollow = false, position = 'absolute', ...rest } = props;\n    const [ pos, setPos ] = useState<{ x: number, y: number }>({ x: -1, y: -1 });\n    const elementRef = useRef<HTMLDivElement>();\n\n    const getObjectLocation = useCallback(() =>\n    {\n        const roomSession = GetRoomSession();\n        const objectBounds = GetRoomObjectBounds(roomSession.roomId, objectId, category, 1);\n\n        return objectBounds;\n    }, [ objectId, category ]);\n\n    const updatePosition = useCallback(() =>\n    {\n        const bounds = getObjectLocation();\n\n        if(!bounds || !elementRef.current) return;\n\n        setPos({\n            x: Math.round(((bounds.left + (bounds.width / 2)) - (elementRef.current.offsetWidth / 2))),\n            y: Math.round((bounds.top - elementRef.current.offsetHeight) + 10)\n        });\n    }, [ getObjectLocation ]);\n\n    useEffect(() =>\n    {\n        let remove = false;\n\n        if(noFollow)\n        {\n            updatePosition();\n        }\n        else\n        {\n            remove = true;\n\n            GetNitroInstance().ticker.add(updatePosition);\n        }\n\n        return () =>\n        {\n            if(remove) GetNitroInstance().ticker.remove(updatePosition);\n        }\n    }, [ updatePosition, noFollow ]);\n\n    return <Base innerRef={ elementRef } position={ position } visible={ (pos.x + (elementRef.current ? elementRef.current.offsetWidth : 0)) > -1 } className=\"object-location\" style={ { left: pos.x, top: pos.y } } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}