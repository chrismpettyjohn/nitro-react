{"ast":null,"code":"import { AvatarEffect } from '../../../incoming/inventory/avatareffect/AvatarEffect';\nexport class AvatarEffectsParser {\n  constructor() {\n    this._effects = void 0;\n  }\n\n  flush() {\n    this._effects = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    let totalEffects = wrapper.readInt();\n\n    while (totalEffects > 0) {\n      const effect = new AvatarEffect();\n      effect.type = wrapper.readInt();\n      effect.subType = wrapper.readInt();\n      effect.duration = wrapper.readInt();\n      effect.inactiveEffectsInInventory = wrapper.readInt();\n      effect.secondsLeftIfActive = wrapper.readInt();\n      effect.isPermanent = wrapper.readBoolean();\n\n      this._effects.push(effect);\n\n      totalEffects--;\n    }\n\n    return true;\n  }\n\n  get effects() {\n    return this._effects;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/inventory/avatareffect/AvatarEffectsParser.ts"],"names":["AvatarEffect","AvatarEffectsParser","_effects","flush","parse","wrapper","totalEffects","readInt","effect","type","subType","duration","inactiveEffectsInInventory","secondsLeftIfActive","isPermanent","readBoolean","push","effects"],"mappings":"AACA,SAASA,YAAT,QAA6B,uDAA7B;AAEA,OAAO,MAAMC,mBAAN,CACP;AAAA;AAAA,SACYC,QADZ;AAAA;;AAGWC,EAAAA,KAAK,GACZ;AACI,SAAKD,QAAL,GAAgB,EAAhB;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,QAAIC,YAAY,GAAGD,OAAO,CAACE,OAAR,EAAnB;;AAEA,WAAMD,YAAY,GAAG,CAArB,EACA;AACI,YAAME,MAAM,GAAG,IAAIR,YAAJ,EAAf;AAEAQ,MAAAA,MAAM,CAACC,IAAP,GAAcJ,OAAO,CAACE,OAAR,EAAd;AACAC,MAAAA,MAAM,CAACE,OAAP,GAAiBL,OAAO,CAACE,OAAR,EAAjB;AACAC,MAAAA,MAAM,CAACG,QAAP,GAAkBN,OAAO,CAACE,OAAR,EAAlB;AACAC,MAAAA,MAAM,CAACI,0BAAP,GAAoCP,OAAO,CAACE,OAAR,EAApC;AACAC,MAAAA,MAAM,CAACK,mBAAP,GAA6BR,OAAO,CAACE,OAAR,EAA7B;AACAC,MAAAA,MAAM,CAACM,WAAP,GAAqBT,OAAO,CAACU,WAAR,EAArB;;AAEA,WAAKb,QAAL,CAAcc,IAAd,CAAmBR,MAAnB;;AAEAF,MAAAA,YAAY;AACf;;AAED,WAAO,IAAP;AACH;;AAEiB,MAAPW,OAAO,GAClB;AACI,WAAO,KAAKf,QAAZ;AACH;;AAtCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\nimport { AvatarEffect } from '../../../incoming/inventory/avatareffect/AvatarEffect';\r\n\r\nexport class AvatarEffectsParser implements IMessageParser\r\n{\r\n    private _effects: AvatarEffect[];\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._effects = [];\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        let totalEffects = wrapper.readInt();\r\n\r\n        while(totalEffects > 0)\r\n        {\r\n            const effect = new AvatarEffect();\r\n\r\n            effect.type = wrapper.readInt();\r\n            effect.subType = wrapper.readInt();\r\n            effect.duration = wrapper.readInt();\r\n            effect.inactiveEffectsInInventory = wrapper.readInt();\r\n            effect.secondsLeftIfActive = wrapper.readInt();\r\n            effect.isPermanent = wrapper.readBoolean();\r\n\r\n            this._effects.push(effect);\r\n\r\n            totalEffects--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get effects(): AvatarEffect[]\r\n    {\r\n        return this._effects;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}