{"ast":null,"code":"import { BLEND_MODES } from '@pixi/constants';\nimport { Texture } from '@pixi/core';\nimport { AlphaTolerance } from '../enum/AlphaTolerance';\nimport { RoomObjectSpriteType } from '../enum/RoomObjectSpriteType';\nexport class RoomObjectSprite {\n  constructor() {\n    this._id = void 0;\n    this._name = void 0;\n    this._type = void 0;\n    this._spriteType = void 0;\n    this._texture = void 0;\n    this._container = void 0;\n    this._width = void 0;\n    this._height = void 0;\n    this._offsetX = void 0;\n    this._offsetY = void 0;\n    this._flipH = void 0;\n    this._flipV = void 0;\n    this._direction = void 0;\n    this._alpha = void 0;\n    this._blendMode = void 0;\n    this._color = void 0;\n    this._relativeDepth = void 0;\n    this._varyingDepth = void 0;\n    this._libraryAssetName = void 0;\n    this._clickHandling = void 0;\n    this._visible = void 0;\n    this._tag = void 0;\n    this._posture = void 0;\n    this._alphaTolerance = void 0;\n    this._filters = void 0;\n    this._updateCounter = void 0;\n    this._updateContainer = void 0;\n    this._id = RoomObjectSprite.SPRITE_COUNTER++;\n    this._name = '';\n    this._type = '';\n    this._spriteType = RoomObjectSpriteType.DEFAULT;\n    this._texture = null;\n    this._container = null;\n    this._width = 0;\n    this._height = 0;\n    this._offsetX = 0;\n    this._offsetY = 0;\n    this._flipH = false;\n    this._flipV = false;\n    this._direction = 0;\n    this._alpha = 255;\n    this._blendMode = BLEND_MODES.NORMAL;\n    this._color = 0xFFFFFF;\n    this._relativeDepth = 0;\n    this._varyingDepth = false;\n    this._libraryAssetName = '';\n    this._clickHandling = false;\n    this._visible = true;\n    this._tag = '';\n    this._posture = null;\n    this._alphaTolerance = AlphaTolerance.MATCH_OPAQUE_PIXELS;\n    this._filters = [];\n    this._updateCounter = 0;\n    this._updateContainer = false;\n  }\n\n  dispose() {\n    this._texture = null;\n    this._width = 0;\n    this._height = 0;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  set name(name) {\n    if (this._name === name) return;\n    this._name = name;\n    this._updateCounter++;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  set type(type) {\n    this._type = type;\n  }\n\n  get spriteType() {\n    return this._spriteType;\n  }\n\n  set spriteType(type) {\n    this._spriteType = type;\n  }\n\n  get texture() {\n    return this._texture;\n  }\n\n  set texture(texture) {\n    if (this._texture === texture) return;\n\n    if (texture) {\n      this._width = texture.width;\n      this._height = texture.height;\n    }\n\n    this._texture = texture;\n    this._updateCounter++;\n  }\n\n  get container() {\n    return this._container;\n  }\n\n  set container(container) {\n    if (this._container === container) return;\n    this.texture = Texture.EMPTY;\n\n    if (container) {\n      this._width = container.width;\n      this._height = container.height;\n    }\n\n    this._container = container;\n    this._updateCounter++;\n    this._updateContainer = true;\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  set offsetX(x) {\n    if (this._offsetX === x) return;\n    this._offsetX = x;\n    this._updateCounter++;\n  }\n\n  get offsetY() {\n    return this._offsetY;\n  }\n\n  set offsetY(y) {\n    if (this._offsetY === y) return;\n    this._offsetY = y;\n    this._updateCounter++;\n  }\n\n  get flipH() {\n    return this._flipH;\n  }\n\n  set flipH(flip) {\n    if (this._flipH === flip) return;\n    this._flipH = flip;\n    this._updateCounter++;\n  }\n\n  get flipV() {\n    return this._flipV;\n  }\n\n  set flipV(flip) {\n    if (this._flipV === flip) return;\n    this._flipV = flip;\n    this._updateCounter++;\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  set direction(direction) {\n    this._direction = direction;\n  }\n\n  get alpha() {\n    return this._alpha;\n  }\n\n  set alpha(alpha) {\n    alpha = alpha & 0xFF;\n    if (this._alpha === alpha) return;\n    this._alpha = alpha;\n    this._updateCounter++;\n  }\n\n  get blendMode() {\n    return this._blendMode;\n  }\n\n  set blendMode(blend) {\n    if (this._blendMode === blend) return;\n    this._blendMode = blend;\n    this._updateCounter++;\n  }\n\n  get color() {\n    return this._color;\n  }\n\n  set color(color) {\n    color = color & 0xFFFFFF;\n    if (this._color === color) return;\n    this._color = color;\n    this._updateCounter++;\n  }\n\n  get relativeDepth() {\n    return this._relativeDepth;\n  }\n\n  set relativeDepth(depth) {\n    if (this._relativeDepth === depth) return;\n    this._relativeDepth = depth;\n    this._updateCounter++;\n  }\n\n  get varyingDepth() {\n    return this._varyingDepth;\n  }\n\n  set varyingDepth(flag) {\n    if (flag === this._varyingDepth) return;\n    this._varyingDepth = flag;\n    this._updateCounter++;\n  }\n\n  get libraryAssetName() {\n    return this._libraryAssetName;\n  }\n\n  set libraryAssetName(value) {\n    this._libraryAssetName = value;\n  }\n\n  get clickHandling() {\n    return this._clickHandling;\n  }\n\n  set clickHandling(flag) {\n    this._clickHandling = flag;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  set visible(visible) {\n    if (this._visible === visible) return;\n    this._visible = visible;\n    this._updateCounter++;\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  set tag(tag) {\n    if (this._tag === tag) return;\n    this._tag = tag;\n    this._updateCounter++;\n  }\n\n  get posture() {\n    return this._posture;\n  }\n\n  set posture(posture) {\n    if (this._posture === posture) return;\n    this._posture = posture;\n    this._updateCounter++;\n  }\n\n  get alphaTolerance() {\n    return this._alphaTolerance;\n  }\n\n  set alphaTolerance(tolerance) {\n    if (this._alphaTolerance === tolerance) return;\n    this._alphaTolerance = tolerance;\n    this._updateCounter++;\n  }\n\n  get filters() {\n    return this._filters;\n  }\n\n  set filters(filters) {\n    this._filters = filters;\n    this._updateCounter++;\n  }\n\n  get updateCounter() {\n    return this._updateCounter;\n  }\n\n  get updateContainer() {\n    return this._updateContainer;\n  }\n\n  set updateContainer(flag) {\n    this._updateContainer = flag;\n  }\n\n}\nRoomObjectSprite.SPRITE_COUNTER = 0;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/room/object/visualization/RoomObjectSprite.ts"],"names":["BLEND_MODES","Texture","AlphaTolerance","RoomObjectSpriteType","RoomObjectSprite","constructor","_id","_name","_type","_spriteType","_texture","_container","_width","_height","_offsetX","_offsetY","_flipH","_flipV","_direction","_alpha","_blendMode","_color","_relativeDepth","_varyingDepth","_libraryAssetName","_clickHandling","_visible","_tag","_posture","_alphaTolerance","_filters","_updateCounter","_updateContainer","SPRITE_COUNTER","DEFAULT","NORMAL","MATCH_OPAQUE_PIXELS","dispose","id","name","type","spriteType","texture","width","height","container","EMPTY","offsetX","x","offsetY","y","flipH","flip","flipV","direction","alpha","blendMode","blend","color","relativeDepth","depth","varyingDepth","flag","libraryAssetName","value","clickHandling","visible","tag","posture","alphaTolerance","tolerance","filters","updateCounter","updateContainer"],"mappings":"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","sourcesContent":["import { BLEND_MODES } from '@pixi/constants';\r\nimport { Filter, Resource, Texture } from '@pixi/core';\r\nimport { Container } from '@pixi/display';\r\nimport { AlphaTolerance } from '../enum/AlphaTolerance';\r\nimport { RoomObjectSpriteType } from '../enum/RoomObjectSpriteType';\r\nimport { IRoomObjectSprite } from './IRoomObjectSprite';\r\n\r\nexport class RoomObjectSprite implements IRoomObjectSprite\r\n{\r\n    private static SPRITE_COUNTER: number = 0;\r\n\r\n    private _id: number;\r\n    private _name: string;\r\n    private _type: string;\r\n    private _spriteType: number;\r\n    private _texture: Texture<Resource>;\r\n    private _container: Container;\r\n\r\n    private _width: number;\r\n    private _height: number;\r\n    private _offsetX: number;\r\n    private _offsetY: number;\r\n    private _flipH: boolean;\r\n    private _flipV: boolean;\r\n    private _direction: number;\r\n\r\n    private _alpha: number;\r\n    private _blendMode: number;\r\n    private _color: number;\r\n    private _relativeDepth: number;\r\n    private _varyingDepth: boolean;\r\n    private _libraryAssetName: string;\r\n    private _clickHandling: boolean;\r\n    private _visible: boolean;\r\n    private _tag: string;\r\n    private _posture: string;\r\n    private _alphaTolerance: number;\r\n    private _filters: Filter[];\r\n\r\n    private _updateCounter: number;\r\n    private _updateContainer: boolean;\r\n\r\n    constructor()\r\n    {\r\n        this._id = RoomObjectSprite.SPRITE_COUNTER++;\r\n        this._name = '';\r\n        this._type = '';\r\n        this._spriteType = RoomObjectSpriteType.DEFAULT;\r\n        this._texture = null;\r\n        this._container = null;\r\n\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._offsetX = 0;\r\n        this._offsetY = 0;\r\n        this._flipH = false;\r\n        this._flipV = false;\r\n        this._direction = 0;\r\n\r\n        this._alpha = 255;\r\n        this._blendMode = BLEND_MODES.NORMAL;\r\n        this._color = 0xFFFFFF;\r\n        this._relativeDepth = 0;\r\n        this._varyingDepth = false;\r\n        this._libraryAssetName = '';\r\n        this._clickHandling = false;\r\n        this._visible = true;\r\n        this._tag = '';\r\n        this._posture = null;\r\n        this._alphaTolerance = AlphaTolerance.MATCH_OPAQUE_PIXELS;\r\n        this._filters = [];\r\n\r\n        this._updateCounter = 0;\r\n        this._updateContainer = false;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._texture = null;\r\n        this._width = 0;\r\n        this._height = 0;\r\n    }\r\n\r\n    public get id(): number\r\n    {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(id: number)\r\n    {\r\n        this._id = id;\r\n    }\r\n\r\n    public get name(): string\r\n    {\r\n        return this._name;\r\n    }\r\n\r\n    public set name(name: string)\r\n    {\r\n        if(this._name === name) return;\r\n\r\n        this._name = name;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get type(): string\r\n    {\r\n        return this._type;\r\n    }\r\n\r\n    public set type(type: string)\r\n    {\r\n        this._type = type;\r\n    }\r\n\r\n    public get spriteType(): number\r\n    {\r\n        return this._spriteType;\r\n    }\r\n\r\n    public set spriteType(type: number)\r\n    {\r\n        this._spriteType = type;\r\n    }\r\n\r\n    public get texture(): Texture<Resource>\r\n    {\r\n        return this._texture;\r\n    }\r\n\r\n    public set texture(texture: Texture<Resource>)\r\n    {\r\n        if(this._texture === texture) return;\r\n\r\n        if(texture)\r\n        {\r\n            this._width = texture.width;\r\n            this._height = texture.height;\r\n        }\r\n\r\n        this._texture = texture;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get container(): Container\r\n    {\r\n        return this._container;\r\n    }\r\n\r\n    public set container(container: Container)\r\n    {\r\n        if(this._container === container) return;\r\n\r\n        this.texture = Texture.EMPTY;\r\n\r\n        if(container)\r\n        {\r\n            this._width = container.width;\r\n            this._height = container.height;\r\n        }\r\n\r\n        this._container = container;\r\n\r\n        this._updateCounter++;\r\n\r\n        this._updateContainer = true;\r\n    }\r\n\r\n    public get width(): number\r\n    {\r\n        return this._width;\r\n    }\r\n\r\n    public get height(): number\r\n    {\r\n        return this._height;\r\n    }\r\n\r\n    public get offsetX(): number\r\n    {\r\n        return this._offsetX;\r\n    }\r\n\r\n    public set offsetX(x: number)\r\n    {\r\n        if(this._offsetX === x) return;\r\n\r\n        this._offsetX = x;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get offsetY(): number\r\n    {\r\n        return this._offsetY;\r\n    }\r\n\r\n    public set offsetY(y: number)\r\n    {\r\n        if(this._offsetY === y) return;\r\n\r\n        this._offsetY = y;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get flipH(): boolean\r\n    {\r\n        return this._flipH;\r\n    }\r\n\r\n    public set flipH(flip: boolean)\r\n    {\r\n        if(this._flipH === flip) return;\r\n\r\n        this._flipH = flip;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get flipV(): boolean\r\n    {\r\n        return this._flipV;\r\n    }\r\n\r\n    public set flipV(flip: boolean)\r\n    {\r\n        if(this._flipV === flip) return;\r\n\r\n        this._flipV = flip;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get direction(): number\r\n    {\r\n        return this._direction;\r\n    }\r\n\r\n    public set direction(direction: number)\r\n    {\r\n        this._direction = direction;\r\n    }\r\n\r\n    public get alpha(): number\r\n    {\r\n        return this._alpha;\r\n    }\r\n\r\n    public set alpha(alpha: number)\r\n    {\r\n        alpha = (alpha & 0xFF);\r\n\r\n        if(this._alpha === alpha) return;\r\n\r\n        this._alpha = alpha;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get blendMode(): number\r\n    {\r\n        return this._blendMode;\r\n    }\r\n\r\n    public set blendMode(blend: number)\r\n    {\r\n        if(this._blendMode === blend) return;\r\n\r\n        this._blendMode = blend;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get color(): number\r\n    {\r\n        return this._color;\r\n    }\r\n\r\n    public set color(color: number)\r\n    {\r\n        color = (color & 0xFFFFFF);\r\n\r\n        if(this._color === color) return;\r\n\r\n        this._color = color;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get relativeDepth(): number\r\n    {\r\n        return this._relativeDepth;\r\n    }\r\n\r\n    public set relativeDepth(depth: number)\r\n    {\r\n        if(this._relativeDepth === depth) return;\r\n\r\n        this._relativeDepth = depth;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get varyingDepth(): boolean\r\n    {\r\n        return this._varyingDepth;\r\n    }\r\n\r\n    public set varyingDepth(flag: boolean)\r\n    {\r\n        if(flag === this._varyingDepth) return;\r\n\r\n        this._varyingDepth = flag;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get libraryAssetName(): string\r\n    {\r\n        return this._libraryAssetName;\r\n    }\r\n\r\n    public set libraryAssetName(value: string)\r\n    {\r\n        this._libraryAssetName = value;\r\n    }\r\n\r\n    public get clickHandling(): boolean\r\n    {\r\n        return this._clickHandling;\r\n    }\r\n\r\n    public set clickHandling(flag: boolean)\r\n    {\r\n        this._clickHandling = flag;\r\n    }\r\n\r\n    public get visible(): boolean\r\n    {\r\n        return this._visible;\r\n    }\r\n\r\n    public set visible(visible: boolean)\r\n    {\r\n        if(this._visible === visible) return;\r\n\r\n        this._visible = visible;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get tag(): string\r\n    {\r\n        return this._tag;\r\n    }\r\n\r\n    public set tag(tag: string)\r\n    {\r\n        if(this._tag === tag) return;\r\n\r\n        this._tag = tag;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get posture(): string\r\n    {\r\n        return this._posture;\r\n    }\r\n\r\n    public set posture(posture: string)\r\n    {\r\n        if(this._posture === posture) return;\r\n\r\n        this._posture = posture;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get alphaTolerance(): number\r\n    {\r\n        return this._alphaTolerance;\r\n    }\r\n\r\n    public set alphaTolerance(tolerance: number)\r\n    {\r\n        if(this._alphaTolerance === tolerance) return;\r\n\r\n        this._alphaTolerance = tolerance;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get filters(): Filter[]\r\n    {\r\n        return this._filters;\r\n    }\r\n\r\n    public set filters(filters: Filter[])\r\n    {\r\n        this._filters = filters;\r\n\r\n        this._updateCounter++;\r\n    }\r\n\r\n    public get updateCounter(): number\r\n    {\r\n        return this._updateCounter;\r\n    }\r\n\r\n    public get updateContainer(): boolean\r\n    {\r\n        return this._updateContainer;\r\n    }\r\n\r\n    public set updateContainer(flag: boolean)\r\n    {\r\n        this._updateContainer = flag;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}