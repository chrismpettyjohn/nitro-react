{"ast":null,"code":"import { AvatarAction } from '../../../../../avatar/enum/AvatarAction';\nimport { AvatarGuideStatus } from '../../../../../avatar/enum/AvatarGuideStatus';\nexport class GuideStatusBubbleAddition {\n  constructor(id, visualization, status) {\n    this._id = void 0;\n    this._visualization = void 0;\n    this._asset = void 0;\n    this._relativeDepth = void 0;\n    this._status = void 0;\n    this._id = id;\n    this._visualization = visualization;\n    this._asset = null;\n    this._relativeDepth = 0;\n    this._status = status;\n  }\n\n  dispose() {\n    this._visualization = null;\n    this._asset = null;\n  }\n\n  update(sprite, scale) {\n    if (!sprite) return;\n    sprite.visible = true;\n    sprite.relativeDepth = this._relativeDepth;\n    sprite.alpha = 255;\n    let additionScale = 64;\n    let offsetX = 0;\n    let offsetY = 0;\n    this._asset = this._visualization.getAvatarRenderAsset(this._status === AvatarGuideStatus.GUIDE ? 'avatar_addition_user_guide_bubble' : 'avatar_addition_user_guide_requester_bubble');\n\n    if (scale < 48) {\n      offsetX = -19;\n      offsetY = -80;\n      additionScale = 32;\n    } else {\n      offsetX = -19;\n      offsetY = -120;\n    }\n\n    if (this._visualization.posture === AvatarAction.POSTURE_SIT) {\n      offsetY += additionScale / 2;\n    } else if (this._visualization.posture === AvatarAction.POSTURE_LAY) {\n      offsetY += scale;\n    }\n\n    if (this._asset) {\n      sprite.texture = this._asset;\n      sprite.offsetX = offsetX;\n      sprite.offsetY = offsetY;\n      sprite.relativeDepth = -0.02 + 0;\n    }\n  }\n\n  animate(sprite) {\n    if (this._asset && sprite) {\n      sprite.texture = this._asset;\n    }\n\n    return false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get relativeDepth() {\n    return this._relativeDepth;\n  }\n\n  set relativeDepth(depth) {\n    this._relativeDepth = depth;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/avatar/additions/GuideStatusBubbleAddition.ts"],"names":["AvatarAction","AvatarGuideStatus","GuideStatusBubbleAddition","constructor","id","visualization","status","_id","_visualization","_asset","_relativeDepth","_status","dispose","update","sprite","scale","visible","relativeDepth","alpha","additionScale","offsetX","offsetY","getAvatarRenderAsset","GUIDE","posture","POSTURE_SIT","POSTURE_LAY","texture","animate","depth"],"mappings":"AAEA,SAASA,YAAT,QAA6B,yCAA7B;AACA,SAASC,iBAAT,QAAkC,8CAAlC;AAIA,OAAO,MAAMC,yBAAN,CACP;AAOIC,EAAAA,WAAW,CAACC,EAAD,EAAaC,aAAb,EAAiDC,MAAjD,EACX;AAAA,SAPQC,GAOR;AAAA,SANQC,cAMR;AAAA,SALQC,MAKR;AAAA,SAJQC,cAIR;AAAA,SAHQC,OAGR;AACI,SAAKJ,GAAL,GAAWH,EAAX;AACA,SAAKI,cAAL,GAAsBH,aAAtB;AACA,SAAKI,MAAL,GAAc,IAAd;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,OAAL,GAAeL,MAAf;AACH;;AAEMM,EAAAA,OAAO,GACd;AACI,SAAKJ,cAAL,GAAsB,IAAtB;AACA,SAAKC,MAAL,GAAc,IAAd;AACH;;AAEMI,EAAAA,MAAM,CAACC,MAAD,EAA4BC,KAA5B,EACb;AACI,QAAG,CAACD,MAAJ,EAAY;AAEZA,IAAAA,MAAM,CAACE,OAAP,GAAiB,IAAjB;AACAF,IAAAA,MAAM,CAACG,aAAP,GAAuB,KAAKP,cAA5B;AACAI,IAAAA,MAAM,CAACI,KAAP,GAAe,GAAf;AAEA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,CAAd;AAEA,SAAKZ,MAAL,GAAc,KAAKD,cAAL,CAAoBc,oBAApB,CAA0C,KAAKX,OAAL,KAAiBV,iBAAiB,CAACsB,KAApC,GAA6C,mCAA7C,GAAmF,6CAA5H,CAAd;;AAEA,QAAGR,KAAK,GAAG,EAAX,EACA;AACIK,MAAAA,OAAO,GAAG,CAAC,EAAX;AACAC,MAAAA,OAAO,GAAG,CAAC,EAAX;AACAF,MAAAA,aAAa,GAAG,EAAhB;AACH,KALD,MAOA;AACIC,MAAAA,OAAO,GAAG,CAAC,EAAX;AACAC,MAAAA,OAAO,GAAG,CAAC,GAAX;AACH;;AAED,QAAG,KAAKb,cAAL,CAAoBgB,OAApB,KAAgCxB,YAAY,CAACyB,WAAhD,EACA;AACIJ,MAAAA,OAAO,IAAKF,aAAa,GAAG,CAA5B;AACH,KAHD,MAKK,IAAG,KAAKX,cAAL,CAAoBgB,OAApB,KAAgCxB,YAAY,CAAC0B,WAAhD,EACL;AACIL,MAAAA,OAAO,IAAIN,KAAX;AACH;;AAED,QAAG,KAAKN,MAAR,EACA;AACIK,MAAAA,MAAM,CAACa,OAAP,GAAiB,KAAKlB,MAAtB;AACAK,MAAAA,MAAM,CAACM,OAAP,GAAiBA,OAAjB;AACAN,MAAAA,MAAM,CAACO,OAAP,GAAiBA,OAAjB;AACAP,MAAAA,MAAM,CAACG,aAAP,GAAwB,CAAC,IAAD,GAAQ,CAAhC;AACH;AACJ;;AAEMW,EAAAA,OAAO,CAACd,MAAD,EACd;AACI,QAAG,KAAKL,MAAL,IAAeK,MAAlB,EACA;AACIA,MAAAA,MAAM,CAACa,OAAP,GAAiB,KAAKlB,MAAtB;AACH;;AAED,WAAO,KAAP;AACH;;AAEY,MAAFL,EAAE,GACb;AACI,WAAO,KAAKG,GAAZ;AACH;;AAEuB,MAAbU,aAAa,GACxB;AACI,WAAO,KAAKP,cAAZ;AACH;;AAEuB,MAAbO,aAAa,CAACY,KAAD,EACxB;AACI,SAAKnB,cAAL,GAAsBmB,KAAtB;AACH;;AA1FL","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { IRoomObjectSprite } from '../../../../../../room/object/visualization/IRoomObjectSprite';\r\nimport { AvatarAction } from '../../../../../avatar/enum/AvatarAction';\r\nimport { AvatarGuideStatus } from '../../../../../avatar/enum/AvatarGuideStatus';\r\nimport { AvatarVisualization } from '../AvatarVisualization';\r\nimport { IAvatarAddition } from './IAvatarAddition';\r\n\r\nexport class GuideStatusBubbleAddition implements IAvatarAddition\r\n{\r\n    private _id: number;\r\n    private _visualization: AvatarVisualization;\r\n    private _asset: Texture<Resource>;\r\n    private _relativeDepth: number;\r\n    private _status: number;\r\n\r\n    constructor(id: number, visualization: AvatarVisualization, status: number)\r\n    {\r\n        this._id = id;\r\n        this._visualization = visualization;\r\n        this._asset = null;\r\n        this._relativeDepth = 0;\r\n        this._status = status;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._visualization = null;\r\n        this._asset = null;\r\n    }\r\n\r\n    public update(sprite: IRoomObjectSprite, scale: number): void\r\n    {\r\n        if(!sprite) return;\r\n\r\n        sprite.visible = true;\r\n        sprite.relativeDepth = this._relativeDepth;\r\n        sprite.alpha = 255;\r\n\r\n        let additionScale = 64;\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n\r\n        this._asset = this._visualization.getAvatarRenderAsset((this._status === AvatarGuideStatus.GUIDE) ? 'avatar_addition_user_guide_bubble' : 'avatar_addition_user_guide_requester_bubble');\r\n\r\n        if(scale < 48)\r\n        {\r\n            offsetX = -19;\r\n            offsetY = -80;\r\n            additionScale = 32;\r\n        }\r\n        else\r\n        {\r\n            offsetX = -19;\r\n            offsetY = -120;\r\n        }\r\n\r\n        if(this._visualization.posture === AvatarAction.POSTURE_SIT)\r\n        {\r\n            offsetY += (additionScale / 2);\r\n        }\r\n\r\n        else if(this._visualization.posture === AvatarAction.POSTURE_LAY)\r\n        {\r\n            offsetY += scale;\r\n        }\r\n\r\n        if(this._asset)\r\n        {\r\n            sprite.texture = this._asset;\r\n            sprite.offsetX = offsetX;\r\n            sprite.offsetY = offsetY;\r\n            sprite.relativeDepth = (-0.02 + 0);\r\n        }\r\n    }\r\n\r\n    public animate(sprite: IRoomObjectSprite): boolean\r\n    {\r\n        if(this._asset && sprite)\r\n        {\r\n            sprite.texture = this._asset;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public get id(): number\r\n    {\r\n        return this._id;\r\n    }\r\n\r\n    public get relativeDepth(): number\r\n    {\r\n        return this._relativeDepth;\r\n    }\r\n\r\n    public set relativeDepth(depth: number)\r\n    {\r\n        this._relativeDepth = depth;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}