{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/card/NitroCardContentView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Column } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NitroCardContentView = props => {\n  _s();\n\n  const {\n    overflow = 'auto',\n    classNames = [],\n    ...rest\n  } = props;\n  const getClassNames = useMemo(() => {\n    const newClassNames = ['container-fluid', 'content-area'];\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [classNames]);\n  return /*#__PURE__*/_jsxDEV(Column, {\n    classNames: getClassNames,\n    overflow: overflow,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NitroCardContentView, \"dyksOB5DadzwRcuUMLdvWwPn8K8=\");\n\n_c = NitroCardContentView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NitroCardContentView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/card/NitroCardContentView.tsx"],"names":["useMemo","Column","NitroCardContentView","props","overflow","classNames","rest","getClassNames","newClassNames","length","push"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AACA,SAASC,MAAT,QAAoC,IAApC;;AAEA,OAAO,MAAMC,oBAAqC,GAAGC,KAAK,IAC1D;AAAA;;AACI,QAAM;AAAEC,IAAAA,QAAQ,GAAG,MAAb;AAAqBC,IAAAA,UAAU,GAAG,EAAlC;AAAsC,OAAGC;AAAzC,MAAkDH,KAAxD;AAEA,QAAMI,aAAa,GAAGP,OAAO,CAAC,MAC9B;AACI,UAAMQ,aAAuB,GAAG,CAAE,iBAAF,EAAqB,cAArB,CAAhC;AAEA,QAAGH,UAAU,CAACI,MAAd,EAAsBD,aAAa,CAACE,IAAd,CAAmB,GAAGL,UAAtB;AAEtB,WAAOG,aAAP;AACH,GAP4B,EAO1B,CAAEH,UAAF,CAP0B,CAA7B;AASA,sBAAO,QAAC,MAAD;AAAQ,IAAA,UAAU,EAAGE,aAArB;AAAqC,IAAA,QAAQ,EAAGH,QAAhD;AAAA,OAAgEE;AAAhE;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAdM;;GAAMJ,oB;;KAAAA,oB","sourcesContent":["import { FC, useMemo } from 'react';\nimport { Column, ColumnProps } from '..';\n\nexport const NitroCardContentView: FC<ColumnProps> = props =>\n{\n    const { overflow = 'auto', classNames = [], ...rest } = props;\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [ 'container-fluid', 'content-area' ];\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ classNames ]);\n\n    return <Column classNames={ getClassNames } overflow={ overflow } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}