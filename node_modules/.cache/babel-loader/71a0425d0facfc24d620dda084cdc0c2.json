{"ast":null,"code":"import { PetData } from './PetData';\nexport class PetInventoryParser {\n  constructor() {\n    this._totalFragments = void 0;\n    this._fragmentNumber = void 0;\n    this._fragment = void 0;\n  }\n\n  flush() {\n    this._fragment = null;\n    return true;\n  }\n\n  parse(wrapper) {\n    this._totalFragments = wrapper.readInt();\n    this._fragmentNumber = wrapper.readInt();\n    let totalCount = wrapper.readInt();\n    this._fragment = new Map();\n\n    while (totalCount > 0) {\n      const petData = new PetData(wrapper);\n\n      this._fragment.set(petData.id, petData);\n\n      totalCount--;\n    }\n\n    return true;\n  }\n\n  get totalFragments() {\n    return this._totalFragments;\n  }\n\n  get fragmentNumber() {\n    return this._fragmentNumber;\n  }\n\n  get fragment() {\n    return this._fragment;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/inventory/pets/PetInventoryParser.ts"],"names":["PetData","PetInventoryParser","_totalFragments","_fragmentNumber","_fragment","flush","parse","wrapper","readInt","totalCount","Map","petData","set","id","totalFragments","fragmentNumber","fragment"],"mappings":"AACA,SAASA,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,kBAAN,CACP;AAAA;AAAA,SACcC,eADd;AAAA,SAEcC,eAFd;AAAA,SAGYC,SAHZ;AAAA;;AAKWC,EAAAA,KAAK,GACZ;AACI,SAAKD,SAAL,GAAiB,IAAjB;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,SAAKL,eAAL,GAAuBK,OAAO,CAACC,OAAR,EAAvB;AACA,SAAKL,eAAL,GAAuBI,OAAO,CAACC,OAAR,EAAvB;AAEA,QAAIC,UAAkB,GAAGF,OAAO,CAACC,OAAR,EAAzB;AAEA,SAAKJ,SAAL,GAAiB,IAAIM,GAAJ,EAAjB;;AAEA,WAAMD,UAAU,GAAG,CAAnB,EACA;AACI,YAAME,OAAO,GAAG,IAAIX,OAAJ,CAAYO,OAAZ,CAAhB;;AAEA,WAAKH,SAAL,CAAeQ,GAAf,CAAmBD,OAAO,CAACE,EAA3B,EAA+BF,OAA/B;;AAEAF,MAAAA,UAAU;AACb;;AAED,WAAO,IAAP;AACH;;AAEwB,MAAdK,cAAc,GACzB;AACI,WAAO,KAAKZ,eAAZ;AACH;;AAEwB,MAAda,cAAc,GACzB;AACI,WAAO,KAAKZ,eAAZ;AACH;;AAEkB,MAARa,QAAQ,GACnB;AACI,WAAO,KAAKZ,SAAZ;AACH;;AA9CL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../../core';\r\nimport { PetData } from './PetData';\r\n\r\nexport class PetInventoryParser implements IMessageParser\r\n{\r\n    protected _totalFragments: number;\r\n    protected _fragmentNumber: number;\r\n    private _fragment: Map<number, PetData>;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._fragment = null;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        this._totalFragments = wrapper.readInt();\r\n        this._fragmentNumber = wrapper.readInt();\r\n\r\n        let totalCount: number = wrapper.readInt();\r\n\r\n        this._fragment = new Map();\r\n\r\n        while(totalCount > 0)\r\n        {\r\n            const petData = new PetData(wrapper);\r\n\r\n            this._fragment.set(petData.id, petData);\r\n\r\n            totalCount--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get totalFragments(): number\r\n    {\r\n        return this._totalFragments;\r\n    }\r\n\r\n    public get fragmentNumber(): number\r\n    {\r\n        return this._fragmentNumber;\r\n    }\r\n\r\n    public get fragment(): Map<number, PetData>\r\n    {\r\n        return this._fragment;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}