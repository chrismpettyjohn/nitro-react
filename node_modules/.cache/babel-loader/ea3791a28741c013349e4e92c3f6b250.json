{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/layout/LayoutGridItem.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Base } from '../Base';\nimport { Column } from '../Column';\nimport { LayoutItemCountView } from './LayoutItemCountView';\nimport { LayoutLimitedEditionStyledNumberView } from './limited-edition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LayoutGridItem = props => {\n  _s();\n\n  const {\n    itemImage = undefined,\n    itemColor = undefined,\n    itemActive = false,\n    itemCount = 1,\n    itemCountMinimum = 1,\n    itemUniqueSoldout = false,\n    itemUniqueNumber = -2,\n    itemUnseen = false,\n    itemHighlight = false,\n    disabled = false,\n    center = true,\n    column = true,\n    style = {},\n    classNames = [],\n    position = 'relative',\n    overflow = 'hidden',\n    children = null,\n    ...rest\n  } = props;\n  const getClassNames = useMemo(() => {\n    const newClassNames = ['layout-grid-item', 'border', 'border-2', 'border-muted', 'rounded'];\n    if (itemActive) newClassNames.push('active');\n    if (itemUniqueSoldout || itemUniqueNumber > 0) newClassNames.push('unique-item');\n    if (itemUniqueSoldout) newClassNames.push('sold-out');\n    if (itemUnseen) newClassNames.push('unseen');\n    if (itemHighlight) newClassNames.push('has-highlight');\n    if (disabled) newClassNames.push('disabled');\n    if (itemImage === null) newClassNames.push('icon', 'loading-icon');\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [itemActive, itemUniqueSoldout, itemUniqueNumber, itemUnseen, itemHighlight, disabled, itemImage, classNames]);\n  const getStyle = useMemo(() => {\n    let newStyle = { ...style\n    };\n    if (itemImage) newStyle.backgroundImage = `url(${itemImage})`;\n    if (itemColor) newStyle.backgroundColor = itemColor;\n    if (Object.keys(style).length) newStyle = { ...newStyle,\n      ...style\n    };\n    return newStyle;\n  }, [style, itemImage, itemColor]);\n  return /*#__PURE__*/_jsxDEV(Column, {\n    center: center,\n    pointer: true,\n    position: position,\n    overflow: overflow,\n    column: column,\n    classNames: getClassNames,\n    style: getStyle,\n    ...rest,\n    children: [itemCount > itemCountMinimum && /*#__PURE__*/_jsxDEV(LayoutItemCountView, {\n      count: itemCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), itemUniqueNumber > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Base, {\n        fit: true,\n        className: \"unique-bg-override\",\n        style: {\n          backgroundImage: `url(${itemImage})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-absolute bottom-0 unique-item-counter\",\n        children: /*#__PURE__*/_jsxDEV(LayoutLimitedEditionStyledNumberView, {\n          value: itemUniqueNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LayoutGridItem, \"JAnVx+4W+r7coZiWP+qo7L5cH5o=\");\n\n_c = LayoutGridItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutGridItem\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/layout/LayoutGridItem.tsx"],"names":["useMemo","Base","Column","LayoutItemCountView","LayoutLimitedEditionStyledNumberView","LayoutGridItem","props","itemImage","undefined","itemColor","itemActive","itemCount","itemCountMinimum","itemUniqueSoldout","itemUniqueNumber","itemUnseen","itemHighlight","disabled","center","column","style","classNames","position","overflow","children","rest","getClassNames","newClassNames","push","length","getStyle","newStyle","backgroundImage","backgroundColor","Object","keys"],"mappings":"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","sourcesContent":["import { FC, useMemo } from 'react';\nimport { Base } from '../Base';\nimport { Column, ColumnProps } from '../Column';\nimport { LayoutItemCountView } from './LayoutItemCountView';\nimport { LayoutLimitedEditionStyledNumberView } from './limited-edition';\n\nexport interface LayoutGridItemProps extends ColumnProps\n{\n    itemImage?: string;\n    itemColor?: string;\n    itemActive?: boolean;\n    itemCount?: number;\n    itemCountMinimum?: number;\n    itemUniqueSoldout?: boolean;\n    itemUniqueNumber?: number;\n    itemUnseen?: boolean;\n    itemHighlight?: boolean;\n    disabled?: boolean;\n}\n\nexport const LayoutGridItem: FC<LayoutGridItemProps> = props =>\n{\n    const { itemImage = undefined, itemColor = undefined, itemActive = false, itemCount = 1, itemCountMinimum = 1, itemUniqueSoldout = false, itemUniqueNumber = -2, itemUnseen = false, itemHighlight = false, disabled = false, center = true, column = true, style = {}, classNames = [], position = 'relative', overflow = 'hidden', children = null, ...rest } = props;\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [ 'layout-grid-item', 'border', 'border-2', 'border-muted', 'rounded' ];\n\n        if(itemActive) newClassNames.push('active');\n\n        if(itemUniqueSoldout || (itemUniqueNumber > 0)) newClassNames.push('unique-item');\n\n        if(itemUniqueSoldout) newClassNames.push('sold-out');\n\n        if(itemUnseen) newClassNames.push('unseen');\n\n        if(itemHighlight) newClassNames.push('has-highlight');\n\n        if(disabled) newClassNames.push('disabled')\n\n        if(itemImage === null) newClassNames.push('icon', 'loading-icon');\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ itemActive, itemUniqueSoldout, itemUniqueNumber, itemUnseen, itemHighlight, disabled, itemImage, classNames ]);\n\n    const getStyle = useMemo(() =>\n    {\n        let newStyle = { ...style };\n\n        if(itemImage) newStyle.backgroundImage = `url(${ itemImage })`;\n\n        if(itemColor) newStyle.backgroundColor = itemColor;\n\n        if(Object.keys(style).length) newStyle = { ...newStyle, ...style };\n\n        return newStyle;\n    }, [ style, itemImage, itemColor ]);\n\n    return (\n        <Column center={ center } pointer position={ position } overflow={ overflow } column={ column } classNames={ getClassNames } style={ getStyle } { ...rest }>\n            { (itemCount > itemCountMinimum) &&\n                <LayoutItemCountView count={ itemCount } /> }\n            { (itemUniqueNumber > 0) && \n                <>\n                    <Base fit className=\"unique-bg-override\" style={ { backgroundImage: `url(${ itemImage })` } } />\n                    <div className=\"position-absolute bottom-0 unique-item-counter\">\n                        <LayoutLimitedEditionStyledNumberView value={ itemUniqueNumber } />\n                    </div>\n                </> }\n            { children }\n        </Column>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}