{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/card/NitroCardView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Column } from '..';\nimport { DraggableWindow, DraggableWindowPosition } from '../draggable-window';\nimport { NitroCardContextProvider } from './NitroCardContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NitroCardView = props => {\n  _s();\n\n  const {\n    theme = 'primary',\n    uniqueKey = null,\n    handleSelector = '.drag-handler',\n    windowPosition = DraggableWindowPosition.CENTER,\n    disableDrag = false,\n    overflow = 'hidden',\n    position = 'relative',\n    gap = 0,\n    classNames = [],\n    ...rest\n  } = props;\n  const getClassNames = useMemo(() => {\n    const newClassNames = ['nitro-card', 'rounded'];\n    newClassNames.push(`theme-${theme || 'primary'}`);\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [theme, classNames]);\n  return /*#__PURE__*/_jsxDEV(NitroCardContextProvider, {\n    value: {\n      theme\n    },\n    children: /*#__PURE__*/_jsxDEV(DraggableWindow, {\n      uniqueKey: uniqueKey,\n      handleSelector: handleSelector,\n      windowPosition: windowPosition,\n      disableDrag: disableDrag,\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        overflow: overflow,\n        position: position,\n        gap: gap,\n        classNames: getClassNames,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NitroCardView, \"dyksOB5DadzwRcuUMLdvWwPn8K8=\");\n\n_c = NitroCardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NitroCardView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/card/NitroCardView.tsx"],"names":["useMemo","Column","DraggableWindow","DraggableWindowPosition","NitroCardContextProvider","NitroCardView","props","theme","uniqueKey","handleSelector","windowPosition","CENTER","disableDrag","overflow","position","gap","classNames","rest","getClassNames","newClassNames","push","length"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AACA,SAASC,MAAT,QAAoC,IAApC;AACA,SAASC,eAAT,EAA0BC,uBAA1B,QAA+E,qBAA/E;AACA,SAASC,wBAAT,QAAyC,oBAAzC;;AAOA,OAAO,MAAMC,aAAqC,GAAGC,KAAK,IAC1D;AAAA;;AACI,QAAM;AAAEC,IAAAA,KAAK,GAAG,SAAV;AAAqBC,IAAAA,SAAS,GAAG,IAAjC;AAAuCC,IAAAA,cAAc,GAAG,eAAxD;AAAyEC,IAAAA,cAAc,GAAGP,uBAAuB,CAACQ,MAAlH;AAA0HC,IAAAA,WAAW,GAAG,KAAxI;AAA+IC,IAAAA,QAAQ,GAAG,QAA1J;AAAoKC,IAAAA,QAAQ,GAAG,UAA/K;AAA2LC,IAAAA,GAAG,GAAG,CAAjM;AAAoMC,IAAAA,UAAU,GAAG,EAAjN;AAAqN,OAAGC;AAAxN,MAAiOX,KAAvO;AAEA,QAAMY,aAAa,GAAGlB,OAAO,CAAC,MAC9B;AACI,UAAMmB,aAAuB,GAAG,CAAE,YAAF,EAAgB,SAAhB,CAAhC;AAEAA,IAAAA,aAAa,CAACC,IAAd,CAAoB,SAASb,KAAK,IAAI,SAAW,EAAjD;AAEA,QAAGS,UAAU,CAACK,MAAd,EAAsBF,aAAa,CAACC,IAAd,CAAmB,GAAGJ,UAAtB;AAEtB,WAAOG,aAAP;AACH,GAT4B,EAS1B,CAAEZ,KAAF,EAASS,UAAT,CAT0B,CAA7B;AAWA,sBACI,QAAC,wBAAD;AAA0B,IAAA,KAAK,EAAG;AAAET,MAAAA;AAAF,KAAlC;AAAA,2BACI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAGC,SAA7B;AAAyC,MAAA,cAAc,EAAGC,cAA1D;AAA2E,MAAA,cAAc,EAAGC,cAA5F;AAA6G,MAAA,WAAW,EAAGE,WAA3H;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAGC,QAAnB;AAA8B,QAAA,QAAQ,EAAGC,QAAzC;AAAoD,QAAA,GAAG,EAAGC,GAA1D;AAAgE,QAAA,UAAU,EAAGG,aAA7E;AAAA,WAAkGD;AAAlG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtBM;;GAAMZ,a;;KAAAA,a","sourcesContent":["import { FC, useMemo } from 'react';\nimport { Column, ColumnProps } from '..';\nimport { DraggableWindow, DraggableWindowPosition, DraggableWindowProps } from '../draggable-window';\nimport { NitroCardContextProvider } from './NitroCardContext';\n\nexport interface NitroCardViewProps extends DraggableWindowProps, ColumnProps\n{\n    theme?: string;\n}\n\nexport const NitroCardView: FC<NitroCardViewProps> = props =>\n{\n    const { theme = 'primary', uniqueKey = null, handleSelector = '.drag-handler', windowPosition = DraggableWindowPosition.CENTER, disableDrag = false, overflow = 'hidden', position = 'relative', gap = 0, classNames = [], ...rest } = props;\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [ 'nitro-card', 'rounded', ];\n\n        newClassNames.push(`theme-${ theme || 'primary' }`);\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ theme, classNames ]);\n\n    return (\n        <NitroCardContextProvider value={ { theme } }>\n            <DraggableWindow uniqueKey={ uniqueKey } handleSelector={ handleSelector } windowPosition={ windowPosition } disableDrag={ disableDrag }>\n                <Column overflow={ overflow } position={ position } gap={ gap } classNames={ getClassNames } { ...rest } />\n            </DraggableWindow>\n        </NitroCardContextProvider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}