{"ast":null,"code":"export class NavigatorEventCategoryDataParser {\n  constructor(wrapper) {\n    this._id = void 0;\n    this._name = void 0;\n    this._visible = void 0;\n    if (!wrapper) throw new Error('invalid_wrapper');\n    this.flush();\n    this.parse(wrapper);\n  }\n\n  flush() {\n    this._id = -1;\n    this._name = null;\n    this._visible = false;\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._id = wrapper.readInt();\n    this._name = wrapper.readString();\n    this._visible = wrapper.readBoolean();\n    return true;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/navigator/NavigatorEventCategoryDataParser.ts"],"names":["NavigatorEventCategoryDataParser","constructor","wrapper","_id","_name","_visible","Error","flush","parse","readInt","readString","readBoolean","id","name","visible"],"mappings":"AAEA,OAAO,MAAMA,gCAAN,CACP;AAKIC,EAAAA,WAAW,CAACC,OAAD,EACX;AAAA,SALQC,GAKR;AAAA,SAJQC,KAIR;AAAA,SAHQC,QAGR;AACI,QAAG,CAACH,OAAJ,EAAa,MAAM,IAAII,KAAJ,CAAU,iBAAV,CAAN;AAEb,SAAKC,KAAL;AACA,SAAKC,KAAL,CAAWN,OAAX;AACH;;AAEMK,EAAAA,KAAK,GACZ;AACI,SAAKJ,GAAL,GAAW,CAAC,CAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,QAAL,GAAgB,KAAhB;AAEA,WAAO,IAAP;AACH;;AAEMG,EAAAA,KAAK,CAACN,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKC,GAAL,GAAWD,OAAO,CAACO,OAAR,EAAX;AACA,SAAKL,KAAL,GAAaF,OAAO,CAACQ,UAAR,EAAb;AACA,SAAKL,QAAL,GAAgBH,OAAO,CAACS,WAAR,EAAhB;AAEA,WAAO,IAAP;AACH;;AAEY,MAAFC,EAAE,GACb;AACI,WAAO,KAAKT,GAAZ;AACH;;AAEc,MAAJU,IAAI,GACf;AACI,WAAO,KAAKT,KAAZ;AACH;;AAEiB,MAAPU,OAAO,GAClB;AACI,WAAO,KAAKT,QAAZ;AACH;;AA9CL","sourcesContent":["import { IMessageDataWrapper } from '../../../../../core';\r\n\r\nexport class NavigatorEventCategoryDataParser\r\n{\r\n    private _id: number;\r\n    private _name: string;\r\n    private _visible: boolean;\r\n\r\n    constructor(wrapper: IMessageDataWrapper)\r\n    {\r\n        if(!wrapper) throw new Error('invalid_wrapper');\r\n\r\n        this.flush();\r\n        this.parse(wrapper);\r\n    }\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._id = -1;\r\n        this._name = null;\r\n        this._visible = false;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._id = wrapper.readInt();\r\n        this._name = wrapper.readString();\r\n        this._visible = wrapper.readBoolean();\r\n\r\n        return true;\r\n    }\r\n\r\n    public get id(): number\r\n    {\r\n        return this._id;\r\n    }\r\n\r\n    public get name(): string\r\n    {\r\n        return this._name;\r\n    }\r\n\r\n    public get visible(): boolean\r\n    {\r\n        return this._visible;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}