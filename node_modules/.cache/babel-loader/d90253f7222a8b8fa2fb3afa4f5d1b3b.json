{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/navigator/views/room-settings/NavigatorRoomSettingsAccessTabView.tsx\",\n    _s = $RefreshSig$();\n\nimport { RoomDataParser } from '@nitrots/nitro-renderer';\nimport { useEffect, useState } from 'react';\nimport { LocalizeText } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NavigatorRoomSettingsAccessTabView = props => {\n  _s();\n\n  const {\n    roomData = null,\n    handleChange = null\n  } = props;\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isTryingPassword, setIsTryingPassword] = useState(false);\n\n  const saveRoomPassword = () => {\n    if (!isTryingPassword || password.length <= 0 || confirmPassword.length <= 0 || password !== confirmPassword) return;\n    handleChange('password', password);\n  };\n\n  useEffect(() => {\n    setPassword('');\n    setConfirmPassword('');\n    setIsTryingPassword(false);\n  }, [roomData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: LocalizeText('navigator.roomsettings.roomaccess.caption')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: LocalizeText('navigator.roomsettings.roomaccess.info')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      overflow: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: LocalizeText('navigator.roomsettings.doormode')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"lockState\",\n            checked: roomData.lockState === RoomDataParser.OPEN_STATE && !isTryingPassword,\n            onChange: event => handleChange('lock_state', RoomDataParser.OPEN_STATE)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.doormode.open')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"lockState\",\n            checked: roomData.lockState === RoomDataParser.DOORBELL_STATE && !isTryingPassword,\n            onChange: event => handleChange('lock_state', RoomDataParser.DOORBELL_STATE)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.doormode.doorbell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"lockState\",\n            checked: roomData.lockState === RoomDataParser.INVISIBLE_STATE && !isTryingPassword,\n            onChange: event => handleChange('lock_state', RoomDataParser.INVISIBLE_STATE)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.doormode.invisible')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          fullWidth: true,\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"lockState\",\n            checked: roomData.lockState === RoomDataParser.PASSWORD_STATE || isTryingPassword,\n            onChange: event => setIsTryingPassword(event.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), !isTryingPassword && roomData.lockState !== RoomDataParser.PASSWORD_STATE && /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.doormode.password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), (isTryingPassword || roomData.lockState === RoomDataParser.PASSWORD_STATE) && /*#__PURE__*/_jsxDEV(Column, {\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: LocalizeText('navigator.roomsettings.doormode.password')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control form-control-sm col-4\",\n              value: password,\n              onChange: event => setPassword(event.target.value),\n              placeholder: LocalizeText('navigator.roomsettings.password'),\n              onFocus: event => setIsTryingPassword(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), isTryingPassword && password.length <= 0 && /*#__PURE__*/_jsxDEV(Text, {\n              bold: true,\n              small: true,\n              variant: \"danger\",\n              children: LocalizeText('navigator.roomsettings.passwordismandatory')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control form-control-sm col-4\",\n              value: confirmPassword,\n              onChange: event => setConfirmPassword(event.target.value),\n              onBlur: saveRoomPassword,\n              placeholder: LocalizeText('navigator.roomsettings.passwordconfirm')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), isTryingPassword && password.length > 0 && password !== confirmPassword && /*#__PURE__*/_jsxDEV(Text, {\n              bold: true,\n              small: true,\n              variant: \"danger\",\n              children: LocalizeText('navigator.roomsettings.invalidconfirm')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: LocalizeText('navigator.roomsettings.pets')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            checked: roomData.allowPets,\n            onChange: event => handleChange('allow_pets', event.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.allowpets')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            checked: roomData.allowPetsEat,\n            onChange: event => handleChange('allow_pets_eat', event.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText('navigator.roomsettings.allowfoodconsume')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NavigatorRoomSettingsAccessTabView, \"yls894yWrm0QlAREYFbNIWKmk7s=\");\n\n_c = NavigatorRoomSettingsAccessTabView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigatorRoomSettingsAccessTabView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/navigator/views/room-settings/NavigatorRoomSettingsAccessTabView.tsx"],"names":["RoomDataParser","useEffect","useState","LocalizeText","Column","Flex","Text","NavigatorRoomSettingsAccessTabView","props","roomData","handleChange","password","setPassword","confirmPassword","setConfirmPassword","isTryingPassword","setIsTryingPassword","saveRoomPassword","length","lockState","OPEN_STATE","event","DOORBELL_STATE","INVISIBLE_STATE","PASSWORD_STATE","target","checked","value","allowPets","allowPetsEat"],"mappings":"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","sourcesContent":["import { RoomDataParser } from '@nitrots/nitro-renderer';\nimport { FC, useEffect, useState } from 'react';\nimport { IRoomData, LocalizeText } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\n\ninterface NavigatorRoomSettingsTabViewProps\n{\n    roomData: IRoomData;\n    handleChange: (field: string, value: string | number | boolean) => void;\n}\n\nexport const NavigatorRoomSettingsAccessTabView: FC<NavigatorRoomSettingsTabViewProps> = props =>\n{\n    const { roomData = null, handleChange = null } = props;\n    const [ password, setPassword ] = useState<string>('');\n    const [ confirmPassword, setConfirmPassword ] = useState('');\n    const [ isTryingPassword, setIsTryingPassword ] = useState(false);\n\n    const saveRoomPassword = () =>\n    {\n        if(!isTryingPassword || ((password.length <= 0) || (confirmPassword.length <= 0) || (password !== confirmPassword))) return;\n\n        handleChange('password', password);\n    }\n\n    useEffect(() =>\n    {\n        setPassword('');\n        setConfirmPassword('');\n        setIsTryingPassword(false);\n    }, [ roomData ]);\n\n    return (\n        <>\n            <Column gap={ 1 }>\n                <Text bold>{ LocalizeText('navigator.roomsettings.roomaccess.caption') }</Text>\n                <Text>{ LocalizeText('navigator.roomsettings.roomaccess.info') }</Text>\n            </Column>\n            <Column overflow=\"auto\">\n                <Column gap={ 1 }>\n                    <Text bold>{ LocalizeText('navigator.roomsettings.doormode') }</Text>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"radio\" name=\"lockState\" checked={ (roomData.lockState === RoomDataParser.OPEN_STATE) && !isTryingPassword } onChange={ event => handleChange('lock_state', RoomDataParser.OPEN_STATE) } />\n                        <Text>{ LocalizeText('navigator.roomsettings.doormode.open') }</Text>\n                    </Flex>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"radio\" name=\"lockState\" checked={ (roomData.lockState === RoomDataParser.DOORBELL_STATE) && !isTryingPassword } onChange={ event => handleChange('lock_state', RoomDataParser.DOORBELL_STATE) } />\n                        <Text>{ LocalizeText('navigator.roomsettings.doormode.doorbell') }</Text>\n                    </Flex>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"radio\" name=\"lockState\" checked={ (roomData.lockState === RoomDataParser.INVISIBLE_STATE) && !isTryingPassword } onChange={ event => handleChange('lock_state', RoomDataParser.INVISIBLE_STATE) } />\n                        <Text>{ LocalizeText('navigator.roomsettings.doormode.invisible') }</Text>\n                    </Flex>\n                    <Flex fullWidth gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"radio\" name=\"lockState\" checked={ (roomData.lockState === RoomDataParser.PASSWORD_STATE) || isTryingPassword } onChange={ event => setIsTryingPassword(event.target.checked) } />\n                        { !isTryingPassword && (roomData.lockState !== RoomDataParser.PASSWORD_STATE) &&\n                            <Text>{ LocalizeText('navigator.roomsettings.doormode.password') }</Text> }\n                        { (isTryingPassword || (roomData.lockState === RoomDataParser.PASSWORD_STATE)) &&\n                            <Column gap={ 1 }>\n                                <Text>{ LocalizeText('navigator.roomsettings.doormode.password') }</Text>\n                                <input type=\"password\" className=\"form-control form-control-sm col-4\" value={ password } onChange={ event => setPassword(event.target.value) } placeholder={ LocalizeText('navigator.roomsettings.password') } onFocus={ event => setIsTryingPassword(true) } />\n                                { isTryingPassword && (password.length <= 0) &&\n                                    <Text bold small variant=\"danger\">\n                                        { LocalizeText('navigator.roomsettings.passwordismandatory') }\n                                    </Text> }\n                                <input type=\"password\" className=\"form-control form-control-sm col-4\" value={ confirmPassword } onChange={ event => setConfirmPassword(event.target.value) } onBlur={ saveRoomPassword } placeholder={ LocalizeText('navigator.roomsettings.passwordconfirm') } />\n                                { isTryingPassword && ((password.length > 0) && (password !== confirmPassword)) &&\n                                    <Text bold small variant=\"danger\">\n                                        { LocalizeText('navigator.roomsettings.invalidconfirm') }\n                                    </Text> }\n                            </Column> }\n                    </Flex>\n                </Column>\n                <Column gap={ 1 }>\n                    <Text bold>{ LocalizeText('navigator.roomsettings.pets') }</Text>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={ roomData.allowPets } onChange={ event => handleChange('allow_pets', event.target.checked) } />\n                        <Text>{ LocalizeText('navigator.roomsettings.allowpets') }</Text>\n                    </Flex>\n                    <Flex alignItems=\"center\" gap={ 1 }>\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={ roomData.allowPetsEat } onChange={ event => handleChange('allow_pets_eat', event.target.checked) } />\n                        <Text>{ LocalizeText('navigator.roomsettings.allowfoodconsume') }</Text>\n                    </Flex>\n                </Column>\n            </Column>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}