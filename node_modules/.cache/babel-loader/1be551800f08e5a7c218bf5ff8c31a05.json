{"ast":null,"code":"import { AnimationSizeData } from '../data/AnimationSizeData';\nimport { PetSizeData } from '../data/PetSizeData';\nimport { FurnitureAnimatedVisualizationData } from '../furniture/FurnitureAnimatedVisualizationData';\nexport class PetVisualizationData extends FurnitureAnimatedVisualizationData {\n  constructor() {\n    super();\n    this._isAllowedToTurnHead = void 0;\n    this._isAllowedToTurnHead = true;\n  }\n\n  createSizeData(scale, layerCount, angle) {\n    if (scale > 1) return new PetSizeData(layerCount, angle);else return new AnimationSizeData(layerCount, angle);\n  }\n\n  defineVisualizations(visualizations) {\n    this._isAllowedToTurnHead = true; //check visualization for '@disableheadturn'\n\n    return super.defineVisualizations(visualizations);\n  }\n\n  processVisualElement(sizeData, key, data) {\n    if (!sizeData || !key || !data) return false;\n\n    switch (key) {\n      case 'postures':\n        if (!(sizeData instanceof PetSizeData) || !sizeData.processPostures(data)) return false;\n        break;\n\n      case 'gestures':\n        if (!(sizeData instanceof PetSizeData) || !sizeData.processGestures(data)) return false;\n        break;\n\n      default:\n        if (!super.processVisualElement(sizeData, key, data)) return false;\n        break;\n    }\n\n    return true;\n  }\n\n  postureToAnimation(scale, posture) {\n    const size = this.getSizeData(scale);\n    if (!size) return PetSizeData.DEFAULT;\n    return size.postureToAnimation(posture);\n  }\n\n  getGestureDisabled(scale, posture) {\n    const size = this.getSizeData(scale);\n    if (!size) return false;\n    return size.getGestureDisabled(posture);\n  }\n\n  gestureToAnimation(scale, gesture) {\n    const size = this.getSizeData(scale);\n    if (!size) return PetSizeData.DEFAULT;\n    return size.gestureToAnimation(gesture);\n  }\n\n  animationToPosture(scale, index, useDefault) {\n    const size = this.getSizeData(scale);\n    if (!size) return null;\n    return size.animationToPosture(index, useDefault);\n  }\n\n  animationToGesture(scale, index) {\n    const size = this.getSizeData(scale);\n    if (!size) return null;\n    return size.animationToGesture(index);\n  }\n\n  getGestureForAnimationId(scale, _arg_2) {\n    const size = this.getSizeData(scale);\n    if (!size) return null;\n    return size.getGestureForAnimationId(_arg_2);\n  }\n\n  totalPostures(scale) {\n    const size = this.getSizeData(scale);\n    if (!size) return 0;\n    return size.totalPostures;\n  }\n\n  totalGestures(scale) {\n    const size = this.getSizeData(scale);\n    if (!size) return 0;\n    return size.totalGestures;\n  }\n\n  get isAllowedToTurnHead() {\n    return this._isAllowedToTurnHead;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/pet/PetVisualizationData.ts"],"names":["AnimationSizeData","PetSizeData","FurnitureAnimatedVisualizationData","PetVisualizationData","constructor","_isAllowedToTurnHead","createSizeData","scale","layerCount","angle","defineVisualizations","visualizations","processVisualElement","sizeData","key","data","processPostures","processGestures","postureToAnimation","posture","size","getSizeData","DEFAULT","getGestureDisabled","gestureToAnimation","gesture","animationToPosture","index","useDefault","animationToGesture","getGestureForAnimationId","_arg_2","totalPostures","totalGestures","isAllowedToTurnHead"],"mappings":"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","sourcesContent":["import { IAssetVisualizationData } from '../../../../../core/asset/interfaces';\r\nimport { AnimationSizeData } from '../data/AnimationSizeData';\r\nimport { PetSizeData } from '../data/PetSizeData';\r\nimport { SizeData } from '../data/SizeData';\r\nimport { FurnitureAnimatedVisualizationData } from '../furniture/FurnitureAnimatedVisualizationData';\r\n\r\nexport class PetVisualizationData extends FurnitureAnimatedVisualizationData\r\n{\r\n    private _isAllowedToTurnHead: boolean;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        this._isAllowedToTurnHead = true;\r\n    }\r\n\r\n    protected createSizeData(scale: number, layerCount: number, angle: number): SizeData\r\n    {\r\n        if(scale > 1) return new PetSizeData(layerCount, angle);\r\n        else return new AnimationSizeData(layerCount, angle);\r\n    }\r\n\r\n    protected defineVisualizations(visualizations: IAssetVisualizationData[]): boolean\r\n    {\r\n        this._isAllowedToTurnHead = true; //check visualization for '@disableheadturn'\r\n\r\n        return super.defineVisualizations(visualizations);\r\n    }\r\n\r\n    protected processVisualElement(sizeData: SizeData, key: string, data: any): boolean\r\n    {\r\n        if(!sizeData || !key || !data) return false;\r\n\r\n        switch(key)\r\n        {\r\n            case 'postures':\r\n                if(!(sizeData instanceof PetSizeData) || !sizeData.processPostures(data)) return false;\r\n                break;\r\n            case 'gestures':\r\n                if(!(sizeData instanceof PetSizeData) || !sizeData.processGestures(data)) return false;\r\n                break;\r\n            default:\r\n                if(!super.processVisualElement(sizeData, key, data)) return false;\r\n                break;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public postureToAnimation(scale: number, posture: string): number\r\n    {\r\n        const size = this.getSizeData(scale) as PetSizeData;\r\n\r\n        if(!size) return PetSizeData.DEFAULT;\r\n\r\n        return size.postureToAnimation(posture);\r\n    }\r\n\r\n    public getGestureDisabled(scale: number, posture: string): boolean\r\n    {\r\n        const size = this.getSizeData(scale) as PetSizeData;\r\n\r\n        if(!size) return false;\r\n\r\n        return size.getGestureDisabled(posture);\r\n    }\r\n\r\n    public gestureToAnimation(scale: number, gesture: string): number\r\n    {\r\n        const size = this.getSizeData(scale) as PetSizeData;\r\n\r\n        if(!size) return PetSizeData.DEFAULT;\r\n\r\n        return size.gestureToAnimation(gesture);\r\n    }\r\n\r\n    public animationToPosture(scale: number, index: number, useDefault: boolean): string\r\n    {\r\n        const size = this.getSizeData(scale) as PetSizeData;\r\n\r\n        if(!size) return null;\r\n\r\n        return size.animationToPosture(index, useDefault);\r\n    }\r\n\r\n    public animationToGesture(scale: number, index: number): string\r\n    {\r\n        const size = this.getSizeData(scale) as PetSizeData;\r\n\r\n        if(!size) return null;\r\n\r\n        return size.animationToGesture(index);\r\n    }\r\n\r\n    public getGestureForAnimationId(scale: number, _arg_2: number): string\r\n    {\r\n        const size = this.getSizeData(scale) as PetSizeData;\r\n\r\n        if(!size) return null;\r\n\r\n        return size.getGestureForAnimationId(_arg_2);\r\n    }\r\n\r\n    public totalPostures(scale: number): number\r\n    {\r\n        const size = this.getSizeData(scale) as PetSizeData;\r\n\r\n        if(!size) return 0;\r\n\r\n        return size.totalPostures;\r\n    }\r\n\r\n    public totalGestures(scale: number): number\r\n    {\r\n        const size = this.getSizeData(scale) as PetSizeData;\r\n\r\n        if(!size) return 0;\r\n\r\n        return size.totalGestures;\r\n    }\r\n\r\n    public get isAllowedToTurnHead(): boolean\r\n    {\r\n        return this._isAllowedToTurnHead;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}