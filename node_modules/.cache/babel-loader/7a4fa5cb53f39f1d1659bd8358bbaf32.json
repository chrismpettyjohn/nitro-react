{"ast":null,"code":"import { Point } from '@pixi/math';\nexport class AvatarImageBodyPartContainer {\n  constructor(k, _arg_2, _arg_3) {\n    this._image = void 0;\n    this._regPoint = void 0;\n    this._offset = void 0;\n    this._isCacheable = void 0;\n    this._image = k;\n    this._regPoint = _arg_2;\n    this._offset = new Point(0, 0);\n    this._regPoint = _arg_2;\n    this._isCacheable = _arg_3;\n    this.cleanPoints();\n  }\n\n  dispose() {\n    if (this._image) {\n      this._image.destroy({\n        children: true\n      });\n    }\n\n    this._image = null;\n    this._regPoint = null;\n    this._offset = null;\n  }\n\n  cleanPoints() {// this._regPoint.x    = this._regPoint.x;\n    // this._regPoint.y    = this._regPoint.y;\n    // this._offset.x      = this._offset.x;\n    // this._offset.y      = this._offset.y;\n  }\n\n  setRegPoint(k) {\n    this._regPoint = k;\n    this.cleanPoints();\n  }\n\n  get image() {\n    return this._image;\n  }\n\n  set image(k) {\n    if (this._image && this._image !== k) {\n      this._image.destroy({\n        children: true\n      });\n    }\n\n    this._image = k;\n  }\n\n  get regPoint() {\n    const clone = this._regPoint.clone();\n\n    clone.x += this._offset.x;\n    clone.y += this._offset.y;\n    return clone;\n  }\n\n  set offset(k) {\n    this._offset = k;\n    this.cleanPoints();\n  }\n\n  get isCacheable() {\n    return this._isCacheable;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/avatar/AvatarImageBodyPartContainer.ts"],"names":["Point","AvatarImageBodyPartContainer","constructor","k","_arg_2","_arg_3","_image","_regPoint","_offset","_isCacheable","cleanPoints","dispose","destroy","children","setRegPoint","image","regPoint","clone","x","y","offset","isCacheable"],"mappings":"AACA,SAASA,KAAT,QAAsB,YAAtB;AAEA,OAAO,MAAMC,4BAAN,CACP;AAMIC,EAAAA,WAAW,CAACC,CAAD,EAAeC,MAAf,EAA8BC,MAA9B,EACX;AAAA,SANQC,MAMR;AAAA,SALQC,SAKR;AAAA,SAJQC,OAIR;AAAA,SAHQC,YAGR;AACI,SAAKH,MAAL,GAAcH,CAAd;AACA,SAAKI,SAAL,GAAiBH,MAAjB;AACA,SAAKI,OAAL,GAAe,IAAIR,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAf;AACA,SAAKO,SAAL,GAAiBH,MAAjB;AACA,SAAKK,YAAL,GAAoBJ,MAApB;AAEA,SAAKK,WAAL;AACH;;AAEMC,EAAAA,OAAO,GACd;AACI,QAAG,KAAKL,MAAR,EACA;AACI,WAAKA,MAAL,CAAYM,OAAZ,CAAoB;AAChBC,QAAAA,QAAQ,EAAE;AADM,OAApB;AAGH;;AAED,SAAKP,MAAL,GAAc,IAAd;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,OAAL,GAAe,IAAf;AACH;;AAEOE,EAAAA,WAAW,GACnB,CACI;AACA;AACA;AACA;AACH;;AAEMI,EAAAA,WAAW,CAACX,CAAD,EAClB;AACI,SAAKI,SAAL,GAAiBJ,CAAjB;AAEA,SAAKO,WAAL;AACH;;AAEe,MAALK,KAAK,GAChB;AACI,WAAO,KAAKT,MAAZ;AACH;;AAEe,MAALS,KAAK,CAACZ,CAAD,EAChB;AACI,QAAG,KAAKG,MAAL,IAAgB,KAAKA,MAAL,KAAgBH,CAAnC,EACA;AACI,WAAKG,MAAL,CAAYM,OAAZ,CAAoB;AAChBC,QAAAA,QAAQ,EAAE;AADM,OAApB;AAGH;;AAED,SAAKP,MAAL,GAAcH,CAAd;AACH;;AAEkB,MAARa,QAAQ,GACnB;AACI,UAAMC,KAAK,GAAG,KAAKV,SAAL,CAAeU,KAAf,EAAd;;AAEAA,IAAAA,KAAK,CAACC,CAAN,IAAW,KAAKV,OAAL,CAAaU,CAAxB;AACAD,IAAAA,KAAK,CAACE,CAAN,IAAW,KAAKX,OAAL,CAAaW,CAAxB;AAEA,WAAOF,KAAP;AACH;;AAEgB,MAANG,MAAM,CAACjB,CAAD,EACjB;AACI,SAAKK,OAAL,GAAeL,CAAf;AAEA,SAAKO,WAAL;AACH;;AAEqB,MAAXW,WAAW,GACtB;AACI,WAAO,KAAKZ,YAAZ;AACH;;AAnFL","sourcesContent":["import { Container } from '@pixi/display';\r\nimport { Point } from '@pixi/math';\r\n\r\nexport class AvatarImageBodyPartContainer\r\n{\r\n    private _image: Container;\r\n    private _regPoint: Point;\r\n    private _offset: Point;\r\n    private _isCacheable: boolean;\r\n\r\n    constructor(k: Container, _arg_2: Point, _arg_3: boolean)\r\n    {\r\n        this._image = k;\r\n        this._regPoint = _arg_2;\r\n        this._offset = new Point(0, 0);\r\n        this._regPoint = _arg_2;\r\n        this._isCacheable = _arg_3;\r\n\r\n        this.cleanPoints();\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        if(this._image)\r\n        {\r\n            this._image.destroy({\r\n                children: true\r\n            });\r\n        }\r\n\r\n        this._image = null;\r\n        this._regPoint = null;\r\n        this._offset = null;\r\n    }\r\n\r\n    private cleanPoints(): void\r\n    {\r\n        // this._regPoint.x    = this._regPoint.x;\r\n        // this._regPoint.y    = this._regPoint.y;\r\n        // this._offset.x      = this._offset.x;\r\n        // this._offset.y      = this._offset.y;\r\n    }\r\n\r\n    public setRegPoint(k: Point): void\r\n    {\r\n        this._regPoint = k;\r\n\r\n        this.cleanPoints();\r\n    }\r\n\r\n    public get image(): Container\r\n    {\r\n        return this._image;\r\n    }\r\n\r\n    public set image(k: Container)\r\n    {\r\n        if(this._image && (this._image !== k))\r\n        {\r\n            this._image.destroy({\r\n                children: true\r\n            });\r\n        }\r\n\r\n        this._image = k;\r\n    }\r\n\r\n    public get regPoint(): Point\r\n    {\r\n        const clone = this._regPoint.clone();\r\n\r\n        clone.x += this._offset.x;\r\n        clone.y += this._offset.y;\r\n\r\n        return clone;\r\n    }\r\n\r\n    public set offset(k: Point)\r\n    {\r\n        this._offset = k;\r\n\r\n        this.cleanPoints();\r\n    }\r\n\r\n    public get isCacheable(): boolean\r\n    {\r\n        return this._isCacheable;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}