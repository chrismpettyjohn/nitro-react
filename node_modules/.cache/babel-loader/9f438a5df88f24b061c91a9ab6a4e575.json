{"ast":null,"code":"import { NodeData } from '../../incoming/catalog/NodeData';\nexport class CatalogIndexMessageParser {\n  constructor() {\n    this._root = void 0;\n    this._newAdditionsAvailable = void 0;\n    this._catalogType = void 0;\n  }\n\n  flush() {\n    this._root = null;\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._root = new NodeData(wrapper);\n    this._newAdditionsAvailable = wrapper.readBoolean();\n    this._catalogType = wrapper.readString();\n    return true;\n  }\n\n  get root() {\n    return this._root;\n  }\n\n  get newAdditionsAvailable() {\n    return this._newAdditionsAvailable;\n  }\n\n  get catalogType() {\n    return this._catalogType;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/catalog/CatalogIndexMessageParser.ts"],"names":["NodeData","CatalogIndexMessageParser","_root","_newAdditionsAvailable","_catalogType","flush","parse","wrapper","readBoolean","readString","root","newAdditionsAvailable","catalogType"],"mappings":"AACA,SAASA,QAAT,QAAyB,iCAAzB;AAEA,OAAO,MAAMC,yBAAN,CACP;AAAA;AAAA,SACYC,KADZ;AAAA,SAEYC,sBAFZ;AAAA,SAGYC,YAHZ;AAAA;;AAKWC,EAAAA,KAAK,GACZ;AACI,SAAKH,KAAL,GAAa,IAAb;AAEA,WAAO,IAAP;AACH;;AAEMI,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKL,KAAL,GAAa,IAAIF,QAAJ,CAAaO,OAAb,CAAb;AACA,SAAKJ,sBAAL,GAA8BI,OAAO,CAACC,WAAR,EAA9B;AACA,SAAKJ,YAAL,GAAoBG,OAAO,CAACE,UAAR,EAApB;AAEA,WAAO,IAAP;AACH;;AAEc,MAAJC,IAAI,GACf;AACI,WAAO,KAAKR,KAAZ;AACH;;AAE+B,MAArBS,qBAAqB,GAChC;AACI,WAAO,KAAKR,sBAAZ;AACH;;AAEqB,MAAXS,WAAW,GACtB;AACI,WAAO,KAAKR,YAAZ;AACH;;AApCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\nimport { NodeData } from '../../incoming/catalog/NodeData';\r\n\r\nexport class CatalogIndexMessageParser implements IMessageParser\r\n{\r\n    private _root: NodeData;\r\n    private _newAdditionsAvailable: boolean;\r\n    private _catalogType: string;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._root = null;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._root = new NodeData(wrapper);\r\n        this._newAdditionsAvailable = wrapper.readBoolean();\r\n        this._catalogType = wrapper.readString();\r\n\r\n        return true;\r\n    }\r\n\r\n    public get root(): NodeData\r\n    {\r\n        return this._root;\r\n    }\r\n\r\n    public get newAdditionsAvailable(): boolean\r\n    {\r\n        return this._newAdditionsAvailable;\r\n    }\r\n\r\n    public get catalogType(): string\r\n    {\r\n        return this._catalogType;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}