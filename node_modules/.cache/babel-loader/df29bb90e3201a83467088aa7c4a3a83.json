{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/triggers/WiredTriggerScoreAchievedView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredTriggerBaseView } from './WiredTriggerBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredTriggeScoreAchievedView = props => {\n  _s();\n\n  const [points, setPoints] = useState(1);\n  const {\n    trigger = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => setIntParams([points]);\n\n  useEffect(() => {\n    setPoints(trigger.intData.length > 0 ? trigger.intData[0] : 0);\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredTriggerBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_NONE,\n    hasSpecialInput: true,\n    save: save,\n    children: /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.setscore', ['points'], [points.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: 'wired-slider',\n        min: 1,\n        max: 1000,\n        value: points,\n        onChange: event => setPoints(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredTriggeScoreAchievedView, \"VhUJ3PCidAF/qLQ2cMMSUVXG9VA=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredTriggeScoreAchievedView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredTriggeScoreAchievedView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/triggers/WiredTriggerScoreAchievedView.tsx"],"names":["useEffect","useState","ReactSlider","LocalizeText","WiredFurniType","Column","Text","useWiredContext","WiredTriggerBaseView","WiredTriggeScoreAchievedView","props","points","setPoints","trigger","setIntParams","save","intData","length","STUFF_SELECTION_OPTION_NONE","toString","event"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,oBAA7B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,oBAAT,QAAqC,wBAArC;;AAEA,OAAO,MAAMC,4BAAoC,GAAGC,KAAK,IACzD;AAAA;;AACI,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAEY,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,YAAY,GAAG;AAAjC,MAA0CP,eAAe,EAA/D;;AAEA,QAAMQ,IAAI,GAAG,MAAMD,YAAY,CAAC,CAAEH,MAAF,CAAD,CAA/B;;AAEAX,EAAAA,SAAS,CAAC,MACV;AACIY,IAAAA,SAAS,CAAEC,OAAO,CAACG,OAAR,CAAgBC,MAAhB,GAAyB,CAA1B,GAA+BJ,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAA/B,GAAoD,CAArD,CAAT;AACH,GAHQ,EAGN,CAAEH,OAAF,CAHM,CAAT;AAKA,sBACI,QAAC,oBAAD;AAAsB,IAAA,aAAa,EAAGT,cAAc,CAACc,2BAArD;AAAmF,IAAA,eAAe,EAAG,IAArG;AAA4G,IAAA,IAAI,EAAGH,IAAnH;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAeZ,YAAY,CAAC,4BAAD,EAA+B,CAAE,QAAF,CAA/B,EAA6C,CAAEQ,MAAM,CAACQ,QAAP,EAAF,CAA7C;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AACI,QAAA,SAAS,EAAG,cADhB;AAEI,QAAA,GAAG,EAAG,CAFV;AAGI,QAAA,GAAG,EAAG,IAHV;AAII,QAAA,KAAK,EAAGR,MAJZ;AAKI,QAAA,QAAQ,EAAGS,KAAK,IAAIR,SAAS,CAACQ,KAAD;AALjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAzBM;;GAAMX,4B;UAGuCF,e;;;KAHvCE,4B","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredTriggerBaseView } from './WiredTriggerBaseView';\n\nexport const WiredTriggeScoreAchievedView: FC<{}> = props =>\n{\n    const [ points, setPoints ] = useState(1);\n    const { trigger = null, setIntParams = null } = useWiredContext();\n\n    const save = () => setIntParams([ points ]);\n\n    useEffect(() =>\n    {\n        setPoints((trigger.intData.length > 0) ? trigger.intData[0] : 0);\n    }, [ trigger ]);\n\n    return (\n        <WiredTriggerBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_NONE } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.setscore', [ 'points' ], [ points.toString() ]) }</Text>\n                <ReactSlider\n                    className={ 'wired-slider' }\n                    min={ 1 }\n                    max={ 1000 }\n                    value={ points }\n                    onChange={ event => setPoints(event) } />\n            </Column>\n        </WiredTriggerBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}