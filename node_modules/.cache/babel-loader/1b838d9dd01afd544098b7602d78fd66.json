{"ast":null,"code":"export class NotificationDialogMessageParser {\n  constructor() {\n    this._type = void 0;\n    this._parameters = void 0;\n  }\n\n  flush() {\n    this._type = null;\n    this._parameters = new Map();\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._type = wrapper.readString();\n    let totalParameters = wrapper.readInt();\n\n    while (totalParameters > 0) {\n      this._parameters.set(wrapper.readString(), wrapper.readString());\n\n      totalParameters--;\n    }\n\n    return true;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get parameters() {\n    return this._parameters;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/notifications/NotificationDialogMessageParser.ts"],"names":["NotificationDialogMessageParser","_type","_parameters","flush","Map","parse","wrapper","readString","totalParameters","readInt","set","type","parameters"],"mappings":"AAEA,OAAO,MAAMA,+BAAN,CACP;AAAA;AAAA,SACYC,KADZ;AAAA,SAEYC,WAFZ;AAAA;;AAIWC,EAAAA,KAAK,GACZ;AACI,SAAKF,KAAL,GAAa,IAAb;AACA,SAAKC,WAAL,GAAmB,IAAIE,GAAJ,EAAnB;AAEA,WAAO,IAAP;AACH;;AAEMC,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKL,KAAL,GAAaK,OAAO,CAACC,UAAR,EAAb;AAEA,QAAIC,eAAe,GAAGF,OAAO,CAACG,OAAR,EAAtB;;AAEA,WAAMD,eAAe,GAAG,CAAxB,EACA;AACI,WAAKN,WAAL,CAAiBQ,GAAjB,CAAqBJ,OAAO,CAACC,UAAR,EAArB,EAA2CD,OAAO,CAACC,UAAR,EAA3C;;AAEAC,MAAAA,eAAe;AAClB;;AAED,WAAO,IAAP;AACH;;AAEc,MAAJG,IAAI,GACf;AACI,WAAO,KAAKV,KAAZ;AACH;;AAEoB,MAAVW,UAAU,GACrB;AACI,WAAO,KAAKV,WAAZ;AACH;;AAtCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\n\r\nexport class NotificationDialogMessageParser implements IMessageParser\r\n{\r\n    private _type: string;\r\n    private _parameters: Map<string, string>;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._type = null;\r\n        this._parameters = new Map();\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._type = wrapper.readString();\r\n\r\n        let totalParameters = wrapper.readInt();\r\n\r\n        while(totalParameters > 0)\r\n        {\r\n            this._parameters.set(wrapper.readString(), wrapper.readString());\r\n\r\n            totalParameters--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get type(): string\r\n    {\r\n        return this._type;\r\n    }\r\n\r\n    public get parameters(): Map<string, string>\r\n    {\r\n        return this._parameters;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}