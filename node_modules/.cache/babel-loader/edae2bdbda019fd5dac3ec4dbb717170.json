{"ast":null,"code":"import { PerkData } from './common/PerkData';\nexport class PerkAllowancesMessageParser {\n  constructor() {\n    this._perks = void 0;\n  }\n\n  flush() {\n    this._perks = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._perks = [];\n    const size = wrapper.readInt();\n\n    for (let i = 0; i < size; i++) this._perks.push(new PerkData(wrapper.readString(), wrapper.readString(), wrapper.readBoolean()));\n\n    return true;\n  }\n\n  isAllowed(perkCode) {\n    let allowed = false;\n\n    for (const perk of this._perks) {\n      if (perk.code === perkCode) {\n        allowed = perk.isAllowed;\n        break;\n      }\n    }\n\n    return allowed;\n  }\n\n  get perks() {\n    return this._perks;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/perk/PerkAllowancesMessageParser.ts"],"names":["PerkData","PerkAllowancesMessageParser","_perks","flush","parse","wrapper","size","readInt","i","push","readString","readBoolean","isAllowed","perkCode","allowed","perk","code","perks"],"mappings":"AACA,SAASA,QAAT,QAAyB,mBAAzB;AAEA,OAAO,MAAMC,2BAAN,CACP;AAAA;AAAA,SACYC,MADZ;AAAA;;AAGWC,EAAAA,KAAK,GACZ;AACI,SAAKD,MAAL,GAAc,EAAd;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKH,MAAL,GAAc,EAAd;AAEA,UAAMI,IAAY,GAAGD,OAAO,CAACE,OAAR,EAArB;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAnB,EAAyBE,CAAC,EAA1B,EAA8B,KAAKN,MAAL,CAAYO,IAAZ,CAAiB,IAAIT,QAAJ,CAC3CK,OAAO,CAACK,UAAR,EAD2C,EAE3CL,OAAO,CAACK,UAAR,EAF2C,EAG3CL,OAAO,CAACM,WAAR,EAH2C,CAAjB;;AAM9B,WAAO,IAAP;AACH;;AAEMC,EAAAA,SAAS,CAACC,QAAD,EAChB;AACI,QAAIC,OAAO,GAAG,KAAd;;AAEA,SAAI,MAAMC,IAAV,IAAkB,KAAKb,MAAvB,EACA;AACI,UAAGa,IAAI,CAACC,IAAL,KAAcH,QAAjB,EACA;AACIC,QAAAA,OAAO,GAAGC,IAAI,CAACH,SAAf;AACA;AACH;AACJ;;AAED,WAAOE,OAAP;AACH;;AAEe,MAALG,KAAK,GAChB;AACI,WAAO,KAAKf,MAAZ;AACH;;AA9CL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\nimport { PerkData } from './common/PerkData';\r\n\r\nexport class PerkAllowancesMessageParser implements IMessageParser\r\n{\r\n    private _perks: PerkData[];\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._perks = [];\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._perks = [];\r\n\r\n        const size: number = wrapper.readInt();\r\n\r\n        for(let i = 0; i < size; i++) this._perks.push(new PerkData(\r\n            wrapper.readString(),\r\n            wrapper.readString(),\r\n            wrapper.readBoolean()\r\n        ));\r\n\r\n        return true;\r\n    }\r\n\r\n    public isAllowed(perkCode: string): boolean\r\n    {\r\n        let allowed = false;\r\n\r\n        for(const perk of this._perks)\r\n        {\r\n            if(perk.code === perkCode)\r\n            {\r\n                allowed = perk.isAllowed;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return allowed;\r\n    }\r\n\r\n    public get perks(): PerkData[]\r\n    {\r\n        return this._perks;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}