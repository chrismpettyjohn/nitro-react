{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/mod-tools/views/chatlog/ChatlogView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { AutoSizer, CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\nimport { TryVisitRoom } from '../../../../api';\nimport { Base, Button, Column, Flex, Grid, Text } from '../../../../common';\nimport { ModToolsOpenUserInfoEvent } from '../../../../events';\nimport { ModToolsOpenRoomInfoEvent } from '../../../../events/mod-tools/ModToolsOpenRoomInfoEvent';\nimport { DispatchUiEvent } from '../../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChatlogView = props => {\n  _s();\n\n  const {\n    records = null\n  } = props;\n\n  const rowRenderer = props => {\n    let chatlogEntry = records[0].chatlog[props.index];\n    return /*#__PURE__*/_jsxDEV(CellMeasurer, {\n      cache: cache,\n      columnIndex: 0,\n      parent: props.parent,\n      rowIndex: props.index,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        fullHeight: false,\n        style: props.style,\n        gap: 1,\n        alignItems: \"center\",\n        className: \"log-entry py-1\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          gfbold: true,\n          className: \"g-col-1\",\n          children: chatlogEntry.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          className: \"g-col-3\",\n          gfbold: true,\n          pointer: true,\n          onClick: event => DispatchUiEvent(new ModToolsOpenUserInfoEvent(chatlogEntry.userId)),\n          children: chatlogEntry.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textBreak: true,\n          wrap: true,\n          className: \"g-col-7\",\n          children: chatlogEntry.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, props.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, props.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  };\n\n  const advancedRowRenderer = props => {\n    let chatlogEntry = null;\n    let currentRecord = null;\n    let isRoomInfo = false;\n    let totalIndex = 0;\n\n    for (let i = 0; i < records.length; i++) {\n      currentRecord = records[i];\n      totalIndex++; // row for room info\n\n      totalIndex = totalIndex + currentRecord.chatlog.length;\n      if (props.index > totalIndex - 1) continue;\n\n      if (props.index + 1 === totalIndex - currentRecord.chatlog.length) {\n        isRoomInfo = true;\n        break;\n      }\n\n      const index = props.index - (totalIndex - currentRecord.chatlog.length);\n      chatlogEntry = currentRecord.chatlog[index];\n      break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(CellMeasurer, {\n      cache: cache,\n      columnIndex: 0,\n      parent: props.parent,\n      rowIndex: props.index,\n      children: [isRoomInfo && currentRecord && /*#__PURE__*/_jsxDEV(RoomInfo, {\n        roomId: currentRecord.roomId,\n        roomName: currentRecord.roomName,\n        uniqueKey: props.key,\n        style: props.style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), !isRoomInfo && /*#__PURE__*/_jsxDEV(Grid, {\n        fullHeight: false,\n        style: props.style,\n        gap: 1,\n        alignItems: \"center\",\n        className: \"log-entry py-1\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          className: \"g-col-2\",\n          children: chatlogEntry.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          className: \"g-col-3\",\n          gfbold: true,\n          underline: true,\n          pointer: true,\n          onClick: event => DispatchUiEvent(new ModToolsOpenUserInfoEvent(chatlogEntry.userId)),\n          children: chatlogEntry.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textBreak: true,\n          wrap: true,\n          className: \"g-col-7\",\n          children: chatlogEntry.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, props.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, props.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getNumRowsForAdvanced = useCallback(() => {\n    let count = 0;\n\n    for (let i = 0; i < records.length; i++) {\n      count++; // add room info row\n\n      count = count + records[i].chatlog.length;\n    }\n\n    return count;\n  }, [records]);\n\n  const RoomInfo = props => {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      gap: 2,\n      alignItems: \"center\",\n      justifyContent: \"between\",\n      style: props.style,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          gfbold: true,\n          children: \"Room name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: props.roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: event => TryVisitRoom(props.roomId),\n          children: \"Visit Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: event => DispatchUiEvent(new ModToolsOpenRoomInfoEvent(props.roomId)),\n          children: \"Room Tools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, props.uniqueKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  };\n\n  const cache = new CellMeasurerCache({\n    defaultHeight: 25,\n    fixedWidth: true\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [records && records.length === 1 && /*#__PURE__*/_jsxDEV(RoomInfo, {\n      roomId: records[0].roomId,\n      roomName: records[0].roomName,\n      uniqueKey: null,\n      style: {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      fit: true,\n      gap: 0,\n      overflow: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        gap: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          gap: 1,\n          className: \"text-black pb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Base, {\n            className: \"g-col-1\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Base, {\n            className: \"g-col-3\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Base, {\n            className: \"g-col-7\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), records && records.length > 0 && /*#__PURE__*/_jsxDEV(Column, {\n        className: \"log-container striped-children\",\n        overflow: \"auto\",\n        gap: 0,\n        children: /*#__PURE__*/_jsxDEV(AutoSizer, {\n          defaultWidth: 400,\n          defaultHeight: 200,\n          children: _ref => {\n            let {\n              height,\n              width\n            } = _ref;\n            cache.clearAll();\n            return /*#__PURE__*/_jsxDEV(List, {\n              width: width,\n              height: height,\n              rowCount: records.length > 1 ? getNumRowsForAdvanced() : records[0].chatlog.length,\n              rowHeight: cache.rowHeight,\n              className: 'log-entry-container',\n              rowRenderer: records.length > 1 ? advancedRowRenderer : rowRenderer,\n              deferredMeasurementCache: cache\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatlogView, \"rIDngq3gvtVLHVJjRkPjohfA4C4=\");\n\n_c = ChatlogView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatlogView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/mod-tools/views/chatlog/ChatlogView.tsx"],"names":["useCallback","AutoSizer","CellMeasurer","CellMeasurerCache","List","TryVisitRoom","Base","Button","Column","Flex","Grid","Text","ModToolsOpenUserInfoEvent","ModToolsOpenRoomInfoEvent","DispatchUiEvent","ChatlogView","props","records","rowRenderer","chatlogEntry","chatlog","index","cache","parent","style","timestamp","event","userId","userName","message","key","advancedRowRenderer","currentRecord","isRoomInfo","totalIndex","i","length","roomId","roomName","getNumRowsForAdvanced","count","RoomInfo","uniqueKey","defaultHeight","fixedWidth","height","width","clearAll","rowHeight"],"mappings":"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","sourcesContent":["import { ChatRecordData } from '@nitrots/nitro-renderer';\nimport { CSSProperties, FC, Key, useCallback } from 'react';\nimport { AutoSizer, CellMeasurer, CellMeasurerCache, List, ListRowProps } from 'react-virtualized';\nimport { TryVisitRoom } from '../../../../api';\nimport { Base, Button, Column, Flex, Grid, Text } from '../../../../common';\nimport { ModToolsOpenUserInfoEvent } from '../../../../events';\nimport { ModToolsOpenRoomInfoEvent } from '../../../../events/mod-tools/ModToolsOpenRoomInfoEvent';\nimport { DispatchUiEvent } from '../../../../hooks';\n\ninterface ChatlogViewProps\n{\n    records: ChatRecordData[];\n}\n\nexport const ChatlogView: FC<ChatlogViewProps> = props =>\n{\n    const { records = null } = props;\n\n    const rowRenderer = (props: ListRowProps) =>\n    {\n        let chatlogEntry = records[0].chatlog[props.index];\n\n        return (\n            <CellMeasurer\n                cache={ cache }\n                columnIndex={ 0 }\n                key={ props.key }\n                parent={ props.parent }\n                rowIndex={ props.index }\n            >\n                <Grid key={ props.key } fullHeight={ false } style={ props.style } gap={ 1 } alignItems=\"center\" className=\"log-entry py-1\">\n                    <Text gfbold className=\"g-col-1\">{ chatlogEntry.timestamp }</Text>\n                    <Text className=\"g-col-3\" gfbold pointer onClick={ event => DispatchUiEvent(new ModToolsOpenUserInfoEvent(chatlogEntry.userId)) }>{ chatlogEntry.userName }</Text>\n                    <Text textBreak wrap className=\"g-col-7\">{ chatlogEntry.message }</Text>\n                </Grid>\n            </CellMeasurer>\n        );\n    };\n\n    const advancedRowRenderer = (props: ListRowProps) =>\n    {\n        let chatlogEntry = null;\n        let currentRecord: ChatRecordData = null;\n        let isRoomInfo = false;\n        let totalIndex = 0;\n\n        for(let i = 0; i < records.length; i++)\n        {\n            currentRecord = records[i];\n\n            totalIndex++; // row for room info\n            totalIndex = (totalIndex + currentRecord.chatlog.length);\n\n            if(props.index > (totalIndex - 1)) continue;\n            \n            if((props.index + 1) === (totalIndex - currentRecord.chatlog.length))\n            {\n                isRoomInfo = true;\n\n                break;\n            }\n\n            const index = (props.index - (totalIndex - currentRecord.chatlog.length));\n\n            chatlogEntry = currentRecord.chatlog[index];\n\n            break;\n        }\n\n        return (\n            <CellMeasurer\n                cache={ cache }\n                columnIndex={ 0 }\n                key={ props.key }\n                parent={ props.parent }\n                rowIndex={ props.index }\n            >\n                { (isRoomInfo && currentRecord) &&\n                    <RoomInfo roomId={ currentRecord.roomId } roomName={ currentRecord.roomName } uniqueKey={ props.key } style={ props.style } /> }\n                { !isRoomInfo &&\n                    <Grid key={ props.key } fullHeight={ false } style={ props.style } gap={ 1 } alignItems=\"center\" className=\"log-entry py-1\">\n                        <Text className=\"g-col-2\">{ chatlogEntry.timestamp }</Text>\n                        <Text className=\"g-col-3\" gfbold underline pointer onClick={ event => DispatchUiEvent(new ModToolsOpenUserInfoEvent(chatlogEntry.userId)) }>{ chatlogEntry.userName }</Text>\n                        <Text textBreak wrap className=\"g-col-7\">{ chatlogEntry.message }</Text>\n                    </Grid> }\n            </CellMeasurer>\n        );\n    }\n\n    const getNumRowsForAdvanced = useCallback(() =>\n    {\n        let count = 0;\n\n        for(let i = 0; i < records.length; i++)\n        {\n            count++; // add room info row\n            count = count + records[i].chatlog.length;\n        }\n\n        return count;\n    }, [ records ]);\n\n    const RoomInfo = (props: { roomId: number, roomName: string, uniqueKey: Key, style: CSSProperties }) =>\n    {\n        return (\n            <Flex key={ props.uniqueKey } gap={ 2 } alignItems=\"center\" justifyContent=\"between\" style={ props.style }>\n                <Flex gap={ 1 }>\n                    <Text gfbold>Room name:</Text>\n                    <Text>{ props.roomName }</Text>\n                </Flex>\n                <Flex gap={ 1 }>\n                    <Button onClick={ event => TryVisitRoom(props.roomId) }>Visit Room</Button>\n                    <Button onClick={ event => DispatchUiEvent(new ModToolsOpenRoomInfoEvent(props.roomId)) }>Room Tools</Button>\n                </Flex>\n            </Flex>\n        );\n    }\n\n    const cache = new CellMeasurerCache({\n        defaultHeight: 25,\n        fixedWidth: true\n    });\n\n    return (\n        <>\n            { (records && (records.length === 1)) &&\n                <RoomInfo roomId={ records[0].roomId } roomName={ records[0].roomName } uniqueKey={ null } style={ {} } /> }\n            <Column fit gap={ 0 } overflow=\"hidden\">\n                <Column gap={ 2 }>\n                    <Grid gap={ 1 } className=\"text-black pb-1\">\n                        <Base className=\"g-col-1\">Time</Base>\n                        <Base className=\"g-col-3\">User</Base>\n                        <Base className=\"g-col-7\">Message</Base>\n                    </Grid>\n                </Column>\n                { (records && (records.length > 0)) &&\n                    <Column className=\"log-container striped-children\" overflow=\"auto\" gap={ 0 }>\n                        <AutoSizer defaultWidth={ 400 } defaultHeight={ 200 }>\n                            { ({ height, width }) => \n                            {\n                                cache.clearAll();\n\n                                return (\n                                    <List\n                                        width={ width }\n                                        height={ height }\n                                        rowCount={ (records.length > 1) ? getNumRowsForAdvanced() : records[0].chatlog.length }\n                                        rowHeight={ cache.rowHeight }\n                                        className={ 'log-entry-container' }\n                                        rowRenderer={ (records.length > 1) ? advancedRowRenderer : rowRenderer }\n                                        deferredMeasurementCache={ cache } />\n                                );\n                            } }\n                        </AutoSizer>\n                    </Column> }\n            </Column>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}