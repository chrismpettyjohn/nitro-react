{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/AutoGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { Grid } from './Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AutoGrid = props => {\n  _s();\n\n  const {\n    columnMinWidth = 40,\n    columnMinHeight = 40,\n    columnCount = 0,\n    fullHeight = false,\n    maxContent = true,\n    overflow = 'auto',\n    style = {},\n    ...rest\n  } = props;\n  const getStyle = useMemo(() => {\n    let newStyle = {};\n    newStyle['--nitro-grid-column-min-height'] = columnMinHeight + 'px';\n    if (columnCount > 1) newStyle.gridTemplateColumns = `repeat(auto-fill, minmax(${columnMinWidth}px, 1fr))`;\n    if (Object.keys(style).length) newStyle = { ...newStyle,\n      ...style\n    };\n    return newStyle;\n  }, [columnMinWidth, columnMinHeight, columnCount, style]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columnCount: columnCount,\n    fullHeight: fullHeight,\n    overflow: overflow,\n    style: getStyle,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AutoGrid, \"Jul1RNZKqv25ZztDKwrS7Cji8Sw=\");\n\n_c = AutoGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoGrid\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/AutoGrid.tsx"],"names":["useMemo","Grid","AutoGrid","props","columnMinWidth","columnMinHeight","columnCount","fullHeight","maxContent","overflow","style","rest","getStyle","newStyle","gridTemplateColumns","Object","keys","length"],"mappings":";;;AAAA,SAA4BA,OAA5B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAgC,QAAhC;;AAQA,OAAO,MAAMC,QAA2B,GAAGC,KAAK,IAChD;AAAA;;AACI,QAAM;AAAEC,IAAAA,cAAc,GAAG,EAAnB;AAAuBC,IAAAA,eAAe,GAAG,EAAzC;AAA6CC,IAAAA,WAAW,GAAG,CAA3D;AAA8DC,IAAAA,UAAU,GAAG,KAA3E;AAAkFC,IAAAA,UAAU,GAAG,IAA/F;AAAqGC,IAAAA,QAAQ,GAAG,MAAhH;AAAwHC,IAAAA,KAAK,GAAG,EAAhI;AAAoI,OAAGC;AAAvI,MAAgJR,KAAtJ;AAEA,QAAMS,QAAQ,GAAGZ,OAAO,CAAC,MACzB;AACI,QAAIa,QAAuB,GAAG,EAA9B;AAEAA,IAAAA,QAAQ,CAAC,gCAAD,CAAR,GAA8CR,eAAe,GAAG,IAAhE;AAEA,QAAGC,WAAW,GAAG,CAAjB,EAAoBO,QAAQ,CAACC,mBAAT,GAAgC,4BAA4BV,cAAgB,WAA5E;AAEpB,QAAGW,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,MAAtB,EAA8BJ,QAAQ,GAAG,EAAE,GAAGA,QAAL;AAAe,SAAGH;AAAlB,KAAX;AAE9B,WAAOG,QAAP;AACH,GAXuB,EAWrB,CAAET,cAAF,EAAkBC,eAAlB,EAAmCC,WAAnC,EAAgDI,KAAhD,CAXqB,CAAxB;AAaA,sBAAO,QAAC,IAAD;AAAM,IAAA,WAAW,EAAGJ,WAApB;AAAkC,IAAA,UAAU,EAAGC,UAA/C;AAA4D,IAAA,QAAQ,EAAGE,QAAvE;AAAkF,IAAA,KAAK,EAAGG,QAA1F;AAAA,OAA0GD;AAA1G;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAlBM;;GAAMT,Q;;KAAAA,Q","sourcesContent":["import { CSSProperties, FC, useMemo } from 'react';\nimport { Grid, GridProps } from './Grid';\n\nexport interface AutoGridProps extends GridProps\n{\n    columnMinWidth?: number;\n    columnMinHeight?: number;\n}\n\nexport const AutoGrid: FC<AutoGridProps> = props =>\n{\n    const { columnMinWidth = 40, columnMinHeight = 40, columnCount = 0, fullHeight = false, maxContent = true, overflow = 'auto', style = {}, ...rest } = props;\n\n    const getStyle = useMemo(() =>\n    {\n        let newStyle: CSSProperties = {};\n\n        newStyle['--nitro-grid-column-min-height'] = (columnMinHeight + 'px');\n        \n        if(columnCount > 1) newStyle.gridTemplateColumns = `repeat(auto-fill, minmax(${ columnMinWidth }px, 1fr))`;\n\n        if(Object.keys(style).length) newStyle = { ...newStyle, ...style };\n\n        return newStyle;\n    }, [ columnMinWidth, columnMinHeight, columnCount, style ]);\n\n    return <Grid columnCount={ columnCount } fullHeight={ fullHeight } overflow={ overflow } style={ getStyle } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}