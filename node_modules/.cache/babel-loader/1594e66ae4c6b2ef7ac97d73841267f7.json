{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/mod-tools/ModToolsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModToolsContext = /*#__PURE__*/createContext({\n  modToolsState: null,\n  dispatchModToolsState: null\n});\nexport const ModToolsContextProvider = props => {\n  return /*#__PURE__*/_jsxDEV(ModToolsContext.Provider, {\n    value: props.value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n_c = ModToolsContextProvider;\nexport const useModToolsContext = () => {\n  _s();\n\n  return useContext(ModToolsContext);\n};\n\n_s(useModToolsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ModToolsContextProvider\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/mod-tools/ModToolsContext.tsx"],"names":["createContext","useContext","ModToolsContext","modToolsState","dispatchModToolsState","ModToolsContextProvider","props","value","children","useModToolsContext"],"mappings":";;;AAAA,SAASA,aAAT,EAAqDC,UAArD,QAAuE,OAAvE;;AASA,MAAMC,eAAe,gBAAGF,aAAa,CAAmB;AACpDG,EAAAA,aAAa,EAAE,IADqC;AAEpDC,EAAAA,qBAAqB,EAAE;AAF6B,CAAnB,CAArC;AAKA,OAAO,MAAMC,uBAA4D,GAAGC,KAAK,IACjF;AACI,sBAAO,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAGA,KAAK,CAACC,KAAxC;AAAA,cAAkDD,KAAK,CAACE;AAAxD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHM;KAAMH,uB;AAKb,OAAO,MAAMI,kBAAkB,GAAG;AAAA;;AAAA,SAAMR,UAAU,CAACC,eAAD,CAAhB;AAAA,CAA3B;;GAAMO,kB","sourcesContent":["import { createContext, Dispatch, FC, ProviderProps, useContext } from 'react';\nimport { IModToolsAction, IModToolsState } from './reducers/ModToolsReducer';\n\nexport interface IModToolsContext\n{\n    modToolsState: IModToolsState;\n    dispatchModToolsState: Dispatch<IModToolsAction>;\n}\n\nconst ModToolsContext = createContext<IModToolsContext>({\n    modToolsState: null,\n    dispatchModToolsState: null\n});\n\nexport const ModToolsContextProvider: FC<ProviderProps<IModToolsContext>> = props =>\n{\n    return <ModToolsContext.Provider value={ props.value }>{ props.children }</ModToolsContext.Provider>\n}\n\nexport const useModToolsContext = () => useContext(ModToolsContext);\n"]},"metadata":{},"sourceType":"module"}