{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/wired/views/conditions/WiredConditionFurniHasNotFurniOnView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredConditionBaseView } from './WiredConditionBaseView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WiredConditionFurniHasNotFurniOnView = props => {\n  _s();\n\n  const [requireAll, setRequireAll] = useState(-1);\n  const {\n    trigger = null,\n    setIntParams = null\n  } = useWiredContext();\n\n  const save = () => setIntParams([requireAll]);\n\n  useEffect(() => {\n    setRequireAll(trigger.intData.length > 0 ? trigger.intData[0] : 0);\n  }, [trigger]);\n  return /*#__PURE__*/_jsxDEV(WiredConditionBaseView, {\n    requiresFurni: WiredFurniType.STUFF_SELECTION_OPTION_BY_ID,\n    hasSpecialInput: true,\n    save: save,\n    children: /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        gfbold: true,\n        children: LocalizeText('wiredfurni.params.not_requireall')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), [0, 1].map(value => {\n        return /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"requireAll\",\n            id: `requireAll${value}`,\n            checked: requireAll === value,\n            onChange: event => setRequireAll(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: LocalizeText(`wiredfurni.params.not_requireall.${value}`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WiredConditionFurniHasNotFurniOnView, \"knsgmE8TgCfNYq97AbmgR5jB5Mw=\", false, function () {\n  return [useWiredContext];\n});\n\n_c = WiredConditionFurniHasNotFurniOnView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WiredConditionFurniHasNotFurniOnView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/wired/views/conditions/WiredConditionFurniHasNotFurniOnView.tsx"],"names":["useEffect","useState","LocalizeText","WiredFurniType","Column","Flex","Text","useWiredContext","WiredConditionBaseView","WiredConditionFurniHasNotFurniOnView","props","requireAll","setRequireAll","trigger","setIntParams","save","intData","length","STUFF_SELECTION_OPTION_BY_ID","map","value","event"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,oBAAnC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;;AAEA,OAAO,MAAMC,oCAA4C,GAAGC,KAAK,IACjE;AAAA;;AACI,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCX,QAAQ,CAAC,CAAC,CAAF,CAA9C;AACA,QAAM;AAAEY,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,YAAY,GAAG;AAAjC,MAA0CP,eAAe,EAA/D;;AAEA,QAAMQ,IAAI,GAAG,MAAMD,YAAY,CAAC,CAAEH,UAAF,CAAD,CAA/B;;AAEAX,EAAAA,SAAS,CAAC,MACV;AACIY,IAAAA,aAAa,CAAEC,OAAO,CAACG,OAAR,CAAgBC,MAAhB,GAAyB,CAA1B,GAA+BJ,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAA/B,GAAoD,CAArD,CAAb;AACH,GAHQ,EAGN,CAAEH,OAAF,CAHM,CAAT;AAKA,sBACI,QAAC,sBAAD;AAAwB,IAAA,aAAa,EAAGV,cAAc,CAACe,4BAAvD;AAAsF,IAAA,eAAe,EAAG,IAAxG;AAA+G,IAAA,IAAI,EAAGH,IAAtH;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,kBAAeb,YAAY,CAAC,kCAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,EAEM,CAAE,CAAF,EAAK,CAAL,EAASiB,GAAT,CAAaC,KAAK,IACpB;AACI,4BACI,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,QAAjB;AAA0B,UAAA,GAAG,EAAG,CAAhC;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,IAAI,EAAC,OAAzC;AAAiD,YAAA,IAAI,EAAC,YAAtD;AAAmE,YAAA,EAAE,EAAI,aAAaA,KAAO,EAA7F;AAAiG,YAAA,OAAO,EAAIT,UAAU,KAAKS,KAA3H;AAAoI,YAAA,QAAQ,EAAGC,KAAK,IAAIT,aAAa,CAACQ,KAAD;AAArK;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAA,sBAAQlB,YAAY,CAAE,oCAAoCkB,KAAO,EAA7C;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAA0CA,KAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH,OARC,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5BM;;GAAMX,oC;UAGuCF,e;;;KAHvCE,oC","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { LocalizeText, WiredFurniType } from '../../../../api';\nimport { Column, Flex, Text } from '../../../../common';\nimport { useWiredContext } from '../../WiredContext';\nimport { WiredConditionBaseView } from './WiredConditionBaseView';\n\nexport const WiredConditionFurniHasNotFurniOnView: FC<{}> = props =>\n{\n    const [ requireAll, setRequireAll ] = useState(-1);\n    const { trigger = null, setIntParams = null } = useWiredContext();\n\n    const save = () => setIntParams([ requireAll ]);\n\n    useEffect(() =>\n    {\n        setRequireAll((trigger.intData.length > 0) ? trigger.intData[0] : 0);\n    }, [ trigger ]);\n    \n    return (\n        <WiredConditionBaseView requiresFurni={ WiredFurniType.STUFF_SELECTION_OPTION_BY_ID } hasSpecialInput={ true } save={ save }>\n            <Column gap={ 1 }>\n                <Text gfbold>{ LocalizeText('wiredfurni.params.not_requireall') }</Text>\n                { [ 0, 1 ].map(value =>\n                {\n                    return (\n                        <Flex alignItems=\"center\" gap={ 1 } key={ value }>\n                            <input className=\"form-check-input\" type=\"radio\" name=\"requireAll\" id={ `requireAll${ value }` } checked={ (requireAll === value) } onChange={ event => setRequireAll(value) } />\n                            <Text>{ LocalizeText(`wiredfurni.params.not_requireall.${ value }`) }</Text>\n                        </Flex>\n                    )\n                }) }\n            </Column>\n        </WiredConditionBaseView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}