{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/achievements/views/AchievementDetailsView.tsx\";\nimport { GetAchievementBadgeCode, GetAchievementLevel, LocalizeBadgeDescription, LocalizeBadgeName, LocalizeText } from '../../../api';\nimport { Column, Flex, LayoutCurrencyIcon, LayoutProgressBar, Text } from '../../../common';\nimport { AchievementBadgeView } from './AchievementBadgeView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AchievementDetailsView = props => {\n  const {\n    achievement = null,\n    children = null,\n    ...rest\n  } = props;\n  if (!achievement) return null;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    shrink: true,\n    className: \"bg-muted rounded p-2 text-black\",\n    gap: 2,\n    overflow: \"hidden\",\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      center: true,\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(AchievementBadgeView, {\n        className: \"nitro-achievements-badge-image\",\n        achievement: achievement,\n        scale: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        children: LocalizeText('achievements.details.level', ['level', 'limit'], [GetAchievementLevel(achievement).toString(), achievement.levelCount.toString()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      fullWidth: true,\n      justifyContent: \"center\",\n      overflow: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"bold\",\n          truncate: true,\n          children: LocalizeBadgeName(GetAchievementBadgeCode(achievement))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textBreak: true,\n          children: LocalizeBadgeDescription(GetAchievementBadgeCode(achievement))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), (achievement.levelRewardPoints > 0 || achievement.scoreLimit > 0) && /*#__PURE__*/_jsxDEV(Column, {\n        gap: 1,\n        children: [achievement.levelRewardPoints > 0 && /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            truncate: true,\n            className: \"small\",\n            children: LocalizeText('achievements.details.reward')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            center: true,\n            className: \"fw-bold small\",\n            gap: 1,\n            children: [achievement.levelRewardPoints, /*#__PURE__*/_jsxDEV(LayoutCurrencyIcon, {\n              type: achievement.levelRewardPointType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), achievement.scoreLimit > 0 && /*#__PURE__*/_jsxDEV(LayoutProgressBar, {\n          text: LocalizeText('achievements.details.progress', ['progress', 'limit'], [(achievement.currentPoints + achievement.scoreAtStartOfLevel).toString(), (achievement.scoreLimit + achievement.scoreAtStartOfLevel).toString()]),\n          progress: achievement.currentPoints + achievement.scoreAtStartOfLevel,\n          maxProgress: achievement.scoreLimit + achievement.scoreAtStartOfLevel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = AchievementDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AchievementDetailsView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/achievements/views/AchievementDetailsView.tsx"],"names":["GetAchievementBadgeCode","GetAchievementLevel","LocalizeBadgeDescription","LocalizeBadgeName","LocalizeText","Column","Flex","LayoutCurrencyIcon","LayoutProgressBar","Text","AchievementBadgeView","AchievementDetailsView","props","achievement","children","rest","toString","levelCount","levelRewardPoints","scoreLimit","levelRewardPointType","currentPoints","scoreAtStartOfLevel"],"mappings":"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","sourcesContent":["import { AchievementData } from '@nitrots/nitro-renderer';\nimport { FC } from 'react';\nimport { GetAchievementBadgeCode, GetAchievementLevel, LocalizeBadgeDescription, LocalizeBadgeName, LocalizeText } from '../../../api';\nimport { Column, Flex, LayoutCurrencyIcon, LayoutProgressBar, Text } from '../../../common';\nimport { AchievementBadgeView } from './AchievementBadgeView';\n\ninterface AchievementDetailsViewProps\n{\n    achievement: AchievementData;\n}\n\nexport const AchievementDetailsView: FC<AchievementDetailsViewProps> = props =>\n{\n    const { achievement = null, children = null, ...rest } = props;\n\n    if(!achievement) return null;\n\n    return (\n        <Flex shrink className=\"bg-muted rounded p-2 text-black\" gap={ 2 } overflow=\"hidden\" { ...rest }>\n            <Column center gap={ 1 }>\n                <AchievementBadgeView className=\"nitro-achievements-badge-image\" achievement={ achievement } scale={ 2 } />\n                <Text fontWeight=\"bold\">\n                    { LocalizeText('achievements.details.level', [ 'level', 'limit' ], [ GetAchievementLevel(achievement).toString(), achievement.levelCount.toString() ]) }\n                </Text>\n            </Column>\n            <Column fullWidth justifyContent=\"center\" overflow=\"hidden\">\n                <Column gap={ 1 }>\n                    <Text fontWeight=\"bold\" truncate>\n                        { LocalizeBadgeName(GetAchievementBadgeCode(achievement)) }\n                    </Text>\n                    <Text textBreak>\n                        { LocalizeBadgeDescription(GetAchievementBadgeCode(achievement)) }\n                    </Text>\n                </Column>\n                { ((achievement.levelRewardPoints > 0) || (achievement.scoreLimit > 0)) &&\n                    <Column gap={ 1 }>\n                        { (achievement.levelRewardPoints > 0) &&\n                            <Flex alignItems=\"center\" gap={ 1 }>\n                                <Text truncate className=\"small\">\n                                    { LocalizeText('achievements.details.reward') }\n                                </Text>\n                                <Flex center className=\"fw-bold small\" gap={ 1 }>\n                                    { achievement.levelRewardPoints }\n                                    <LayoutCurrencyIcon type={ achievement.levelRewardPointType } />\n                                </Flex>\n                            </Flex> }\n                        { (achievement.scoreLimit > 0) &&\n                            <LayoutProgressBar text={ LocalizeText('achievements.details.progress', [ 'progress', 'limit' ], [ (achievement.currentPoints + achievement.scoreAtStartOfLevel).toString(), (achievement.scoreLimit + achievement.scoreAtStartOfLevel).toString() ]) } progress={ (achievement.currentPoints + achievement.scoreAtStartOfLevel) } maxProgress={ (achievement.scoreLimit + achievement.scoreAtStartOfLevel) } /> }\n                    </Column> }\n            </Column>\n            { children }\n        </Flex>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}