{"ast":null,"code":"import { CatalogPageMessageOfferData } from '../../incoming/catalog/CatalogPageMessageOfferData';\nimport { ClubGiftData } from '../../incoming/catalog/ClubGiftData';\nexport class ClubGiftInfoParser {\n  constructor() {\n    this._daysUntilNextGift = void 0;\n    this._giftsAvailable = void 0;\n    this._offers = void 0;\n    this._giftData = void 0;\n  }\n\n  flush() {\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._offers = [];\n    this._giftData = new Map();\n    this._daysUntilNextGift = wrapper.readInt();\n    this._giftsAvailable = wrapper.readInt();\n    const offerCount = wrapper.readInt();\n\n    for (let i = 0; i < offerCount; i++) {\n      this._offers.push(new CatalogPageMessageOfferData(wrapper));\n    }\n\n    const giftDataCount = wrapper.readInt();\n\n    for (let i = 0; i < giftDataCount; i++) {\n      const item = new ClubGiftData(wrapper);\n\n      this._giftData.set(item.offerId, item);\n    }\n\n    return true;\n  }\n\n  get offers() {\n    return this._offers;\n  }\n\n  get daysUntilNextGift() {\n    return this._daysUntilNextGift;\n  }\n\n  get giftsAvailable() {\n    return this._giftsAvailable;\n  }\n\n  set giftsAvailable(gifts) {\n    this._giftsAvailable = gifts;\n  }\n\n  getOfferExtraData(offerId) {\n    if (!offerId) return null;\n    return this._giftData.get(offerId);\n  }\n\n  get giftData() {\n    return this._giftData;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/catalog/ClubGiftInfoParser.ts"],"names":["CatalogPageMessageOfferData","ClubGiftData","ClubGiftInfoParser","_daysUntilNextGift","_giftsAvailable","_offers","_giftData","flush","parse","wrapper","Map","readInt","offerCount","i","push","giftDataCount","item","set","offerId","offers","daysUntilNextGift","giftsAvailable","gifts","getOfferExtraData","get","giftData"],"mappings":"AACA,SAASA,2BAAT,QAA4C,oDAA5C;AACA,SAASC,YAAT,QAA6B,qCAA7B;AAEA,OAAO,MAAMC,kBAAN,CACP;AAAA;AAAA,SACYC,kBADZ;AAAA,SAEYC,eAFZ;AAAA,SAGYC,OAHZ;AAAA,SAIYC,SAJZ;AAAA;;AAMWC,EAAAA,KAAK,GACZ;AAEI,WAAO,IAAP;AACH;;AAEMC,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKJ,OAAL,GAAe,EAAf;AACA,SAAKC,SAAL,GAAiB,IAAII,GAAJ,EAAjB;AACA,SAAKP,kBAAL,GAA0BM,OAAO,CAACE,OAAR,EAA1B;AACA,SAAKP,eAAL,GAAuBK,OAAO,CAACE,OAAR,EAAvB;AAEA,UAAMC,UAAU,GAAGH,OAAO,CAACE,OAAR,EAAnB;;AAEA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,UAAnB,EAA+BC,CAAC,EAAhC,EACA;AACI,WAAKR,OAAL,CAAaS,IAAb,CAAkB,IAAId,2BAAJ,CAAgCS,OAAhC,CAAlB;AACH;;AAED,UAAMM,aAAa,GAAGN,OAAO,CAACE,OAAR,EAAtB;;AAEA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGE,aAAnB,EAAkCF,CAAC,EAAnC,EACA;AACI,YAAMG,IAAI,GAAG,IAAIf,YAAJ,CAAiBQ,OAAjB,CAAb;;AACA,WAAKH,SAAL,CAAeW,GAAf,CAAmBD,IAAI,CAACE,OAAxB,EAAiCF,IAAjC;AACH;;AAED,WAAO,IAAP;AACH;;AAEgB,MAANG,MAAM,GACjB;AACI,WAAO,KAAKd,OAAZ;AACH;;AAE2B,MAAjBe,iBAAiB,GAC5B;AACI,WAAO,KAAKjB,kBAAZ;AACH;;AAEwB,MAAdkB,cAAc,GACzB;AACI,WAAO,KAAKjB,eAAZ;AACH;;AAEwB,MAAdiB,cAAc,CAACC,KAAD,EACzB;AACI,SAAKlB,eAAL,GAAuBkB,KAAvB;AACH;;AAEMC,EAAAA,iBAAiB,CAACL,OAAD,EACxB;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,IAAP;AAEb,WAAO,KAAKZ,SAAL,CAAekB,GAAf,CAAmBN,OAAnB,CAAP;AACH;;AAGkB,MAARO,QAAQ,GACnB;AACI,WAAO,KAAKnB,SAAZ;AACH;;AAtEL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\nimport { CatalogPageMessageOfferData } from '../../incoming/catalog/CatalogPageMessageOfferData';\r\nimport { ClubGiftData } from '../../incoming/catalog/ClubGiftData';\r\n\r\nexport class ClubGiftInfoParser implements IMessageParser\r\n{\r\n    private _daysUntilNextGift: number;\r\n    private _giftsAvailable: number;\r\n    private _offers: CatalogPageMessageOfferData[];\r\n    private _giftData:Map<number, ClubGiftData>;\r\n\r\n    public flush(): boolean\r\n    {\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._offers = [];\r\n        this._giftData = new Map<number, ClubGiftData>();\r\n        this._daysUntilNextGift = wrapper.readInt();\r\n        this._giftsAvailable = wrapper.readInt();\r\n\r\n        const offerCount = wrapper.readInt();\r\n\r\n        for(let i = 0; i < offerCount; i ++)\r\n        {\r\n            this._offers.push(new CatalogPageMessageOfferData(wrapper));\r\n        }\r\n\r\n        const giftDataCount = wrapper.readInt();\r\n\r\n        for(let i = 0; i < giftDataCount; i++)\r\n        {\r\n            const item = new ClubGiftData(wrapper);\r\n            this._giftData.set(item.offerId, item);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get offers(): CatalogPageMessageOfferData[]\r\n    {\r\n        return this._offers;\r\n    }\r\n\r\n    public get daysUntilNextGift(): number\r\n    {\r\n        return this._daysUntilNextGift;\r\n    }\r\n\r\n    public get giftsAvailable(): number\r\n    {\r\n        return this._giftsAvailable;\r\n    }\r\n\r\n    public set giftsAvailable(gifts: number)\r\n    {\r\n        this._giftsAvailable = gifts;\r\n    }\r\n\r\n    public getOfferExtraData(offerId: number): ClubGiftData\r\n    {\r\n        if(!offerId) return null;\r\n\r\n        return this._giftData.get(offerId);\r\n    }\r\n\r\n\r\n    public get giftData():Map<number, ClubGiftData>\r\n    {\r\n        return this._giftData;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}