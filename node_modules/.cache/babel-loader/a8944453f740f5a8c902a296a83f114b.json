{"ast":null,"code":"export class DirectionalOffsetData {\n  constructor() {\n    this._offsetX = void 0;\n    this._offsetY = void 0;\n    this._offsetX = new Map();\n    this._offsetY = new Map();\n  }\n\n  getXOffset(direction, defaultX) {\n    const existing = this._offsetX.get(direction);\n\n    if (existing === undefined || existing === null) return defaultX;\n    return existing;\n  }\n\n  getYOffset(direction, defaultY) {\n    const existing = this._offsetY.get(direction);\n\n    if (existing === undefined || existing === null) return defaultY;\n    return existing;\n  }\n\n  setDirection(direction, offsetX, offsetY) {\n    this._offsetX.set(direction, offsetX);\n\n    this._offsetY.set(direction, offsetY);\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/data/DirectionalOffsetData.ts"],"names":["DirectionalOffsetData","constructor","_offsetX","_offsetY","Map","getXOffset","direction","defaultX","existing","get","undefined","getYOffset","defaultY","setDirection","offsetX","offsetY","set"],"mappings":"AAAA,OAAO,MAAMA,qBAAN,CACP;AAIIC,EAAAA,WAAW,GACX;AAAA,SAJQC,QAIR;AAAA,SAHQC,QAGR;AACI,SAAKD,QAAL,GAAgB,IAAIE,GAAJ,EAAhB;AACA,SAAKD,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACH;;AAEMC,EAAAA,UAAU,CAACC,SAAD,EAAoBC,QAApB,EACjB;AACI,UAAMC,QAAQ,GAAG,KAAKN,QAAL,CAAcO,GAAd,CAAkBH,SAAlB,CAAjB;;AAEA,QAAGE,QAAQ,KAAKE,SAAb,IAA0BF,QAAQ,KAAK,IAA1C,EAAgD,OAAOD,QAAP;AAEhD,WAAOC,QAAP;AACH;;AAEMG,EAAAA,UAAU,CAACL,SAAD,EAAoBM,QAApB,EACjB;AACI,UAAMJ,QAAQ,GAAG,KAAKL,QAAL,CAAcM,GAAd,CAAkBH,SAAlB,CAAjB;;AAEA,QAAGE,QAAQ,KAAKE,SAAb,IAA0BF,QAAQ,KAAK,IAA1C,EAAgD,OAAOI,QAAP;AAEhD,WAAOJ,QAAP;AACH;;AAEMK,EAAAA,YAAY,CAACP,SAAD,EAAoBQ,OAApB,EAAqCC,OAArC,EACnB;AACI,SAAKb,QAAL,CAAcc,GAAd,CAAkBV,SAAlB,EAA6BQ,OAA7B;;AACA,SAAKX,QAAL,CAAca,GAAd,CAAkBV,SAAlB,EAA6BS,OAA7B;AACH;;AAhCL","sourcesContent":["export class DirectionalOffsetData\r\n{\r\n    private _offsetX: Map<number, number>;\r\n    private _offsetY: Map<number, number>;\r\n\r\n    constructor()\r\n    {\r\n        this._offsetX = new Map();\r\n        this._offsetY = new Map();\r\n    }\r\n\r\n    public getXOffset(direction: number, defaultX: number): number\r\n    {\r\n        const existing = this._offsetX.get(direction);\r\n\r\n        if(existing === undefined || existing === null) return defaultX;\r\n\r\n        return existing;\r\n    }\r\n\r\n    public getYOffset(direction: number, defaultY: number): number\r\n    {\r\n        const existing = this._offsetY.get(direction);\r\n\r\n        if(existing === undefined || existing === null) return defaultY;\r\n\r\n        return existing;\r\n    }\r\n\r\n    public setDirection(direction: number, offsetX: number, offsetY: number): void\r\n    {\r\n        this._offsetX.set(direction, offsetX);\r\n        this._offsetY.set(direction, offsetY);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}