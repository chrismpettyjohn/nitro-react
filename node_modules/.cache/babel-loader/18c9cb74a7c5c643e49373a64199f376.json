{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/main/MainView.tsx\",\n    _s = $RefreshSig$();\n\nimport { HabboWebTools, RoomSessionEvent } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useState } from 'react';\nimport { AddEventLinkTracker, GetCommunication, RemoveLinkEventTracker } from '../../api';\nimport { Base, TransitionAnimation, TransitionAnimationTypes } from '../../common';\nimport { UseRoomSessionManagerEvent } from '../../hooks';\nimport { AchievementsView } from '../achievements/AchievementsView';\nimport { AvatarEditorView } from '../avatar-editor/AvatarEditorView';\nimport { CameraWidgetView } from '../camera/CameraWidgetView';\nimport { CampaignView } from '../campaign/CampaignView';\nimport { CatalogView } from '../catalog/CatalogView';\nimport { ChatHistoryView } from '../chat-history/ChatHistoryView';\nimport { FloorplanEditorView } from '../floorplan-editor/FloorplanEditorView';\nimport { FriendsView } from '../friends/FriendsView';\nimport { GroupsView } from '../groups/GroupsView';\nimport { GuideToolView } from '../guide-tool/GuideToolView';\nimport { HcCenterView } from '../hc-center/HcCenterView';\nimport { HelpView } from '../help/HelpView';\nimport { HotelView } from '../hotel-view/HotelView';\nimport { InventoryView } from '../inventory/InventoryView';\nimport { ModToolsView } from '../mod-tools/ModToolsView';\nimport { NavigatorView } from '../navigator/NavigatorView';\nimport { NitropediaView } from '../nitropedia/NitropediaView';\nimport { RightSideView } from '../right-side/RightSideView';\nimport { RoomView } from '../room/RoomView';\nimport { ToolbarView } from '../toolbar/ToolbarView';\nimport { UserProfileView } from '../user-profile/UserProfileView';\nimport { UserSettingsView } from '../user-settings/UserSettingsView';\nimport { WiredView } from '../wired/WiredView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainView = props => {\n  _s();\n\n  const [isReady, setIsReady] = useState(false);\n  const [landingViewVisible, setLandingViewVisible] = useState(true);\n  const onRoomSessionEvent = useCallback(event => {\n    switch (event.type) {\n      case RoomSessionEvent.CREATED:\n        setLandingViewVisible(false);\n        return;\n\n      case RoomSessionEvent.ENDED:\n        setLandingViewVisible(event.openLandingView);\n        return;\n    }\n  }, []);\n  UseRoomSessionManagerEvent(RoomSessionEvent.CREATED, onRoomSessionEvent);\n  UseRoomSessionManagerEvent(RoomSessionEvent.ENDED, onRoomSessionEvent);\n  const onLinkReceived = useCallback(link => {\n    const parts = link.split('/');\n    if (parts.length < 2) return;\n\n    switch (parts[1]) {\n      case 'open':\n        if (parts.length > 2) {\n          switch (parts[2]) {\n            case 'credits':\n              //HabboWebTools.openWebPageAndMinimizeClient(this._windowManager.getProperty(ExternalVariables.WEB_SHOP_RELATIVE_URL));\n              break;\n\n            default:\n              {\n                const name = parts[2];\n                HabboWebTools.openHabblet(name);\n              }\n          }\n        }\n\n        return;\n    }\n  }, []);\n  useEffect(() => {\n    setIsReady(true);\n    GetCommunication().connection.onReady();\n  }, []);\n  useEffect(() => {\n    const linkTracker = {\n      linkReceived: onLinkReceived,\n      eventUrlPrefix: 'habblet/'\n    };\n    AddEventLinkTracker(linkTracker);\n    return () => {\n      RemoveLinkEventTracker(linkTracker);\n    };\n  }, [onLinkReceived]);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    fit: true,\n    children: [/*#__PURE__*/_jsxDEV(TransitionAnimation, {\n      type: TransitionAnimationTypes.FADE_IN,\n      inProp: landingViewVisible,\n      timeout: 300,\n      children: /*#__PURE__*/_jsxDEV(HotelView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToolbarView, {\n      isInRoom: !landingViewVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModToolsView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatHistoryView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WiredView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AvatarEditorView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AchievementsView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavigatorView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InventoryView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CatalogView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FriendsView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RightSideView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserSettingsView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserProfileView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GroupsView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CameraWidgetView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HelpView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FloorplanEditorView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitropediaView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GuideToolView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HcCenterView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CampaignView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainView, \"7OvNFrWTEccyGj/+r+buVpBZlpQ=\");\n\n_c = MainView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/main/MainView.tsx"],"names":["HabboWebTools","RoomSessionEvent","useCallback","useEffect","useState","AddEventLinkTracker","GetCommunication","RemoveLinkEventTracker","Base","TransitionAnimation","TransitionAnimationTypes","UseRoomSessionManagerEvent","AchievementsView","AvatarEditorView","CameraWidgetView","CampaignView","CatalogView","ChatHistoryView","FloorplanEditorView","FriendsView","GroupsView","GuideToolView","HcCenterView","HelpView","HotelView","InventoryView","ModToolsView","NavigatorView","NitropediaView","RightSideView","RoomView","ToolbarView","UserProfileView","UserSettingsView","WiredView","MainView","props","isReady","setIsReady","landingViewVisible","setLandingViewVisible","onRoomSessionEvent","event","type","CREATED","ENDED","openLandingView","onLinkReceived","link","parts","split","length","name","openHabblet","connection","onReady","linkTracker","linkReceived","eventUrlPrefix","FADE_IN"],"mappings":"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","sourcesContent":["import { HabboWebTools, RoomSessionEvent } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { AddEventLinkTracker, GetCommunication, RemoveLinkEventTracker } from '../../api';\nimport { Base, TransitionAnimation, TransitionAnimationTypes } from '../../common';\nimport { UseRoomSessionManagerEvent } from '../../hooks';\nimport { AchievementsView } from '../achievements/AchievementsView';\nimport { AvatarEditorView } from '../avatar-editor/AvatarEditorView';\nimport { CameraWidgetView } from '../camera/CameraWidgetView';\nimport { CampaignView } from '../campaign/CampaignView';\nimport { CatalogView } from '../catalog/CatalogView';\nimport { ChatHistoryView } from '../chat-history/ChatHistoryView';\nimport { FloorplanEditorView } from '../floorplan-editor/FloorplanEditorView';\nimport { FriendsView } from '../friends/FriendsView';\nimport { GroupsView } from '../groups/GroupsView';\nimport { GuideToolView } from '../guide-tool/GuideToolView';\nimport { HcCenterView } from '../hc-center/HcCenterView';\nimport { HelpView } from '../help/HelpView';\nimport { HotelView } from '../hotel-view/HotelView';\nimport { InventoryView } from '../inventory/InventoryView';\nimport { ModToolsView } from '../mod-tools/ModToolsView';\nimport { NavigatorView } from '../navigator/NavigatorView';\nimport { NitropediaView } from '../nitropedia/NitropediaView';\nimport { RightSideView } from '../right-side/RightSideView';\nimport { RoomView } from '../room/RoomView';\nimport { ToolbarView } from '../toolbar/ToolbarView';\nimport { UserProfileView } from '../user-profile/UserProfileView';\nimport { UserSettingsView } from '../user-settings/UserSettingsView';\nimport { WiredView } from '../wired/WiredView';\n\nexport const MainView: FC<{}> = props =>\n{\n    const [ isReady, setIsReady ] = useState(false);\n    const [ landingViewVisible, setLandingViewVisible ] = useState(true);\n\n    const onRoomSessionEvent = useCallback((event: RoomSessionEvent) =>\n    {\n        switch(event.type)\n        {\n            case RoomSessionEvent.CREATED:\n                setLandingViewVisible(false);\n                return;\n            case RoomSessionEvent.ENDED:\n                setLandingViewVisible(event.openLandingView);\n                return;\n        }\n    }, []);\n\n    UseRoomSessionManagerEvent(RoomSessionEvent.CREATED, onRoomSessionEvent);\n    UseRoomSessionManagerEvent(RoomSessionEvent.ENDED, onRoomSessionEvent);\n\n    const onLinkReceived = useCallback((link: string) =>\n    {\n        const parts = link.split('/');\n\n        if(parts.length < 2) return;\n\n        switch(parts[1])\n        {\n            case 'open':\n                if(parts.length > 2)\n                {\n                    switch(parts[2])\n                    {\n                        case 'credits':\n                            //HabboWebTools.openWebPageAndMinimizeClient(this._windowManager.getProperty(ExternalVariables.WEB_SHOP_RELATIVE_URL));\n                            break;\n                        default: {\n                            const name = parts[2];\n                            HabboWebTools.openHabblet(name);\n                        }\n                    }\n                }\n                return;\n        }\n    }, []);\n\n    useEffect(() =>\n    {\n        setIsReady(true);\n\n        GetCommunication().connection.onReady();\n    }, []);\n\n    useEffect(() =>\n    {\n        const linkTracker = { linkReceived: onLinkReceived, eventUrlPrefix: 'habblet/' };\n        AddEventLinkTracker(linkTracker);\n\n        return () =>\n        {\n            RemoveLinkEventTracker(linkTracker);\n        }\n    }, [ onLinkReceived ]);\n\n    return (\n        <Base fit>\n            <TransitionAnimation type={ TransitionAnimationTypes.FADE_IN } inProp={ landingViewVisible } timeout={ 300 }>\n                <HotelView />\n            </TransitionAnimation>\n            <ToolbarView isInRoom={ !landingViewVisible } />\n            <ModToolsView />\n            <RoomView />\n            <ChatHistoryView />\n            <WiredView />\n            <AvatarEditorView />\n            <AchievementsView />\n            <NavigatorView />\n            <InventoryView />\n            <CatalogView />\n            <FriendsView />\n            <RightSideView />\n            <UserSettingsView />\n            <UserProfileView />\n            <GroupsView />\n            <CameraWidgetView />\n            <HelpView />\n            <FloorplanEditorView />\n            <NitropediaView />\n            <GuideToolView />\n            <HcCenterView />\n            <CampaignView />\n        </Base>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}