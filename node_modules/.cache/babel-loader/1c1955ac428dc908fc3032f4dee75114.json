{"ast":null,"code":"export class FurnitureWallDataParser {\n  constructor(wrapper) {\n    this._itemId = void 0;\n    this._spriteId = void 0;\n    this._location = void 0;\n    this._stuffData = void 0;\n    this._state = void 0;\n    this._secondsToExpiration = void 0;\n    this._usagePolicy = void 0;\n    this._userId = void 0;\n    this._username = void 0;\n    this._width = void 0;\n    this._height = void 0;\n    this._localX = void 0;\n    this._localY = void 0;\n    this._y = void 0;\n    this._z = void 0;\n    this._direction = void 0;\n    this._isOldFormat = void 0;\n    if (!wrapper) throw new Error('invalid_wrapper');\n    this.flush();\n    this.parse(wrapper);\n  }\n\n  flush() {\n    this._itemId = 0;\n    this._spriteId = 0;\n    this._location = null;\n    this._stuffData = null;\n    this._state = 0;\n    this._secondsToExpiration = 0;\n    this._usagePolicy = -1;\n    this._userId = 0;\n    this._username = null;\n    this._width = 0;\n    this._height = 0;\n    this._localX = 0;\n    this._localY = 0;\n    this._y = 0;\n    this._z = 0;\n    this._direction = null;\n    this._isOldFormat = false;\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._itemId = parseInt(wrapper.readString());\n    this._spriteId = wrapper.readInt();\n    this._location = wrapper.readString();\n    this._stuffData = wrapper.readString();\n    this._secondsToExpiration = wrapper.readInt();\n    this._usagePolicy = wrapper.readInt();\n    this._userId = wrapper.readInt();\n    this._username = null;\n    const state = parseFloat(this._stuffData);\n    if (!isNaN(state)) this._state = state;\n\n    if (this._location.indexOf(':') === 0) {\n      this._isOldFormat = false;\n\n      let parts = this._location.split(' ');\n\n      if (parts.length >= 3) {\n        let widthHeight = parts[0];\n        let leftRight = parts[1];\n        const direction = parts[2];\n\n        if (widthHeight.length > 3 && leftRight.length > 2) {\n          widthHeight = widthHeight.substr(3);\n          leftRight = leftRight.substr(2);\n          parts = widthHeight.split(',');\n\n          if (parts.length >= 2) {\n            const width = parseInt(parts[0]);\n            const height = parseInt(parts[1]);\n            parts = leftRight.split(',');\n\n            if (parts.length >= 2) {\n              const localX = parseInt(parts[0]);\n              const localY = parseInt(parts[1]);\n              this._width = width;\n              this._height = height;\n              this._localX = localX;\n              this._localY = localY;\n              this._direction = direction;\n            }\n          }\n        }\n      }\n    } else {\n      this._isOldFormat = true; // _local_12 = _local_4.split(\" \");\n      // if (_local_12.length >= 2)\n      // {\n      //     _local_13 = String(_local_12[0]);\n      //     if (((_local_13 == \"rightwall\") || (_local_13 == \"frontwall\")))\n      //     {\n      //         _local_13 = \"r\";\n      //     }\n      //     else\n      //     {\n      //         _local_13 = \"l\";\n      //     }\n      //     _local_20 = String(_local_12[1]);\n      //     _local_21 = _local_20.split(\",\");\n      //     if (_local_21.length >= 3)\n      //     {\n      //         _local_22 = 0;\n      //         _local_23 = parseFloat(_local_21[0]);\n      //         _local_24 = parseFloat(_local_21[1]);\n      //         _local_11.y = _local_23;\n      //         _local_11.z = _local_24;\n      //         _local_11.dir = _local_13;\n      //         _local_11.data = _local_5;\n      //         _local_11.state = _local_9;\n      //     }\n      //  }\n    }\n\n    return true;\n  }\n\n  get itemId() {\n    return this._itemId;\n  }\n\n  get spriteId() {\n    return this._spriteId;\n  }\n\n  get wallPosition() {\n    return this._location;\n  }\n\n  get stuffData() {\n    return this._stuffData;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get secondsToExpiration() {\n    return this._secondsToExpiration;\n  }\n\n  get usagePolicy() {\n    return this._usagePolicy;\n  }\n\n  get userId() {\n    return this._userId;\n  }\n\n  get username() {\n    return this._username;\n  }\n\n  set username(username) {\n    this._username = username;\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  get localX() {\n    return this._localX;\n  }\n\n  get localY() {\n    return this._localY;\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  get isOldFormat() {\n    return this._isOldFormat;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/room/furniture/wall/FurnitureWallDataParser.ts"],"names":["FurnitureWallDataParser","constructor","wrapper","_itemId","_spriteId","_location","_stuffData","_state","_secondsToExpiration","_usagePolicy","_userId","_username","_width","_height","_localX","_localY","_y","_z","_direction","_isOldFormat","Error","flush","parse","parseInt","readString","readInt","state","parseFloat","isNaN","indexOf","parts","split","length","widthHeight","leftRight","direction","substr","width","height","localX","localY","itemId","spriteId","wallPosition","stuffData","secondsToExpiration","usagePolicy","userId","username","isOldFormat"],"mappings":"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","sourcesContent":["import { IMessageDataWrapper } from '../../../../../../../core';\r\n\r\nexport class FurnitureWallDataParser\r\n{\r\n    private _itemId: number;\r\n    private _spriteId: number;\r\n    private _location: string;\r\n    private _stuffData: string;\r\n    private _state: number;\r\n    private _secondsToExpiration: number;\r\n    private _usagePolicy: number;\r\n    private _userId: number;\r\n    private _username: string;\r\n\r\n    private _width: number;\r\n    private _height: number;\r\n    private _localX: number;\r\n    private _localY: number;\r\n    private _y: number;\r\n    private _z: number;\r\n    private _direction: string;\r\n    private _isOldFormat: boolean;\r\n\r\n    constructor(wrapper: IMessageDataWrapper)\r\n    {\r\n        if(!wrapper) throw new Error('invalid_wrapper');\r\n\r\n        this.flush();\r\n        this.parse(wrapper);\r\n    }\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._itemId = 0;\r\n        this._spriteId = 0;\r\n        this._location = null;\r\n        this._stuffData = null;\r\n        this._state = 0;\r\n        this._secondsToExpiration = 0;\r\n        this._usagePolicy = -1;\r\n        this._userId = 0;\r\n        this._username = null;\r\n\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._localX = 0;\r\n        this._localY = 0;\r\n        this._y = 0;\r\n        this._z = 0;\r\n        this._direction = null;\r\n        this._isOldFormat = false;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._itemId = parseInt(wrapper.readString());\r\n        this._spriteId = wrapper.readInt();\r\n        this._location = wrapper.readString();\r\n        this._stuffData = wrapper.readString();\r\n        this._secondsToExpiration = wrapper.readInt();\r\n        this._usagePolicy = wrapper.readInt();\r\n        this._userId = wrapper.readInt();\r\n        this._username = null;\r\n\r\n        const state = parseFloat(this._stuffData);\r\n\r\n        if(!isNaN(state)) this._state = state;\r\n\r\n        if(this._location.indexOf(':') === 0)\r\n        {\r\n            this._isOldFormat = false;\r\n\r\n            let parts = this._location.split(' ');\r\n\r\n            if(parts.length >= 3)\r\n            {\r\n                let widthHeight = parts[0];\r\n                let leftRight = parts[1];\r\n\r\n                const direction = parts[2];\r\n\r\n                if((widthHeight.length > 3) && (leftRight.length > 2))\r\n                {\r\n                    widthHeight = widthHeight.substr(3);\r\n                    leftRight = leftRight.substr(2);\r\n                    parts = widthHeight.split(',');\r\n\r\n                    if(parts.length >= 2)\r\n                    {\r\n                        const width = parseInt(parts[0]);\r\n                        const height = parseInt(parts[1]);\r\n\r\n                        parts = leftRight.split(',');\r\n\r\n                        if(parts.length >= 2)\r\n                        {\r\n                            const localX = parseInt(parts[0]);\r\n                            const localY = parseInt(parts[1]);\r\n\r\n                            this._width = width;\r\n                            this._height = height;\r\n                            this._localX = localX;\r\n                            this._localY = localY;\r\n                            this._direction = direction;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this._isOldFormat = true;\r\n\r\n            // _local_12 = _local_4.split(\" \");\r\n            // if (_local_12.length >= 2)\r\n            // {\r\n            //     _local_13 = String(_local_12[0]);\r\n            //     if (((_local_13 == \"rightwall\") || (_local_13 == \"frontwall\")))\r\n            //     {\r\n            //         _local_13 = \"r\";\r\n            //     }\r\n            //     else\r\n            //     {\r\n            //         _local_13 = \"l\";\r\n            //     }\r\n            //     _local_20 = String(_local_12[1]);\r\n            //     _local_21 = _local_20.split(\",\");\r\n            //     if (_local_21.length >= 3)\r\n            //     {\r\n            //         _local_22 = 0;\r\n            //         _local_23 = parseFloat(_local_21[0]);\r\n            //         _local_24 = parseFloat(_local_21[1]);\r\n            //         _local_11.y = _local_23;\r\n            //         _local_11.z = _local_24;\r\n            //         _local_11.dir = _local_13;\r\n            //         _local_11.data = _local_5;\r\n            //         _local_11.state = _local_9;\r\n            //     }\r\n            //  }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get itemId(): number\r\n    {\r\n        return this._itemId;\r\n    }\r\n\r\n    public get spriteId(): number\r\n    {\r\n        return this._spriteId;\r\n    }\r\n\r\n    public get wallPosition(): string\r\n    {\r\n        return this._location;\r\n    }\r\n\r\n    public get stuffData(): string\r\n    {\r\n        return this._stuffData;\r\n    }\r\n\r\n    public get state(): number\r\n    {\r\n        return this._state;\r\n    }\r\n\r\n    public get secondsToExpiration(): number\r\n    {\r\n        return this._secondsToExpiration;\r\n    }\r\n\r\n    public get usagePolicy(): number\r\n    {\r\n        return this._usagePolicy;\r\n    }\r\n\r\n    public get userId(): number\r\n    {\r\n        return this._userId;\r\n    }\r\n\r\n    public get username(): string\r\n    {\r\n        return this._username;\r\n    }\r\n\r\n    public set username(username: string)\r\n    {\r\n        this._username = username;\r\n    }\r\n\r\n    public get width(): number\r\n    {\r\n        return this._width;\r\n    }\r\n\r\n    public get height(): number\r\n    {\r\n        return this._height;\r\n    }\r\n\r\n    public get localX(): number\r\n    {\r\n        return this._localX;\r\n    }\r\n\r\n    public get localY(): number\r\n    {\r\n        return this._localY;\r\n    }\r\n\r\n    public get direction(): string\r\n    {\r\n        return this._direction;\r\n    }\r\n\r\n    public get isOldFormat(): boolean\r\n    {\r\n        return this._isOldFormat;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}