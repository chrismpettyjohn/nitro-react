{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/inventory/views/pet/InventoryPetItemView.tsx\",\n    _s = $RefreshSig$();\n\nimport { MouseEventType } from '@nitrots/nitro-renderer';\nimport { useState } from 'react';\nimport { attemptPetPlacement, UnseenItemCategory } from '../../../../api';\nimport { LayoutGridItem, LayoutPetImageView } from '../../../../common';\nimport { useInventoryPets, useInventoryUnseenTracker } from '../../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryPetItemView = props => {\n  _s();\n\n  const {\n    petItem = null,\n    children = null,\n    ...rest\n  } = props;\n  const [isMouseDown, setMouseDown] = useState(false);\n  const {\n    selectedPet = null,\n    setSelectedPet = null\n  } = useInventoryPets();\n  const {\n    isUnseen\n  } = useInventoryUnseenTracker();\n  const unseen = isUnseen(UnseenItemCategory.PET, petItem.petData.id);\n\n  const onMouseEvent = event => {\n    switch (event.type) {\n      case MouseEventType.MOUSE_DOWN:\n        setSelectedPet(petItem);\n        setMouseDown(true);\n        return;\n\n      case MouseEventType.MOUSE_UP:\n        setMouseDown(false);\n        return;\n\n      case MouseEventType.ROLL_OUT:\n        if (!isMouseDown || !(petItem === selectedPet)) return;\n        attemptPetPlacement(petItem);\n        return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LayoutGridItem, {\n    itemActive: petItem === selectedPet,\n    itemUnseen: unseen,\n    onMouseDown: onMouseEvent,\n    onMouseUp: onMouseEvent,\n    onMouseOut: onMouseEvent,\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(LayoutPetImageView, {\n      figure: petItem.petData.figureData.figuredata,\n      direction: 3,\n      headOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InventoryPetItemView, \"CQW1KIZbYzp2213GmWa2en7wGqg=\", false, function () {\n  return [useInventoryPets, useInventoryUnseenTracker];\n});\n\n_c = InventoryPetItemView;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryPetItemView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/inventory/views/pet/InventoryPetItemView.tsx"],"names":["MouseEventType","useState","attemptPetPlacement","UnseenItemCategory","LayoutGridItem","LayoutPetImageView","useInventoryPets","useInventoryUnseenTracker","InventoryPetItemView","props","petItem","children","rest","isMouseDown","setMouseDown","selectedPet","setSelectedPet","isUnseen","unseen","PET","petData","id","onMouseEvent","event","type","MOUSE_DOWN","MOUSE_UP","ROLL_OUT","figureData","figuredata"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,yBAA/B;AACA,SAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,mBAAT,EAAwCC,kBAAxC,QAAkE,iBAAlE;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,oBAAnD;AACA,SAASC,gBAAT,EAA2BC,yBAA3B,QAA4D,mBAA5D;;AAEA,OAAO,MAAMC,oBAA+C,GAAGC,KAAK,IACpE;AAAA;;AACI,QAAM;AAAEC,IAAAA,OAAO,GAAG,IAAZ;AAAkBC,IAAAA,QAAQ,GAAG,IAA7B;AAAmC,OAAGC;AAAtC,MAA+CH,KAArD;AACA,QAAM,CAAEI,WAAF,EAAeC,YAAf,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAEc,IAAAA,WAAW,GAAG,IAAhB;AAAsBC,IAAAA,cAAc,GAAG;AAAvC,MAAgDV,gBAAgB,EAAtE;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeV,yBAAyB,EAA9C;AACA,QAAMW,MAAM,GAAGD,QAAQ,CAACd,kBAAkB,CAACgB,GAApB,EAAyBT,OAAO,CAACU,OAAR,CAAgBC,EAAzC,CAAvB;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IACrB;AACI,YAAOA,KAAK,CAACC,IAAb;AAEI,WAAKxB,cAAc,CAACyB,UAApB;AACIT,QAAAA,cAAc,CAACN,OAAD,CAAd;AACAI,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;;AACJ,WAAKd,cAAc,CAAC0B,QAApB;AACIZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;;AACJ,WAAKd,cAAc,CAAC2B,QAApB;AACI,YAAG,CAACd,WAAD,IAAgB,EAAEH,OAAO,KAAKK,WAAd,CAAnB,EAA+C;AAE/Cb,QAAAA,mBAAmB,CAACQ,OAAD,CAAnB;AACA;AAbR;AAeH,GAjBD;;AAmBA,sBACI,QAAC,cAAD;AAAgB,IAAA,UAAU,EAAIA,OAAO,KAAKK,WAA1C;AAAyD,IAAA,UAAU,EAAGG,MAAtE;AAA+E,IAAA,WAAW,EAAGI,YAA7F;AAA4G,IAAA,SAAS,EAAGA,YAAxH;AAAuI,IAAA,UAAU,EAAGA,YAApJ;AAAA,OAAwKV,IAAxK;AAAA,4BACI,QAAC,kBAAD;AAAoB,MAAA,MAAM,EAAGF,OAAO,CAACU,OAAR,CAAgBQ,UAAhB,CAA2BC,UAAxD;AAAqE,MAAA,SAAS,EAAG,CAAjF;AAAqF,MAAA,QAAQ,EAAG;AAAhG;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMlB,QAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjCM;;GAAMH,oB;UAI6CF,gB,EACjCC,yB;;;KALZC,oB","sourcesContent":["import { MouseEventType } from '@nitrots/nitro-renderer';\nimport { FC, MouseEvent, useState } from 'react';\nimport { attemptPetPlacement, IPetItem, UnseenItemCategory } from '../../../../api';\nimport { LayoutGridItem, LayoutPetImageView } from '../../../../common';\nimport { useInventoryPets, useInventoryUnseenTracker } from '../../../../hooks';\n\nexport const InventoryPetItemView: FC<{ petItem: IPetItem }> = props =>\n{\n    const { petItem = null, children = null, ...rest } = props;\n    const [ isMouseDown, setMouseDown ] = useState(false);\n    const { selectedPet = null, setSelectedPet = null } = useInventoryPets();\n    const { isUnseen } = useInventoryUnseenTracker();\n    const unseen = isUnseen(UnseenItemCategory.PET, petItem.petData.id);\n\n    const onMouseEvent = (event: MouseEvent) =>\n    {\n        switch(event.type)\n        {\n            case MouseEventType.MOUSE_DOWN:\n                setSelectedPet(petItem);\n                setMouseDown(true);\n                return;\n            case MouseEventType.MOUSE_UP:\n                setMouseDown(false);\n                return;\n            case MouseEventType.ROLL_OUT:\n                if(!isMouseDown || !(petItem === selectedPet)) return;\n\n                attemptPetPlacement(petItem);\n                return;\n        }\n    }\n    \n    return (\n        <LayoutGridItem itemActive={ (petItem === selectedPet) } itemUnseen={ unseen } onMouseDown={ onMouseEvent } onMouseUp={ onMouseEvent } onMouseOut={ onMouseEvent } { ...rest }>\n            <LayoutPetImageView figure={ petItem.petData.figureData.figuredata } direction={ 3 } headOnly={ true } />\n            { children }\n        </LayoutGridItem>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}