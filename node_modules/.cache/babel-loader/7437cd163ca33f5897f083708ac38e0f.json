{"ast":null,"code":"import { Vector3d } from '../../utils/Vector3d';\nexport class RoomObjectLocationCacheItem {\n  constructor(accurateZ) {\n    this._roomObjectVariableAccurateZ = void 0;\n    this._location = void 0;\n    this._screenLocation = void 0;\n    this._locationChanged = void 0;\n    this._geometryUpdateId = void 0;\n    this._objectUpdateId = void 0;\n    this._roomObjectVariableAccurateZ = accurateZ || '';\n    this._location = new Vector3d();\n    this._screenLocation = new Vector3d();\n    this._locationChanged = false;\n    this._geometryUpdateId = -1;\n    this._objectUpdateId = -1;\n  }\n\n  dispose() {\n    this._screenLocation = null;\n  }\n\n  updateLocation(object, geometry) {\n    if (!object || !geometry) return null;\n    let locationChanged = false;\n    const location = object.getLocation();\n\n    if (geometry.updateId !== this._geometryUpdateId || object.updateCounter !== this._objectUpdateId) {\n      this._objectUpdateId = object.updateCounter;\n\n      if (geometry.updateId !== this._geometryUpdateId || location.x !== this._location.x || location.y !== this._location.y || location.z !== this._location.z) {\n        this._geometryUpdateId = geometry.updateId;\n\n        this._location.assign(location);\n\n        locationChanged = true;\n      }\n    }\n\n    this._locationChanged = locationChanged;\n\n    if (this._locationChanged) {\n      const screenLocation = geometry.getScreenPosition(location);\n      if (!screenLocation) return null;\n      const accurateZ = object.model.getValue(this._roomObjectVariableAccurateZ);\n\n      if (isNaN(accurateZ) || accurateZ === 0) {\n        const rounded = new Vector3d(Math.round(location.x), Math.round(location.y), location.z);\n\n        if (rounded.x !== location.x || rounded.y !== location.y) {\n          const roundedScreen = geometry.getScreenPosition(rounded);\n\n          this._screenLocation.assign(screenLocation);\n\n          if (roundedScreen) this._screenLocation.z = roundedScreen.z;\n        } else {\n          this._screenLocation.assign(screenLocation);\n        }\n      } else {\n        this._screenLocation.assign(screenLocation);\n      }\n\n      this._screenLocation.x = Math.round(this._screenLocation.x);\n      this._screenLocation.y = Math.round(this._screenLocation.y);\n    }\n\n    return this._screenLocation;\n  }\n\n  get locationChanged() {\n    return this._locationChanged;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/room/renderer/cache/RoomObjectLocationCacheItem.ts"],"names":["Vector3d","RoomObjectLocationCacheItem","constructor","accurateZ","_roomObjectVariableAccurateZ","_location","_screenLocation","_locationChanged","_geometryUpdateId","_objectUpdateId","dispose","updateLocation","object","geometry","locationChanged","location","getLocation","updateId","updateCounter","x","y","z","assign","screenLocation","getScreenPosition","model","getValue","isNaN","rounded","Math","round","roundedScreen"],"mappings":"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","sourcesContent":["import { IRoomObject } from '../../object/IRoomObject';\r\nimport { IRoomGeometry } from '../../utils/IRoomGeometry';\r\nimport { IVector3D } from '../../utils/IVector3D';\r\nimport { Vector3d } from '../../utils/Vector3d';\r\n\r\nexport class RoomObjectLocationCacheItem\r\n{\r\n    private _roomObjectVariableAccurateZ: string;\r\n\r\n    private _location: Vector3d;\r\n    private _screenLocation: Vector3d;\r\n    private _locationChanged: boolean;\r\n\r\n    private _geometryUpdateId: number;\r\n    private _objectUpdateId: number;\r\n\r\n    constructor(accurateZ: string)\r\n    {\r\n        this._roomObjectVariableAccurateZ = accurateZ || '';\r\n\r\n        this._location = new Vector3d();\r\n        this._screenLocation = new Vector3d();\r\n        this._locationChanged = false;\r\n\r\n        this._geometryUpdateId = -1;\r\n        this._objectUpdateId = -1;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._screenLocation = null;\r\n    }\r\n\r\n    public updateLocation(object: IRoomObject, geometry: IRoomGeometry): IVector3D\r\n    {\r\n        if(!object || !geometry) return null;\r\n\r\n        let locationChanged = false;\r\n\r\n        const location = object.getLocation();\r\n\r\n        if((geometry.updateId !== this._geometryUpdateId) || (object.updateCounter !== this._objectUpdateId))\r\n        {\r\n            this._objectUpdateId = object.updateCounter;\r\n\r\n            if((geometry.updateId !== this._geometryUpdateId) || (location.x !== this._location.x) || (location.y !== this._location.y) || (location.z !== this._location.z))\r\n            {\r\n                this._geometryUpdateId = geometry.updateId;\r\n                this._location.assign(location);\r\n\r\n                locationChanged = true;\r\n            }\r\n        }\r\n\r\n        this._locationChanged = locationChanged;\r\n\r\n        if(this._locationChanged)\r\n        {\r\n            const screenLocation = geometry.getScreenPosition(location);\r\n\r\n            if(!screenLocation) return null;\r\n\r\n            const accurateZ = object.model.getValue<number>(this._roomObjectVariableAccurateZ);\r\n\r\n            if(isNaN(accurateZ) || (accurateZ === 0))\r\n            {\r\n                const rounded = new Vector3d(Math.round(location.x), Math.round(location.y), location.z);\r\n\r\n                if((rounded.x !== location.x) || (rounded.y !== location.y))\r\n                {\r\n                    const roundedScreen = geometry.getScreenPosition(rounded);\r\n\r\n                    this._screenLocation.assign(screenLocation);\r\n\r\n                    if(roundedScreen) this._screenLocation.z = roundedScreen.z;\r\n                }\r\n                else\r\n                {\r\n                    this._screenLocation.assign(screenLocation);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this._screenLocation.assign(screenLocation);\r\n            }\r\n\r\n            this._screenLocation.x = Math.round(this._screenLocation.x);\r\n            this._screenLocation.y = Math.round(this._screenLocation.y);\r\n        }\r\n\r\n        return this._screenLocation;\r\n    }\r\n\r\n    public get locationChanged(): boolean\r\n    {\r\n        return this._locationChanged;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}