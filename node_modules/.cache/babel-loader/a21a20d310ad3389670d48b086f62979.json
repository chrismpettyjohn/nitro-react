{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/user-profile/UserProfileView.tsx\",\n    _s = $RefreshSig$();\n\nimport { RelationshipStatusInfoEvent, RoomEngineObjectEvent, RoomObjectCategory, RoomObjectType, UserCurrentBadgesComposer, UserCurrentBadgesEvent, UserProfileEvent, UserRelationshipsComposer } from '@nitrots/nitro-renderer';\nimport { useCallback, useState } from 'react';\nimport { CreateLinkEvent, GetRoomSession, GetSessionDataManager, GetUserProfile, LocalizeText, SendMessageComposer } from '../../api';\nimport { Column, Flex, Grid, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../common';\nimport { UseMessageEventHook, UseRoomEngineEvent } from '../../hooks';\nimport { BadgesContainerView } from './views/BadgesContainerView';\nimport { FriendsContainerView } from './views/FriendsContainerView';\nimport { GroupsContainerView } from './views/GroupsContainerView';\nimport { UserContainerView } from './views/UserContainerView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserProfileView = props => {\n  _s();\n\n  const [userProfile, setUserProfile] = useState(null);\n  const [userBadges, setUserBadges] = useState([]);\n  const [userRelationships, setUserRelationships] = useState(null);\n\n  const onClose = () => {\n    setUserProfile(null);\n    setUserBadges([]);\n    setUserRelationships(null);\n  };\n\n  const onLeaveGroup = useCallback(() => {\n    if (!userProfile || userProfile.id !== GetSessionDataManager().userId) return;\n    GetUserProfile(userProfile.id);\n  }, [userProfile]);\n  const onUserCurrentBadgesEvent = useCallback(event => {\n    const parser = event.getParser();\n    if (!userProfile || parser.userId !== userProfile.id) return;\n    setUserBadges(parser.badges);\n  }, [userProfile]);\n  UseMessageEventHook(UserCurrentBadgesEvent, onUserCurrentBadgesEvent);\n  const onUserRelationshipsEvent = useCallback(event => {\n    const parser = event.getParser();\n    if (!userProfile || parser.userId !== userProfile.id) return;\n    setUserRelationships(parser);\n  }, [userProfile]);\n  UseMessageEventHook(RelationshipStatusInfoEvent, onUserRelationshipsEvent);\n  const onUserProfileEvent = useCallback(event => {\n    const parser = event.getParser();\n    let isSameProfile = false;\n    setUserProfile(prevValue => {\n      if (prevValue && prevValue.id) isSameProfile = prevValue.id === parser.id;\n      return parser;\n    });\n\n    if (!isSameProfile) {\n      setUserBadges([]);\n      setUserRelationships(null);\n    }\n\n    SendMessageComposer(new UserCurrentBadgesComposer(parser.id));\n    SendMessageComposer(new UserRelationshipsComposer(parser.id));\n  }, []);\n  UseMessageEventHook(UserProfileEvent, onUserProfileEvent);\n  const onRoomEngineObjectEvent = useCallback(event => {\n    if (!userProfile) return;\n    if (event.category !== RoomObjectCategory.UNIT) return;\n    const userData = GetRoomSession().userDataManager.getUserDataByIndex(event.objectId);\n    if (userData.type !== RoomObjectType.USER) return;\n    GetUserProfile(userData.webID);\n  }, [userProfile]);\n  UseRoomEngineEvent(RoomEngineObjectEvent.SELECTED, onRoomEngineObjectEvent);\n  if (!userProfile) return null;\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    uniqueKey: \"nitro-user-profile\",\n    theme: \"primary\",\n    className: \"user-profile\",\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: LocalizeText('extendedprofile.caption'),\n      onCloseClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      overflow: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        fullHeight: false,\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          size: 7,\n          gap: 1,\n          className: \"user-container pe-2\",\n          children: [/*#__PURE__*/_jsxDEV(UserContainerView, {\n            userProfile: userProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), userProfile.id === GetSessionDataManager().userId && /*#__PURE__*/_jsxDEV(Flex, {\n            className: \"p-0\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              small: true,\n              underline: true,\n              className: \"cursor-pointer\",\n              onClick: event => CreateLinkEvent('avatar-editor/toggle'),\n              children: \"Change Clothes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              className: \"cursor-pointer badge-text\",\n              small: true,\n              underline: true,\n              onClick: event => CreateLinkEvent('inventory/toggle'),\n              children: \"Change Badges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            columnCount: 5,\n            fullHeight: true,\n            className: \"profile-grey-bg p-1\",\n            children: /*#__PURE__*/_jsxDEV(BadgesContainerView, {\n              fullWidth: true,\n              center: true,\n              badges: userBadges\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          size: 5,\n          children: userRelationships && /*#__PURE__*/_jsxDEV(FriendsContainerView, {\n            relationships: userRelationships,\n            friendsCount: userProfile.friendsCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        className: \"rooms-button-container px-2 py-1\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          onClick: event => CreateLinkEvent(`navigator/search/hotel_view/owner:${userProfile.username}`),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon icon-rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            small: true,\n            underline: true,\n            pointer: true,\n            children: LocalizeText('extendedprofile.rooms')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GroupsContainerView, {\n        fullWidth: true,\n        itsMe: userProfile.id === GetSessionDataManager().userId,\n        groups: userProfile.groups,\n        onLeaveGroup: onLeaveGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserProfileView, \"MxY3CAKavrO95hg5rt7+Q9gEF3Y=\");\n\n_c = UserProfileView;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfileView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/user-profile/UserProfileView.tsx"],"names":["RelationshipStatusInfoEvent","RoomEngineObjectEvent","RoomObjectCategory","RoomObjectType","UserCurrentBadgesComposer","UserCurrentBadgesEvent","UserProfileEvent","UserRelationshipsComposer","useCallback","useState","CreateLinkEvent","GetRoomSession","GetSessionDataManager","GetUserProfile","LocalizeText","SendMessageComposer","Column","Flex","Grid","NitroCardContentView","NitroCardHeaderView","NitroCardView","Text","UseMessageEventHook","UseRoomEngineEvent","BadgesContainerView","FriendsContainerView","GroupsContainerView","UserContainerView","UserProfileView","props","userProfile","setUserProfile","userBadges","setUserBadges","userRelationships","setUserRelationships","onClose","onLeaveGroup","id","userId","onUserCurrentBadgesEvent","event","parser","getParser","badges","onUserRelationshipsEvent","onUserProfileEvent","isSameProfile","prevValue","onRoomEngineObjectEvent","category","UNIT","userData","userDataManager","getUserDataByIndex","objectId","type","USER","webID","SELECTED","friendsCount","username","groups"],"mappings":"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","sourcesContent":["import { RelationshipStatusInfoEvent, RelationshipStatusInfoMessageParser, RoomEngineObjectEvent, RoomObjectCategory, RoomObjectType, UserCurrentBadgesComposer, UserCurrentBadgesEvent, UserProfileEvent, UserProfileParser, UserRelationshipsComposer } from '@nitrots/nitro-renderer';\nimport { FC, useCallback, useState } from 'react';\nimport { CreateLinkEvent, GetRoomSession, GetSessionDataManager, GetUserProfile, LocalizeText, SendMessageComposer } from '../../api';\nimport { Column, Flex, Grid, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../common';\nimport { UseMessageEventHook, UseRoomEngineEvent } from '../../hooks';\nimport { BadgesContainerView } from './views/BadgesContainerView';\nimport { FriendsContainerView } from './views/FriendsContainerView';\nimport { GroupsContainerView } from './views/GroupsContainerView';\nimport { UserContainerView } from './views/UserContainerView';\n\nexport const UserProfileView: FC<{}> = props =>\n{\n    const [ userProfile, setUserProfile ] = useState<UserProfileParser>(null);\n    const [ userBadges, setUserBadges ] = useState<string[]>([]);\n    const [ userRelationships, setUserRelationships ] = useState<RelationshipStatusInfoMessageParser>(null);\n\n    const onClose = () =>\n    {\n        setUserProfile(null);\n        setUserBadges([]);\n        setUserRelationships(null);\n    }\n\n    const onLeaveGroup = useCallback(() =>\n    {\n        if(!userProfile || (userProfile.id !== GetSessionDataManager().userId)) return;\n        \n        GetUserProfile(userProfile.id);\n    }, [ userProfile ]);\n    \n    const onUserCurrentBadgesEvent = useCallback((event: UserCurrentBadgesEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(!userProfile || (parser.userId !== userProfile.id)) return;\n        \n        setUserBadges(parser.badges);\n    }, [ userProfile ]);\n\n    UseMessageEventHook(UserCurrentBadgesEvent, onUserCurrentBadgesEvent);\n\n    const onUserRelationshipsEvent = useCallback((event: RelationshipStatusInfoEvent) =>\n    {\n        const parser = event.getParser();\n\n        if(!userProfile || (parser.userId !== userProfile.id)) return;\n        \n        setUserRelationships(parser);\n    }, [ userProfile ]);\n\n    UseMessageEventHook(RelationshipStatusInfoEvent, onUserRelationshipsEvent);\n\n    const onUserProfileEvent = useCallback((event: UserProfileEvent) =>\n    {\n        const parser = event.getParser();\n\n        let isSameProfile = false;\n        \n        setUserProfile(prevValue =>\n        {\n            if(prevValue && prevValue.id) isSameProfile = (prevValue.id === parser.id);\n\n            return parser;\n        });\n\n        if(!isSameProfile)\n        {\n            setUserBadges([]);\n            setUserRelationships(null);\n        }\n\n        SendMessageComposer(new UserCurrentBadgesComposer(parser.id));\n        SendMessageComposer(new UserRelationshipsComposer(parser.id));\n    }, []);\n\n    UseMessageEventHook(UserProfileEvent, onUserProfileEvent);\n\n    const onRoomEngineObjectEvent = useCallback((event: RoomEngineObjectEvent) =>\n    {\n        if(!userProfile) return;\n        \n        if(event.category !== RoomObjectCategory.UNIT) return;\n\n        const userData = GetRoomSession().userDataManager.getUserDataByIndex(event.objectId);\n\n        if(userData.type !== RoomObjectType.USER) return;\n\n        GetUserProfile(userData.webID);\n    }, [ userProfile ]);\n\n    UseRoomEngineEvent(RoomEngineObjectEvent.SELECTED, onRoomEngineObjectEvent);\n\n    if(!userProfile) return null;\n\n    return (\n        <NitroCardView uniqueKey=\"nitro-user-profile\" theme=\"primary\" className=\"user-profile\">\n            <NitroCardHeaderView headerText={ LocalizeText('extendedprofile.caption') } onCloseClick={ onClose } />\n            <NitroCardContentView overflow=\"hidden\">\n                <Grid fullHeight={ false } gap={ 2 }>\n                    <Column size={ 7 } gap={ 1 } className=\"user-container pe-2\">\n                        <UserContainerView userProfile={ userProfile } />\n                        { userProfile.id === GetSessionDataManager().userId &&\n                        <Flex className=\"p-0\">\n                            <Text small underline className=\"cursor-pointer\" onClick={ event => CreateLinkEvent('avatar-editor/toggle') }>Change Clothes</Text>\n                            <Text className=\"cursor-pointer badge-text\" small underline onClick={ event => CreateLinkEvent('inventory/toggle') }>Change Badges</Text>\n                        </Flex>\n                        }\n                        <Grid columnCount={ 5 } fullHeight className=\"profile-grey-bg p-1\">\n                            <BadgesContainerView fullWidth center badges={ userBadges } />\n                        </Grid>\n                    </Column>\n                    <Column size={ 5 }>\n                        { userRelationships &&\n                            <FriendsContainerView relationships={ userRelationships } friendsCount={ userProfile.friendsCount } /> }\n                    </Column>\n                </Grid>\n                <Flex alignItems=\"center\" className=\"rooms-button-container px-2 py-1\">\n                    <Flex alignItems=\"center\" gap={ 1 } onClick={ event => CreateLinkEvent(`navigator/search/hotel_view/owner:${ userProfile.username }`) }>\n                        <i className=\"icon icon-rooms\" />\n                        <Text bold small underline pointer>{ LocalizeText('extendedprofile.rooms') }</Text>\n                    </Flex>\n                </Flex>\n                <GroupsContainerView fullWidth itsMe={ userProfile.id === GetSessionDataManager().userId } groups={ userProfile.groups } onLeaveGroup={ onLeaveGroup } />\n            </NitroCardContentView>\n        </NitroCardView>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}