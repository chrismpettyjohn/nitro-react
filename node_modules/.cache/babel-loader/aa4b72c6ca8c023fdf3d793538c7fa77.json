{"ast":null,"code":"import { AvatarAction } from '../../../../../avatar/enum/AvatarAction';\nimport { Nitro } from '../../../../../Nitro';\nimport { ExpressionAddition } from './ExpressionAddition';\nexport class FloatingHeartAddition extends ExpressionAddition {\n  constructor(id, type, visualization) {\n    super(id, type, visualization);\n    this._asset = void 0;\n    this._startTime = void 0;\n    this._delta = void 0;\n    this._offsetY = void 0;\n    this._scale = void 0;\n    this._state = void 0;\n    this._asset = null;\n    this._startTime = Nitro.instance.time;\n    this._delta = 0;\n    this._offsetY = 0;\n    this._scale = 0;\n    this._state = 0;\n  }\n\n  update(sprite, scale) {\n    if (!sprite) return;\n    this._scale = scale;\n    let additionScale = 64;\n    let offsetX = 0;\n\n    if (scale < 48) {\n      this._asset = this.visualization.getAvatarRenderAsset('avatar_addition_user_blowkiss_small');\n\n      if (this.visualization.angle === 90 || this.visualization.angle === 270) {\n        offsetX = 0;\n      } else if (this.visualization.angle === 135 || this.visualization.angle === 180 || this.visualization.angle === 225) {\n        offsetX = 6;\n      } else offsetX = -6;\n\n      this._offsetY = -38;\n      additionScale = 32;\n    } else {\n      this._asset = this.visualization.getAvatarRenderAsset('avatar_addition_user_blowkiss');\n\n      if (this.visualization.angle === 90 || this.visualization.angle === 270) {\n        offsetX = -3;\n      } else if (this.visualization.angle === 135 || this.visualization.angle === 180 || this.visualization.angle === 225) {\n        offsetX = 22;\n      } else offsetX = -30;\n\n      this._offsetY = -70;\n    }\n\n    if (this.visualization.posture === AvatarAction.POSTURE_SIT) {\n      this._offsetY += additionScale / 2;\n    } else if (this.visualization.posture === AvatarAction.POSTURE_LAY) {\n      this._offsetY += additionScale;\n    }\n\n    if (this._asset) {\n      sprite.texture = this._asset;\n      sprite.offsetX = offsetX;\n      sprite.offsetY = this._offsetY;\n      sprite.relativeDepth = -0.02;\n      sprite.alpha = 0;\n      const delta = this._delta;\n      this.animate(sprite);\n      this._delta = delta;\n    }\n  }\n\n  animate(sprite) {\n    if (!sprite) return false;\n    if (this._asset) sprite.texture = this._asset;\n\n    if (this._state === FloatingHeartAddition.STATE_DELAY) {\n      if (Nitro.instance.time - this._startTime < FloatingHeartAddition.DELAY_BEFORE_ANIMATION) return false;\n      this._state = FloatingHeartAddition.STATE_FADE_IN;\n      sprite.alpha = 0;\n      sprite.visible = true;\n      this._delta = 0;\n      return true;\n    }\n\n    if (this._state === FloatingHeartAddition.STATE_FADE_IN) {\n      this._delta += 0.1;\n      sprite.offsetY = this._offsetY;\n      sprite.alpha = Math.pow(this._delta, 0.9) * 255;\n\n      if (this._delta >= 1) {\n        sprite.alpha = 255;\n        this._delta = 0;\n        this._state = FloatingHeartAddition.STATE_FLOAT;\n      }\n\n      return true;\n    }\n\n    if (this._state === FloatingHeartAddition.STATE_FLOAT) {\n      const alpha = Math.pow(this._delta, 0.9);\n      this._delta += 0.05;\n      const offset = this._scale < 48 ? -30 : -40;\n      sprite.offsetY = this._offsetY + (this._delta < 1 ? alpha : 1) * offset;\n      sprite.alpha = (1 - alpha) * 255;\n\n      if (sprite.alpha <= 0) {\n        sprite.visible = false;\n        this._state = FloatingHeartAddition.STATE_COMPLETE;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n}\nFloatingHeartAddition.DELAY_BEFORE_ANIMATION = 300;\nFloatingHeartAddition.STATE_DELAY = 0;\nFloatingHeartAddition.STATE_FADE_IN = 1;\nFloatingHeartAddition.STATE_FLOAT = 2;\nFloatingHeartAddition.STATE_COMPLETE = 3;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/avatar/additions/FloatingHeartAddition.ts"],"names":["AvatarAction","Nitro","ExpressionAddition","FloatingHeartAddition","constructor","id","type","visualization","_asset","_startTime","_delta","_offsetY","_scale","_state","instance","time","update","sprite","scale","additionScale","offsetX","getAvatarRenderAsset","angle","posture","POSTURE_SIT","POSTURE_LAY","texture","offsetY","relativeDepth","alpha","delta","animate","STATE_DELAY","DELAY_BEFORE_ANIMATION","STATE_FADE_IN","visible","Math","pow","STATE_FLOAT","offset","STATE_COMPLETE"],"mappings":"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","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { IRoomObjectSprite } from '../../../../../../room/object/visualization/IRoomObjectSprite';\r\nimport { AvatarAction } from '../../../../../avatar/enum/AvatarAction';\r\nimport { Nitro } from '../../../../../Nitro';\r\nimport { AvatarVisualization } from '../AvatarVisualization';\r\nimport { ExpressionAddition } from './ExpressionAddition';\r\n\r\nexport class FloatingHeartAddition extends ExpressionAddition\r\n{\r\n    private static DELAY_BEFORE_ANIMATION: number = 300;\r\n    private static STATE_DELAY: number = 0;\r\n    private static STATE_FADE_IN: number = 1;\r\n    private static STATE_FLOAT: number = 2;\r\n    private static STATE_COMPLETE: number = 3;\r\n\r\n    private _asset: Texture<Resource>;\r\n    private _startTime: number;\r\n    private _delta: number;\r\n    private _offsetY: number;\r\n    private _scale: number;\r\n    private _state: number;\r\n\r\n    constructor(id: number, type: number, visualization: AvatarVisualization)\r\n    {\r\n        super(id, type, visualization);\r\n\r\n        this._asset = null;\r\n        this._startTime = Nitro.instance.time;\r\n        this._delta = 0;\r\n        this._offsetY = 0;\r\n        this._scale = 0;\r\n        this._state = 0;\r\n    }\r\n\r\n    public update(sprite: IRoomObjectSprite, scale: number): void\r\n    {\r\n        if(!sprite) return;\r\n\r\n        this._scale = scale;\r\n\r\n        let additionScale = 64;\r\n        let offsetX = 0;\r\n\r\n        if(scale < 48)\r\n        {\r\n            this._asset = this.visualization.getAvatarRenderAsset('avatar_addition_user_blowkiss_small');\r\n\r\n            if((this.visualization.angle === 90) || (this.visualization.angle === 270))\r\n            {\r\n                offsetX = 0;\r\n            }\r\n\r\n            else if((this.visualization.angle === 135) || (this.visualization.angle === 180) || (this.visualization.angle === 225))\r\n            {\r\n                offsetX = 6;\r\n            }\r\n\r\n            else offsetX = -6;\r\n\r\n            this._offsetY = -38;\r\n\r\n            additionScale = 32;\r\n        }\r\n        else\r\n        {\r\n            this._asset = this.visualization.getAvatarRenderAsset('avatar_addition_user_blowkiss');\r\n\r\n            if((this.visualization.angle === 90) || (this.visualization.angle === 270))\r\n            {\r\n                offsetX = -3;\r\n            }\r\n\r\n            else if((this.visualization.angle === 135) || (this.visualization.angle === 180) || (this.visualization.angle === 225))\r\n            {\r\n                offsetX = 22;\r\n            }\r\n\r\n            else offsetX = -30;\r\n\r\n            this._offsetY = -70;\r\n        }\r\n\r\n        if(this.visualization.posture === AvatarAction.POSTURE_SIT)\r\n        {\r\n            this._offsetY += (additionScale / 2);\r\n        }\r\n\r\n        else if(this.visualization.posture === AvatarAction.POSTURE_LAY)\r\n        {\r\n            this._offsetY += additionScale;\r\n        }\r\n\r\n        if(this._asset)\r\n        {\r\n            sprite.texture = this._asset;\r\n            sprite.offsetX = offsetX;\r\n            sprite.offsetY = this._offsetY;\r\n            sprite.relativeDepth = -0.02;\r\n            sprite.alpha = 0;\r\n\r\n            const delta = this._delta;\r\n\r\n            this.animate(sprite);\r\n\r\n            this._delta = delta;\r\n        }\r\n    }\r\n\r\n    public animate(sprite: IRoomObjectSprite): boolean\r\n    {\r\n        if(!sprite) return false;\r\n\r\n        if(this._asset) sprite.texture = this._asset;\r\n\r\n        if(this._state === FloatingHeartAddition.STATE_DELAY)\r\n        {\r\n            if((Nitro.instance.time - this._startTime) < FloatingHeartAddition.DELAY_BEFORE_ANIMATION) return false;\r\n\r\n            this._state = FloatingHeartAddition.STATE_FADE_IN;\r\n\r\n            sprite.alpha = 0;\r\n            sprite.visible = true;\r\n\r\n            this._delta = 0;\r\n\r\n            return true;\r\n        }\r\n\r\n        if(this._state === FloatingHeartAddition.STATE_FADE_IN)\r\n        {\r\n            this._delta += 0.1;\r\n\r\n            sprite.offsetY = this._offsetY;\r\n            sprite.alpha = (Math.pow(this._delta, 0.9) * 255);\r\n\r\n            if(this._delta >= 1)\r\n            {\r\n                sprite.alpha = 255;\r\n\r\n                this._delta = 0;\r\n                this._state = FloatingHeartAddition.STATE_FLOAT;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if(this._state === FloatingHeartAddition.STATE_FLOAT)\r\n        {\r\n            const alpha = Math.pow(this._delta, 0.9);\r\n\r\n            this._delta += 0.05;\r\n\r\n            const offset = ((this._scale < 48) ? -30 : -40);\r\n\r\n            sprite.offsetY = (this._offsetY + (((this._delta < 1) ? alpha : 1) * offset));\r\n            sprite.alpha = ((1 - alpha) * 255);\r\n\r\n            if(sprite.alpha <= 0)\r\n            {\r\n                sprite.visible = false;\r\n\r\n                this._state = FloatingHeartAddition.STATE_COMPLETE;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}