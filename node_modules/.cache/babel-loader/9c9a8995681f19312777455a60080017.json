{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/navigator/views/search/NavigatorSearchResultItemView.tsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { RoomDataParser } from '@nitrots/nitro-renderer';\nimport { CreateRoomSession, DoorStateType, GetSessionDataManager, TryVisitRoom } from '../../../../api';\nimport { Column, Flex, LayoutBadgeImageView, LayoutRoomThumbnailView, Text } from '../../../../common';\nimport { useNavigatorContext } from '../../NavigatorContext';\nimport { NavigatorSearchResultItemInfoView } from './NavigatorSearchResultItemInfoView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavigatorSearchResultItemView = props => {\n  _s();\n\n  const {\n    roomData = null,\n    children = null,\n    thumbnail = false,\n    ...rest\n  } = props;\n  const {\n    setDoorData = null\n  } = useNavigatorContext();\n\n  const getUserCounterColor = () => {\n    const num = 100 * (roomData.userCount / roomData.maxUserCount);\n    let bg = 'badge-empty';\n\n    if (num >= 92) {\n      bg = 'badge-danger';\n    } else if (num >= 50) {\n      bg = 'badge-warning';\n    } else if (num > 0) {\n      bg = 'badge-success';\n    }\n\n    return bg;\n  };\n\n  const visitRoom = event => {\n    if (roomData.ownerId !== GetSessionDataManager().userId) {\n      if (roomData.habboGroupId !== 0) {\n        TryVisitRoom(roomData.roomId);\n        return;\n      }\n\n      switch (roomData.doorMode) {\n        case RoomDataParser.DOORBELL_STATE:\n          setDoorData(prevValue => {\n            const newValue = { ...prevValue\n            };\n            newValue.roomInfo = roomData;\n            newValue.state = DoorStateType.START_DOORBELL;\n            return newValue;\n          });\n          return;\n\n        case RoomDataParser.PASSWORD_STATE:\n          setDoorData(prevValue => {\n            const newValue = { ...prevValue\n            };\n            newValue.roomInfo = roomData;\n            newValue.state = DoorStateType.START_PASSWORD;\n            return newValue;\n          });\n          return;\n      }\n    }\n\n    CreateRoomSession(roomData.roomId);\n  };\n\n  if (thumbnail) return /*#__PURE__*/_jsxDEV(Column, {\n    pointer: true,\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    onClick: visitRoom,\n    gap: 0,\n    className: \"nav-thumbnail p-1 rounded-3 small mb-1 flex-column\",\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(LayoutRoomThumbnailView, {\n      roomId: roomData.roomId,\n      customUrl: roomData.officialRoomPicRef,\n      className: \"d-flex flex-column align-items-center justify-content-end mb-1\",\n      children: [roomData.habboGroupId > 0 && /*#__PURE__*/_jsxDEV(LayoutBadgeImageView, {\n        badgeCode: roomData.groupBadgeCode,\n        isGroup: true,\n        className: 'position-absolute top-0 start-0 m-1'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        center: true,\n        className: 'badge p-1 position-absolute m-1 ' + getUserCounterColor(),\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), roomData.userCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), roomData.doorMode !== RoomDataParser.OPEN_STATE && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: 'position-absolute end-0 mb-1 me-1 icon icon-navigator-room-' + (roomData.doorMode === RoomDataParser.DOORBELL_STATE ? 'locked' : roomData.doorMode === RoomDataParser.PASSWORD_STATE ? 'password' : roomData.doorMode === RoomDataParser.INVISIBLE_STATE ? 'invisible' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      className: \"w-100\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        truncate: true,\n        className: \"flex-grow-1\",\n        children: roomData.roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        reverse: true,\n        alignItems: \"center\",\n        gap: 1,\n        children: /*#__PURE__*/_jsxDEV(NavigatorSearchResultItemInfoView, {\n          roomData: roomData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    pointer: true,\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    onClick: visitRoom,\n    gap: 2,\n    className: \"navigator-item px-2 small\",\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      center: true,\n      className: 'p-1 fw-bold ' + getUserCounterColor(),\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-avatar-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), roomData.userCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      truncate: true,\n      grow: true,\n      children: roomData.roomName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      reverse: true,\n      alignItems: \"center\",\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(NavigatorSearchResultItemInfoView, {\n        roomData: roomData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), roomData.habboGroupId > 0 && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon icon-navigator-room-group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 48\n      }, this), roomData.doorMode !== RoomDataParser.OPEN_STATE && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: 'icon icon-navigator-room-' + (roomData.doorMode === RoomDataParser.DOORBELL_STATE ? 'locked' : roomData.doorMode === RoomDataParser.PASSWORD_STATE ? 'password' : roomData.doorMode === RoomDataParser.INVISIBLE_STATE ? 'invisible' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavigatorSearchResultItemView, \"uSECJ1qHTxb+6wRNCnQsXWZJ5nQ=\", false, function () {\n  return [useNavigatorContext];\n});\n\n_c = NavigatorSearchResultItemView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigatorSearchResultItemView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/navigator/views/search/NavigatorSearchResultItemView.tsx"],"names":["FontAwesomeIcon","RoomDataParser","CreateRoomSession","DoorStateType","GetSessionDataManager","TryVisitRoom","Column","Flex","LayoutBadgeImageView","LayoutRoomThumbnailView","Text","useNavigatorContext","NavigatorSearchResultItemInfoView","NavigatorSearchResultItemView","props","roomData","children","thumbnail","rest","setDoorData","getUserCounterColor","num","userCount","maxUserCount","bg","visitRoom","event","ownerId","userId","habboGroupId","roomId","doorMode","DOORBELL_STATE","prevValue","newValue","roomInfo","state","START_DOORBELL","PASSWORD_STATE","START_PASSWORD","officialRoomPicRef","groupBadgeCode","OPEN_STATE","INVISIBLE_STATE","roomName"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { RoomDataParser } from '@nitrots/nitro-renderer';\nimport { FC, MouseEvent } from 'react';\nimport { CreateRoomSession, DoorStateType, GetSessionDataManager, TryVisitRoom } from '../../../../api';\nimport { Column, Flex, LayoutBadgeImageView, LayoutGridItemProps, LayoutRoomThumbnailView, Text } from '../../../../common';\nimport { useNavigatorContext } from '../../NavigatorContext';\nimport { NavigatorSearchResultItemInfoView } from './NavigatorSearchResultItemInfoView';\n\nexport interface NavigatorSearchResultItemViewProps extends LayoutGridItemProps\n{\n    roomData: RoomDataParser\n    thumbnail?: boolean\n}\n\nexport const NavigatorSearchResultItemView: FC<NavigatorSearchResultItemViewProps> = props =>\n{\n    const { roomData = null, children = null, thumbnail = false, ...rest } = props;\n    const { setDoorData = null } = useNavigatorContext();\n\n    const getUserCounterColor = () =>\n    {\n        const num: number = (100 * (roomData.userCount / roomData.maxUserCount));\n\n        let bg = 'badge-empty';\n\n        if(num >= 92)\n        {\n            bg = 'badge-danger';\n        }\n        else if(num >= 50)\n        {\n            bg = 'badge-warning';\n        }\n        else if(num > 0)\n        {\n            bg = 'badge-success';\n        }\n\n        return bg;\n    }\n\n    const visitRoom = (event: MouseEvent) =>\n    {\n        if(roomData.ownerId !== GetSessionDataManager().userId)\n        {\n            if(roomData.habboGroupId !== 0)\n            {\n                TryVisitRoom(roomData.roomId);\n\n                return;\n            }\n\n            switch(roomData.doorMode)\n            {\n                case RoomDataParser.DOORBELL_STATE:\n                    setDoorData(prevValue =>\n                    {\n                        const newValue = { ...prevValue };\n        \n                        newValue.roomInfo = roomData;\n                        newValue.state = DoorStateType.START_DOORBELL;\n        \n                        return newValue;\n                    });\n                    return;\n                case RoomDataParser.PASSWORD_STATE:\n                    setDoorData(prevValue =>\n                    {\n                        const newValue = { ...prevValue };\n        \n                        newValue.roomInfo = roomData;\n                        newValue.state = DoorStateType.START_PASSWORD;\n        \n                        return newValue;\n                    });\n                    return;\n            }\n        }\n        \n        CreateRoomSession(roomData.roomId);\n    }\n\n    if(thumbnail) return (\n        <Column pointer overflow=\"hidden\" alignItems=\"center\" onClick={ visitRoom } gap={ 0 } className=\"nav-thumbnail p-1 rounded-3 small mb-1 flex-column\" { ...rest }>\n            <LayoutRoomThumbnailView roomId={ roomData.roomId } customUrl={ roomData.officialRoomPicRef } className=\"d-flex flex-column align-items-center justify-content-end mb-1\">\n                { roomData.habboGroupId > 0 && <LayoutBadgeImageView badgeCode={ roomData.groupBadgeCode } isGroup={ true } className={ 'position-absolute top-0 start-0 m-1' } /> }\n                <Flex center className={ 'badge p-1 position-absolute m-1 ' + getUserCounterColor() } gap={ 1 }>\n                    <FontAwesomeIcon icon=\"user\" />\n                    { roomData.userCount }\n                </Flex>\n                { (roomData.doorMode !== RoomDataParser.OPEN_STATE) && \n                <i className={ ('position-absolute end-0 mb-1 me-1 icon icon-navigator-room-' + ((roomData.doorMode === RoomDataParser.DOORBELL_STATE) ? 'locked' : (roomData.doorMode === RoomDataParser.PASSWORD_STATE) ? 'password' : (roomData.doorMode === RoomDataParser.INVISIBLE_STATE) ? 'invisible' : '')) } /> }\n            </LayoutRoomThumbnailView>\n            <Flex className=\"w-100\">\n                <Text truncate className=\"flex-grow-1\">{ roomData.roomName }</Text>\n                <Flex reverse alignItems=\"center\" gap={ 1 }>\n                    <NavigatorSearchResultItemInfoView roomData={ roomData } />\n                </Flex>\n                { children } \n            </Flex>\n\n        </Column>\n    );\n\n    return (\n        <Flex pointer overflow=\"hidden\" alignItems=\"center\" onClick={ visitRoom } gap={ 2 } className=\"navigator-item px-2 small\" { ...rest }>\n            <Flex center className={ 'p-1 fw-bold ' + getUserCounterColor() } gap={ 1 }>\n                <div className=\"nav-avatar-icon\"/>\n                { roomData.userCount }\n            </Flex>\n            <Text truncate grow>{ roomData.roomName }</Text>\n            <Flex reverse alignItems=\"center\" gap={ 1 }>\n                <NavigatorSearchResultItemInfoView roomData={ roomData } />\n                { roomData.habboGroupId > 0 && <i className=\"icon icon-navigator-room-group\" /> }\n                { (roomData.doorMode !== RoomDataParser.OPEN_STATE) && \n                    <i className={ ('icon icon-navigator-room-' + ((roomData.doorMode === RoomDataParser.DOORBELL_STATE) ? 'locked' : (roomData.doorMode === RoomDataParser.PASSWORD_STATE) ? 'password' : (roomData.doorMode === RoomDataParser.INVISIBLE_STATE) ? 'invisible' : '')) } /> }\n            </Flex>\n            { children }\n        </Flex>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}