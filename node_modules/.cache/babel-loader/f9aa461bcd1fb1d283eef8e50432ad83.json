{"ast":null,"code":"import { RoomEntryData } from '../user';\nexport class RoomAdPurchaseInfoEventParser {\n  constructor() {\n    this._isVip = void 0;\n    this._rooms = void 0;\n  }\n\n  flush() {\n    this._isVip = false;\n    this._rooms = [];\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._isVip = wrapper.readBoolean();\n    let count = wrapper.readInt();\n\n    while (count > 0) {\n      this._rooms.push(new RoomEntryData(wrapper.readInt(), wrapper.readString(), wrapper.readBoolean()));\n\n      count--;\n    }\n\n    return true;\n  }\n\n  get isVip() {\n    return this._isVip;\n  }\n\n  get rooms() {\n    return this._rooms;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/catalog/RoomAdPurchaseInfoEventParser.ts"],"names":["RoomEntryData","RoomAdPurchaseInfoEventParser","_isVip","_rooms","flush","parse","wrapper","readBoolean","count","readInt","push","readString","isVip","rooms"],"mappings":"AACA,SAASA,aAAT,QAA8B,SAA9B;AAEA,OAAO,MAAMC,6BAAN,CACP;AAAA;AAAA,SACYC,MADZ;AAAA,SAEYC,MAFZ;AAAA;;AAIWC,EAAAA,KAAK,GACZ;AACI,SAAKF,MAAL,GAAc,KAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKJ,MAAL,GAAcI,OAAO,CAACC,WAAR,EAAd;AAEA,QAAIC,KAAK,GAAGF,OAAO,CAACG,OAAR,EAAZ;;AAEA,WAAMD,KAAK,GAAG,CAAd,EACA;AACI,WAAKL,MAAL,CAAYO,IAAZ,CAAiB,IAAIV,aAAJ,CAAkBM,OAAO,CAACG,OAAR,EAAlB,EAAqCH,OAAO,CAACK,UAAR,EAArC,EAA2DL,OAAO,CAACC,WAAR,EAA3D,CAAjB;;AAEAC,MAAAA,KAAK;AACR;;AAED,WAAO,IAAP;AACH;;AAEe,MAALI,KAAK,GAChB;AACI,WAAO,KAAKV,MAAZ;AACH;;AAEe,MAALW,KAAK,GAChB;AACI,WAAO,KAAKV,MAAZ;AACH;;AAtCL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\nimport { RoomEntryData } from '../user';\r\n\r\nexport class RoomAdPurchaseInfoEventParser implements IMessageParser\r\n{\r\n    private _isVip: boolean;\r\n    private _rooms: RoomEntryData[];\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._isVip = false;\r\n        this._rooms = [];\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._isVip = wrapper.readBoolean();\r\n\r\n        let count = wrapper.readInt();\r\n\r\n        while(count > 0)\r\n        {\r\n            this._rooms.push(new RoomEntryData(wrapper.readInt(), wrapper.readString(), wrapper.readBoolean()));\r\n\r\n            count--;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get isVip(): boolean\r\n    {\r\n        return this._isVip;\r\n    }\r\n\r\n    public get rooms(): RoomEntryData[]\r\n    {\r\n        return this._rooms;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}