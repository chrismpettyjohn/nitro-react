{"ast":null,"code":"import { Nitro } from '../../Nitro';\nexport class AvatarImageActionCache {\n  constructor() {\n    this._cache = void 0;\n    this._lastAccessTime = void 0;\n    this._cache = new Map();\n    this.setLastAccessTime(Nitro.instance.time);\n  }\n\n  dispose() {\n    this.debugInfo('[dispose]');\n    if (!this._cache) return;\n\n    for (const direction of this._cache.values()) {\n      if (direction) direction.dispose();\n    }\n\n    this._cache.clear();\n  }\n\n  getDirectionCache(k) {\n    const existing = this._cache.get(k.toString());\n\n    if (!existing) return null;\n    return existing;\n  }\n\n  updateDirectionCache(k, _arg_2) {\n    this._cache.set(k.toString(), _arg_2);\n  }\n\n  setLastAccessTime(k) {\n    this._lastAccessTime = k;\n  }\n\n  getLastAccessTime() {\n    return this._lastAccessTime;\n  }\n\n  debugInfo(k) {}\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/avatar/cache/AvatarImageActionCache.ts"],"names":["Nitro","AvatarImageActionCache","constructor","_cache","_lastAccessTime","Map","setLastAccessTime","instance","time","dispose","debugInfo","direction","values","clear","getDirectionCache","k","existing","get","toString","updateDirectionCache","_arg_2","set","getLastAccessTime"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AAGA,OAAO,MAAMC,sBAAN,CACP;AAIIC,EAAAA,WAAW,GACX;AAAA,SAJQC,MAIR;AAAA,SAHQC,eAGR;AACI,SAAKD,MAAL,GAAc,IAAIE,GAAJ,EAAd;AAEA,SAAKC,iBAAL,CAAuBN,KAAK,CAACO,QAAN,CAAeC,IAAtC;AACH;;AAEMC,EAAAA,OAAO,GACd;AACI,SAAKC,SAAL,CAAe,WAAf;AAEA,QAAG,CAAC,KAAKP,MAAT,EAAiB;;AAEjB,SAAI,MAAMQ,SAAV,IAAuB,KAAKR,MAAL,CAAYS,MAAZ,EAAvB,EACA;AACI,UAAGD,SAAH,EAAcA,SAAS,CAACF,OAAV;AACjB;;AAED,SAAKN,MAAL,CAAYU,KAAZ;AACH;;AAEMC,EAAAA,iBAAiB,CAACC,CAAD,EACxB;AACI,UAAMC,QAAQ,GAAG,KAAKb,MAAL,CAAYc,GAAZ,CAAgBF,CAAC,CAACG,QAAF,EAAhB,CAAjB;;AAEA,QAAG,CAACF,QAAJ,EAAc,OAAO,IAAP;AAEd,WAAOA,QAAP;AACH;;AAEMG,EAAAA,oBAAoB,CAACJ,CAAD,EAAYK,MAAZ,EAC3B;AACI,SAAKjB,MAAL,CAAYkB,GAAZ,CAAgBN,CAAC,CAACG,QAAF,EAAhB,EAA8BE,MAA9B;AACH;;AAEMd,EAAAA,iBAAiB,CAACS,CAAD,EACxB;AACI,SAAKX,eAAL,GAAuBW,CAAvB;AACH;;AAEMO,EAAAA,iBAAiB,GACxB;AACI,WAAO,KAAKlB,eAAZ;AACH;;AAEOM,EAAAA,SAAS,CAACK,CAAD,EACjB,CACC;;AAnDL","sourcesContent":["import { Nitro } from '../../Nitro';\r\nimport { AvatarImageDirectionCache } from './AvatarImageDirectionCache';\r\n\r\nexport class AvatarImageActionCache\r\n{\r\n    private _cache: Map<string, AvatarImageDirectionCache>;\r\n    private _lastAccessTime: number;\r\n\r\n    constructor()\r\n    {\r\n        this._cache = new Map();\r\n\r\n        this.setLastAccessTime(Nitro.instance.time);\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this.debugInfo('[dispose]');\r\n\r\n        if(!this._cache) return;\r\n\r\n        for(const direction of this._cache.values())\r\n        {\r\n            if(direction) direction.dispose();\r\n        }\r\n\r\n        this._cache.clear();\r\n    }\r\n\r\n    public getDirectionCache(k: number): AvatarImageDirectionCache\r\n    {\r\n        const existing = this._cache.get(k.toString());\r\n\r\n        if(!existing) return null;\r\n\r\n        return existing;\r\n    }\r\n\r\n    public updateDirectionCache(k: number, _arg_2: AvatarImageDirectionCache): void\r\n    {\r\n        this._cache.set(k.toString(), _arg_2);\r\n    }\r\n\r\n    public setLastAccessTime(k: number): void\r\n    {\r\n        this._lastAccessTime = k;\r\n    }\r\n\r\n    public getLastAccessTime(): number\r\n    {\r\n        return this._lastAccessTime;\r\n    }\r\n\r\n    private debugInfo(k: string): void\r\n    {\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}