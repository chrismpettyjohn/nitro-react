{"ast":null,"code":"export class LegacyExternalInterface {\n  static get available() {\n    if (!this._isListeningForPostMessages) {\n      this._isListeningForPostMessages = true;\n      window.addEventListener('message', ev => {\n        if (typeof ev.data !== 'string') return;\n\n        if (ev.data.startsWith(LegacyExternalInterface.MESSAGE_KEY)) {\n          const {\n            method,\n            params\n          } = JSON.parse(ev.data.substr(LegacyExternalInterface.MESSAGE_KEY.length));\n          const fn = window[method];\n          if (!fn) return;\n          fn(...params);\n          return;\n        }\n      });\n    }\n\n    return true;\n  }\n\n  static call(method) {\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    if (window.top !== window) {\n      window.top.postMessage(LegacyExternalInterface.MESSAGE_KEY + JSON.stringify({\n        method,\n        params\n      }), '*');\n    }\n\n    if (!('FlashExternalInterface' in window)) return undefined;\n    const fn = window.FlashExternalInterface[method];\n    return typeof fn !== 'undefined' ? fn(...params) : undefined;\n  }\n\n  static callGame(method) {\n    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      params[_key2 - 1] = arguments[_key2];\n    }\n\n    if (window.top !== window) {\n      window.top.postMessage('Nitro_LegacyExternalGameInterface' + JSON.stringify({\n        method,\n        params\n      }), '*');\n    }\n\n    if (!('FlashExternalGameInterface' in window)) return undefined;\n    const fn = window.FlashExternalGameInterface[method];\n    return typeof fn !== 'undefined' ? fn(...params) : undefined;\n  }\n\n  static addCallback(name, func) {\n    window[name] = func;\n  }\n\n}\nLegacyExternalInterface.MESSAGE_KEY = 'Nitro_LegacyExternalInterface';\nLegacyExternalInterface._isListeningForPostMessages = false;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/externalInterface/LegacyExternalInterface.ts"],"names":["LegacyExternalInterface","available","_isListeningForPostMessages","window","addEventListener","ev","data","startsWith","MESSAGE_KEY","method","params","JSON","parse","substr","length","fn","call","top","postMessage","stringify","undefined","FlashExternalInterface","callGame","FlashExternalGameInterface","addCallback","name","func"],"mappings":"AAuCA,OAAO,MAAMA,uBAAN,CACP;AAK+B,aAATC,SAAS,GAC3B;AACI,QAAG,CAAC,KAAKC,2BAAT,EACA;AACI,WAAKA,2BAAL,GAAmC,IAAnC;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAoCC,EAAD,IACnC;AACI,YAAG,OAAOA,EAAE,CAACC,IAAV,KAAmB,QAAtB,EAAgC;;AAEhC,YAAGD,EAAE,CAACC,IAAH,CAAQC,UAAR,CAAmBP,uBAAuB,CAACQ,WAA3C,CAAH,EACA;AACI,gBAAM;AAAEC,YAAAA,MAAF;AAAUC,YAAAA;AAAV,cAAqBC,IAAI,CAACC,KAAL,CACvBP,EAAE,CAACC,IAAH,CAAQO,MAAR,CAAeb,uBAAuB,CAACQ,WAAxB,CAAoCM,MAAnD,CADuB,CAA3B;AAIA,gBAAMC,EAAE,GAAIZ,MAAD,CAAgBM,MAAhB,CAAX;AACA,cAAG,CAACM,EAAJ,EAAQ;AAERA,UAAAA,EAAE,CAAC,GAAGL,MAAJ,CAAF;AACA;AACH;AAEJ,OAjBD;AAkBH;;AAED,WAAO,IAAP;AACH;;AAEiB,SAAJM,IAAI,CACdP,MADc,EAIlB;AAAA,sCAFOC,MAEP;AAFOA,MAAAA,MAEP;AAAA;;AACI,QAAGP,MAAM,CAACc,GAAP,KAAed,MAAlB,EACA;AACIA,MAAAA,MAAM,CAACc,GAAP,CAAWC,WAAX,CAAuBlB,uBAAuB,CAACQ,WAAxB,GAAsCG,IAAI,CAACQ,SAAL,CAAe;AACxEV,QAAAA,MADwE;AAExEC,QAAAA;AAFwE,OAAf,CAA7D,EAGI,GAHJ;AAIH;;AAED,QAAG,EAAE,4BAA4BP,MAA9B,CAAH,EAA0C,OAAOiB,SAAP;AAE1C,UAAML,EAAE,GAAGZ,MAAM,CAACkB,sBAAP,CAA8BZ,MAA9B,CAAX;AAEA,WAAO,OAAOM,EAAP,KAAc,WAAd,GAA4BA,EAAE,CAAC,GAAGL,MAAJ,CAA9B,GAA4CU,SAAnD;AACH;;AAEqB,SAARE,QAAQ,CAClBb,MADkB,EAItB;AAAA,uCAFOC,MAEP;AAFOA,MAAAA,MAEP;AAAA;;AACI,QAAGP,MAAM,CAACc,GAAP,KAAed,MAAlB,EACA;AACIA,MAAAA,MAAM,CAACc,GAAP,CAAWC,WAAX,CAAuB,sCAAsCP,IAAI,CAACQ,SAAL,CAAe;AACxEV,QAAAA,MADwE;AAExEC,QAAAA;AAFwE,OAAf,CAA7D,EAGI,GAHJ;AAIH;;AAED,QAAG,EAAE,gCAAgCP,MAAlC,CAAH,EAA8C,OAAOiB,SAAP;AAE9C,UAAML,EAAE,GAAGZ,MAAM,CAACoB,0BAAP,CAAkCd,MAAlC,CAAX;AAEA,WAAO,OAAOM,EAAP,KAAc,WAAd,GAA4BA,EAAE,CAAC,GAAGL,MAAJ,CAA9B,GAA4CU,SAAnD;AACH;;AAEwB,SAAXI,WAAW,CAACC,IAAD,EAAeC,IAAf,EACzB;AACKvB,IAAAA,MAAD,CAAgBsB,IAAhB,IAAwBC,IAAxB;AACH;;AA5EL;AADa1B,uB,CAEeQ,W,GAAc,+B;AAF7BR,uB,CAGME,2B,GAA8B,K","sourcesContent":["declare global\r\n{\r\n\tinterface Window\r\n\t{\r\n\t\tFlashExternalInterface?:\r\n\t\t{\r\n\t\t\tlegacyTrack?: (\r\n\t\t\t\tcategory: string,\r\n\t\t\t\taction: string,\r\n\t\t\t\tdata: unknown[]\r\n\t\t\t) => void;\r\n\t\t\tlogDebug?: (...params: string[]) => void;\r\n\t\t\tdisconnect?: (reasonCode: number, reasonString: string) => void;\r\n\t\t\tlogout?: () => void;\r\n\t\t\topenWebPageAndMinimizeClient?: (pageUrl: string) => void;\r\n\t\t\theartBeat?: () => void;\r\n\t\t\tlogEventLog?: (log: string) => void;\r\n\t\t\topenPage?: (pageUrl: string) => void;\r\n\t\t\tcloseWebPageAndRestoreClient?: () => void;\r\n\t\t\topenHabblet?: (name: string, param: string) => void;\r\n\t\t\tcloseHabblet?: (name: string, param: string) => void;\r\n\t\t\topenExternalLink?: (link: string) => void;\r\n\t\t\troomVisited?: (roomId: number) => void;\r\n\t\t\topenMinimail?: (target: string) => void;\r\n\t\t\topenNews?: () => void;\r\n\t\t\tcloseNews?: () => void;\r\n\t\t\topenAvatars?: () => void;\r\n\t\t\topenRoomEnterAd?: () => void;\r\n\t\t\tupdateFigure?: (figure: string) => void;\r\n\t\t};\r\n\r\n\t\tFlashExternalGameInterface?:\r\n\t\t{\r\n\t\t\tshowGame?: (url: string) => void;\r\n\t\t\thideGame?: () => void;\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport class LegacyExternalInterface\r\n{\r\n    private static readonly MESSAGE_KEY = 'Nitro_LegacyExternalInterface';\r\n    private static _isListeningForPostMessages = false;\r\n\r\n\r\n    public static get available(): boolean\r\n    {\r\n        if(!this._isListeningForPostMessages)\r\n        {\r\n            this._isListeningForPostMessages = true;\r\n            window.addEventListener('message', (ev) =>\r\n            {\r\n                if(typeof ev.data !== 'string') return;\r\n\r\n                if(ev.data.startsWith(LegacyExternalInterface.MESSAGE_KEY))\r\n                {\r\n                    const { method, params } = JSON.parse(\r\n                        ev.data.substr(LegacyExternalInterface.MESSAGE_KEY.length)\r\n                    );\r\n\r\n                    const fn = (window as any)[method];\r\n                    if(!fn) return;\r\n\r\n                    fn(...params);\r\n                    return;\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public static call<K extends keyof typeof window.FlashExternalInterface>(\r\n        method: K,\r\n        ...params: Parameters<typeof window.FlashExternalInterface[K]>\r\n    ): ReturnType<typeof window.FlashExternalInterface[K]> | undefined\r\n    {\r\n        if(window.top !== window)\r\n        {\r\n            window.top.postMessage(LegacyExternalInterface.MESSAGE_KEY + JSON.stringify({\r\n                method,\r\n                params\r\n            }), '*');\r\n        }\r\n\r\n        if(!('FlashExternalInterface' in window)) return undefined;\r\n\r\n        const fn = window.FlashExternalInterface[method] as Function;\r\n\r\n        return typeof fn !== 'undefined' ? fn(...params) : undefined;\r\n    }\r\n\r\n    public static callGame<K extends keyof typeof window.FlashExternalGameInterface>(\r\n        method: K,\r\n        ...params: Parameters<typeof window.FlashExternalGameInterface[K]>\r\n    ): ReturnType<typeof window.FlashExternalGameInterface[K]> | undefined\r\n    {\r\n        if(window.top !== window)\r\n        {\r\n            window.top.postMessage('Nitro_LegacyExternalGameInterface' + JSON.stringify({\r\n                method,\r\n                params\r\n            }), '*');\r\n        }\r\n\r\n        if(!('FlashExternalGameInterface' in window)) return undefined;\r\n\r\n        const fn = window.FlashExternalGameInterface[method] as Function;\r\n\r\n        return typeof fn !== 'undefined' ? fn(...params) : undefined;\r\n    }\r\n\r\n    public static addCallback(name: string, func: Function)\r\n    {\r\n        (window as any)[name] = func;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}