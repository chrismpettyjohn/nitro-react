{"ast":null,"code":"import { AvatarAction } from '../../../../../avatar/enum/AvatarAction';\nexport class TypingBubbleAddition {\n  constructor(id, visualization) {\n    this._id = void 0;\n    this._visualization = void 0;\n    this._asset = void 0;\n    this._relativeDepth = void 0;\n    this._id = id;\n    this._visualization = visualization;\n    this._asset = null;\n    this._relativeDepth = 0;\n  }\n\n  dispose() {\n    this._visualization = null;\n    this._asset = null;\n  }\n\n  update(sprite, scale) {\n    if (!sprite) return;\n    sprite.visible = true;\n    sprite.relativeDepth = this._relativeDepth;\n    sprite.alpha = 255;\n    let additionScale = 64;\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (scale < 48) {\n      this._asset = this._visualization.getAvatarRenderAsset('avatar_addition_user_typing_small');\n      offsetX = 3;\n      offsetY = -42;\n      additionScale = 32;\n    } else {\n      this._asset = this._visualization.getAvatarRenderAsset('avatar_addition_user_typing');\n      offsetX = 14;\n      offsetY = -83;\n    }\n\n    if (this._visualization.posture === AvatarAction.POSTURE_SIT) {\n      offsetY += additionScale / 2;\n    } else if (this._visualization.posture === AvatarAction.POSTURE_LAY) {\n      offsetY += scale;\n    }\n\n    if (this._asset) {\n      sprite.texture = this._asset;\n      sprite.offsetX = offsetX;\n      sprite.offsetY = offsetY;\n      sprite.relativeDepth = -0.02 + 0;\n    }\n  }\n\n  animate(sprite) {\n    if (this._asset && sprite) {\n      sprite.texture = this._asset;\n    }\n\n    return false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get relativeDepth() {\n    return this._relativeDepth;\n  }\n\n  set relativeDepth(depth) {\n    this._relativeDepth = depth;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/avatar/additions/TypingBubbleAddition.ts"],"names":["AvatarAction","TypingBubbleAddition","constructor","id","visualization","_id","_visualization","_asset","_relativeDepth","dispose","update","sprite","scale","visible","relativeDepth","alpha","additionScale","offsetX","offsetY","getAvatarRenderAsset","posture","POSTURE_SIT","POSTURE_LAY","texture","animate","depth"],"mappings":"AAEA,SAASA,YAAT,QAA6B,yCAA7B;AAIA,OAAO,MAAMC,oBAAN,CACP;AAMIC,EAAAA,WAAW,CAACC,EAAD,EAAaC,aAAb,EACX;AAAA,SANQC,GAMR;AAAA,SALQC,cAKR;AAAA,SAJQC,MAIR;AAAA,SAHQC,cAGR;AACI,SAAKH,GAAL,GAAWF,EAAX;AACA,SAAKG,cAAL,GAAsBF,aAAtB;AACA,SAAKG,MAAL,GAAc,IAAd;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACH;;AAEMC,EAAAA,OAAO,GACd;AACI,SAAKH,cAAL,GAAsB,IAAtB;AACA,SAAKC,MAAL,GAAc,IAAd;AACH;;AAEMG,EAAAA,MAAM,CAACC,MAAD,EAA4BC,KAA5B,EACb;AACI,QAAG,CAACD,MAAJ,EAAY;AAEZA,IAAAA,MAAM,CAACE,OAAP,GAAiB,IAAjB;AACAF,IAAAA,MAAM,CAACG,aAAP,GAAuB,KAAKN,cAA5B;AACAG,IAAAA,MAAM,CAACI,KAAP,GAAe,GAAf;AAEA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,CAAd;;AAEA,QAAGN,KAAK,GAAG,EAAX,EACA;AACI,WAAKL,MAAL,GAAc,KAAKD,cAAL,CAAoBa,oBAApB,CAAyC,mCAAzC,CAAd;AAEAF,MAAAA,OAAO,GAAG,CAAV;AACAC,MAAAA,OAAO,GAAG,CAAC,EAAX;AAEAF,MAAAA,aAAa,GAAG,EAAhB;AACH,KARD,MAUA;AACI,WAAKT,MAAL,GAAc,KAAKD,cAAL,CAAoBa,oBAApB,CAAyC,6BAAzC,CAAd;AAEAF,MAAAA,OAAO,GAAG,EAAV;AACAC,MAAAA,OAAO,GAAG,CAAC,EAAX;AACH;;AAED,QAAG,KAAKZ,cAAL,CAAoBc,OAApB,KAAgCpB,YAAY,CAACqB,WAAhD,EACA;AACIH,MAAAA,OAAO,IAAKF,aAAa,GAAG,CAA5B;AACH,KAHD,MAKK,IAAG,KAAKV,cAAL,CAAoBc,OAApB,KAAgCpB,YAAY,CAACsB,WAAhD,EACL;AACIJ,MAAAA,OAAO,IAAIN,KAAX;AACH;;AAED,QAAG,KAAKL,MAAR,EACA;AACII,MAAAA,MAAM,CAACY,OAAP,GAAiB,KAAKhB,MAAtB;AACAI,MAAAA,MAAM,CAACM,OAAP,GAAiBA,OAAjB;AACAN,MAAAA,MAAM,CAACO,OAAP,GAAiBA,OAAjB;AACAP,MAAAA,MAAM,CAACG,aAAP,GAAwB,CAAC,IAAD,GAAQ,CAAhC;AACH;AACJ;;AAEMU,EAAAA,OAAO,CAACb,MAAD,EACd;AACI,QAAG,KAAKJ,MAAL,IAAeI,MAAlB,EACA;AACIA,MAAAA,MAAM,CAACY,OAAP,GAAiB,KAAKhB,MAAtB;AACH;;AAED,WAAO,KAAP;AACH;;AAEY,MAAFJ,EAAE,GACb;AACI,WAAO,KAAKE,GAAZ;AACH;;AAEuB,MAAbS,aAAa,GACxB;AACI,WAAO,KAAKN,cAAZ;AACH;;AAEuB,MAAbM,aAAa,CAACW,KAAD,EACxB;AACI,SAAKjB,cAAL,GAAsBiB,KAAtB;AACH;;AA3FL","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { IRoomObjectSprite } from '../../../../../../room/object/visualization/IRoomObjectSprite';\r\nimport { AvatarAction } from '../../../../../avatar/enum/AvatarAction';\r\nimport { AvatarVisualization } from '../AvatarVisualization';\r\nimport { IAvatarAddition } from './IAvatarAddition';\r\n\r\nexport class TypingBubbleAddition implements IAvatarAddition\r\n{\r\n    private _id: number;\r\n    private _visualization: AvatarVisualization;\r\n    private _asset: Texture<Resource>;\r\n    private _relativeDepth: number;\r\n\r\n    constructor(id: number, visualization: AvatarVisualization)\r\n    {\r\n        this._id = id;\r\n        this._visualization = visualization;\r\n        this._asset = null;\r\n        this._relativeDepth = 0;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        this._visualization = null;\r\n        this._asset = null;\r\n    }\r\n\r\n    public update(sprite: IRoomObjectSprite, scale: number): void\r\n    {\r\n        if(!sprite) return;\r\n\r\n        sprite.visible = true;\r\n        sprite.relativeDepth = this._relativeDepth;\r\n        sprite.alpha = 255;\r\n\r\n        let additionScale = 64;\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n\r\n        if(scale < 48)\r\n        {\r\n            this._asset = this._visualization.getAvatarRenderAsset('avatar_addition_user_typing_small');\r\n\r\n            offsetX = 3;\r\n            offsetY = -42;\r\n\r\n            additionScale = 32;\r\n        }\r\n        else\r\n        {\r\n            this._asset = this._visualization.getAvatarRenderAsset('avatar_addition_user_typing');\r\n\r\n            offsetX = 14;\r\n            offsetY = -83;\r\n        }\r\n\r\n        if(this._visualization.posture === AvatarAction.POSTURE_SIT)\r\n        {\r\n            offsetY += (additionScale / 2);\r\n        }\r\n\r\n        else if(this._visualization.posture === AvatarAction.POSTURE_LAY)\r\n        {\r\n            offsetY += scale;\r\n        }\r\n\r\n        if(this._asset)\r\n        {\r\n            sprite.texture = this._asset;\r\n            sprite.offsetX = offsetX;\r\n            sprite.offsetY = offsetY;\r\n            sprite.relativeDepth = (-0.02 + 0);\r\n        }\r\n    }\r\n\r\n    public animate(sprite: IRoomObjectSprite): boolean\r\n    {\r\n        if(this._asset && sprite)\r\n        {\r\n            sprite.texture = this._asset;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public get id(): number\r\n    {\r\n        return this._id;\r\n    }\r\n\r\n    public get relativeDepth(): number\r\n    {\r\n        return this._relativeDepth;\r\n    }\r\n\r\n    public set relativeDepth(depth: number)\r\n    {\r\n        this._relativeDepth = depth;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}