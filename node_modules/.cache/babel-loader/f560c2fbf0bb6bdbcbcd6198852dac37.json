{"ast":null,"code":"export class AvailabilityStatusMessageParser {\n  constructor() {\n    this._isOpen = void 0;\n    this._onShutdown = void 0;\n    this._isAuthenticUser = void 0;\n  }\n\n  flush() {\n    this._isOpen = false;\n    this._onShutdown = false;\n    this._isAuthenticUser = false;\n    return true;\n  }\n\n  parse(wrapper) {\n    if (!wrapper) return false;\n    this._isOpen = wrapper.readBoolean();\n    this._onShutdown = wrapper.readBoolean();\n\n    if (wrapper.bytesAvailable) {\n      this._isAuthenticUser = wrapper.readBoolean();\n    }\n\n    return true;\n  }\n\n  get isOpen() {\n    return this._isOpen;\n  }\n\n  get onShutdown() {\n    return this._onShutdown;\n  }\n\n  get isAuthenticUser() {\n    return this._isAuthenticUser;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/parser/availability/AvailabilityStatusMessageParser.ts"],"names":["AvailabilityStatusMessageParser","_isOpen","_onShutdown","_isAuthenticUser","flush","parse","wrapper","readBoolean","bytesAvailable","isOpen","onShutdown","isAuthenticUser"],"mappings":"AAEA,OAAO,MAAMA,+BAAN,CACP;AAAA;AAAA,SACYC,OADZ;AAAA,SAEYC,WAFZ;AAAA,SAGYC,gBAHZ;AAAA;;AAKWC,EAAAA,KAAK,GACZ;AACI,SAAKH,OAAL,GAAe,KAAf;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AAEA,WAAO,IAAP;AACH;;AAEME,EAAAA,KAAK,CAACC,OAAD,EACZ;AACI,QAAG,CAACA,OAAJ,EAAa,OAAO,KAAP;AAEb,SAAKL,OAAL,GAAeK,OAAO,CAACC,WAAR,EAAf;AACA,SAAKL,WAAL,GAAmBI,OAAO,CAACC,WAAR,EAAnB;;AAEA,QAAGD,OAAO,CAACE,cAAX,EACA;AACI,WAAKL,gBAAL,GAAwBG,OAAO,CAACC,WAAR,EAAxB;AACH;;AAED,WAAO,IAAP;AACH;;AAEgB,MAANE,MAAM,GACjB;AACI,WAAO,KAAKR,OAAZ;AACH;;AAEoB,MAAVS,UAAU,GACrB;AACI,WAAO,KAAKR,WAAZ;AACH;;AAEyB,MAAfS,eAAe,GAC1B;AACI,WAAO,KAAKR,gBAAZ;AACH;;AA1CL","sourcesContent":["import { IMessageDataWrapper, IMessageParser } from '../../../../../core';\r\n\r\nexport class AvailabilityStatusMessageParser implements IMessageParser\r\n{\r\n    private _isOpen: boolean;\r\n    private _onShutdown: boolean;\r\n    private _isAuthenticUser: boolean;\r\n\r\n    public flush(): boolean\r\n    {\r\n        this._isOpen = false;\r\n        this._onShutdown = false;\r\n        this._isAuthenticUser = false;\r\n\r\n        return true;\r\n    }\r\n\r\n    public parse(wrapper: IMessageDataWrapper): boolean\r\n    {\r\n        if(!wrapper) return false;\r\n\r\n        this._isOpen = wrapper.readBoolean();\r\n        this._onShutdown = wrapper.readBoolean();\r\n\r\n        if(wrapper.bytesAvailable)\r\n        {\r\n            this._isAuthenticUser = wrapper.readBoolean();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public get isOpen(): boolean\r\n    {\r\n        return this._isOpen;\r\n    }\r\n\r\n    public get onShutdown(): boolean\r\n    {\r\n        return this._onShutdown;\r\n    }\r\n\r\n    public get isAuthenticUser(): boolean\r\n    {\r\n        return this._isAuthenticUser;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}