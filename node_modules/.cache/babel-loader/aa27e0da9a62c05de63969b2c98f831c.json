{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/common/layout/LayoutCurrencyIcon.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { GetConfiguration } from '../../api';\nimport { Base } from '../Base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LayoutCurrencyIcon = props => {\n  _s();\n\n  const {\n    type = '',\n    classNames = [],\n    style = {},\n    ...rest\n  } = props;\n  const getClassNames = useMemo(() => {\n    const newClassNames = ['nitro-currency-icon'];\n    if (classNames.length) newClassNames.push(...classNames);\n    return newClassNames;\n  }, [classNames]);\n  const urlString = useMemo(() => {\n    let url = GetConfiguration('currency.asset.icon.url', '');\n    url = url.replace('%type%', type.toString());\n    return `url(${url})`;\n  }, [type]);\n  const getStyle = useMemo(() => {\n    let newStyle = {};\n    newStyle.backgroundImage = urlString;\n    if (Object.keys(style).length) newStyle = { ...newStyle,\n      ...style\n    };\n    return newStyle;\n  }, [style, urlString]);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    classNames: getClassNames,\n    style: getStyle,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n\n_s(LayoutCurrencyIcon, \"6lGmwcTbHB6zPBcHHhkv0E7ICM4=\");\n\n_c = LayoutCurrencyIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutCurrencyIcon\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/common/layout/LayoutCurrencyIcon.tsx"],"names":["useMemo","GetConfiguration","Base","LayoutCurrencyIcon","props","type","classNames","style","rest","getClassNames","newClassNames","length","push","urlString","url","replace","toString","getStyle","newStyle","backgroundImage","Object","keys"],"mappings":";;;AAAA,SAA4BA,OAA5B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,IAAT,QAAgC,SAAhC;;AAOA,OAAO,MAAMC,kBAAyC,GAAGC,KAAK,IAC9D;AAAA;;AACI,QAAM;AAAEC,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,UAAU,GAAG,EAA1B;AAA8BC,IAAAA,KAAK,GAAG,EAAtC;AAA0C,OAAGC;AAA7C,MAAsDJ,KAA5D;AAEA,QAAMK,aAAa,GAAGT,OAAO,CAAC,MAC9B;AACI,UAAMU,aAAuB,GAAG,CAAE,qBAAF,CAAhC;AAEA,QAAGJ,UAAU,CAACK,MAAd,EAAsBD,aAAa,CAACE,IAAd,CAAmB,GAAGN,UAAtB;AAEtB,WAAOI,aAAP;AACH,GAP4B,EAO1B,CAAEJ,UAAF,CAP0B,CAA7B;AASA,QAAMO,SAAS,GAAGb,OAAO,CAAC,MAC1B;AACI,QAAIc,GAAG,GAAGb,gBAAgB,CAAS,yBAAT,EAAoC,EAApC,CAA1B;AAEAa,IAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,QAAZ,EAAsBV,IAAI,CAACW,QAAL,EAAtB,CAAN;AAEA,WAAQ,OAAOF,GAAK,GAApB;AACH,GAPwB,EAOtB,CAAET,IAAF,CAPsB,CAAzB;AASA,QAAMY,QAAQ,GAAGjB,OAAO,CAAC,MACzB;AACI,QAAIkB,QAAuB,GAAG,EAA9B;AAEAA,IAAAA,QAAQ,CAACC,eAAT,GAA2BN,SAA3B;AAEA,QAAGO,MAAM,CAACC,IAAP,CAAYd,KAAZ,EAAmBI,MAAtB,EAA8BO,QAAQ,GAAG,EAAE,GAAGA,QAAL;AAAe,SAAGX;AAAlB,KAAX;AAE9B,WAAOW,QAAP;AACH,GATuB,EASrB,CAAEX,KAAF,EAASM,SAAT,CATqB,CAAxB;AAWA,sBAAO,QAAC,IAAD;AAAM,IAAA,UAAU,EAAGJ,aAAnB;AAAmC,IAAA,KAAK,EAAGQ,QAA3C;AAAA,OAA2DT;AAA3D;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAlCM;;GAAML,kB;;KAAAA,kB","sourcesContent":["import { CSSProperties, FC, useMemo } from 'react';\nimport { GetConfiguration } from '../../api';\nimport { Base, BaseProps } from '../Base';\n\nexport interface CurrencyIconProps extends BaseProps<HTMLDivElement>\n{\n    type: number | string;\n}\n\nexport const LayoutCurrencyIcon: FC<CurrencyIconProps> = props =>\n{\n    const { type = '', classNames = [], style = {}, ...rest } = props;\n\n    const getClassNames = useMemo(() =>\n    {\n        const newClassNames: string[] = [ 'nitro-currency-icon' ];\n\n        if(classNames.length) newClassNames.push(...classNames);\n\n        return newClassNames;\n    }, [ classNames ]);\n\n    const urlString = useMemo(() =>\n    {\n        let url = GetConfiguration<string>('currency.asset.icon.url', '');\n    \n        url = url.replace('%type%', type.toString());\n\n        return `url(${ url })`;\n    }, [ type ]);\n\n    const getStyle = useMemo(() =>\n    {\n        let newStyle: CSSProperties = {};\n\n        newStyle.backgroundImage = urlString;\n\n        if(Object.keys(style).length) newStyle = { ...newStyle, ...style };\n\n        return newStyle;\n    }, [ style, urlString ]);\n\n    return <Base classNames={ getClassNames } style={ getStyle } { ...rest } />\n}\n"]},"metadata":{},"sourceType":"module"}