{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/navigator/views/search/NavigatorSearchResultView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { LocalizeText, NavigatorSearchResultViewDisplayMode } from '../../../../api';\nimport { AutoGrid, Column, Flex, Grid } from '../../../../common';\nimport { NavigatorSearchResultItemView } from './NavigatorSearchResultItemView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NavigatorSearchResultView = props => {\n  _s();\n\n  const {\n    searchResult = null,\n    ...rest\n  } = props;\n  const [isExtended, setIsExtended] = useState(true);\n  const [displayMode, setDisplayMode] = useState(0);\n\n  const getResultTitle = () => {\n    let name = searchResult.code;\n    if (!name || !name.length) return searchResult.data;\n    if (name.startsWith('${')) return name.slice(2, name.length - 1);\n    return 'navigator.searchcode.title.' + name;\n  };\n\n  const toggleDisplayMode = () => {\n    setDisplayMode(prevValue => {\n      if (prevValue === NavigatorSearchResultViewDisplayMode.LIST) return NavigatorSearchResultViewDisplayMode.THUMBNAILS;\n      return NavigatorSearchResultViewDisplayMode.LIST;\n    });\n  };\n\n  useEffect(() => {\n    if (!searchResult) return; //setIsExtended(searchResult.closed);\n\n    setDisplayMode(searchResult.mode);\n  }, [searchResult, props]);\n  const gridHasTwoColumns = displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS;\n  return /*#__PURE__*/_jsxDEV(Column, {\n    className: \"bg-white\",\n    gap: 0,\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      fullWidth: true,\n      alignItems: \"center\",\n      justifyContent: \"between\",\n      className: \"px-2 py-1\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        grow: true,\n        pointer: true,\n        alignItems: \"center\",\n        gap: 1,\n        onClick: event => setIsExtended(prevValue => !prevValue),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: isExtended ? 'icon icon-nav-minus' : 'icon icon-nav-plus'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-category\",\n          children: [\" \", LocalizeText(getResultTitle())]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: displayMode === NavigatorSearchResultViewDisplayMode.LIST ? 'icon icon-nav-thumbnail' : displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS ? 'icon icon-nav-inline' : null,\n        onClick: toggleDisplayMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), \" \", isExtended && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: gridHasTwoColumns ? /*#__PURE__*/_jsxDEV(AutoGrid, {\n        columnCount: 3,\n        ...rest,\n        columnMinWidth: 110,\n        columnMinHeight: 130,\n        className: \"mx-2\",\n        children: searchResult.rooms.length > 0 && searchResult.rooms.map((room, index) => /*#__PURE__*/_jsxDEV(NavigatorSearchResultItemView, {\n          roomData: room,\n          thumbnail: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 104\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        columnCount: 1,\n        className: \"navigator-grid\",\n        gap: 0,\n        children: searchResult.rooms.length > 0 && searchResult.rooms.map((room, index) => /*#__PURE__*/_jsxDEV(NavigatorSearchResultItemView, {\n          roomData: room\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 104\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 39\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this) // <div className=\"nitro-navigator-search-result bg-white rounded mb-2 overflow-hidden\">\n  //     <div className=\"d-flex flex-column\">\n  //         <div className=\"d-flex align-items-center px-2 py-1 text-black\">\n  //             <i className={ 'text-secondary fas ' + (isExtended ? 'fa-minus' : 'fa-plus') } onClick={ toggleExtended }></i>\n  //             <div className=\"ms-2 flex-grow-1\">{ LocalizeText(getResultTitle()) }</div>\n  //             <i className={ 'text-secondary fas ' + classNames({ 'fa-bars': (displayMode === NavigatorSearchResultViewDisplayMode.LIST), 'fa-th': displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS })}></i>\n  //         </div>\n  //         { isExtended &&\n  //             <div className={ 'nitro-navigator-result-list row row-cols-' + classNames({ '1': (displayMode === NavigatorSearchResultViewDisplayMode.LIST), '2': (displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS) }) }>\n  //                 { searchResult.rooms.length > 0 && searchResult.rooms.map((room, index) =>\n  //                     {\n  //                         return <NavigatorSearchResultItemView key={ index } roomData={ room } />\n  //                     }) }\n  //             </div> }\n  //     </div>\n  // </div>\n  // <div className=\"nitro-navigator-result-list p-2\">\n  //     <div className=\"d-flex mb-2 small cursor-pointer\" onClick={ toggleList }>\n  //         <i className={ \"fas \" + classNames({ 'fa-plus': !isExtended, 'fa-minus': isExtended })}></i>\n  //         <div className=\"align-self-center w-100 ml-2\">{ LocalizeText(getListCode()) }</div>\n  //         <i className={ \"fas \" + classNames({ 'fa-bars': displayMode === NavigatorResultListViewDisplayMode.LIST, 'fa-th': displayMode >= NavigatorResultListViewDisplayMode.THUMBNAILS })} onClick={ toggleDisplayMode }></i>\n  //     </div>\n  //     <div className={ 'row mr-n2 row-cols-' + classNames({ '1': displayMode === NavigatorResultListViewDisplayMode.LIST, '2': displayMode >= NavigatorResultListViewDisplayMode.THUMBNAILS }) }>\n  //         { isExtended && resultList && resultList.rooms.map((room, index) =>\n  //             {\n  //                 return <NavigatorResultView key={ index } result={ room } />\n  //             })\n  //         }\n  //     </div>\n  // </div>\n  ;\n};\n\n_s(NavigatorSearchResultView, \"/CJcIWihaEJsO6Dv1kikIAWiTNA=\");\n\n_c = NavigatorSearchResultView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigatorSearchResultView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/navigator/views/search/NavigatorSearchResultView.tsx"],"names":["useEffect","useState","LocalizeText","NavigatorSearchResultViewDisplayMode","AutoGrid","Column","Flex","Grid","NavigatorSearchResultItemView","NavigatorSearchResultView","props","searchResult","rest","isExtended","setIsExtended","displayMode","setDisplayMode","getResultTitle","name","code","length","data","startsWith","slice","toggleDisplayMode","prevValue","LIST","THUMBNAILS","mode","gridHasTwoColumns","event","rooms","map","room","index"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavigatorSearchResultList } from '@nitrots/nitro-renderer';\nimport { FC, useEffect, useState } from 'react';\nimport { LocalizeText, NavigatorSearchResultViewDisplayMode } from '../../../../api';\nimport { AutoGrid, AutoGridProps, Column, Flex, Grid, Text } from '../../../../common';\nimport { NavigatorSearchResultItemView } from './NavigatorSearchResultItemView';\n\nexport interface NavigatorSearchResultViewProps extends AutoGridProps\n{\n    searchResult: NavigatorSearchResultList;\n}\n\nexport const NavigatorSearchResultView: FC<NavigatorSearchResultViewProps> = props =>\n{\n    const { searchResult = null, ...rest } = props;\n\n    const [ isExtended, setIsExtended ] = useState(true);\n    const [ displayMode, setDisplayMode ] = useState<number>(0);\n\n    const getResultTitle = () =>\n    {\n        let name = searchResult.code;\n\n        if(!name || !name.length) return searchResult.data;\n\n        if(name.startsWith('${')) return name.slice(2, (name.length - 1));\n\n        return ('navigator.searchcode.title.' + name);\n    }\n\n    const toggleDisplayMode = () =>\n    {\n        setDisplayMode(prevValue =>\n        {\n            if(prevValue === NavigatorSearchResultViewDisplayMode.LIST) return NavigatorSearchResultViewDisplayMode.THUMBNAILS;\n\n            return NavigatorSearchResultViewDisplayMode.LIST;\n        });\n    }\n\n    useEffect(() =>\n    {\n        if(!searchResult) return;\n\n        //setIsExtended(searchResult.closed);\n        setDisplayMode(searchResult.mode);\n    }, [ searchResult,props ]);\n\n    const gridHasTwoColumns = (displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS);\n    \n    return (\n        <Column className=\"bg-white\" gap={ 0 }>\n            <Flex fullWidth alignItems=\"center\" justifyContent=\"between\" className=\"px-2 py-1\">\n                <Flex grow pointer alignItems=\"center\" gap={ 1 } onClick={ event => setIsExtended(prevValue => !prevValue) }>\n                    <i className={ isExtended ? 'icon icon-nav-minus' : 'icon icon-nav-plus' } />\n                    <div className=\"nav-category\"> { LocalizeText(getResultTitle()) }</div>\n                </Flex>\n                <i className={ ((displayMode === NavigatorSearchResultViewDisplayMode.LIST) ? 'icon icon-nav-thumbnail' : (displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS) ? 'icon icon-nav-inline' : null) } onClick={ toggleDisplayMode } />\n            </Flex> { isExtended && \n                <>\n                    {\n                        gridHasTwoColumns ? <AutoGrid columnCount={ 3 } { ...rest } columnMinWidth={ 110 } columnMinHeight={ 130 } className=\"mx-2\">\n                            { searchResult.rooms.length > 0 && searchResult.rooms.map((room, index) => <NavigatorSearchResultItemView key={ index } roomData={ room } thumbnail={ true } />) }\n                        </AutoGrid> : <Grid columnCount={ 1 } className=\"navigator-grid\" gap={ 0 }>\n                            { searchResult.rooms.length > 0 && searchResult.rooms.map((room, index) => <NavigatorSearchResultItemView key={ index } roomData={ room } />) }\n                        </Grid>\n                    }\n                </>\n            }\n        </Column>\n        // <div className=\"nitro-navigator-search-result bg-white rounded mb-2 overflow-hidden\">\n        //     <div className=\"d-flex flex-column\">\n        //         <div className=\"d-flex align-items-center px-2 py-1 text-black\">\n        //             <i className={ 'text-secondary fas ' + (isExtended ? 'fa-minus' : 'fa-plus') } onClick={ toggleExtended }></i>\n        //             <div className=\"ms-2 flex-grow-1\">{ LocalizeText(getResultTitle()) }</div>\n        //             <i className={ 'text-secondary fas ' + classNames({ 'fa-bars': (displayMode === NavigatorSearchResultViewDisplayMode.LIST), 'fa-th': displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS })}></i>\n        //         </div>\n        //         { isExtended &&\n        //             <div className={ 'nitro-navigator-result-list row row-cols-' + classNames({ '1': (displayMode === NavigatorSearchResultViewDisplayMode.LIST), '2': (displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS) }) }>\n        //                 { searchResult.rooms.length > 0 && searchResult.rooms.map((room, index) =>\n        //                     {\n        //                         return <NavigatorSearchResultItemView key={ index } roomData={ room } />\n        //                     }) }\n        //             </div> }\n        //     </div>\n        // </div>\n        // <div className=\"nitro-navigator-result-list p-2\">\n        //     <div className=\"d-flex mb-2 small cursor-pointer\" onClick={ toggleList }>\n        //         <i className={ \"fas \" + classNames({ 'fa-plus': !isExtended, 'fa-minus': isExtended })}></i>\n        //         <div className=\"align-self-center w-100 ml-2\">{ LocalizeText(getListCode()) }</div>\n        //         <i className={ \"fas \" + classNames({ 'fa-bars': displayMode === NavigatorResultListViewDisplayMode.LIST, 'fa-th': displayMode >= NavigatorResultListViewDisplayMode.THUMBNAILS })} onClick={ toggleDisplayMode }></i>\n        //     </div>\n        //     <div className={ 'row mr-n2 row-cols-' + classNames({ '1': displayMode === NavigatorResultListViewDisplayMode.LIST, '2': displayMode >= NavigatorResultListViewDisplayMode.THUMBNAILS }) }>\n        //         { isExtended && resultList && resultList.rooms.map((room, index) =>\n        //             {\n        //                 return <NavigatorResultView key={ index } result={ room } />\n        //             })\n        //         }\n        //     </div>\n        // </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}