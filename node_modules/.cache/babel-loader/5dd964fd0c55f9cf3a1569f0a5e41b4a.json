{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/guide-tool/views/GuideToolOngoingView.tsx\",\n    _s = $RefreshSig$();\n\nimport { GuideSessionGetRequesterRoomMessageComposer, GuideSessionInviteRequesterMessageComposer, GuideSessionMessageMessageComposer, GuideSessionRequesterRoomMessageEvent, GuideSessionResolvedMessageComposer } from '@nitrots/nitro-renderer';\nimport { useCallback, useState } from 'react';\nimport { GetSessionDataManager, LocalizeText, SendMessageComposer, TryVisitRoom } from '../../../api';\nimport { Base, Button, ButtonGroup, Column, Flex, LayoutAvatarImageView, Text } from '../../../common';\nimport { UseMessageEventHook } from '../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GuideToolOngoingView = props => {\n  _s();\n\n  const {\n    isGuide = false,\n    userId = 0,\n    userName = null,\n    userFigure = null,\n    isTyping = false,\n    messageGroups = []\n  } = props;\n  const [messageText, setMessageText] = useState('');\n  const visit = useCallback(() => {\n    SendMessageComposer(new GuideSessionGetRequesterRoomMessageComposer());\n  }, []);\n  const invite = useCallback(() => {\n    SendMessageComposer(new GuideSessionInviteRequesterMessageComposer());\n  }, []);\n  const resolve = useCallback(() => {\n    SendMessageComposer(new GuideSessionResolvedMessageComposer());\n  }, []);\n  const onGuideSessionRequesterRoomMessageEvent = useCallback(event => {\n    const parser = event.getParser();\n    TryVisitRoom(parser.requesterRoomId);\n  }, []);\n  UseMessageEventHook(GuideSessionRequesterRoomMessageEvent, onGuideSessionRequesterRoomMessageEvent);\n  const sendMessage = useCallback(() => {\n    if (!messageText || !messageText.length) return;\n    SendMessageComposer(new GuideSessionMessageMessageComposer(messageText));\n    setMessageText('');\n  }, [messageText]);\n  const onKeyDown = useCallback(event => {\n    if (event.key !== 'Enter') return;\n    sendMessage();\n  }, [sendMessage]);\n  const isOwnChat = useCallback(userId => {\n    return userId === GetSessionDataManager().userId;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Column, {\n    fullHeight: true,\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"between\",\n      gap: 1,\n      className: \"bg-muted p-2 rounded\",\n      children: [isGuide && /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: visit,\n          children: LocalizeText('guide.help.request.guide.ongoing.visit.button')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: true,\n          onClick: invite,\n          children: LocalizeText('guide.help.request.guide.ongoing.invite.button')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), !isGuide && /*#__PURE__*/_jsxDEV(Column, {\n        gap: 0,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('guide.help.request.user.ongoing.guide.desc')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        disabled: true,\n        children: LocalizeText('guide.help.common.report.link')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      overflow: \"hidden\",\n      gap: 1,\n      className: \"bg-muted rounded chat-messages p-2\",\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        overflow: \"auto\",\n        children: messageGroups.map((group, index) => {\n          return /*#__PURE__*/_jsxDEV(Flex, {\n            fullWidth: true,\n            justifyContent: isOwnChat(group.userId) ? 'end' : 'start',\n            gap: 2,\n            children: [/*#__PURE__*/_jsxDEV(Base, {\n              shrink: true,\n              className: \"message-avatar\",\n              children: !isOwnChat(group.userId) && /*#__PURE__*/_jsxDEV(LayoutAvatarImageView, {\n                figure: userFigure,\n                direction: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Base, {\n              className: 'bg-light text-black border-radius mb-2 rounded py-1 px-2 messages-group-' + (isOwnChat(group.userId) ? 'right' : 'left'),\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                bold: true,\n                children: [isOwnChat(group.userId) && GetSessionDataManager().userName, !isOwnChat(group.userId) && userName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), group.messages.map((chat, index) => /*#__PURE__*/_jsxDEV(Base, {\n                className: \"text-break\",\n                children: chat.message\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 75\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), isOwnChat(group.userId) && /*#__PURE__*/_jsxDEV(Base, {\n              className: \"message-avatar flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(LayoutAvatarImageView, {\n                figure: GetSessionDataManager().figure,\n                direction: 4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control form-control-sm\",\n          placeholder: LocalizeText('guide.help.request.guide.ongoing.input.empty', ['name'], [userName]),\n          value: messageText,\n          onChange: event => setMessageText(event.target.value),\n          onKeyDown: onKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: sendMessage,\n          children: LocalizeText('widgets.chatinput.say')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), isTyping && /*#__PURE__*/_jsxDEV(Text, {\n        variant: \"muted\",\n        children: LocalizeText('guide.help.common.typing')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      variant: \"success\",\n      onClick: resolve,\n      children: LocalizeText('guide.help.request.' + (isGuide ? 'guide' : 'user') + '.ongoing.close.link')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GuideToolOngoingView, \"fbODwccZlKnp7s2XD5KZDJ9wxDM=\");\n\n_c = GuideToolOngoingView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuideToolOngoingView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/guide-tool/views/GuideToolOngoingView.tsx"],"names":["GuideSessionGetRequesterRoomMessageComposer","GuideSessionInviteRequesterMessageComposer","GuideSessionMessageMessageComposer","GuideSessionRequesterRoomMessageEvent","GuideSessionResolvedMessageComposer","useCallback","useState","GetSessionDataManager","LocalizeText","SendMessageComposer","TryVisitRoom","Base","Button","ButtonGroup","Column","Flex","LayoutAvatarImageView","Text","UseMessageEventHook","GuideToolOngoingView","props","isGuide","userId","userName","userFigure","isTyping","messageGroups","messageText","setMessageText","visit","invite","resolve","onGuideSessionRequesterRoomMessageEvent","event","parser","getParser","requesterRoomId","sendMessage","length","onKeyDown","key","isOwnChat","map","group","index","messages","chat","message","figure","target","value"],"mappings":"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","sourcesContent":["import { GuideSessionGetRequesterRoomMessageComposer, GuideSessionInviteRequesterMessageComposer, GuideSessionMessageMessageComposer, GuideSessionRequesterRoomMessageEvent, GuideSessionResolvedMessageComposer } from '@nitrots/nitro-renderer';\nimport { FC, KeyboardEvent, useCallback, useState } from 'react';\nimport { GetSessionDataManager, LocalizeText, SendMessageComposer, TryVisitRoom } from '../../../api';\nimport { Base, Button, ButtonGroup, Column, Flex, LayoutAvatarImageView, Text } from '../../../common';\nimport { UseMessageEventHook } from '../../../hooks';\nimport { GuideToolMessageGroup } from '../common/GuideToolMessageGroup';\n\ninterface GuideToolOngoingViewProps\n{\n    isGuide: boolean;\n    userId: number;\n    userName: string;\n    userFigure: string;\n    isTyping: boolean;\n    messageGroups: GuideToolMessageGroup[];\n}\n\nexport const GuideToolOngoingView: FC<GuideToolOngoingViewProps> = props =>\n{\n    const { isGuide = false, userId = 0, userName = null, userFigure = null, isTyping = false, messageGroups = [] } = props;\n\n    const [ messageText, setMessageText ] = useState<string>('');\n\n    const visit = useCallback(() =>\n    {\n        SendMessageComposer(new GuideSessionGetRequesterRoomMessageComposer());\n    }, []);\n\n    const invite = useCallback(() =>\n    {\n        SendMessageComposer(new GuideSessionInviteRequesterMessageComposer());\n    }, []);\n\n    const resolve = useCallback(() =>\n    {\n        SendMessageComposer(new GuideSessionResolvedMessageComposer());\n    }, []);\n\n    const onGuideSessionRequesterRoomMessageEvent = useCallback((event: GuideSessionRequesterRoomMessageEvent) =>\n    {\n        const parser = event.getParser();\n        \n        TryVisitRoom(parser.requesterRoomId);\n    }, []);\n\n    UseMessageEventHook(GuideSessionRequesterRoomMessageEvent, onGuideSessionRequesterRoomMessageEvent);\n\n    const sendMessage = useCallback(() =>\n    {\n        if(!messageText || !messageText.length) return;\n\n        SendMessageComposer(new GuideSessionMessageMessageComposer(messageText));\n        setMessageText('');\n    }, [ messageText ]);\n\n    const onKeyDown = useCallback((event: KeyboardEvent<HTMLInputElement>) =>\n    {\n        if(event.key !== 'Enter') return;\n\n        sendMessage();\n    }, [ sendMessage ]);\n\n    const isOwnChat = useCallback((userId: number) =>\n    {\n        return userId === GetSessionDataManager().userId;\n    }, []);\n\n    return (\n        <Column fullHeight>\n            <Flex alignItems=\"center\" justifyContent=\"between\" gap={ 1 } className=\"bg-muted p-2 rounded\">\n                { isGuide &&\n                    <ButtonGroup>\n                        <Button onClick={ visit }>{ LocalizeText('guide.help.request.guide.ongoing.visit.button') }</Button>\n                        <Button disabled onClick={ invite }>{ LocalizeText('guide.help.request.guide.ongoing.invite.button') }</Button>\n                    </ButtonGroup> }\n                { !isGuide &&\n                    <Column gap={ 0 }>\n                        <Text bold>{ userName }</Text>\n                        <Text>{ LocalizeText('guide.help.request.user.ongoing.guide.desc') }</Text>\n                    </Column> }\n                <Button variant=\"danger\" disabled>{ LocalizeText('guide.help.common.report.link') }</Button>\n            </Flex>\n            <Column overflow=\"hidden\" gap={ 1 } className=\"bg-muted rounded chat-messages p-2\">\n                <Column overflow=\"auto\">\n                    { messageGroups.map((group, index) =>\n                    {\n                        return (\n                            <Flex key={ index } fullWidth justifyContent={ isOwnChat(group.userId) ? 'end' : 'start' } gap={ 2 }>\n                                <Base shrink className=\"message-avatar\">\n                                    { (!isOwnChat(group.userId)) &&\n                                    <LayoutAvatarImageView figure={ userFigure } direction={ 2 } /> }\n                                </Base>\n                                <Base className={ 'bg-light text-black border-radius mb-2 rounded py-1 px-2 messages-group-' + (isOwnChat(group.userId) ? 'right' : 'left') }>\n                                    <Text bold>\n                                        { (isOwnChat(group.userId)) && GetSessionDataManager().userName }\n                                        { (!isOwnChat(group.userId)) && userName }\n                                    </Text>\n                                    { group.messages.map((chat, index) => <Base key={ index } className=\"text-break\">{ chat.message }</Base>) }\n                                </Base>\n                                { (isOwnChat(group.userId)) &&\n                                <Base className=\"message-avatar flex-shrink-0\">\n                                    <LayoutAvatarImageView figure={ GetSessionDataManager().figure } direction={ 4 } />\n                                </Base> }\n                            </Flex>\n                        );\n                    }) } \n                </Column>\n            </Column>\n            <Column gap={ 1 }>\n                <Flex gap={ 1 }>\n                    <input type=\"text\" className=\"form-control form-control-sm\" placeholder={ LocalizeText('guide.help.request.guide.ongoing.input.empty', [ 'name' ], [ userName ]) } value={ messageText } onChange={ event => setMessageText(event.target.value) } onKeyDown={ onKeyDown } />\n                    <Button variant=\"success\" onClick={ sendMessage }>\n                        { LocalizeText('widgets.chatinput.say') }\n                    </Button>\n                </Flex>\n                { isTyping &&\n                    <Text variant=\"muted\">{ LocalizeText('guide.help.common.typing') }</Text> }\n            </Column>\n            <Button fullWidth variant=\"success\" onClick={ resolve }>\n                { LocalizeText('guide.help.request.' + (isGuide ? 'guide' : 'user') + '.ongoing.close.link') }\n            </Button>\n        </Column>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}