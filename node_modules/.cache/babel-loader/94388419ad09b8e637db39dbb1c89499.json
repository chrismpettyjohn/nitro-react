{"ast":null,"code":"import { Triggerable } from './Triggerable';\nexport class WiredActionDefinition extends Triggerable {\n  constructor(wrapper) {\n    super(wrapper);\n    this._type = void 0;\n    this._delayInPulses = void 0;\n    this._conflictingTriggers = void 0;\n    this._conflictingTriggers = [];\n    this._type = wrapper.readInt();\n    this._delayInPulses = wrapper.readInt();\n    let count = wrapper.readInt();\n\n    while (count > 0) {\n      this._conflictingTriggers.push(wrapper.readInt());\n\n      count--;\n    }\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get code() {\n    return this._type;\n  }\n\n  get delayInPulses() {\n    return this._delayInPulses;\n  }\n\n  get conflictingTriggers() {\n    return this._conflictingTriggers;\n  }\n\n}","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/communication/messages/incoming/roomevents/WiredActionDefinition.ts"],"names":["Triggerable","WiredActionDefinition","constructor","wrapper","_type","_delayInPulses","_conflictingTriggers","readInt","count","push","type","code","delayInPulses","conflictingTriggers"],"mappings":"AACA,SAASA,WAAT,QAA4B,eAA5B;AAEA,OAAO,MAAMC,qBAAN,SAAoCD,WAApC,CACP;AAKIE,EAAAA,WAAW,CAACC,OAAD,EACX;AACI,UAAMA,OAAN;AADJ,SALQC,KAKR;AAAA,SAJQC,cAIR;AAAA,SAHQC,oBAGR;AAGI,SAAKA,oBAAL,GAA4B,EAA5B;AACA,SAAKF,KAAL,GAAaD,OAAO,CAACI,OAAR,EAAb;AACA,SAAKF,cAAL,GAAsBF,OAAO,CAACI,OAAR,EAAtB;AAEA,QAAIC,KAAK,GAAGL,OAAO,CAACI,OAAR,EAAZ;;AAEA,WAAMC,KAAK,GAAG,CAAd,EACA;AACI,WAAKF,oBAAL,CAA0BG,IAA1B,CAA+BN,OAAO,CAACI,OAAR,EAA/B;;AAEAC,MAAAA,KAAK;AACR;AACJ;;AAEc,MAAJE,IAAI,GACf;AACI,WAAO,KAAKN,KAAZ;AACH;;AAEc,MAAJO,IAAI,GACf;AACI,WAAO,KAAKP,KAAZ;AACH;;AAEuB,MAAbQ,aAAa,GACxB;AACI,WAAO,KAAKP,cAAZ;AACH;;AAE6B,MAAnBQ,mBAAmB,GAC9B;AACI,WAAO,KAAKP,oBAAZ;AACH;;AAzCL","sourcesContent":["import { IMessageDataWrapper } from '../../../../../core';\r\nimport { Triggerable } from './Triggerable';\r\n\r\nexport class WiredActionDefinition extends Triggerable\r\n{\r\n    private _type: number;\r\n    private _delayInPulses: number;\r\n    private _conflictingTriggers: number[];\r\n\r\n    constructor(wrapper: IMessageDataWrapper)\r\n    {\r\n        super(wrapper);\r\n\r\n        this._conflictingTriggers = [];\r\n        this._type = wrapper.readInt();\r\n        this._delayInPulses = wrapper.readInt();\r\n\r\n        let count = wrapper.readInt();\r\n\r\n        while(count > 0)\r\n        {\r\n            this._conflictingTriggers.push(wrapper.readInt());\r\n\r\n            count--;\r\n        }\r\n    }\r\n\r\n    public get type(): number\r\n    {\r\n        return this._type;\r\n    }\r\n\r\n    public get code(): number\r\n    {\r\n        return this._type;\r\n    }\r\n\r\n    public get delayInPulses(): number\r\n    {\r\n        return this._delayInPulses;\r\n    }\r\n\r\n    public get conflictingTriggers(): number[]\r\n    {\r\n        return this._conflictingTriggers;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}