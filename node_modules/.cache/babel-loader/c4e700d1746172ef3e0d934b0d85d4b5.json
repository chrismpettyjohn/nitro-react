{"ast":null,"code":"var _jsxFileName = \"/var/www/game.bobba.ca/src/components/inventory/views/furniture/InventoryFurnitureItemView.tsx\",\n    _s = $RefreshSig$();\n\nimport { MouseEventType } from '@nitrots/nitro-renderer';\nimport { useState } from 'react';\nimport { attemptItemPlacement } from '../../../../api';\nimport { LayoutGridItem } from '../../../../common';\nimport { useInventoryFurni } from '../../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryFurnitureItemView = props => {\n  _s();\n\n  const {\n    groupItem = null,\n    ...rest\n  } = props;\n  const [isMouseDown, setMouseDown] = useState(false);\n  const {\n    selectedItem = null,\n    setSelectedItem = null\n  } = useInventoryFurni();\n\n  const onMouseEvent = event => {\n    switch (event.type) {\n      case MouseEventType.MOUSE_DOWN:\n        setSelectedItem(groupItem);\n        setMouseDown(true);\n        return;\n\n      case MouseEventType.MOUSE_UP:\n        setMouseDown(false);\n        return;\n\n      case MouseEventType.ROLL_OUT:\n        if (!isMouseDown || !(groupItem === selectedItem)) return;\n        attemptItemPlacement(groupItem);\n        return;\n    }\n  };\n\n  const count = groupItem.getUnlockedCount();\n  return /*#__PURE__*/_jsxDEV(LayoutGridItem, {\n    className: !count ? 'opacity-0-5 ' : '',\n    itemImage: groupItem.iconUrl,\n    itemCount: groupItem.getUnlockedCount(),\n    itemActive: groupItem === selectedItem,\n    itemUniqueNumber: groupItem.stuffData.uniqueNumber,\n    itemUnseen: groupItem.hasUnseenItems,\n    onMouseDown: onMouseEvent,\n    onMouseUp: onMouseEvent,\n    onMouseOut: onMouseEvent,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(InventoryFurnitureItemView, \"hgjZwYPhzWyNp1+EcP7Cky+w3RY=\", false, function () {\n  return [useInventoryFurni];\n});\n\n_c = InventoryFurnitureItemView;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryFurnitureItemView\");","map":{"version":3,"sources":["/var/www/game.bobba.ca/src/components/inventory/views/furniture/InventoryFurnitureItemView.tsx"],"names":["MouseEventType","useState","attemptItemPlacement","LayoutGridItem","useInventoryFurni","InventoryFurnitureItemView","props","groupItem","rest","isMouseDown","setMouseDown","selectedItem","setSelectedItem","onMouseEvent","event","type","MOUSE_DOWN","MOUSE_UP","ROLL_OUT","count","getUnlockedCount","iconUrl","stuffData","uniqueNumber","hasUnseenItems"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,yBAA/B;AACA,SAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,oBAAT,QAAgD,iBAAhD;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,OAAO,MAAMC,0BAAwD,GAAGC,KAAK,IAC7E;AAAA;;AACI,QAAM;AAAEC,IAAAA,SAAS,GAAG,IAAd;AAAoB,OAAGC;AAAvB,MAAgCF,KAAtC;AACA,QAAM,CAAEG,WAAF,EAAeC,YAAf,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAEU,IAAAA,YAAY,GAAG,IAAjB;AAAuBC,IAAAA,eAAe,GAAG;AAAzC,MAAkDR,iBAAiB,EAAzE;;AAEA,QAAMS,YAAY,GAAIC,KAAD,IACrB;AACI,YAAOA,KAAK,CAACC,IAAb;AAEI,WAAKf,cAAc,CAACgB,UAApB;AACIJ,QAAAA,eAAe,CAACL,SAAD,CAAf;AACAG,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;;AACJ,WAAKV,cAAc,CAACiB,QAApB;AACIP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;;AACJ,WAAKV,cAAc,CAACkB,QAApB;AACI,YAAG,CAACT,WAAD,IAAgB,EAAEF,SAAS,KAAKI,YAAhB,CAAnB,EAAkD;AAElDT,QAAAA,oBAAoB,CAACK,SAAD,CAApB;AACA;AAbR;AAeH,GAjBD;;AAmBA,QAAMY,KAAK,GAAGZ,SAAS,CAACa,gBAAV,EAAd;AAEA,sBAAO,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAG,CAACD,KAAD,GAAS,cAAT,GAA0B,EAAtD;AAA2D,IAAA,SAAS,EAAGZ,SAAS,CAACc,OAAjF;AAA2F,IAAA,SAAS,EAAGd,SAAS,CAACa,gBAAV,EAAvG;AAAsI,IAAA,UAAU,EAAIb,SAAS,KAAKI,YAAlK;AAAkL,IAAA,gBAAgB,EAAGJ,SAAS,CAACe,SAAV,CAAoBC,YAAzN;AAAwO,IAAA,UAAU,EAAGhB,SAAS,CAACiB,cAA/P;AAAgR,IAAA,WAAW,EAAGX,YAA9R;AAA6S,IAAA,SAAS,EAAGA,YAAzT;AAAwU,IAAA,UAAU,EAAGA,YAArV;AAAA,OAAyWL;AAAzW;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA5BM;;GAAMH,0B;UAI+CD,iB;;;KAJ/CC,0B","sourcesContent":["import { MouseEventType } from '@nitrots/nitro-renderer';\nimport { FC, MouseEvent, useState } from 'react';\nimport { attemptItemPlacement, GroupItem } from '../../../../api';\nimport { LayoutGridItem } from '../../../../common';\nimport { useInventoryFurni } from '../../../../hooks';\n\nexport const InventoryFurnitureItemView: FC<{ groupItem: GroupItem }> = props =>\n{\n    const { groupItem = null, ...rest } = props;\n    const [ isMouseDown, setMouseDown ] = useState(false);\n    const { selectedItem = null, setSelectedItem = null } = useInventoryFurni();\n\n    const onMouseEvent = (event: MouseEvent) =>\n    {\n        switch(event.type)\n        {\n            case MouseEventType.MOUSE_DOWN:\n                setSelectedItem(groupItem);\n                setMouseDown(true);\n                return;\n            case MouseEventType.MOUSE_UP:\n                setMouseDown(false);\n                return;\n            case MouseEventType.ROLL_OUT:\n                if(!isMouseDown || !(groupItem === selectedItem)) return;\n\n                attemptItemPlacement(groupItem);\n                return;\n        }\n    }\n\n    const count = groupItem.getUnlockedCount();\n\n    return <LayoutGridItem className={ !count ? 'opacity-0-5 ' : '' } itemImage={ groupItem.iconUrl } itemCount={ groupItem.getUnlockedCount() } itemActive={ (groupItem === selectedItem) } itemUniqueNumber={ groupItem.stuffData.uniqueNumber } itemUnseen={ groupItem.hasUnseenItems } onMouseDown={ onMouseEvent } onMouseUp={ onMouseEvent } onMouseOut={ onMouseEvent } { ...rest } />;\n}\n"]},"metadata":{},"sourceType":"module"}