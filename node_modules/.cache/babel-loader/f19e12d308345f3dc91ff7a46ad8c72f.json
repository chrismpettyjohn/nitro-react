{"ast":null,"code":"import { Nitro } from '../../../../Nitro';\nimport { RoomObjectVariable } from '../../RoomObjectVariable';\nimport { FurnitureVisualization } from './FurnitureVisualization';\nexport class FurnitureBrandedImageVisualization extends FurnitureVisualization {\n  constructor() {\n    super();\n    this._imageUrl = void 0;\n    this._shortUrl = void 0;\n    this._imageReady = void 0;\n    this._offsetX = void 0;\n    this._offsetY = void 0;\n    this._offsetZ = void 0;\n    this._imageUrl = null;\n    this._shortUrl = null;\n    this._imageReady = false;\n    this._offsetX = 0;\n    this._offsetY = 0;\n    this._offsetZ = 0;\n  }\n\n  dispose() {\n    super.dispose();\n    if (this._imageUrl) this.asset && this.asset.disposeAsset(this._imageUrl);\n  }\n\n  updateObject(scale, direction) {\n    if (!super.updateObject(scale, direction)) return false;\n    if (this._imageReady) this.checkAndCreateImageForCurrentState();\n    return true;\n  }\n\n  updateModel(scale) {\n    const flag = super.updateModel(scale);\n\n    if (flag) {\n      this._offsetX = this.object.model.getValue(RoomObjectVariable.FURNITURE_BRANDING_OFFSET_X);\n      this._offsetY = this.object.model.getValue(RoomObjectVariable.FURNITURE_BRANDING_OFFSET_Y);\n      this._offsetZ = this.object.model.getValue(RoomObjectVariable.FURNITURE_BRANDING_OFFSET_Z);\n    }\n\n    if (!this._imageReady) {\n      this._imageReady = this.checkIfImageReady();\n\n      if (this._imageReady) {\n        this.checkAndCreateImageForCurrentState();\n        return true;\n      }\n    } else {\n      if (this.checkIfImageChanged()) {\n        this._imageReady = false;\n        this._imageUrl = null;\n        return true;\n      }\n    }\n\n    return flag;\n  }\n\n  imageReady(texture, imageUrl) {\n    if (!texture) {\n      this._imageUrl = null;\n      return;\n    }\n\n    this._imageUrl = imageUrl;\n  }\n\n  checkIfImageChanged() {\n    const imageUrl = this.object.model.getValue(RoomObjectVariable.FURNITURE_BRANDING_IMAGE_URL);\n    if (imageUrl && imageUrl === this._imageUrl) return false;\n    this.asset && this.asset.disposeAsset(this._imageUrl);\n    return true;\n  }\n\n  checkIfImageReady() {\n    const model = this.object && this.object.model;\n    if (!model) return false;\n    const imageUrl = this.object.model.getValue(RoomObjectVariable.FURNITURE_BRANDING_IMAGE_URL);\n    if (!imageUrl) return false;\n    if (this._imageUrl && this._imageUrl === imageUrl) return false;\n    const imageStatus = this.object.model.getValue(RoomObjectVariable.FURNITURE_BRANDING_IMAGE_STATUS);\n\n    if (imageStatus === 1) {\n      const texture = Nitro.instance.core.asset.getTexture(imageUrl);\n      if (!texture) return false;\n      this.imageReady(texture, imageUrl);\n      return true;\n    }\n\n    return false;\n  }\n\n  checkAndCreateImageForCurrentState() {\n    if (!this._imageUrl) return;\n    const texture = Nitro.instance.core.asset.getTexture(this._imageUrl);\n    if (!texture) return;\n    const state = this.object.getState(0);\n    let x = 0;\n    let y = 0;\n    let flipH = false;\n    let flipV = false;\n\n    switch (state) {\n      case FurnitureBrandedImageVisualization.STATE_0:\n        x = 0;\n        y = 0;\n        flipH = false;\n        flipV = false;\n        break;\n\n      case FurnitureBrandedImageVisualization.STATE_1:\n        x = -texture.width;\n        y = 0;\n        flipH = true;\n        flipV = false;\n        break;\n\n      case FurnitureBrandedImageVisualization.STATE_2:\n        x = -texture.width;\n        y = -texture.height;\n        flipH = true;\n        flipV = true;\n        break;\n\n      case FurnitureBrandedImageVisualization.STATE_3:\n        x = 0;\n        y = -texture.height;\n        flipH = false;\n        flipV = true;\n        break;\n    }\n\n    this.asset.addAsset(this._imageUrl, texture, true, x, y, flipH, flipV);\n  }\n\n  getSpriteAssetName(scale, layerId) {\n    const tag = this.getLayerTag(scale, this._direction, layerId);\n    if (tag === FurnitureBrandedImageVisualization.BRANDED_IMAGE && this._imageUrl) return this._imageUrl;\n    return super.getSpriteAssetName(scale, layerId);\n  }\n\n}\nFurnitureBrandedImageVisualization.BRANDED_IMAGE = 'branded_image';\nFurnitureBrandedImageVisualization.STATE_0 = 0;\nFurnitureBrandedImageVisualization.STATE_1 = 1;\nFurnitureBrandedImageVisualization.STATE_2 = 2;\nFurnitureBrandedImageVisualization.STATE_3 = 3;","map":{"version":3,"sources":["/var/www/game.bobba.ca/node_modules/@nitrots/nitro-renderer/src/nitro/room/object/visualization/furniture/FurnitureBrandedImageVisualization.ts"],"names":["Nitro","RoomObjectVariable","FurnitureVisualization","FurnitureBrandedImageVisualization","constructor","_imageUrl","_shortUrl","_imageReady","_offsetX","_offsetY","_offsetZ","dispose","asset","disposeAsset","updateObject","scale","direction","checkAndCreateImageForCurrentState","updateModel","flag","object","model","getValue","FURNITURE_BRANDING_OFFSET_X","FURNITURE_BRANDING_OFFSET_Y","FURNITURE_BRANDING_OFFSET_Z","checkIfImageReady","checkIfImageChanged","imageReady","texture","imageUrl","FURNITURE_BRANDING_IMAGE_URL","imageStatus","FURNITURE_BRANDING_IMAGE_STATUS","instance","core","getTexture","state","getState","x","y","flipH","flipV","STATE_0","STATE_1","width","STATE_2","height","STATE_3","addAsset","getSpriteAssetName","layerId","tag","getLayerTag","_direction","BRANDED_IMAGE"],"mappings":"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","sourcesContent":["import { Resource, Texture } from '@pixi/core';\r\nimport { Nitro } from '../../../../Nitro';\r\nimport { RoomObjectVariable } from '../../RoomObjectVariable';\r\nimport { FurnitureVisualization } from './FurnitureVisualization';\r\n\r\nexport class FurnitureBrandedImageVisualization extends FurnitureVisualization\r\n{\r\n    private static BRANDED_IMAGE: string = 'branded_image';\r\n    private static STATE_0: number = 0;\r\n    private static STATE_1: number = 1;\r\n    private static STATE_2: number = 2;\r\n    private static STATE_3: number = 3;\r\n\r\n    protected _imageUrl: string;\r\n    protected _shortUrl: string;\r\n    protected _imageReady: boolean;\r\n\r\n    protected _offsetX: number;\r\n    protected _offsetY: number;\r\n    protected _offsetZ: number;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        this._imageUrl = null;\r\n        this._shortUrl = null;\r\n        this._imageReady = false;\r\n\r\n        this._offsetX = 0;\r\n        this._offsetY = 0;\r\n        this._offsetZ = 0;\r\n    }\r\n\r\n    public dispose(): void\r\n    {\r\n        super.dispose();\r\n\r\n        if(this._imageUrl) (this.asset && this.asset.disposeAsset(this._imageUrl));\r\n    }\r\n\r\n    protected updateObject(scale: number, direction: number): boolean\r\n    {\r\n        if(!super.updateObject(scale, direction)) return false;\r\n\r\n        if(this._imageReady) this.checkAndCreateImageForCurrentState();\r\n\r\n        return true;\r\n    }\r\n\r\n    protected updateModel(scale: number): boolean\r\n    {\r\n        const flag = super.updateModel(scale);\r\n\r\n        if(flag)\r\n        {\r\n            this._offsetX = this.object.model.getValue<number>(RoomObjectVariable.FURNITURE_BRANDING_OFFSET_X);\r\n            this._offsetY = this.object.model.getValue<number>(RoomObjectVariable.FURNITURE_BRANDING_OFFSET_Y);\r\n            this._offsetZ = this.object.model.getValue<number>(RoomObjectVariable.FURNITURE_BRANDING_OFFSET_Z);\r\n        }\r\n\r\n        if(!this._imageReady)\r\n        {\r\n            this._imageReady = this.checkIfImageReady();\r\n\r\n            if(this._imageReady)\r\n            {\r\n                this.checkAndCreateImageForCurrentState();\r\n\r\n                return true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.checkIfImageChanged())\r\n            {\r\n                this._imageReady = false;\r\n                this._imageUrl = null;\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return flag;\r\n    }\r\n\r\n    protected imageReady(texture: Texture<Resource>, imageUrl: string): void\r\n    {\r\n        if(!texture)\r\n        {\r\n            this._imageUrl = null;\r\n\r\n            return;\r\n        }\r\n\r\n        this._imageUrl = imageUrl;\r\n    }\r\n\r\n    private checkIfImageChanged(): boolean\r\n    {\r\n        const imageUrl = this.object.model.getValue<string>(RoomObjectVariable.FURNITURE_BRANDING_IMAGE_URL);\r\n\r\n        if(imageUrl && (imageUrl === this._imageUrl)) return false;\r\n\r\n        (this.asset && this.asset.disposeAsset(this._imageUrl));\r\n\r\n        return true;\r\n    }\r\n\r\n    protected checkIfImageReady(): boolean\r\n    {\r\n        const model = this.object && this.object.model;\r\n\r\n        if(!model) return false;\r\n\r\n        const imageUrl = this.object.model.getValue<string>(RoomObjectVariable.FURNITURE_BRANDING_IMAGE_URL);\r\n\r\n        if(!imageUrl) return false;\r\n\r\n        if(this._imageUrl && (this._imageUrl === imageUrl)) return false;\r\n\r\n        const imageStatus = this.object.model.getValue<number>(RoomObjectVariable.FURNITURE_BRANDING_IMAGE_STATUS);\r\n\r\n        if(imageStatus === 1)\r\n        {\r\n            const texture = Nitro.instance.core.asset.getTexture(imageUrl);\r\n\r\n            if(!texture) return false;\r\n\r\n            this.imageReady(texture, imageUrl);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected checkAndCreateImageForCurrentState(): void\r\n    {\r\n        if(!this._imageUrl) return;\r\n\r\n        const texture = Nitro.instance.core.asset.getTexture(this._imageUrl);\r\n\r\n        if(!texture) return;\r\n\r\n        const state = this.object.getState(0);\r\n\r\n        let x = 0;\r\n        let y = 0;\r\n        let flipH = false;\r\n        let flipV = false;\r\n\r\n        switch(state)\r\n        {\r\n            case FurnitureBrandedImageVisualization.STATE_0:\r\n                x = 0;\r\n                y = 0;\r\n                flipH = false;\r\n                flipV = false;\r\n                break;\r\n            case FurnitureBrandedImageVisualization.STATE_1:\r\n                x = -(texture.width);\r\n                y = 0;\r\n                flipH = true;\r\n                flipV = false;\r\n                break;\r\n            case FurnitureBrandedImageVisualization.STATE_2:\r\n                x = -(texture.width);\r\n                y = -(texture.height);\r\n                flipH = true;\r\n                flipV = true;\r\n                break;\r\n            case FurnitureBrandedImageVisualization.STATE_3:\r\n                x = 0;\r\n                y = -(texture.height);\r\n                flipH = false;\r\n                flipV = true;\r\n                break;\r\n        }\r\n\r\n        this.asset.addAsset(this._imageUrl, texture, true, x, y, flipH, flipV);\r\n    }\r\n\r\n    protected getSpriteAssetName(scale: number, layerId: number): string\r\n    {\r\n        const tag = this.getLayerTag(scale, this._direction, layerId);\r\n\r\n        if((tag === FurnitureBrandedImageVisualization.BRANDED_IMAGE) && this._imageUrl) return this._imageUrl;\r\n\r\n        return super.getSpriteAssetName(scale, layerId);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}